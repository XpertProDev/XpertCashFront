{"version":3,"file":"src_app_admin-page_compte_compte_component_ts.js","mappings":"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","sources":["./src/app/admin-page/SERVICES/roles.service.ts","./src/app/admin-page/compte/compte.component.ts","./src/app/admin-page/compte/compte.component.html"],"sourcesContent":["import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable, switchMap, throwError } from \"rxjs\";\nimport { Roles } from \"../MODELS/roles.model\";\nimport { environment } from \"src/environments/environment\";\nimport { UsersService } from \"./users.service\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RolesService {\n private apiUrl = environment.apiBaseUrl;\n\n  constructor(private http: HttpClient, private usersService: UsersService) { }\n  \n   // Méthode pour récupérer les totaux des produits en stock (déjà existante)\n   getAllRoles(): Observable<Roles[]> {\n      return this.usersService.getValidAccessToken().pipe(\n        switchMap((token: string) => {\n          const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n          console.log(\"🔹 En-têtes envoyés :\", headers);\n          return this.http.get<Roles[]>(`${this.apiUrl}/getAllRoles`, { headers });\n        })\n      );\n  }\n\n}","import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router, RouterLink } from '@angular/router';\nimport { Roles } from '../MODELS/roles.model';\nimport { RolesService } from '../SERVICES/roles.service';\nimport { UserNewRequest } from '../MODELS/user-new-request.model';\nimport { UsersService } from '../SERVICES/users.service';\nimport { BrowserModule, DomSanitizer } from '@angular/platform-browser';\nimport { HttpClient, HttpClientModule, HttpErrorResponse } from '@angular/common/http';\nimport { Users } from '../MODELS/utilisateur.model';\nimport { log } from 'console';\nimport { MatPaginatorModule, PageEvent } from '@angular/material/paginator';\nimport { BoutiqueService } from '../SERVICES/boutique-service';\nimport { of, switchMap, take, throwError } from 'rxjs';\n\n@Component({\n  selector: 'app-compte',\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatPaginatorModule,\n  ],\n  templateUrl: './compte.component.html',\n  styleUrl: './compte.component.scss'\n})\nexport class CompteComponent  implements OnInit {\n\n  showPopup = false;\n  roles: Roles[] = [];\n  // roles: any[] = [];\n  selectedRole: string = '';\n\n  isLoading: boolean = false;\n\n  userForm!: FormGroup;\n  errorMessage: string | null = null; \n  successMessage: string | null = null;\n\n  users: any[] = [];\n  filteredUsers: any[] = [];\n\n  entrepriseId!: number;\n  messageNoClient = 'Aucun utilisateur disponible.';\n\n  pageSize = 5;\n  currentPage = 0;\n  paginatedUsers: any[] = [];\n\n  paysFlags: { [key: string]: string } = {\n    'Mali': '🇲🇱',\n    'Sénégal': '🇸🇳',\n    'Côte d\\'Ivoire': '🇨🇮',\n    'Guinée': '🇬🇳',\n    'Burkina Faso': '🇧🇫',\n    'Niger': '🇳🇪',\n  };\n\n  indicatif: string = '';\n  maxPhoneLength: number = 8;\n\n  paysIndicatifs: { [key: string]: { indicatif: string, longueur: number } } = {\n    'Mali': { indicatif: '+223', longueur: 8 },\n    'Sénégal': { indicatif: '+221', longueur: 9 },\n    'Côte d\\'Ivoire': { indicatif: '+225', longueur: 10 },\n    'Guinée': { indicatif: '+224', longueur: 9 },\n    'Burkina Faso': { indicatif: '+226', longueur: 8 },\n    'Niger': { indicatif: '+227', longueur: 8 },\n  };\n\n  isAscending: boolean = true;\n  searchTerm: string = '';\n  currentUserRole: string = '';\n\n  constructor(\n    private rolesService: RolesService,\n    private usersService: UsersService,\n    private fb: FormBuilder,\n    private http: HttpClient,\n    private router: Router,\n    private route: ActivatedRoute,\n    private boutiqueService: BoutiqueService,\n  ) {}\n\n  ngOnInit() {\n    this.loadRoles();\n    this.initForm();\n    this.updatePaginatedUsers();\n    this.loadBoutiques();\n    // this.handleRoleTypeChanges();\n    this.loadCurrentUserRole();\n    \n    \n    this.usersService.getUserInfo().subscribe({\n    next: (userData) => {\n      if (userData && userData.id) {\n        this.entrepriseId = userData.id; // Stocker dans une propriété de classe\n        this.loadUsersOfEntreprise(this.entrepriseId);\n      }\n    },\n    error: (err) => {\n      console.error(\"Erreur lors de la récupération des informations utilisateur :\", err);\n    }\n  });\n  \n  this.filteredUsers = this.users;\n  }\n\n\n  initForm() {\n    this.userForm = this.fb.group({\n      nomComplet: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email, Validators.pattern(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/)]],\n      roleType: ['', Validators.required],\n      phone: ['', [Validators.required, Validators.pattern(/^\\d{8,15}$/)]],\n      pays: ['', Validators.required],\n      // boutiqueId: [null],\n    });\n  }\n\n  onPaysChange(event: any): void {\n    const paysSelectionne = event.target.value;\n    const paysInfo = this.paysIndicatifs[paysSelectionne];\n  \n    if (paysInfo) {\n      this.indicatif = `${paysInfo.indicatif} `;  \n  \n      this.maxPhoneLength = this.indicatif.length + paysInfo.longueur;\n  \n      this.userForm.controls['phone'].setValue(this.indicatif);\n  \n      this.updatePhoneValidator(paysInfo.longueur);\n    }\n  }\n  \n  updatePhoneValidator(longueur: number): void {\n    this.userForm.controls['phone'].setValidators([\n      Validators.required,\n      Validators.pattern(`^\\\\+\\\\d{1,3}\\\\s?\\\\d{${longueur}}$`)\n    ]);\n    this.userForm.controls['phone'].updateValueAndValidity();\n  }\n  \n  formatPhoneNumber(): void {\n    let valeur = this.userForm.controls['phone'].value;\n  \n    if (!valeur.startsWith(this.indicatif)) {\n      this.userForm.controls['phone'].setValue(this.indicatif);\n    }\n  \n    let regex = new RegExp(`^\\\\${this.indicatif}(\\\\d*)$`);\n    let match = valeur.match(regex);\n  \n    if (match) {\n      let chiffres = match[1].replace(/\\D/g, '');\n      this.userForm.controls['phone'].setValue(this.indicatif + chiffres);\n    }\n  }\n  \n  onPageChange(event: PageEvent) {\n    this.currentPage = event.pageIndex;\n    this.pageSize = event.pageSize;\n    this.updatePaginatedUsers();\n  }\n\n  updatePaginatedUsers() {\n    const startIndex = this.currentPage * this.pageSize;\n    this.paginatedUsers = this.filteredUsers.slice(startIndex, startIndex + this.pageSize);\n  }\n\nloadRoles() {\n  this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      if (!token) {\n        console.error('🔐 Aucun token trouvé !');\n        return throwError(() => new Error('Aucun token trouvé'));\n      }\n      return this.rolesService.getAllRoles();\n    })\n  ).subscribe({\n    next: (data) => {\n      this.roles = data;\n    },\n    error: (err) => {\n      console.error('Erreur lors du chargement des rôles', err);\n    }\n  });\n}\n\n\n loadUsersOfEntreprise(entrepriseId: number) {\n  this.isLoading = true;\n  const token = this.usersService.getToken(); \n  const connectedUserId = token ? this.usersService.extractUserIdFromToken(token) : null;\n\n  this.usersService.getAllUsersOfEntreprise(entrepriseId).subscribe({\n    next: (data) => {\n      // ⚠️ Exclure l'utilisateur connecté\n      const filteredData = data.filter(user => user.id !== connectedUserId);\n\n      this.users = filteredData.map(user => ({\n        ...user,\n        flag: this.paysFlags[user.pays] || ''\n      }));\n\n      this.filteredUsers = this.users;\n      this.updatePaginatedUsers();\n      this.isLoading = false;\n\n      console.log('Utilisateurs récupérés (hors connecté) :', this.users);\n    },\n    error: (err) => {\n      console.error('Erreur lors du chargement des utilisateurs', err);\n      this.isLoading = false;\n    }\n  });\n}\n\n\n  openPopup() {\n    this.showPopup = true;\n  }\n\n  closePopup() {\n    this.showPopup = false;\n    this.resetForm();\n  }\n\n  private resetForm() {\n    this.userForm.patchValue({\n      nomComplet: '',\n      email: '',\n      roleType: '',\n      phone: '',\n      pays: '',\n      // boutiqueId: [null],\n    });\n  \n    this.userForm.markAsPristine();\n    this.userForm.markAsUntouched();\n    this.userForm.updateValueAndValidity();\n  }\n\n onSubmit(): void {\n  this.errorMessage = null;\n  this.successMessage = null;\n\n  if (this.userForm.invalid) {\n    this.errorMessage = \"Veuillez remplir tous les champs correctement.\";\n    return;\n  }\n\n  const request: UserNewRequest = this.userForm.value;\n  this.isLoading = true;\n\n  this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      if (!token) {\n        this.errorMessage = \"Vous devez être connecté pour ajouter un utilisateur.\";\n        this.isLoading = false;\n        return throwError(() => new Error(\"Aucun token trouvé\"));\n      }\n      console.log(\"Données envoyées :\", request);\n      return this.usersService.addUserToEntreprise(request, token);\n    }),\n    switchMap(response => {\n      if (response.id) {\n        this.successMessage = \"Utilisateur ajouté avec succès !\";\n        this.userForm.reset();\n        this.closePopup();\n\n        // Redirection avec l'ID du nouvel utilisateur\n        this.router.navigate(['/userPermission', response.id]);\n\n        // Rafraîchir la liste avec l'ID stocké\n        this.loadUsersOfEntreprise(this.entrepriseId);\n\n        // Rafraîchir la liste des utilisateurs via getUserInfo\n        return this.usersService.getUserInfo();\n      } else {\n        return of(null);\n      }\n    })\n  ).subscribe({\n    next: (userData) => {\n      if (userData && userData.id) {\n        const entrepriseId = userData.id;\n        this.loadUsersOfEntreprise(entrepriseId);\n      }\n      this.isLoading = false;\n      setTimeout(() => this.successMessage = null, 3000);\n    },\n    error: (err) => {\n      console.error(\"Erreur lors de l'ajout utilisateur ou récupération info utilisateur :\", err);\n      this.errorMessage = err.message || \"Une erreur est survenue\";\n      this.isLoading = false;\n    }\n  });\n}\n\n\n  openPermissionDetail(userId: number): void {\n    this.router.navigate(['/userPermission', userId]);\n  }\n\n  sortRoles() {\n    this.users = this.users.sort((a, b) => {\n      if (this.isAscending) {\n        if (a.role?.name < b.role?.name) return -1;\n        if (a.role?.name > b.role?.name) return 1;\n      } else {\n        if (a.role?.name > b.role?.name) return -1;\n        if (a.role?.name < b.role?.name) return 1;\n      }\n      return 0;\n    });\n    this.isAscending = !this.isAscending;\n    this.updatePaginatedUsers();\n  }\n\n  filterUsers(event: Event) {\n    this.searchTerm = (event.target as HTMLInputElement).value.toLowerCase();\n    this.filteredUsers = this.users.filter(user =>\n      user.nomComplet.toLowerCase().includes(this.searchTerm)\n    );\n    this.currentPage = 0;\n    this.updatePaginatedUsers();\n  }\n\n  clearSearch(inputElement: HTMLInputElement) {\n    this.searchTerm = '';\n    this.filteredUsers = this.users;\n    this.currentPage = 0; // Réinitialiser à la première page\n    this.updatePaginatedUsers();\n    inputElement.value = '';\n  }\n\n  boutiques: any[] = [];\nshowBoutiqueSelect = false;\n\n/*\nhandleRoleTypeChanges() {\n  this.userForm.get('roleType')?.valueChanges.subscribe(role => {\n    console.log('Rôle sélectionné :', role);\n\n    if (role === 'VENDEUR') {\n      this.showBoutiqueSelect = true;\n      this.userForm.get('boutiqueId')?.setValidators(Validators.required);\n      this.loadBoutiques();  // Charger les boutiques quand le rôle est VENDEUR\n    } else {\n      this.showBoutiqueSelect = false;\n      this.userForm.get('boutiqueId')?.clearValidators();\n      this.userForm.get('boutiqueId')?.setValue(null);\n    }\n    this.userForm.get('boutiqueId')?.updateValueAndValidity();\n  });\n}\n*/\n\n// loadBoutiques() {\n//   this.boutiqueService.getBoutiquesByEntreprise().subscribe({\n//     next: (data) => {\n//       this.boutiques = data;\n//       console.log(\"Liste des boutiques :\", data);\n//     },\n//     error: (err) => {\n//       console.error('Erreur lors du chargement des boutiques', err);\n//     }\n//   });\n// }\n\n  loadBoutiques() {\n    // Vérifier rôle courant\n    this.usersService.getUserInfo().pipe(take(1)).subscribe({\n      next: (user) => {\n        if (user && user.roleType === 'VENDEUR') {\n          // Un vendeur ne doit pas créer/affecter d'autres vendeurs -> ne pas afficher la liste\n          this.boutiques = user.boutiques || [];\n        } else {\n          // Admin/Manager : charge toutes les boutiques\n          this.boutiqueService.getBoutiquesByEntreprise().subscribe({\n            next: (data) => { this.boutiques = data; },\n            error: (err) => console.error('Erreur lors du chargement des boutiques', err)\n          });\n        }\n      },\n      error: (err) => {\n        // fallback\n        this.boutiqueService.getBoutiquesByEntreprise().subscribe({\n          next: (data) => { this.boutiques = data; },\n          error: (err) => console.error(err)\n        });\n      }\n    });\n  }\n\n  isRoleVisible(roleName: string): boolean {\n    if (this.currentUserRole === 'ADMIN' && roleName === 'ADMIN' || roleName === 'VENDEUR') {\n      return false;\n    }\n\n    if (this.currentUserRole === 'MANAGER' && roleName === 'MANAGER'|| roleName === 'ADMIN' || roleName === 'VENDEUR') {\n      return false;\n    }\n\n    return true;\n  }\n\n  private loadCurrentUserRole(): void {\n    this.usersService.getUserInfo()\n      .pipe(take(1))\n      .subscribe({\n        next: (user) => {\n          this.currentUserRole = user.roleType;\n        },\n        error: (err) => {\n          console.error('Erreur lors de la récupération du rôle utilisateur :', err);\n        }\n      });\n  }\n\n}\n\n","<div class=\"toast-container\">\n  <div *ngIf=\"successMessage\" class=\"alert alert-success toast-message-success\">\n    {{ successMessage }}\n  </div>\n\n  <div *ngIf=\"errorMessage\" class=\"alert alert-danger toast-message-danger\">\n    {{ errorMessage }}\n  </div>\n</div>\n\n<div class=\"containerTable\">\n\n  <div *ngIf=\"isLoading\" class=\"loading-overlay\">\n    <div class=\"loading-content\">\n      <div class=\"spinner\"></div>\n      <p>Creation en cours...</p>\n    </div>\n  </div>\n\n    <!-- En-tête : titre, actions et barre de recherche -->\n    <div class=\"tasks-header\">\n      <h1 class=\"title\">Comptes</h1>\n  \n      <div class=\"actions\">\n        <button class=\"add-task\" (click)=\"openPopup()\">Ajouter</button>\n        <div class=\"contentIcon\">\n          <div class=\"bare\"></div>\n        </div>\n        <div class=\"inputSearch\">\n          <input #searchInput type=\"text\" placeholder=\"Recherche...\" (input)=\"filterUsers($event)\" />\n          <i [ngClass]=\"searchTerm ? 'ri-close-line red-icon' : 'ri-search-2-line'\" (click)=\"clearSearch(searchInput)\"></i>\n        </div>\n      </div>\n    </div>\n  \n    <!-- Tableau des produits -->\n    <table>\n      <thead>\n        <tr class=\"titleTableProduit\">\n          <th>Nom complet</th>\n          <th>Email</th>\n          <th class=\"content_sort\">\n            Rôle type\n            <div class=\"icon_sort\">\n              <i class=\"ri-sort-asc\" (click)=\"sortRoles()\"></i>\n            </div>\n          </th>\n          <th>Pays</th>\n          <th>Phone</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let user of users\" (click)=\"openPermissionDetail(user.id)\">\n          <td>{{ user.nomComplet }}</td>\n          <td>{{ user.email }}</td>\n          <td>{{ user.role?.name }}</td>\n          <td>\n             {{ user.pays }} <span>{{ user.flag }}</span>\n          </td>\n          <td>{{ user.phone }}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <!-- Message quand il n'y a pas d'utilisateur -->\n  <div *ngIf=\"filteredUsers.length === 0\" class=\"no-client-message\">\n    {{ messageNoClient }}\n  </div>\n\n  <!-- Pagination -->\n  <div class=\"pagination\" *ngIf=\"filteredUsers.length > 0\">\n    <mat-paginator\n      [length]=\"filteredUsers.length\"\n      [pageSize]=\"pageSize\"\n      [pageSizeOptions]=\"[5, 10, 25, 100]\"\n      (page)=\"onPageChange($event)\">\n    </mat-paginator>\n  </div>\n  \n  </div>\n  \n  \n  <!-- Popup overlay -->\n  <div class=\"popup-overlay\" *ngIf=\"showPopup\">\n    <div class=\"popup-content\">\n        <div class=\"popup-header\">\n            <h4>Ajouter un membre</h4>\n            <button class=\"close-btn\" (click)=\"closePopup()\">&times;</button>\n        </div>\n        <form [formGroup]=\"userForm\">\n  <div class=\"popup-body\">\n\n    <div class=\"double_input\">\n      <!-- Nom complet -->\n      <div class=\"champ_input champ_input2\">\n        <input class=\"input_focus\" type=\"text\" formControlName=\"nomComplet\" placeholder=\"Saisis le nom et prénom\">\n        <label class=\"label\">Nom complet</label>\n        <div *ngIf=\"userForm.get('nomComplet')?.invalid && userForm.get('nomComplet')?.touched\">\n          <small class=\"error\">Le nom complet est requis.</small>\n        </div>\n      </div>\n\n      <!-- Email -->\n      <div class=\"champ_input champ_input2\">\n        <input class=\"input_focus\" type=\"email\" formControlName=\"email\" placeholder=\"Saisis l'email\">\n        <label class=\"label\">Email</label>\n        <div *ngIf=\"userForm.get('email')?.invalid && userForm.get('email')?.touched\">\n          <small class=\"error\">Un email valide est requis.</small>\n        </div>\n      </div>\n    </div>\n\n    <!-- Sélection du rôle -->\n    <div class=\"champ_input\">\n      <select class=\"input_focus\" formControlName=\"roleType\">\n        <option value=\"\" disabled selected>Type de rôle</option>\n        <ng-container *ngFor=\"let role of roles\">\n            <option *ngIf=\"isRoleVisible(role.name)\" [value]=\"role.name\">\n              {{ role.name }}\n            </option>\n        </ng-container>\n\n\n      </select>\n      <div *ngIf=\"userForm.get('roleType')?.invalid && userForm.get('roleType')?.touched\">\n        <small class=\"error\">Veuillez sélectionner un rôle.</small>\n      </div>\n    </div>\n\n  \n    <!-- Pays et téléphone -->\n    <div class=\"champ_grid\">\n      <div class=\"champ_input\">\n        <select class=\"input_focus\" formControlName=\"pays\" (change)=\"onPaysChange($event)\">\n          <option value=\"\" disabled selected>Pays</option>\n          <option value=\"Mali\">Mali</option>\n          <option value=\"Sénégal\">Sénégal</option>\n          <option value=\"Côte d'Ivoire\">Côte d'Ivoire</option>\n        </select>\n        <div *ngIf=\"userForm.get('pays')?.invalid && userForm.get('pays')?.touched\">\n          <small class=\"error\">Veuillez choisir un pays.</small>\n        </div>\n      </div>\n\n      <div class=\"champ_input\">\n        <input class=\"input_focus\" type=\"text\" formControlName=\"phone\" placeholder=\"00 00 00 00\">\n        <label class=\"label\">Phone</label>\n        <div *ngIf=\"userForm.get('phone')?.invalid && userForm.get('phone')?.touched\">\n          <small class=\"error\">Le numéro de téléphone est requis.</small>\n        </div>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"popup-footer\">\n    <button class=\"btn-cancel\" (click)=\"closePopup()\">Annuler</button>\n    <button class=\"btn-submit\" (click)=\"onSubmit()\"\n      [disabled]=\"userForm.invalid\" \n      [style.backgroundColor]=\"userForm.valid ? '#0672E4' : '#0671e434'\"\n      [style.color]=\"userForm.valid ? '#ffffff' : '#00000073'\"\n      [style.cursor]=\"userForm.valid ? 'pointer' : 'no-drop'\">\n      Ajouter\n    </button>\n  </div>\n</form>\n\n    </div>\n  </div>"],"names":["HttpHeaders","switchMap","environment","RolesService","constructor","http","usersService","apiUrl","apiBaseUrl","getAllRoles","getValidAccessToken","pipe","token","headers","set","console","log","get","i0","ɵɵinject","i1","HttpClient","i2","UsersService","factory","ɵfac","providedIn","CommonModule","FormsModule","ReactiveFormsModule","Validators","MatPaginatorModule","of","take","throwError","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r1","successMessage","errorMessage","ɵɵelement","ɵɵlistener","CompteComponent_tr_33_Template_tr_click_0_listener","user_r5","ɵɵrestoreView","_r4","$implicit","ɵɵnextContext","ɵɵresetView","openPermissionDetail","id","ɵɵtextInterpolate","nomComplet","email","role","name","pays","flag","phone","messageNoClient","CompteComponent_div_35_Template_mat_paginator_page_1_listener","$event","_r6","onPageChange","ɵɵproperty","filteredUsers","length","pageSize","ɵɵpureFunction0","_c0","role_r8","ɵɵelementContainerStart","ɵɵtemplate","CompteComponent_div_36_ng_container_24_option_1_Template","isRoleVisible","CompteComponent_div_36_Template_button_click_5_listener","_r7","closePopup","CompteComponent_div_36_div_14_Template","CompteComponent_div_36_div_19_Template","CompteComponent_div_36_ng_container_24_Template","CompteComponent_div_36_div_25_Template","CompteComponent_div_36_Template_select_change_28_listener","onPaysChange","CompteComponent_div_36_div_37_Template","CompteComponent_div_36_div_42_Template","CompteComponent_div_36_Template_button_click_44_listener","CompteComponent_div_36_Template_button_click_46_listener","onSubmit","userForm","tmp_3_0","invalid","touched","tmp_4_0","roles","tmp_6_0","tmp_7_0","tmp_8_0","ɵɵstyleProp","valid","CompteComponent","rolesService","fb","router","route","boutiqueService","showPopup","selectedRole","isLoading","users","currentPage","paginatedUsers","paysFlags","indicatif","maxPhoneLength","paysIndicatifs","longueur","isAscending","searchTerm","currentUserRole","boutiques","showBoutiqueSelect","ngOnInit","loadRoles","initForm","updatePaginatedUsers","loadBoutiques","loadCurrentUserRole","getUserInfo","subscribe","next","userData","entrepriseId","loadUsersOfEntreprise","error","err","group","required","pattern","roleType","event","paysSelectionne","target","value","paysInfo","controls","setValue","updatePhoneValidator","setValidators","updateValueAndValidity","formatPhoneNumber","valeur","startsWith","regex","RegExp","match","chiffres","replace","pageIndex","startIndex","slice","Error","data","getToken","connectedUserId","extractUserIdFromToken","getAllUsersOfEntreprise","filteredData","filter","user","map","openPopup","resetForm","patchValue","markAsPristine","markAsUntouched","request","addUserToEntreprise","response","reset","navigate","setTimeout","message","userId","sortRoles","sort","a","b","filterUsers","toLowerCase","includes","clearSearch","inputElement","getBoutiquesByEntreprise","roleName","ɵɵdirectiveInject","i3","FormBuilder","i4","i5","Router","ActivatedRoute","i6","BoutiqueService","selectors","decls","vars","consts","template","CompteComponent_Template","rf","ctx","CompteComponent_div_1_Template","CompteComponent_div_2_Template","CompteComponent_div_4_Template","CompteComponent_Template_button_click_9_listener","_r1","CompteComponent_Template_input_input_14_listener","CompteComponent_Template_i_click_16_listener","searchInput_r3","ɵɵreference","CompteComponent_Template_i_click_27_listener","CompteComponent_tr_33_Template","CompteComponent_div_34_Template","CompteComponent_div_35_Template","CompteComponent_div_36_Template","i7","NgClass","NgForOf","NgIf","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","SelectControlValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","i8","MatPaginator","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}
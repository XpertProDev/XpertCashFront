{"version":3,"file":"default-src_app_admin-page_SERVICES_entreprise-service_ts-src_app_admin-page_SERVICES_facture-68e4cb.js","mappings":";;;;;;;;;;;;;AAAO,IAAKA,qBAOX;AAPD,WAAYA,qBAAqB;EAC/BA,qBAAA,2BAAuB;EACvBA,qBAAA,+BAA2B;EAC3BA,qBAAA,yBAAqB;EACrBA,qBAAA,qBAAiB;EACjBA,qBAAA,qBAAiB;EACjBA,qBAAA,qBAAiB;AACnB,CAAC,EAPWA,qBAAqB,KAArBA,qBAAqB;;;;;;;;;;;;;;;;;;;;;;;ACA8B;AAE4B;AAGhC;;;;AAMrD,MAAOQ,iBAAiB;EAM5BC,YAAoBC,IAAgB,EAAUC,YAA0B;IAApD,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,YAAY,GAAZA,YAAY;IALhD,KAAAC,MAAM,GAAGL,qEAAW,CAACM,UAAU;IAGjC,KAAAC,iBAAiB,GAAG,IAAIZ,iDAAe,CAAe,EAAE,CAAC;IAC1D,KAAAa,WAAW,GAAG,IAAI,CAACD,iBAAiB,CAACE,YAAY,EAAE;EACkB;EAE5E;EACF;EACCC,kBAAkBA,CAAA;IACjB,OAAO,IAAI,CAACN,YAAY,CAACO,mBAAmB,EAAE,CAACC,IAAI,CACjDf,+CAAS,CAACgB,KAAK,IAAG;MAChB,MAAMC,OAAO,GAAG,IAAIpB,6DAAW,CAAC;QAC9B,eAAe,EAAE,UAAUmB,KAAK,EAAE;QAClC,cAAc,EAAE;OACjB,CAAC;MACF,OAAO,IAAI,CAACV,IAAI,CAACY,GAAG,CAAqB,GAAG,IAAI,CAACV,MAAM,cAAc,EAAE;QAAES;MAAO,CAAE,CAAC;IACrF,CAAC,CAAC,EACFlB,gDAAU,CAACoB,KAAK,IAAG;MACjB,IAAIC,QAAQ,GAAG,iBAAiB;MAChC,IAAID,KAAK,CAACA,KAAK,YAAYE,UAAU,EAAE;QACrCD,QAAQ,GAAG,WAAWD,KAAK,CAACA,KAAK,CAACG,OAAO,EAAE;MAC7C,CAAC,MAAM,IAAIH,KAAK,CAACI,MAAM,KAAK,GAAG,EAAE;QAC/BH,QAAQ,GAAG,2BAA2B;MACxC;MACA,OAAOlB,gDAAU,CAAC,MAAM,IAAIsB,KAAK,CAACJ,QAAQ,CAAC,CAAC;IAC9C,CAAC,CAAC,CACH;EACH;EAGE;EACDK,aAAaA,CAACC,UAAsB;IACnC,OAAO,IAAI,CAACnB,YAAY,CAACO,mBAAmB,EAAE,CAACC,IAAI,CACjDf,+CAAS,CAACgB,KAAK,IAAG;MAChB,MAAMC,OAAO,GAAG,IAAIpB,6DAAW,CAAC;QAC9B,eAAe,EAAE,UAAUmB,KAAK,EAAE;QAClC,cAAc,EAAE;OACjB,CAAC;MAEF,OAAO,IAAI,CAACV,IAAI,CAACqB,IAAI,CAAa,GAAG,IAAI,CAACnB,MAAM,qBAAqB,EAAEkB,UAAU,EAAE;QAAET;MAAO,CAAE,CAAC;IACjG,CAAC,CAAC,EACFhB,yCAAG,CAAE2B,aAAa,IAAI;MACpB,MAAMC,iBAAiB,GAAG,IAAI,CAACnB,iBAAiB,CAACoB,KAAK;MACtD,IAAI,CAACpB,iBAAiB,CAACqB,IAAI,CAAC,CAAC,GAAGF,iBAAiB,EAAED,aAAa,CAAC,CAAC;IACpE,CAAC,CAAC,EACF7B,gDAAU,CAACoB,KAAK,IAAG;MACjB,IAAIC,QAAQ,GAAG,iBAAiB;MAChC,IAAID,KAAK,CAACA,KAAK,YAAYE,UAAU,EAAE;QACrCD,QAAQ,GAAG,WAAWD,KAAK,CAACA,KAAK,CAACG,OAAO,EAAE;MAC7C,CAAC,MAAM,IAAIH,KAAK,CAACI,MAAM,KAAK,GAAG,EAAE;QAC/BH,QAAQ,GAAGD,KAAK,CAACA,KAAK,IAAI,mBAAmB;MAC/C;MACA,OAAOjB,gDAAU,CAAC,MAAM,IAAIsB,KAAK,CAACJ,QAAQ,CAAC,CAAC;IAC9C,CAAC,CAAC,CACH;EACH;EAGE;EACDY,iBAAiBA,CAAA;IAChB,OAAO,IAAI,CAACzB,YAAY,CAACO,mBAAmB,EAAE,CAACC,IAAI,CACjDf,+CAAS,CAACgB,KAAK,IAAG;MAChB,IAAI,CAACA,KAAK,EAAE;QACViB,OAAO,CAACd,KAAK,CAAC,2EAA2E,CAAC;QAC1F,OAAOjB,gDAAU,CAAC,MAAM,IAAIsB,KAAK,CAAC,gBAAgB,CAAC,CAAC;MACtD;MACA,MAAMP,OAAO,GAAG,IAAIpB,6DAAW,EAAE,CAACqC,GAAG,CAAC,eAAe,EAAE,UAAUlB,KAAK,EAAE,CAAC;MACzEiB,OAAO,CAACE,GAAG,CAAC,qBAAqB,EAAElB,OAAO,CAAC;MAE3C,OAAO,IAAI,CAACX,IAAI,CAACY,GAAG,CAAe,GAAG,IAAI,CAACV,MAAM,cAAc,EAAE;QAAES;MAAO,CAAE,CAAC;IAC/E,CAAC,CAAC,EACFhB,yCAAG,CAACmC,IAAI,IAAG;MACT,IAAI,CAAC1B,iBAAiB,CAACqB,IAAI,CAACK,IAAI,CAAC;IACnC,CAAC,CAAC,EACFrC,gDAAU,CAACoB,KAAK,IAAG;MACjBc,OAAO,CAACd,KAAK,CAAC,iDAAiD,EAAEA,KAAK,CAAC;MACvE,OAAOjB,gDAAU,CAAC,MAAMiB,KAAK,CAAC;IAChC,CAAC,CAAC,CACH;EACH;EAIE;EACDkB,iBAAiBA,CAACC,EAAU;IAC3B,OAAO,IAAI,CAAC/B,YAAY,CAACO,mBAAmB,EAAE,CAACC,IAAI,CACjDf,+CAAS,CAACgB,KAAK,IAAG;MAChB,IAAI,CAACA,KAAK,EAAE;QACViB,OAAO,CAACd,KAAK,CAAC,gBAAgB,CAAC;QAC/B,OAAOjB,gDAAU,CAAC,MAAM,IAAIsB,KAAK,CAAC,gBAAgB,CAAC,CAAC;MACtD;MACA,MAAMP,OAAO,GAAG,IAAIpB,6DAAW,CAAC;QAC9B,eAAe,EAAE,UAAUmB,KAAK,EAAE;QAClC,cAAc,EAAE;OACjB,CAAC;MACF,OAAO,IAAI,CAACV,IAAI,CAACY,GAAG,CAAa,GAAG,IAAI,CAACV,MAAM,gBAAgB8B,EAAE,EAAE,EAAE;QAAErB;MAAO,CAAE,CAAC;IACnF,CAAC,CAAC,EACFlB,gDAAU,CAACoB,KAAK,IAAG;MACjB,IAAIC,QAAQ,GAAG,iBAAiB;MAChC,IAAID,KAAK,CAACA,KAAK,YAAYE,UAAU,EAAE;QACrCD,QAAQ,GAAG,WAAWD,KAAK,CAACA,KAAK,CAACG,OAAO,EAAE;MAC7C,CAAC,MAAM,IAAIH,KAAK,CAACI,MAAM,KAAK,GAAG,EAAE;QAC/BH,QAAQ,GAAG,wBAAwB;MACrC;MACA,OAAOlB,gDAAU,CAAC,MAAM,IAAIsB,KAAK,CAACJ,QAAQ,CAAC,CAAC;IAC9C,CAAC,CAAC,CACH;EACH;EAGEmB,gBAAgBA,CAACD,EAAU,EAAEE,QAAkB;IAC/C,OAAO,IAAI,CAACjC,YAAY,CAACO,mBAAmB,EAAE,CAACC,IAAI,CACjDf,+CAAS,CAACgB,KAAK,IAAG;MAChB,IAAI,CAACA,KAAK,EAAE;QACV,OAAOd,gDAAU,CAAC,MAAM,IAAIsB,KAAK,CAAC,gBAAgB,CAAC,CAAC;MACtD;MAEA,MAAMP,OAAO,GAAG,IAAIpB,6DAAW,CAAC;QAC9B,eAAe,EAAE,UAAUmB,KAAK;OACjC,CAAC;MAEF,OAAO,IAAI,CAACV,IAAI,CAACmC,KAAK,CAAC,GAAG,IAAI,CAACjC,MAAM,qBAAqB8B,EAAE,EAAE,EAAEE,QAAQ,EAAE;QACxEvB,OAAO;QACPyB,YAAY,EAAE,MAAM,CAAC;OACtB,CAAC;IACJ,CAAC,CAAC,EACF3C,gDAAU,CAACoB,KAAK,IAAG;MACjB,IAAIC,QAAQ,GAAG,iBAAiB;MAChC,IAAID,KAAK,CAACA,KAAK,YAAYE,UAAU,EAAE;QACrCD,QAAQ,GAAG,WAAWD,KAAK,CAACA,KAAK,CAACG,OAAO,EAAE;MAC7C,CAAC,MAAM,IAAIH,KAAK,CAACI,MAAM,KAAK,GAAG,EAAE;QAC/BH,QAAQ,GAAGD,KAAK,CAACA,KAAK,IAAI,mBAAmB;MAC/C;MACA,OAAOjB,gDAAU,CAAC,MAAM,IAAIsB,KAAK,CAACJ,QAAQ,CAAC,CAAC;IAC9C,CAAC,CAAC,CACH;EACH;EAGE;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACAuB,iBAAiBA,CAAA;IACjB,OAAO,IAAI,CAACpC,YAAY,CAACO,mBAAmB,EAAE,CAACC,IAAI,CACjDf,+CAAS,CAACgB,KAAK,IAAG;MAChB,IAAI,CAACA,KAAK,EAAE;QACV,OAAOd,gDAAU,CAAC,MAAM,IAAIsB,KAAK,CAAC,oBAAoB,CAAC,CAAC;MAC1D;MAEA,MAAMP,OAAO,GAAG,IAAIpB,6DAAW,CAAC;QAC9B+C,aAAa,EAAE,UAAU5B,KAAK;OAC/B,CAAC;MAEF,OAAO,IAAI,CAACV,IAAI,CAACY,GAAG,CAAa,GAAG,IAAI,CAACV,MAAM,eAAe,EAAE;QAAES;MAAO,CAAE,CAAC,CAACF,IAAI,CAC/Ed,yCAAG,CAACyB,UAAU,IAAG;QACfmB,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEC,IAAI,CAACC,SAAS,CAACtB,UAAU,CAAC,CAAC;MAChE,CAAC,CAAC,CACH;IACH,CAAC,CAAC,EACF3B,gDAAU,CAACoB,KAAK,IAAG;MACjBc,OAAO,CAACd,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC5D,OAAOjB,gDAAU,CAAC,MAAMiB,KAAK,CAAC;IAChC,CAAC,CAAC,CACH;EACH;EAGE;EACA8B,SAASA,CAACjC,KAAa;IACrB,OAAO+B,IAAI,CAACG,KAAK,CAACC,IAAI,CAACnC,KAAK,CAACoC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9C;EAEA;EACAC,cAAcA,CAACC,YAAiB;IAC9B,MAAMC,cAAc,GAAG,IAAIC,IAAI,CAACF,YAAY,CAACG,GAAG,GAAG,IAAI,CAAC;IACxD,OAAOF,cAAc,GAAG,IAAIC,IAAI,EAAE;EACpC;EAEA;EACAE,kBAAkBA,CAAA;IAChB,MAAMC,YAAY,GAAGd,YAAY,CAACe,OAAO,CAAC,cAAc,CAAC;IACzD,OAAO,IAAI,CAACtD,IAAI,CAACqB,IAAI,CAAoB,GAAG,IAAI,CAACnB,MAAM,gBAAgB,EAAE;MAAEmD;IAAY,CAAE,CAAC;EAC5F;;;uCAzMWvD,iBAAiB,EAAAyD,sDAAA,CAAAE,4DAAA,GAAAF,sDAAA,CAAAI,wDAAA;IAAA;EAAA;;;aAAjB7D,iBAAiB;MAAA+D,OAAA,EAAjB/D,iBAAiB,CAAAgE,IAAA;MAAAC,UAAA,EAFhB;IAAM;EAAA;;;;;;;;;;;;;;;;;ACP+B;;AAI7C,MAAOC,qBAAqB;EADlCjE,YAAA;IAEU,KAAAkE,cAAc,GAAG,IAAIzE,iDAAe,CAAyB,IAAI,CAAC;;EAE1E0E,UAAUA,CAACpC,IAAqB;IAC9B,IAAI,CAACmC,cAAc,CAACxC,IAAI,CAACK,IAAI,CAAC;EAChC;EAEAqC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACF,cAAc,CAAC3D,YAAY,EAAE;EAC3C;;;uCATW0D,qBAAqB;IAAA;EAAA;;;aAArBA,qBAAqB;MAAAH,OAAA,EAArBG,qBAAqB,CAAAF,IAAA;MAAAC,UAAA,EADR;IAAM;EAAA;;;;;;;;;;;;;;;;;;;;;;;;ACL2C;AAED;AACyC;AAExD;;;;AAOrD,MAAOM,sBAAsB;EAIjCtE,YAAoBC,IAAgB,EAAUC,YAA0B;IAApD,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,YAAY,GAAZA,YAAY;IAHhD,KAAAC,MAAM,GAAGL,qEAAW,CAACM,UAAU;EAGmC;EAE5EmE,oBAAoBA,CACpBC,OAAY,EACZC,iBAA0B,EAC1BC,YAAsB,EACtBC,oBAA8B;IAE9B,OAAO,IAAI,CAACzE,YAAY,CAACO,mBAAmB,EAAE,CAACC,IAAI,CACjDf,+CAAS,CAACgB,KAAK,IAAG;MAChB,MAAMC,OAAO,GAAG,IAAIpB,6DAAW,CAAC;QAC9B,eAAe,EAAE,UAAUmB,KAAK;OACjC,CAAC;MAEF,IAAIiE,MAAM,GAAG,IAAIP,4DAAU,EAAE;MAE7B,IAAIM,oBAAoB,EAAE;QACxB,IAAIF,iBAAiB,KAAKI,SAAS,EAAE;UACnCD,MAAM,GAAGA,MAAM,CAAC/C,GAAG,CAAC,mBAAmB,EAAE4C,iBAAiB,CAACK,QAAQ,EAAE,CAAC;QACxE;QACA,IAAIJ,YAAY,KAAKG,SAAS,EAAE;UAC9BD,MAAM,GAAGA,MAAM,CAAC/C,GAAG,CAAC,cAAc,EAAE6C,YAAY,CAACI,QAAQ,EAAE,CAAC;QAC9D;MACF;MAEA,OAAO,IAAI,CAAC7E,IAAI,CAACqB,IAAI,CAAC,GAAG,IAAI,CAACnB,MAAM,UAAU,EAAEqE,OAAO,EAAE;QAAE5D,OAAO;QAAEgE;MAAM,CAAE,CAAC;IAC/E,CAAC,CAAC,EACFhF,yCAAG,CAACmF,QAAQ,IAAInD,OAAO,CAACE,GAAG,CAAC,4BAA4B,EAAEiD,QAAQ,CAAC,CAAC,EACpErF,gDAAU,CAACoB,KAAK,IAAG;MACjBc,OAAO,CAACd,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MACzCc,OAAO,CAACE,GAAG,CAAC,sBAAsB,EAAEhB,KAAK,CAACA,KAAK,CAAC;MAChD,OAAOjB,gDAAU,CAAC,MAAMiB,KAAK,CAAC;IAChC,CAAC,CAAC,CACH;EACH;EAGE;EACDkE,6BAA6BA,CAACC,YAAoB;IACjD,OAAO,IAAI,CAAC/E,YAAY,CAACO,mBAAmB,EAAE,CAACC,IAAI,CACjDf,+CAAS,CAACgB,KAAK,IAAG;MAChB,MAAMC,OAAO,GAAG,IAAIpB,6DAAW,CAAC;QAC9B+C,aAAa,EAAE,UAAU5B,KAAK;OAC/B,CAAC;MACF,OAAO,IAAI,CAACV,IAAI,CAACY,GAAG,CAAQ,GAAG,IAAI,CAACV,MAAM,eAAe,EAAE;QAAES;MAAO,CAAE,CAAC;IACzE,CAAC,CAAC,CACH;EACH;EAGEsE,sBAAsBA,CAACjD,EAAU;IACjC,OAAO,IAAI,CAAC/B,YAAY,CAACO,mBAAmB,EAAE,CAACC,IAAI,CACjDf,+CAAS,CAACgB,KAAK,IAAG;MAChB,MAAMC,OAAO,GAAG,IAAIpB,6DAAW,CAAC;QAC9B,eAAe,EAAE,UAAUmB,KAAK;OACjC,CAAC;MACF,OAAO,IAAI,CAACV,IAAI,CAACY,GAAG,CAAkB,GAAG,IAAI,CAACV,MAAM,oBAAoB8B,EAAE,EAAE,EAAE;QAAErB;MAAO,CAAE,CAAC;IAC5F,CAAC,CAAC,CACH;EACH;EAGE;EACDuE,qBAAqBA,CACpBC,SAAiB,EACjBX,iBAAqC,EACrCC,YAAiC,EACjCW,aAAuC,EACvCC,eAA0B;IAE1B,OAAO,IAAI,CAACpF,YAAY,CAACO,mBAAmB,EAAE,CAACC,IAAI,CACjDf,+CAAS,CAACgB,KAAK,IAAG;MAChB,MAAMC,OAAO,GAAG,IAAIpB,6DAAW,CAAC;QAC9B,eAAe,EAAE,UAAUmB,KAAK,EAAE;QAClC,cAAc,EAAE;OACjB,CAAC;MAEF,IAAIiE,MAAM,GAAG,IAAIP,4DAAU,EAAE;MAE7B,IAAII,iBAAiB,KAAKI,SAAS,EAAE;QACnCD,MAAM,GAAGA,MAAM,CAAC/C,GAAG,CAAC,mBAAmB,EAAE4C,iBAAiB,CAACK,QAAQ,EAAE,CAAC;MACxE;MAEA,IAAIJ,YAAY,KAAKG,SAAS,EAAE;QAC9BD,MAAM,GAAGA,MAAM,CAAC/C,GAAG,CAAC,cAAc,EAAE6C,YAAY,CAACI,QAAQ,EAAE,CAAC;MAC9D;MAEA,IAAIQ,eAAe,IAAIA,eAAe,CAACC,MAAM,GAAG,CAAC,EAAE;QACjDD,eAAe,CAACE,OAAO,CAACvD,EAAE,IAAG;UAC3B2C,MAAM,GAAGA,MAAM,CAACa,MAAM,CAAC,iBAAiB,EAAExD,EAAE,CAAC6C,QAAQ,EAAE,CAAC;QAC1D,CAAC,CAAC;MACJ;MAEA,IAAIO,aAAa,CAACK,MAAM,KAAKnG,gFAAqB,CAACoG,MAAM,EAAE;QACzDf,MAAM,GAAGA,MAAM,CAAC/C,GAAG,CAAC,cAAc,EAAE,MAAM,CAAC;MAC7C;MAEA,OAAO,IAAI,CAAC5B,IAAI,CAAC2F,GAAG,CAClB,GAAG,IAAI,CAACzF,MAAM,kBAAkBiF,SAAS,EAAE,EAC3CC,aAAa,EACb;QAAEzE,OAAO;QAAEgE;MAAM,CAAE,CACpB,CAAClE,IAAI,CACJd,yCAAG,CAACmF,QAAQ,IAAInD,OAAO,CAACE,GAAG,CAAC,sBAAsB,EAAEiD,QAAQ,CAAC,CAAC,EAC9DrF,gDAAU,CAACoB,KAAK,IAAG;QACjBc,OAAO,CAACd,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAC3C,OAAOjB,gDAAU,CAAC,MAAMiB,KAAK,CAAC;MAChC,CAAC,CAAC,CACH;IACH,CAAC,CAAC,CACH;EACH;EAGE;EACA+E,mBAAmBA,CACjBT,SAAiB,EACjBU,YAMC;IAED,MAAM3D,QAAQ,GAAG,IAAI4D,QAAQ,EAAE;IAC/B5D,QAAQ,CAACsD,MAAM,CAAC,IAAI,EAAEK,YAAY,CAACE,EAAE,CAAC;IACtC7D,QAAQ,CAACsD,MAAM,CAAC,IAAI,EAAEK,YAAY,CAACG,EAAE,CAAC;IACtC9D,QAAQ,CAACsD,MAAM,CAAC,SAAS,EAAEK,YAAY,CAACI,OAAO,CAAC;IAChD/D,QAAQ,CAACsD,MAAM,CAAC,MAAM,EAAEK,YAAY,CAACK,IAAI,CAAC;IAE1C,IAAIL,YAAY,CAACM,WAAW,EAAE;MAC5BN,YAAY,CAACM,WAAW,CAACZ,OAAO,CAAC,CAACa,IAAI,EAAEC,KAAK,KAAI;QAC/CnE,QAAQ,CAACsD,MAAM,CAAC,aAAa,EAAEY,IAAI,EAAEA,IAAI,CAACE,IAAI,CAAC;MACjD,CAAC,CAAC;IACJ;IAEE,OAAO,IAAI,CAACrG,YAAY,CAACO,mBAAmB,EAAE,CAACC,IAAI,CACrDf,+CAAS,CAACgB,KAAK,IAAG;MAChB,MAAMC,OAAO,GAAG,IAAIpB,6DAAW,CAAC;QAC9B,eAAe,EAAE,UAAUmB,KAAK;OACjC,CAAC;MACF,OAAO,IAAI,CAACV,IAAI,CAACqB,IAAI,CACnB,GAAG,IAAI,CAACnB,MAAM,aAAaiF,SAAS,gBAAgB,EACpDjD,QAAQ,EACR;QAAEvB,OAAO;QAAEyB,YAAY,EAAE;MAAM,CAAE,CAClC;IACH,CAAC,CAAC,CACH;EAGD;EAGA;EACFmE,oBAAoBA,CAACpB,SAAiB;IACpC,OAAO,IAAI,CAAClF,YAAY,CAACO,mBAAmB,EAAE,CAACC,IAAI,CACjDf,+CAAS,CAACgB,KAAK,IAAG;MAChB,MAAMC,OAAO,GAAG,IAAIpB,6DAAW,CAAC;QAC9B,eAAe,EAAE,UAAUmB,KAAK;OACjC,CAAC;MAEF,OAAO,IAAI,CAACV,IAAI,CAACY,GAAG,CAAM,GAAG,IAAI,CAACV,MAAM,YAAYiF,SAAS,aAAa,EAAE;QAAExE;MAAO,CAAE,CAAC;IAC1F,CAAC,CAAC,EACFlB,gDAAU,CAAC+G,GAAG,IAAG;MACf7E,OAAO,CAACd,KAAK,CAAC,yCAAyC,EAAE2F,GAAG,CAAC;MAC7D,OAAO5G,gDAAU,CAAC,MAAM4G,GAAG,CAAC;IAC9B,CAAC,CAAC,CACH;EACH;EAGA;EACA;EACA;EAEA;EACAC,uBAAuBA,CAACzE,EAAU;IAChC,OAAO,IAAI,CAAC/B,YAAY,CAACO,mBAAmB,EAAE,CAACC,IAAI,CACjDf,+CAAS,CAACgB,KAAK,IAAG;MAChB,MAAMC,OAAO,GAAG,IAAIpB,6DAAW,CAAC;QAC9B,eAAe,EAAE,UAAUmB,KAAK;OACjC,CAAC;MACF,OAAO,IAAI,CAACV,IAAI,CAACY,GAAG,CAAQ,GAAG,IAAI,CAACV,MAAM,aAAa8B,EAAE,QAAQ,EAAE;QAAErB;MAAO,CAAE,CAAC;IACjF,CAAC,CAAC,EACFlB,gDAAU,CAAC+G,GAAG,IAAG;MACf7E,OAAO,CAACd,KAAK,CAAC,yCAAyC,EAAE2F,GAAG,CAAC;MAC7D,OAAO5G,gDAAU,CAAC,MAAM4G,GAAG,CAAC;IAC9B,CAAC,CAAC,CACH;EACH;EAGE;EACFE,WAAWA,CAACvB,SAAiB,EAAEwB,MAAc;IAC3C,OAAO,IAAI,CAAC1G,YAAY,CAACO,mBAAmB,EAAE,CAACC,IAAI,CACjDf,+CAAS,CAACgB,KAAK,IAAG;MAChB,MAAMC,OAAO,GAAG,IAAIpB,6DAAW,CAAC;QAC9B,eAAe,EAAE,UAAUmB,KAAK,EAAE;QAClC,QAAQ,EAAE;OACX,CAAC;MAEF,OAAO,IAAI,CAACV,IAAI,CAACY,GAAG,CAClB,GAAG,IAAI,CAACV,MAAM,SAASiF,SAAS,UAAUwB,MAAM,EAAE,EAClD;QAAEhG;MAAO,CAAE,CACZ;IACH,CAAC,CAAC,EACFlB,gDAAU,CAAC+G,GAAG,IAAG;MACf7E,OAAO,CAACd,KAAK,CAAC,4CAA4C,EAAE2F,GAAG,CAAC;MAChE,OAAO5G,gDAAU,CAAC,MAAM4G,GAAG,CAAC;IAC9B,CAAC,CAAC,CACH;EACH;EAKE;EACFI,UAAUA,CAACzB,SAAiB,EAAEwB,MAAc,EAAEE,cAAsB;IAClE,OAAO,IAAI,CAAC5G,YAAY,CAACO,mBAAmB,EAAE,CAACC,IAAI,CACjDf,+CAAS,CAACgB,KAAK,IAAG;MAChB,MAAMC,OAAO,GAAG,IAAIpB,6DAAW,CAAC;QAC9B,eAAe,EAAE,UAAUmB,KAAK,EAAE;QAClC,cAAc,EAAE;OACjB,CAAC;MACF,MAAMoG,GAAG,GAAG,GAAG,IAAI,CAAC5G,MAAM,IAAIiF,SAAS,UAAUwB,MAAM,EAAE;MACzD,MAAMT,IAAI,GAAG;QAAEW;MAAc,CAAE;MAC/B,OAAO,IAAI,CAAC7G,IAAI,CAAC2F,GAAG,CAAMmB,GAAG,EAAEZ,IAAI,EAAE;QAAEvF;MAAO,CAAE,CAAC;IACnD,CAAC,CAAC,EACFhB,yCAAG,CAACmF,QAAQ,IAAInD,OAAO,CAACE,GAAG,CAAC,4BAA4B,EAAEiD,QAAQ,CAAC,CAAC,EACpErF,gDAAU,CAACoB,KAAK,IAAG;MACjBc,OAAO,CAACd,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;MAClE,OAAOjB,gDAAU,CAAC,MAAMiB,KAAK,CAAC;IAChC,CAAC,CAAC,CACH;EACH;EAGAkG,wBAAwBA,CAAC5B,SAAiB,EAAEwB,MAAc;IACxD,OAAO,IAAI,CAAC1G,YAAY,CAACO,mBAAmB,EAAE,CAACC,IAAI,CACjDf,+CAAS,CAACgB,KAAK,IAAG;MAChB,MAAMC,OAAO,GAAG,IAAIpB,6DAAW,CAAC;QAC9B,eAAe,EAAE,UAAUmB,KAAK,EAAE;QAClC,QAAQ,EAAE;OACX,CAAC;MACF,OAAO,IAAI,CAACV,IAAI,CAACgH,MAAM,CACrB,GAAG,IAAI,CAAC9G,MAAM,IAAIiF,SAAS,UAAUwB,MAAM,YAAY,EACvD;QAAEhG;MAAO,CAAE,CACZ;IACH,CAAC,CAAC,EACFlB,gDAAU,CAACoB,KAAK,IAAG;MACjBc,OAAO,CAACd,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;MACjE,OAAOjB,gDAAU,CAAC,MAAMiB,KAAK,CAAC;IAChC,CAAC,CAAC,CACH;EACH;EAGCoG,mBAAmBA,CAACC,QAAiB,EAAEC,kBAA2B;IACjE,OAAO,IAAI,CAAClH,YAAY,CAACO,mBAAmB,EAAE,CAACC,IAAI,CACjDf,+CAAS,CAACgB,KAAK,IAAG;MAChB,IAAIiE,MAAM,GAAG,IAAIP,4DAAU,EAAE;MAE7B,IAAI8C,QAAQ,KAAKtC,SAAS,EAAE;QAC1BD,MAAM,GAAGA,MAAM,CAAC/C,GAAG,CAAC,UAAU,EAAEsF,QAAQ,CAACrC,QAAQ,EAAE,CAAC;MACtD;MACA,IAAIsC,kBAAkB,KAAKvC,SAAS,EAAE;QACpCD,MAAM,GAAGA,MAAM,CAAC/C,GAAG,CAAC,oBAAoB,EAAEuF,kBAAkB,CAACtC,QAAQ,EAAE,CAAC;MAC1E;MAEA,MAAMlE,OAAO,GAAG,IAAIpB,6DAAW,CAAC;QAC9B+C,aAAa,EAAE,UAAU5B,KAAK;OAC/B,CAAC;MAEF,OAAO,IAAI,CAACV,IAAI,CAACY,GAAG,CAAQ,GAAG,IAAI,CAACV,MAAM,kBAAkB,EAAE;QAAES,OAAO;QAAEgE;MAAM,CAAE,CAAC;IACpF,CAAC,CAAC,EACFlF,gDAAU,CAACoB,KAAK,IAAG;MACjBc,OAAO,CAACd,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxD,OAAOjB,gDAAU,CAAC,MAAMiB,KAAK,CAAC;IAChC,CAAC,CAAC,CACH;EACH;EAGA;EAEAuG,qBAAqBA,CACnBC,IAAgD,EAChDC,SAAkB;EAAE;EACpBC,OAAgB;IAEhB,OAAO,IAAI,CAACtH,YAAY,CAACO,mBAAmB,EAAE,CAACC,IAAI,CACjDf,+CAAS,CAACgB,KAAK,IAAG;MAChB,MAAMC,OAAO,GAAG,IAAIpB,6DAAW,CAAC;QAC9B+C,aAAa,EAAE,UAAU5B,KAAK;OAC/B,CAAC;MAEF,IAAIiE,MAAM,GAAG,IAAIP,4DAAU,EAAE,CAACxC,GAAG,CAAC,MAAM,EAAEyF,IAAI,CAAC;MAE/C,IAAIA,IAAI,KAAK,cAAc,EAAE;QAC3B,IAAI,CAACC,SAAS,IAAI,CAACC,OAAO,EAAE;UAC1B,MAAM,IAAIrG,KAAK,CAAC,wEAAwE,CAAC;QAC3F;QACAyD,MAAM,GAAGA,MAAM,CAAC/C,GAAG,CAAC,WAAW,EAAE0F,SAAS,CAAC,CAAC1F,GAAG,CAAC,SAAS,EAAE2F,OAAO,CAAC;MACrE;MAEA,OAAO,IAAI,CAACvH,IAAI,CAACY,GAAG,CAAQ,GAAG,IAAI,CAACV,MAAM,2BAA2B,EAAE;QAAES,OAAO;QAAEgE;MAAM,CAAE,CAAC;IAC7F,CAAC,CAAC,CACH;EACH;EAGC6C,oBAAoBA,CAACrC,SAAiB;IACrC,OAAO,IAAI,CAAClF,YAAY,CAACO,mBAAmB,EAAE,CAACC,IAAI,CACjDf,+CAAS,CAACgB,KAAK,IAAG;MAChB,MAAMC,OAAO,GAAG,IAAIpB,6DAAW,CAAC;QAC9B,eAAe,EAAE,UAAUmB,KAAK,EAAE;QAClC,QAAQ,EAAE;OACX,CAAC;MACF,OAAO,IAAI,CAACV,IAAI,CAACgH,MAAM,CACrB,GAAG,IAAI,CAAC9G,MAAM,0BAA0BiF,SAAS,EAAE,EACnD;QAAExE;MAAO,CAAE,CACZ;IACH,CAAC,CAAC,EACFlB,gDAAU,CAACoB,KAAK,IAAG;MACjBc,OAAO,CAACd,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;MACjE,OAAOjB,gDAAU,CAAC,MAAMiB,KAAK,CAAC;IAChC,CAAC,CAAC,CACH;EACH;;;uCA5UawD,sBAAsB,EAAAd,sDAAA,CAAAE,4DAAA,GAAAF,sDAAA,CAAAI,wDAAA;IAAA;EAAA;;;aAAtBU,sBAAsB;MAAAR,OAAA,EAAtBQ,sBAAsB,CAAAP,IAAA;MAAAC,UAAA,EAFrB;IAAM;EAAA;;;;;;;;;;;;;;;;;ACNd,MAAO0D,gBAAgB;EAG3BC,SAASA,CAACC,KAAU;IAClB,IAAI,CAACC,SAAS,GAAG;MAAE,GAAGD;IAAK,CAAE,CAAC,CAAC;EACjC;EAEAE,QAAQA,CAAA;IACN,OAAO,IAAI,CAACD,SAAS;EACvB;EAEAE,UAAUA,CAAA;IACR,IAAI,CAACF,SAAS,GAAG,IAAI;EACvB;;;uCAbWH,gBAAgB;IAAA;EAAA;;;aAAhBA,gBAAgB;MAAA5D,OAAA,EAAhB4D,gBAAgB,CAAA3D,IAAA;MAAAC,UAAA,EADH;IAAM;EAAA","sources":["./src/app/admin-page/MODELS/FactureProForma.model.ts","./src/app/admin-page/SERVICES/entreprise-service.ts","./src/app/admin-page/SERVICES/facture-preview-service.ts","./src/app/admin-page/SERVICES/factureproforma-service.ts","./src/app/admin-page/SERVICES/form-state.service.ts"],"sourcesContent":["export enum StatutFactureProForma {\n  BROUILLON = 'BROUILLON',\n  APPROBATION = 'APPROBATION',\n  APPROUVE = 'APPROUVE',\n  ENVOYE = 'ENVOYE',\n  VALIDE = 'VALIDE',\n  ANNULE = 'ANNULE'\n}\n\n// Dans ton modèle FactureProForma\nexport interface LigneFactureProforma {\n  id?: number; // Rend l'id optionnel pour les nouvelles lignes\n  produit: {\n    id: number;\n    nom?: string; // Optionnel selon tes besoins\n    prixUnitaire?: number;\n  };\n  ligneDescription?: string;\n  quantite: number;\n  prixUnitaire: number; // Obligatoire\n  montantTotal?: number;\n}\n\nexport interface UpdateFactureProFormaDTO {\n  client?: { id: number } | null;\n  description?: string;\n  lignesFacture?: {\n    id?: number;\n    produit: { id: number };\n    ligneDescription?: string;\n    quantite: number;\n    prixUnitaire: number;\n  }[];\n  // Ajouter d'autres champs optionnels si besoin\n}\n\nexport interface FactureProForma {\n  id: number;\n  numeroFacture: string;\n  siege: string;\n  dateRelance?: string;\n  dateCreation: string;\n  dateApprobation?: string;\n  noteModification?: string;\n  // dateAnnulation?: string;\n  // methodeEnvoi?: 'EMAIL' | 'PHYSIQUE';\n  methodeEnvoi?: 'EMAIL' | 'PHYSIQUE' | 'AUTRE';\n  justification?: string;\n\n  montantTVA?: number;\n  tauxTva?: number;\n\n  utilisateurModificateur?: {\n      nomComplet: string;\n      email: string;\n      photo: string;\n  };\n  utilisateurApprobateur?: {\n      nomComplet: string;\n  };\n  approbateurs?: { \n    id: number;\n    nomComplet: string;\n    email?: string;\n    photo?: string;\n  }[];\n  entreprise?: {\n      siege: string;\n      tauxTva?: number\n\n  };\n  description: string;\n  totalHT: number;\n  remise?: number;\n  tva: boolean;\n  totalFacture: number;\n  statut?: string;\n  client?: {\n    id: number;\n    nomComplet: string;\n    telephone?: string;\n    email?: string;\n    pays?: string\n    ville?: string\n    adresse?: string;\n  };\n  entrepriseClient?: {\n    id: number;\n    nom: string;\n    email?: string;\n    adresse?: string;\n    telephone?: string;\n    ville?: string;\n    siege?: string\n    pays?: string\n  };\n  lignesFacture: LigneFactureProforma[];\n  // Ajout de utilisateurCreateur\n  utilisateurCreateur?: {\n      nomComplet: string;\n      photo: string;\n  };\n  \n}","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, catchError, Observable, switchMap, tap, throwError } from \"rxjs\";\nimport { Entreprise } from \"../MODELS/entreprise-model\";\nimport { EntrepriseClient } from \"../MODELS/entreprise-clients-model\";\nimport { environment } from \"src/environments/environment\";\nimport { UsersService } from \"./users.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EntrepriseService {\n    private apiUrl = environment.apiBaseUrl;\n  \n\n  private entrepriseSubject = new BehaviorSubject<Entreprise[]>([]);\n  public entreprise$ = this.entrepriseSubject.asObservable(); \n  constructor(private http: HttpClient, private usersService: UsersService) { }\n\n  // Dans client.service.ts\n// Dans entreprise.service.ts\n getListEntreprises(): Observable<EntrepriseClient[]> {\n  return this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      });\n      return this.http.get<EntrepriseClient[]>(`${this.apiUrl}/entreprises`, { headers });\n    }),\n    catchError(error => {\n      let errorMsg = 'Erreur inconnue';\n      if (error.error instanceof ErrorEvent) {\n        errorMsg = `Erreur: ${error.error.message}`;\n      } else if (error.status === 404) {\n        errorMsg = 'Aucune entreprise trouvée';\n      }\n      return throwError(() => new Error(errorMsg));\n    })\n  );\n}\n\n\n  // Ajouter une entreprise\n addEntreprise(entreprise: Entreprise): Observable<Entreprise> {\n  return this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      });\n\n      return this.http.post<Entreprise>(`${this.apiUrl}/entreprise-clients`, entreprise, { headers });\n    }),\n    tap((newEntreprise) => {\n      const currentEntreprise = this.entrepriseSubject.value;\n      this.entrepriseSubject.next([...currentEntreprise, newEntreprise]);\n    }),\n    catchError(error => {\n      let errorMsg = 'Erreur inconnue';\n      if (error.error instanceof ErrorEvent) {\n        errorMsg = `Erreur: ${error.error.message}`;\n      } else if (error.status === 400) {\n        errorMsg = error.error || 'Données invalides';\n      }\n      return throwError(() => new Error(errorMsg));\n    })\n  );\n}\n\n\n  // List de tout les entreprises\n getListEntreprise(): Observable<Entreprise[]> {\n  return this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      if (!token) {\n        console.error('Token vide ou non défini ! Vérifiez que l\\'utilisateur est bien connecté.');\n        return throwError(() => new Error('Token manquant'));\n      }\n      const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n      console.log(\"En-têtes envoyés : \", headers);\n\n      return this.http.get<Entreprise[]>(`${this.apiUrl}/entreprises`, { headers });\n    }),\n    tap(data => {\n      this.entrepriseSubject.next(data);\n    }),\n    catchError(error => {\n      console.error('Erreur lors de la récupération des entreprises:', error);\n      return throwError(() => error);\n    })\n  );\n}\n\n\n\n  // Recuperer information d'une entreprise de la user connecter\n getEntrepriseById(id: number): Observable<Entreprise> {\n  return this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      if (!token) {\n        console.error('Token manquant');\n        return throwError(() => new Error('Token manquant'));\n      }\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      });\n      return this.http.get<Entreprise>(`${this.apiUrl}/entreprises/${id}`, { headers });\n    }),\n    catchError(error => {\n      let errorMsg = 'Erreur inconnue';\n      if (error.error instanceof ErrorEvent) {\n        errorMsg = `Erreur: ${error.error.message}`;\n      } else if (error.status === 404) {\n        errorMsg = 'Entreprise non trouvée';\n      }\n      return throwError(() => new Error(errorMsg));\n    })\n  );\n}\n\n\n  updateEntreprise(id: number, formData: FormData): Observable<string> {\n  return this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      if (!token) {\n        return throwError(() => new Error('Token manquant'));\n      }\n\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${token}`\n      });\n\n      return this.http.patch(`${this.apiUrl}/updateEntreprise/${id}`, formData, {\n        headers,\n        responseType: 'text' // réponse en texte brut\n      });\n    }),\n    catchError(error => {\n      let errorMsg = 'Erreur inconnue';\n      if (error.error instanceof ErrorEvent) {\n        errorMsg = `Erreur: ${error.error.message}`;\n      } else if (error.status === 400) {\n        errorMsg = error.error || 'Données invalides';\n      }\n      return throwError(() => new Error(errorMsg));\n    })\n  );\n}\n\n\n  // updateEntreprise(id: number, formData: FormData): Observable<any> {\n  //   const token = localStorage.getItem('accessToken') || '';\n  //   const headers = new HttpHeaders({\n  //     'Authorization': `Bearer ${token}`\n  //   });\n\n  //   return this.http.patch(`${this.apiUrl}/updateEntreprise/${id}`, formData, { headers }).pipe(\n  //     catchError(error => {\n  //       let errorMsg = 'Erreur inconnue';\n  //       if (error.error instanceof ErrorEvent) {\n  //         errorMsg = `Erreur: ${error.error.message}`;\n  //       } else if (error.status === 400) {\n  //         errorMsg = error.error || 'Données invalides';\n  //       }\n  //       return throwError(() => new Error(errorMsg));\n  //     })\n  //   );\n  // }\n\n  // Get entreprise d'un user\n  getEntrepriseInfo(): Observable<Entreprise> {\n  return this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      if (!token) {\n        return throwError(() => new Error('Aucun token trouvé'));\n      }\n\n      const headers = new HttpHeaders({\n        Authorization: `Bearer ${token}`\n      });\n\n      return this.http.get<Entreprise>(`${this.apiUrl}/myEntreprise`, { headers }).pipe(\n        tap(entreprise => {\n          localStorage.setItem('entreprise', JSON.stringify(entreprise));\n        })\n      );\n    }),\n    catchError(error => {\n      console.error('Erreur récupération info entreprise:', error);\n      return throwError(() => error);\n    })\n  );\n}\n\n\n  // Simpl dcodage JWT pour vérifier si le token est expiré\n  decodeJwt(token: string): any {\n    return JSON.parse(atob(token.split('.')[1]));\n  }\n  \n  // Vérifier si le token est expiré\n  isTokenExpired(decodedToken: any): boolean {\n    const expirationDate = new Date(decodedToken.exp * 1000);\n    return expirationDate < new Date();\n  }\n    \n  // Rafraîchir le token avec un refresh token (si applicable)\n  getNewTokenFromApi(): Observable<{ token: string }> {\n    const refreshToken = localStorage.getItem('refreshToken');\n    return this.http.post<{ token: string }>(`${this.apiUrl}/refresh-token`, { refreshToken });\n  }\n\n \n}","// src/app/services/facture-preview.service.ts\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { FactureProForma } from '../MODELS/FactureProForma.model';\n\n@Injectable({ providedIn: 'root' })\nexport class FacturePreviewService {\n  private previewSubject = new BehaviorSubject<FactureProForma | null>(null);\n\n  setPreview(data: FactureProForma) {\n    this.previewSubject.next(data);\n  }\n\n  getPreview(): Observable<FactureProForma | null> {\n    return this.previewSubject.asObservable();\n  }\n}\n","import { HttpClient, HttpHeaders, HttpParams } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { catchError, Observable, switchMap, tap, throwError } from \"rxjs\";\nimport { FactureProForma, StatutFactureProForma, UpdateFactureProFormaDTO } from \"../MODELS/FactureProForma.model\";\nimport { Note } from \"../MODELS/Note.model\";\nimport { environment } from \"src/environments/environment\";\nimport { UsersService } from \"./users.service\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FactureProFormaService {\n    private apiUrl = environment.apiBaseUrl;\n  \n\n  constructor(private http: HttpClient, private usersService: UsersService) { }\n\n  creerFactureProforma(\n  facture: any,\n  remisePourcentage?: number,\n  appliquerTVA?: boolean,\n  appliquerAdjustments?: boolean\n): Observable<any> {\n  return this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${token}`\n      });\n      \n      let params = new HttpParams();\n\n      if (appliquerAdjustments) {\n        if (remisePourcentage !== undefined) {\n          params = params.set('remisePourcentage', remisePourcentage.toString());\n        }\n        if (appliquerTVA !== undefined) {\n          params = params.set('appliquerTVA', appliquerTVA.toString());\n        }\n      }\n\n      return this.http.post(`${this.apiUrl}/ajouter`, facture, { headers, params });\n    }),\n    tap(response => console.log('Facture créée avec succès:', response)),\n    catchError(error => {\n      console.error('Erreur détaillée:', error);\n      console.log('Corps de la réponse:', error.error);\n      return throwError(() => error);\n    })\n  );\n}\n\n\n  //Get facture proformat\n getAlFactproformaOfEntreprise(entrepriseId: number): Observable<any[]> {\n  return this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      const headers = new HttpHeaders({\n        Authorization: `Bearer ${token}`\n      });\n      return this.http.get<any[]>(`${this.apiUrl}/mes-factures`, { headers });\n    })\n  );\n}\n\n\n  getFactureProformaById(id: number): Observable<FactureProForma> {\n  return this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${token}`\n      });\n      return this.http.get<FactureProForma>(`${this.apiUrl}/factureProforma/${id}`, { headers });\n    })\n  );\n}\n\n\n  // Dans FactureProFormaService\n updateFactureProforma(\n  factureId: number,\n  remisePourcentage: number | undefined,\n  appliquerTVA: boolean | undefined,\n  modifications: Partial<FactureProForma>,\n  idsApprobateurs?: number[]\n): Observable<FactureProForma> {\n  return this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      });\n\n      let params = new HttpParams();\n\n      if (remisePourcentage !== undefined) {\n        params = params.set('remisePourcentage', remisePourcentage.toString());\n      }\n\n      if (appliquerTVA !== undefined) {\n        params = params.set('appliquerTVA', appliquerTVA.toString());\n      }\n\n      if (idsApprobateurs && idsApprobateurs.length > 0) {\n        idsApprobateurs.forEach(id => {\n          params = params.append('idsApprobateurs', id.toString());\n        });\n      }\n\n      if (modifications.statut === StatutFactureProForma.ANNULE) {\n        params = params.set('isAnnulation', 'true');\n      }\n\n      return this.http.put<FactureProForma>(\n        `${this.apiUrl}/updatefacture/${factureId}`,\n        modifications,\n        { headers, params }\n      ).pipe(\n        tap(response => console.log('Facture mise à jour:', response)),\n        catchError(error => {\n          console.error('Erreur mise à jour:', error);\n          return throwError(() => error);\n        })\n      );\n    })\n  );\n}\n\n\n  //Envoyer Facture par mail :\n  envoyerFactureEmail(\n    factureId: number,\n    emailRequest: {\n      to: string;\n      cc: string;\n      subject: string;\n      body: string;\n      attachments?: File[];\n    }\n  ): Observable<string> {\n    const formData = new FormData();\n    formData.append('to', emailRequest.to);\n    formData.append('cc', emailRequest.cc);\n    formData.append('subject', emailRequest.subject);\n    formData.append('body', emailRequest.body);\n\n    if (emailRequest.attachments) {\n      emailRequest.attachments.forEach((file, index) => {\n        formData.append(`attachments`, file, file.name);\n      });\n    }\n\n      return this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${token}`\n      });\n      return this.http.post(\n        `${this.apiUrl}/factures/${factureId}/envoyer-email`,\n        formData,\n        { headers, responseType: 'text' }\n      );\n    })\n  );\n\n \n  }\n\n\n  //Get History Facture\ngetHistoriqueFacture(factureId: number): Observable<any> {\n  return this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${token}`\n      });\n\n      return this.http.get<any>(`${this.apiUrl}/factpro/${factureId}/historique`, { headers });\n    }),\n    catchError(err => {\n      console.error('Erreur récupération historique facture:', err);\n      return throwError(() => err);\n    })\n  );\n}\n\n\n// getHistoriqueActions(factureId: number): Observable<any> {\n//   return this.http.get(`${this.apiUrl}/factpro/${factureId}/historique`);\n// }\n\n//Endpoint pour recuperer les notes d'une facture proforma\ngetNotesFactureProforma(id: number): Observable<any[]> {\n  return this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${token}`\n      });\n      return this.http.get<any[]>(`${this.apiUrl}/factures/${id}/notes`, { headers });\n    }),\n    catchError(err => {\n      console.error('Erreur récupération historique facture:', err);\n      return throwError(() => err);\n    })\n  );\n}\n\n\n  //Note by Id\ngetNoteById(factureId: number, noteId: number): Observable<Note> {\n  return this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${token}`,\n        'Accept': 'application/json'\n      });\n\n      return this.http.get<Note>(\n        `${this.apiUrl}/auth/${factureId}/notes/${noteId}`, \n        { headers }\n      );\n    }),\n    catchError(err => {\n      console.error('Erreur lors de la récupération de la note:', err);\n      return throwError(() => err);\n    })\n  );\n}\n\n\n\n\n  //Endpoint pour modifier les notes\nupdateNote(factureId: number, noteId: number, nouveauContenu: string): Observable<any> {\n  return this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      });\n      const url = `${this.apiUrl}/${factureId}/notes/${noteId}`;\n      const body = { nouveauContenu };\n      return this.http.put<any>(url, body, { headers });\n    }),\n    tap(response => console.log('Note modifiée avec succès:', response)),\n    catchError(error => {\n      console.error('Erreur lors de la modification de la note:', error);\n      return throwError(() => error);\n    })\n  );\n}\n\n\ndeletNoteFactureProforma(factureId: number, noteId: number): Observable<any> {\n  return this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${token}`,\n        'Accept': 'application/json'\n      });\n      return this.http.delete<any>(\n        `${this.apiUrl}/${factureId}/notes/${noteId}/supprimer`,\n        { headers }\n      );\n    }),\n    catchError(error => {\n      console.error('Erreur lors de la suppression de la note:', error);\n      return throwError(() => error);\n    })\n  );\n}\n\n\n getFacturesByClient(clientId?: number, entrepriseClientId?: number): Observable<any[]> {\n  return this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      let params = new HttpParams();\n\n      if (clientId !== undefined) {\n        params = params.set('clientId', clientId.toString());\n      }\n      if (entrepriseClientId !== undefined) {\n        params = params.set('entrepriseClientId', entrepriseClientId.toString());\n      }\n\n      const headers = new HttpHeaders({\n        Authorization: `Bearer ${token}`\n      });\n\n      return this.http.get<any[]>(`${this.apiUrl}/factures/client`, { headers, params });\n    }),\n    catchError(error => {\n      console.error('Erreur dans getFacturesByClient:', error);\n      return throwError(() => error);\n    })\n  );\n}\n\n\n//Trier\n\ngetFacturesParPeriode(\n  type: 'jour' | 'mois' | 'annee' | 'personnalise',\n  dateDebut?: string, // format ISO: '2025-07-01'\n  dateFin?: string\n): Observable<any[]> {\n  return this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      const headers = new HttpHeaders({\n        Authorization: `Bearer ${token}`\n      });\n\n      let params = new HttpParams().set('type', type);\n\n      if (type === 'personnalise') {\n        if (!dateDebut || !dateFin) {\n          throw new Error(\"Pour 'personnalise', les dates dateDebut et dateFin sont obligatoires.\");\n        }\n        params = params.set('dateDebut', dateDebut).set('dateFin', dateFin);\n      }\n\n      return this.http.get<any[]>(`${this.apiUrl}/mes-factures/par-periode`, { headers, params });\n    })\n  );\n}\n\n\n deletFactureProforma(factureId: number): Observable<any> {\n  return this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${token}`,\n        'Accept': 'application/json'\n      });\n      return this.http.delete<any>(\n        `${this.apiUrl}/deletefactureproforma/${factureId}`,\n        { headers }\n      );\n    }),\n    catchError(error => {\n      console.error('Erreur lors de la suppression de la note:', error);\n      return throwError(() => error);\n    })\n  );\n}\n}\n\n\n\n","// form-state.service.ts\nimport { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class FormStateService {\n  private formState: any;\n\n  saveState(state: any) {\n    this.formState = { ...state }; // Clonage profond si nécessaire\n  }\n\n  getState() {\n    return this.formState;\n  }\n\n  clearState() {\n    this.formState = null;\n  }\n}"],"names":["StatutFactureProForma","HttpHeaders","BehaviorSubject","catchError","switchMap","tap","throwError","environment","EntrepriseService","constructor","http","usersService","apiUrl","apiBaseUrl","entrepriseSubject","entreprise$","asObservable","getListEntreprises","getValidAccessToken","pipe","token","headers","get","error","errorMsg","ErrorEvent","message","status","Error","addEntreprise","entreprise","post","newEntreprise","currentEntreprise","value","next","getListEntreprise","console","set","log","data","getEntrepriseById","id","updateEntreprise","formData","patch","responseType","getEntrepriseInfo","Authorization","localStorage","setItem","JSON","stringify","decodeJwt","parse","atob","split","isTokenExpired","decodedToken","expirationDate","Date","exp","getNewTokenFromApi","refreshToken","getItem","i0","ɵɵinject","i1","HttpClient","i2","UsersService","factory","ɵfac","providedIn","FacturePreviewService","previewSubject","setPreview","getPreview","HttpParams","FactureProFormaService","creerFactureProforma","facture","remisePourcentage","appliquerTVA","appliquerAdjustments","params","undefined","toString","response","getAlFactproformaOfEntreprise","entrepriseId","getFactureProformaById","updateFactureProforma","factureId","modifications","idsApprobateurs","length","forEach","append","statut","ANNULE","put","envoyerFactureEmail","emailRequest","FormData","to","cc","subject","body","attachments","file","index","name","getHistoriqueFacture","err","getNotesFactureProforma","getNoteById","noteId","updateNote","nouveauContenu","url","deletNoteFactureProforma","delete","getFacturesByClient","clientId","entrepriseClientId","getFacturesParPeriode","type","dateDebut","dateFin","deletFactureProforma","FormStateService","saveState","state","formState","getState","clearState"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}
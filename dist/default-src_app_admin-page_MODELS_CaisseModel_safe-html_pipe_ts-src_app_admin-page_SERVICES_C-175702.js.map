{"version":3,"file":"default-src_app_admin-page_MODELS_CaisseModel_safe-html_pipe_ts-src_app_admin-page_SERVICES_C-175702.js","mappings":";;;;;;;;;;;;;;;;;AAIM,MAAOA,YAAY;EACvBC,YAAoBC,SAAuB;IAAvB,KAAAA,SAAS,GAATA,SAAS;EAAiB;EAE9CC,SAASA,CAACC,KAAa;IACrB,OAAO,IAAI,CAACF,SAAS,CAACG,uBAAuB,CAACD,KAAK,CAAC;EACtD;;;uCALWJ,YAAY,EAAAM,+DAAA,CAAAE,mEAAA;IAAA;EAAA;;;;YAAZR,YAAY;MAAAU,IAAA;IAAA;EAAA;;;;;;;;;;;;;;;;;ACHc;;AAGjC,MAAOE,oBAAoB;EAO/BX,YAAA;IANiB,KAAAY,WAAW,GAAG,oBAAoB;IAEnD;IACQ,KAAAC,uBAAuB,GAAG,IAAIH,iDAAe,CAAgB,IAAI,CAACI,WAAW,EAAE,CAAC;IACxF,KAAAC,iBAAiB,GAAG,IAAI,CAACF,uBAAuB,CAACG,YAAY,EAAE;IAG7D;EACF;EAEA;;EAEQF,WAAWA,CAAA;IACjB;IACA,MAAMG,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,IAAI,CAACP,WAAW,CAAC;IACrD,IAAIK,MAAM,KAAK,IAAI,EAAE;MACnB,IAAI;QACF;QACAG,cAAc,CAACC,OAAO,CAAC,IAAI,CAACT,WAAW,EAAEK,MAAM,CAAC;MAClD,CAAC,CAAC,OAAOK,CAAC,EAAE;QACVC,OAAO,CAACC,IAAI,CAAC,sDAAsD,EAAEF,CAAC,CAAC;MACzE;MACAJ,YAAY,CAACO,UAAU,CAAC,IAAI,CAACb,WAAW,CAAC;IAC3C;IAEA,MAAMc,KAAK,GAAGN,cAAc,CAACD,OAAO,CAAC,IAAI,CAACP,WAAW,CAAC;IACtD,OAAOc,KAAK,KAAK,IAAI,GAAGC,MAAM,CAACD,KAAK,CAAC,GAAG,IAAI;EAC9C;EAEAE,mBAAmBA,CAACC,UAAyB;IAC3C,IAAIA,UAAU,KAAK,IAAI,EAAE;MACvBT,cAAc,CAACC,OAAO,CAAC,IAAI,CAACT,WAAW,EAAEiB,UAAU,CAACC,QAAQ,EAAE,CAAC;IACjE,CAAC,MAAM;MACLV,cAAc,CAACK,UAAU,CAAC,IAAI,CAACb,WAAW,CAAC;IAC7C;IACA,IAAI,CAACC,uBAAuB,CAACkB,IAAI,CAACF,UAAU,CAAC;EAC/C;EAEA;EACAG,eAAeA,CAAA;IACb,MAAMN,KAAK,GAAGN,cAAc,CAACD,OAAO,CAAC,IAAI,CAACP,WAAW,CAAC;IACtD,OAAOc,KAAK,KAAK,IAAI,GAAGC,MAAM,CAACD,KAAK,CAAC,GAAG,IAAI;EAC9C;;;uCA3CWf,oBAAoB;IAAA;EAAA;;;aAApBA,oBAAoB;MAAAsB,OAAA,EAApBtB,oBAAoB,CAAAuB,IAAA;MAAAC,UAAA,EADP;IAAM;EAAA;;;;;;;;;;;;;;;;;ACFO;;AAIjC,MAAOC,kBAAkB;EAD/BpC,YAAA;IAEU,KAAAqC,mBAAmB,GAAG,IAAI3B,iDAAe,CAAwB,IAAI,CAAC;IACtE,KAAA4B,oBAAoB,GAAG,IAAI5B,iDAAe,CAAU,KAAK,CAAC;IAC1D,KAAA6B,oBAAoB,GAAG,IAAI7B,iDAAe,CAAU,IAAI,CAAC;IAEjE,KAAA8B,cAAc,GAAG,IAAI,CAACH,mBAAmB,CAACrB,YAAY,EAAE;IACxD,KAAAyB,eAAe,GAAG,IAAI,CAACH,oBAAoB,CAACtB,YAAY,EAAE;IAC1D,KAAA0B,eAAe,GAAG,IAAI,CAACH,oBAAoB,CAACvB,YAAY,EAAE;;EAE1D2B,mBAAmBA,CAACC,MAAsB;IAAI,IAAI,CAACP,mBAAmB,CAACN,IAAI,CAACa,MAAM,CAAC;EAAE;EACrFC,cAAcA,CAAA;IAAK,IAAI,CAACP,oBAAoB,CAACP,IAAI,CAAC,IAAI,CAAC;EAAE;EAEzD;EACAe,cAAcA,CAAC3C,KAAc;IAC3B,IAAI,CAACoC,oBAAoB,CAACR,IAAI,CAAC,CAAC,CAAC5B,KAAK,CAAC;IACvCoB,OAAO,CAACwB,GAAG,CAAC,wCAAwC,EAAE,CAAC,CAAC5C,KAAK,CAAC;EAChE;EAEA;EACA6C,oBAAoBA,CAAA;IAClB,MAAMjB,IAAI,GAAG,CAAC,IAAI,CAACQ,oBAAoB,CAACU,QAAQ,EAAE;IAClD,IAAI,CAACV,oBAAoB,CAACR,IAAI,CAACA,IAAI,CAAC;IACpCR,OAAO,CAACwB,GAAG,CAAC,gCAAgC,EAAEhB,IAAI,CAAC;EACrD;EAEA;EACAmB,sBAAsBA,CAAA;IACpB,OAAO,IAAI,CAACX,oBAAoB,CAACU,QAAQ,EAAE;EAC7C;;;uCA5BWb,kBAAkB;IAAA;EAAA;;;aAAlBA,kBAAkB;MAAAH,OAAA,EAAlBG,kBAAkB,CAAAF,IAAA;MAAAC,UAAA,EADL;IAAM;EAAA;;;;;;;;;;;;;;;;;ACFO;;AASjC,MAAOgB,iBAAiB;EAD9BnD,YAAA;IAEU,KAAAoD,eAAe,GAAG,IAAI1C,iDAAe,CAAkB;MAC7D2C,WAAW,EAAE,CAAC;MACdC,YAAY,EAAE,EAAE;MAChBC,UAAU,EAAE;KACb,CAAC;IAEF,KAAAC,MAAM,GAAG,IAAI,CAACJ,eAAe,CAACpC,YAAY,EAAE;;EAE5CyC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACL,eAAe,CAACjD,KAAK;EACnC;EAEAuD,WAAWA,CAACC,QAAkC;IAC5C,MAAMC,OAAO,GAAG,IAAI,CAACR,eAAe,CAACjD,KAAK;IAC1C,IAAI,CAACiD,eAAe,CAACrB,IAAI,CAAC;MAAE,GAAG6B,OAAO;MAAE,GAAGD;IAAQ,CAAE,CAAC;EACxD;EAEAE,OAAOA,CAACC,IAAY;IAClB,MAAMC,IAAI,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,KAAK,CAACJ,IAAI,CAAC,CAAC;IAC1C,IAAI,CAACJ,WAAW,CAAC;MAAEL,WAAW,EAAEU;IAAI,CAAE,CAAC;EACzC;EAEAI,eAAeA,CAACC,IAAY;IAC1B,MAAML,IAAI,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,KAAK,CAACE,IAAI,CAAC,CAAC;IAC1C,IAAI,CAACV,WAAW,CAAC;MAAEJ,YAAY,EAAES,IAAI;MAAEV,WAAW,EAAE;IAAC,CAAE,CAAC;EAC1D;EAEAgB,aAAaA,CAACC,KAAa;IACzB,MAAMP,IAAI,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,KAAK,CAACI,KAAK,CAAC,CAAC;IAC3C,IAAI,CAACZ,WAAW,CAAC;MAAEH,UAAU,EAAEQ;IAAI,CAAE,CAAC;EACxC;EAEAQ,KAAKA,CAAA;IACH,IAAI,CAACnB,eAAe,CAACrB,IAAI,CAAC;MAAEsB,WAAW,EAAE,CAAC;MAAEC,YAAY,EAAE,EAAE;MAAEC,UAAU,EAAE;IAAC,CAAE,CAAC;EAChF;;;uCAnCWJ,iBAAiB;IAAA;EAAA;;;aAAjBA,iBAAiB;MAAAlB,OAAA,EAAjBkB,iBAAiB,CAAAjB,IAAA;MAAAC,UAAA,EADJ;IAAM;EAAA;;;;;;;;;;;;;;;;;;;;;;;ACT+B;AACJ;AACT;AACU;;;;AAOtD,MAAO2C,gBAAgB;EAG3B9E,YACU+E,IAAgB,EAChBC,YAA0B;IAD1B,KAAAD,IAAI,GAAJA,IAAI;IACJ,KAAAC,YAAY,GAAZA,YAAY;IAJd,KAAAC,MAAM,GAAGR,qEAAW,CAACS,UAAU;EAKnC;EAEJC,YAAYA,CAACC,OAA4B;IACvC,OAAO,IAAI,CAACJ,YAAY,CAACK,mBAAmB,EAAE,CAACC,IAAI,CACjDX,yDAAS,CAACY,KAAK,IAAG;MAChB,IAAI,CAACA,KAAK,EAAE;QACV,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;MACvC;MAEA,MAAMC,OAAO,GAAG,IAAIjB,6DAAW,CAAC;QAC9B,eAAe,EAAE,UAAUe,KAAK;OACjC,CAAC;MAEF,OAAO,IAAI,CAACR,IAAI,CAACW,IAAI,CACnB,GAAG,IAAI,CAACT,MAAM,SAAS,EACvBG,OAAO,EACP;QAAEK;MAAO,CAAE,CACZ;IACH,CAAC,CAAC,EACAb,0DAAU,CAACe,KAAK,IAAG;MACfpE,OAAO,CAACoE,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MAExC;MACA,IAAIC,QAAQ,GAAG,0CAA0C;MAEzD,IAAID,KAAK,CAACA,KAAK,IAAIA,KAAK,CAACA,KAAK,CAACA,KAAK,EAAE;QAClCC,QAAQ,GAAGD,KAAK,CAACA,KAAK,CAACA,KAAK;MAChC,CAAC,MAAM,IAAIA,KAAK,CAACA,KAAK,IAAIA,KAAK,CAACA,KAAK,CAACE,OAAO,EAAE;QAC3CD,QAAQ,GAAGD,KAAK,CAACA,KAAK,CAACE,OAAO;MAClC,CAAC,MAAM,IAAIF,KAAK,CAACE,OAAO,EAAE;QACtBD,QAAQ,GAAGD,KAAK,CAACE,OAAO;MAC5B;MAEA,OAAOnB,gDAAU,CAAC,OAAO;QACrBmB,OAAO,EAAED,QAAQ;QACjBE,aAAa,EAAEH;OAClB,CAAC,CAAC;IACP,CAAC,CAAC,CACL;EACH;EAEFI,YAAYA,CAAClE,UAAkB;IAC7BN,OAAO,CAACwB,GAAG,CAAC,uCAAuC,CAAC,CAAC,CAAC;IAEtD,OAAO,IAAI,CAACiC,YAAY,CAACK,mBAAmB,EAAE,CAACC,IAAI;IAAE;IACnDX,yDAAS,CAACY,KAAK,IAAG;MAChB,IAAI,CAACA,KAAK,EAAE;QACVhE,OAAO,CAACoE,KAAK,CAAC,oBAAoB,CAAC;QACnC,MAAM,IAAIH,KAAK,CAAC,oBAAoB,CAAC;MACvC;MAEAjE,OAAO,CAACwB,GAAG,CAAC,kBAAkB,EAAEwC,KAAK,CAAC,CAAC,CAAC;MAExC,MAAME,OAAO,GAAG,IAAIjB,6DAAW,CAAC;QAC9B,eAAe,EAAE,UAAUe,KAAK,EAAE,CAAC;OACpC,CAAC;MAEF;MACA,MAAMS,IAAI,GAAG;QACXnE,UAAU,EAAEA;OACb;MAEDN,OAAO,CAACwB,GAAG,CAAC,mDAAmD,CAAC,CAAC,CAAC;MAElE,OAAO,IAAI,CAACgC,IAAI,CAACW,IAAI,CAAM,GAAG,IAAI,CAACT,MAAM,SAAS,EAAEe,IAAI,EAAE;QAAEP;MAAO,CAAE,CAAC,CAACH,IAAI,CACzEV,0DAAU,CAACe,KAAK,IAAG;QACjBpE,OAAO,CAACoE,KAAK,CAAC,kDAAkD,EAAEA,KAAK,CAAC;QACxE,OAAOjB,gDAAU,CAAC,MAAMiB,KAAK,CAAC;MAChC,CAAC,CAAC,CACH;IACH,CAAC,CAAC,EACFf,0DAAU,CAACe,KAAK,IAAG;MACjBpE,OAAO,CAACoE,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAEzD;MACA,IAAIC,QAAQ,GAAG,0CAA0C;MACzD,IAAID,KAAK,CAACA,KAAK,IAAIA,KAAK,CAACA,KAAK,CAACA,KAAK,EAAE;QACpCC,QAAQ,GAAGD,KAAK,CAACA,KAAK,CAACA,KAAK;MAC9B,CAAC,MAAM,IAAIA,KAAK,CAACA,KAAK,IAAIA,KAAK,CAACA,KAAK,CAACE,OAAO,EAAE;QAC7CD,QAAQ,GAAGD,KAAK,CAACA,KAAK,CAACE,OAAO;MAChC,CAAC,MAAM,IAAIF,KAAK,CAACE,OAAO,EAAE;QACxBD,QAAQ,GAAGD,KAAK,CAACE,OAAO;MAC1B;MAEA,OAAOnB,gDAAU,CAAC,OAAO;QACvBmB,OAAO,EAAED,QAAQ;QACjBE,aAAa,EAAEH;OAChB,CAAC,CAAC;IACL,CAAC,CAAC,CACH;EACH;EAEEM,wBAAwBA,CAACpE,UAAkB;IACzC,OAAO,IAAI,CAACmD,YAAY,CAACK,mBAAmB,EAAE,CAACC,IAAI,CACjDX,yDAAS,CAACY,KAAK,IAAG;MAChB,IAAI,CAACA,KAAK,EAAE,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;MAEjD,MAAMC,OAAO,GAAG,IAAIjB,6DAAW,CAAC;QAAE,eAAe,EAAE,UAAUe,KAAK;MAAE,CAAE,CAAC;MAEvE;MACA,OAAO,IAAI,CAACR,IAAI,CAACmB,GAAG,CAAiB,GAAG,IAAI,CAACjB,MAAM,oBAAoBpD,UAAU,EAAE,EAAE;QAAE4D;MAAO,CAAE,CAAC,CAACH,IAAI,CACpGT,mDAAG,CAACsB,IAAI,IAAIA,IAAI,CAAC,EACjBvB,0DAAU,CAACwB,GAAG,IAAG;QACf7E,OAAO,CAACoE,KAAK,CAAC,wCAAwC,EAAES,GAAG,CAAC;QAE5D,IAAIC,GAAG,GAAG,iBAAiB;QAC3B,IAAID,GAAG,EAAET,KAAK,EAAE;UACd,IAAI,OAAOS,GAAG,CAACT,KAAK,KAAK,QAAQ,EAAE;YACjCU,GAAG,GAAGD,GAAG,CAACT,KAAK,CAAC,CAAqB;UACvC,CAAC,MAAM,IAAIS,GAAG,CAACT,KAAK,EAAEE,OAAO,EAAE;YAC7BQ,GAAG,GAAGD,GAAG,CAACT,KAAK,CAACE,OAAO,CAAC,CAAa;UACvC,CAAC,MAAM;YACL,IAAI;cAAEQ,GAAG,GAAGC,IAAI,CAACC,SAAS,CAACH,GAAG,CAACT,KAAK,CAAC;YAAE,CAAC,CAAC,MAAM;cAAEU,GAAG,GAAGG,MAAM,CAACJ,GAAG,CAACT,KAAK,CAAC;YAAE;UAC5E;QACF,CAAC,MAAM,IAAIS,GAAG,EAAEP,OAAO,EAAE;UACvBQ,GAAG,GAAGD,GAAG,CAACP,OAAO;QACnB,CAAC,MAAM;UACL,IAAI;YAAEQ,GAAG,GAAGC,IAAI,CAACC,SAAS,CAACH,GAAG,CAAC;UAAE,CAAC,CAAC,MAAM;YAAEC,GAAG,GAAGG,MAAM,CAACJ,GAAG,CAAC;UAAE;QAChE;QAEA;QACA,OAAO1B,gDAAU,CAAC,MAAM2B,GAAG,CAAC;MAC9B,CAAC,CAAC,CACH;IAEH,CAAC,CAAC,CACH;EACH;EAEAI,oBAAoBA,CAAC5E,UAAkB;IACrC,OAAO,IAAI,CAACmD,YAAY,CAACK,mBAAmB,EAAE,CAACC,IAAI,CACjDX,yDAAS,CAACY,KAAK,IAAG;MAChB,IAAI,CAACA,KAAK,EAAE,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;MAEjD,MAAMC,OAAO,GAAG,IAAIjB,6DAAW,CAAC;QAC9B,eAAe,EAAE,UAAUe,KAAK;OACjC,CAAC;MAEF,OAAO,IAAI,CAACR,IAAI,CAACmB,GAAG,CAClB,GAAG,IAAI,CAACjB,MAAM,aAAapD,UAAU,UAAU,EAC/C;QAAE4D;MAAO,CAAE,CACZ;IACH,CAAC,CAAC,EACFb,0DAAU,CAACe,KAAK,IAAG;MACjB;MACA,IAAIC,QAAQ,GAAG,uCAAuC;MACtD,IAAID,KAAK,EAAEA,KAAK,EAAEA,KAAK,EAAEC,QAAQ,GAAGD,KAAK,CAACA,KAAK,CAACA,KAAK,CAAC,KACjD,IAAIA,KAAK,EAAEA,KAAK,EAAEE,OAAO,EAAED,QAAQ,GAAGD,KAAK,CAACA,KAAK,CAACE,OAAO,CAAC,KAC1D,IAAIF,KAAK,CAACE,OAAO,EAAED,QAAQ,GAAGD,KAAK,CAACE,OAAO;MAEhD,OAAOnB,gDAAU,CAAC,OAAO;QACvBmB,OAAO,EAAED,QAAQ;QACjBE,aAAa,EAAEH;OAChB,CAAC,CAAC;IACL,CAAC,CAAC,CACH;EACH;EAEAe,6BAA6BA,CAACC,SAAiB;IAC7C,OAAO,IAAI,CAAC3B,YAAY,CAACK,mBAAmB,EAAE,CAACC,IAAI,CACjDX,yDAAS,CAACY,KAAK,IAAG;MAChB,IAAI,CAACA,KAAK,EAAE,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;MAEjD,MAAMC,OAAO,GAAG,IAAIjB,6DAAW,CAAC;QAC9B,eAAe,EAAE,UAAUe,KAAK;OACjC,CAAC;MAEF,OAAO,IAAI,CAACR,IAAI,CAACmB,GAAG,CAClB,GAAG,IAAI,CAACjB,MAAM,YAAY0B,SAAS,EAAE,EACrC;QAAElB;MAAO,CAAE,CACZ;IACH,CAAC,CAAC,EACFb,0DAAU,CAACe,KAAK,IAAG;MACjB,IAAIC,QAAQ,GAAG,wDAAwD;MACvE,IAAID,KAAK,EAAEA,KAAK,EAAEA,KAAK,EAAEC,QAAQ,GAAGD,KAAK,CAACA,KAAK,CAACA,KAAK,CAAC,KACjD,IAAIA,KAAK,EAAEA,KAAK,EAAEE,OAAO,EAAED,QAAQ,GAAGD,KAAK,CAACA,KAAK,CAACE,OAAO,CAAC,KAC1D,IAAIF,KAAK,CAACE,OAAO,EAAED,QAAQ,GAAGD,KAAK,CAACE,OAAO;MAEhD,OAAOnB,gDAAU,CAAC,OAAO;QACvBmB,OAAO,EAAED,QAAQ;QACjBE,aAAa,EAAEH;OAChB,CAAC,CAAC;IACL,CAAC,CAAC,CACH;EACH;;;uCA9LWb,gBAAgB,EAAAzE,sDAAA,CAAAE,4DAAA,GAAAF,sDAAA,CAAAyG,wDAAA;IAAA;EAAA;;;aAAhBhC,gBAAgB;MAAA7C,OAAA,EAAhB6C,gBAAgB,CAAA5C,IAAA;MAAAC,UAAA,EAFf;IAAM;EAAA","sources":["./src/app/admin-page/MODELS/CaisseModel/safe-html.pipe.ts","./src/app/admin-page/SERVICES/CaisseService/boutique-state.service.ts","./src/app/admin-page/SERVICES/CaisseService/caisse-state.service.ts","./src/app/admin-page/SERVICES/CaisseService/pagination.service.ts","./src/app/admin-page/SERVICES/CaisseService/pos-caisse-service.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n@Pipe({ name: 'safeHtml' })\nexport class SafeHtmlPipe implements PipeTransform {\n  constructor(private sanitizer: DomSanitizer) {}\n\n  transform(value: string): SafeHtml {\n    return this.sanitizer.bypassSecurityTrustHtml(value);\n  }\n}","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class BoutiqueStateService {\n  private readonly STORAGE_KEY = 'selectedBoutiqueId';\n\n  // initialisation avec la valeur sessionStorage (ou migration depuis localStorage)\n  private selectedBoutiqueSubject = new BehaviorSubject<number | null>(this.loadInitial());\n  selectedBoutique$ = this.selectedBoutiqueSubject.asObservable();\n\n  constructor() {\n    // rien d'autre à faire ici (loadInitial a déjà effectué la migration si nécessaire)\n  }\n\n  /** Charge la valeur initiale depuis sessionStorage.\n   *  Si une valeur existe dans localStorage (ancienne app), on la migre vers sessionStorage. */\n  private loadInitial(): number | null {\n    // migration depuis localStorage (si nécessaire)\n    const legacy = localStorage.getItem(this.STORAGE_KEY);\n    if (legacy !== null) {\n      try {\n        // transférer dans sessionStorage puis supprimer l'ancien\n        sessionStorage.setItem(this.STORAGE_KEY, legacy);\n      } catch (e) {\n        console.warn('Impossible de migrer la boutique depuis localStorage', e);\n      }\n      localStorage.removeItem(this.STORAGE_KEY);\n    }\n\n    const saved = sessionStorage.getItem(this.STORAGE_KEY);\n    return saved !== null ? Number(saved) : null;\n  }\n\n  setSelectedBoutique(boutiqueId: number | null): void {\n    if (boutiqueId !== null) {\n      sessionStorage.setItem(this.STORAGE_KEY, boutiqueId.toString());\n    } else {\n      sessionStorage.removeItem(this.STORAGE_KEY);\n    }\n    this.selectedBoutiqueSubject.next(boutiqueId);\n  }\n\n  /** retourne la valeur actuelle (ou null si aucune) */\n  getCurrentValue(): number | null {\n    const saved = sessionStorage.getItem(this.STORAGE_KEY);\n    return saved !== null ? Number(saved) : null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { CaisseResponse } from '../../MODELS/CaisseModel/caisse.model';\n\n@Injectable({ providedIn: 'root' })\nexport class CaisseStateService {\n  private caisseCreatedSource = new BehaviorSubject<CaisseResponse | null>(null);\n  private refreshCaissesSource = new BehaviorSubject<boolean>(false);\n  private showAllCaissesSource = new BehaviorSubject<boolean>(true);\n\n  caisseCreated$ = this.caisseCreatedSource.asObservable();\n  refreshCaisses$ = this.refreshCaissesSource.asObservable();\n  showAllCaisses$ = this.showAllCaissesSource.asObservable();\n\n  notifyCaisseCreated(caisse: CaisseResponse) { this.caisseCreatedSource.next(caisse); }\n  triggerRefresh() { this.refreshCaissesSource.next(true); }\n\n  // contrôle direct\n  showAllCaisses(value: boolean) {\n    this.showAllCaissesSource.next(!!value);\n    console.log('[CaisseStateService] showAllCaisses ->', !!value);\n  }\n\n  // toggle\n  toggleShowAllCaisses() {\n    const next = !this.showAllCaissesSource.getValue();\n    this.showAllCaissesSource.next(next);\n    console.log('[CaisseStateService] toggle ->', next);\n  }\n\n  // debug helper (optionnel)\n  getShowAllCaissesValue() {\n    return this.showAllCaissesSource.getValue();\n  }\n}\n","// pagination.service.ts\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface PaginationState {\n  currentPage: number;\n  itemsPerPage: number;\n  totalItems: number;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class PaginationService {\n  private paginationState = new BehaviorSubject<PaginationState>({\n    currentPage: 1,\n    itemsPerPage: 10,\n    totalItems: 0\n  });\n\n  state$ = this.paginationState.asObservable();\n\n  getState(): PaginationState {\n    return this.paginationState.value;\n  }\n\n  updateState(newState: Partial<PaginationState>) {\n    const current = this.paginationState.value;\n    this.paginationState.next({ ...current, ...newState });\n  }\n\n  setPage(page: number) {\n    const safe = Math.max(1, Math.floor(page));\n    this.updateState({ currentPage: safe });\n  }\n\n  setItemsPerPage(size: number) {\n    const safe = Math.max(1, Math.floor(size));\n    this.updateState({ itemsPerPage: safe, currentPage: 1 });\n  }\n\n  setTotalItems(total: number) {\n    const safe = Math.max(0, Math.floor(total));\n    this.updateState({ totalItems: safe });\n  }\n\n  reset() {\n    this.paginationState.next({ currentPage: 1, itemsPerPage: 10, totalItems: 0 });\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { environment } from \"src/environments/environment\";\nimport { Observable, of, throwError } from \"rxjs\";\nimport { switchMap, catchError, map } from \"rxjs/operators\";\nimport { OuvrirCaisseRequest, CaisseResponse, FermerCaisseRequest } from \"../../MODELS/CaisseModel/caisse.model\";\nimport { UsersService } from \"../users.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PosCaisseService {\n  private apiUrl = environment.apiBaseUrl;\n  \n  constructor(\n    private http: HttpClient,\n    private usersService: UsersService\n  ) { }\n\n  ouvrirCaisse(request: OuvrirCaisseRequest): Observable<CaisseResponse> {\n    return this.usersService.getValidAccessToken().pipe(\n      switchMap(token => {\n        if (!token) {\n          throw new Error('Aucun token trouvé');\n        }\n\n        const headers = new HttpHeaders({\n          'Authorization': `Bearer ${token}`\n        });\n\n        return this.http.post<CaisseResponse>(\n          `${this.apiUrl}/ouvrir`, \n          request, \n          { headers }\n        );\n      }),\n        catchError(error => {\n            console.error('Erreur détaillée', error);\n            \n            // Essayez d'extraire le message d'erreur spécifique\n            let errorMsg = 'Erreur lors de l\\'ouverture de la caisse';\n            \n            if (error.error && error.error.error) {\n                errorMsg = error.error.error;\n            } else if (error.error && error.error.message) {\n                errorMsg = error.error.message;\n            } else if (error.message) {\n                errorMsg = error.message;\n            }\n            \n            return throwError(() => ({ \n                message: errorMsg,\n                originalError: error \n            }));\n        })\n    );\n  }\n\nfermerCaisse(boutiqueId: number): Observable<any> {\n  console.log('Tentative de récupération du token...'); // Log avant de récupérer le token\n\n  return this.usersService.getValidAccessToken().pipe( // On récupère le token valide de l'utilisateur\n    switchMap(token => {\n      if (!token) {\n        console.error('Aucun token trouvé');\n        throw new Error('Aucun token trouvé');\n      }\n\n      console.log('Token récupéré :', token); // Log du token récupéré\n\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${token}` // Envoi du token d'authentification\n      });\n\n      // Préparation du corps de la requête avec boutiqueId\n      const body = {\n        boutiqueId: boutiqueId\n      };\n\n      console.log('Envoi de la requête POST pour fermer la caisse...'); // Log avant de faire la requête\n\n      return this.http.post<any>(`${this.apiUrl}/fermer`, body, { headers }).pipe(\n        catchError(error => {\n          console.error('Erreur lors de la requête pour fermer la caisse:', error);\n          return throwError(() => error);\n        })\n      );\n    }),\n    catchError(error => {\n      console.error('Erreur détaillée dans le service:', error);\n\n      // Gestion des erreurs\n      let errorMsg = 'Erreur lors de la fermeture de la caisse';\n      if (error.error && error.error.error) {\n        errorMsg = error.error.error;\n      } else if (error.error && error.error.message) {\n        errorMsg = error.error.message;\n      } else if (error.message) {\n        errorMsg = error.message;\n      }\n\n      return throwError(() => ({\n        message: errorMsg,\n        originalError: error\n      }));\n    })\n  );\n}\n\n  getDerniereCaisseVendeur(boutiqueId: number): Observable<CaisseResponse> {\n    return this.usersService.getValidAccessToken().pipe(\n      switchMap(token => {\n        if (!token) throw new Error('Aucun token trouvé');\n\n        const headers = new HttpHeaders({ 'Authorization': `Bearer ${token}` });\n\n        // pos-caisse-service.ts (extrait)\n        return this.http.get<CaisseResponse>(`${this.apiUrl}/caisse/derniere/${boutiqueId}`, { headers }).pipe(\n          map(resp => resp),\n          catchError(err => {\n            console.error('HTTP getDerniereCaisseVendeur error ->', err);\n\n            let msg = 'Erreur inconnue';\n            if (err?.error) {\n              if (typeof err.error === 'string') {\n                msg = err.error;                     // serveur renvoie directement un texte\n              } else if (err.error?.message) {\n                msg = err.error.message;             // structure { message: \"...\" }\n              } else {\n                try { msg = JSON.stringify(err.error); } catch { msg = String(err.error); }\n              }\n            } else if (err?.message) {\n              msg = err.message;\n            } else {\n              try { msg = JSON.stringify(err); } catch { msg = String(err); }\n            }\n\n            // Propager une string (évite new Error(obj) qui devient \"[object Object]\")\n            return throwError(() => msg);\n          })\n        );\n\n      })\n    );\n  }\n\n  getCaissesByBoutique(boutiqueId: number): Observable<CaisseResponse[]> {\n    return this.usersService.getValidAccessToken().pipe(\n      switchMap(token => {\n        if (!token) throw new Error('Aucun token trouvé');\n\n        const headers = new HttpHeaders({\n          'Authorization': `Bearer ${token}`\n        });\n\n        return this.http.get<CaisseResponse[]>(\n          `${this.apiUrl}/boutique/${boutiqueId}/caisses`, \n          { headers }\n        );\n      }),\n      catchError(error => {\n        // Gestion d'erreur détaillée\n        let errorMsg = 'Erreur lors du chargement des caisses';\n        if (error?.error?.error) errorMsg = error.error.error;\n        else if (error?.error?.message) errorMsg = error.error.message;\n        else if (error.message) errorMsg = error.message;\n        \n        return throwError(() => ({ \n          message: errorMsg,\n          originalError: error \n        }));\n      })\n    );\n  }\n\n  getHistoriqueCaissesByVendeur(vendeurId: number): Observable<CaisseResponse[]> {\n    return this.usersService.getValidAccessToken().pipe(\n      switchMap(token => {\n        if (!token) throw new Error('Aucun token trouvé');\n\n        const headers = new HttpHeaders({\n          'Authorization': `Bearer ${token}`\n        });\n\n        return this.http.get<CaisseResponse[]>(\n          `${this.apiUrl}/vendeur/${vendeurId}`, \n          { headers }\n        );\n      }),\n      catchError(error => {\n        let errorMsg = 'Erreur lors du chargement de l\\'historique des caisses';\n        if (error?.error?.error) errorMsg = error.error.error;\n        else if (error?.error?.message) errorMsg = error.error.message;\n        else if (error.message) errorMsg = error.message;\n        \n        return throwError(() => ({ \n          message: errorMsg,\n          originalError: error \n        }));\n      })\n    );\n  }\n  \n\n}"],"names":["SafeHtmlPipe","constructor","sanitizer","transform","value","bypassSecurityTrustHtml","i0","ɵɵdirectiveInject","i1","DomSanitizer","pure","BehaviorSubject","BoutiqueStateService","STORAGE_KEY","selectedBoutiqueSubject","loadInitial","selectedBoutique$","asObservable","legacy","localStorage","getItem","sessionStorage","setItem","e","console","warn","removeItem","saved","Number","setSelectedBoutique","boutiqueId","toString","next","getCurrentValue","factory","ɵfac","providedIn","CaisseStateService","caisseCreatedSource","refreshCaissesSource","showAllCaissesSource","caisseCreated$","refreshCaisses$","showAllCaisses$","notifyCaisseCreated","caisse","triggerRefresh","showAllCaisses","log","toggleShowAllCaisses","getValue","getShowAllCaissesValue","PaginationService","paginationState","currentPage","itemsPerPage","totalItems","state$","getState","updateState","newState","current","setPage","page","safe","Math","max","floor","setItemsPerPage","size","setTotalItems","total","reset","HttpHeaders","environment","throwError","switchMap","catchError","map","PosCaisseService","http","usersService","apiUrl","apiBaseUrl","ouvrirCaisse","request","getValidAccessToken","pipe","token","Error","headers","post","error","errorMsg","message","originalError","fermerCaisse","body","getDerniereCaisseVendeur","get","resp","err","msg","JSON","stringify","String","getCaissesByBoutique","getHistoriqueCaissesByVendeur","vendeurId","ɵɵinject","HttpClient","i2","UsersService"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}
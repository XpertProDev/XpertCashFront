{"version":3,"file":"src_app_POS_pos-commande_pos-commande_component_ts.js","mappings":"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","sources":["./src/app/POS/pos-accueil/view-state.service.ts","./src/app/POS/pos-commande/pos-commande.component.ts","./src/app/POS/pos-commande/pos-commande.component.html","./src/app/admin-page/MODELS/cfa-currency.pipe.ts","./src/app/admin-page/SERVICES/VenteService/pos-commande-service.ts","./src/app/admin-page/SERVICES/categorie.service.ts","./src/app/admin-page/SERVICES/commande-state.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ViewStateService {\n  private isListViewSubject = new BehaviorSubject<boolean>(true);\n  isListView$ = this.isListViewSubject.asObservable();\n\n  setViewPreference(isList: boolean) {\n    this.isListViewSubject.next(isList);\n    localStorage.setItem('viewPreference', isList ? 'list' : 'grid');\n  }\n}","import { CommonModule } from '@angular/common';\nimport { Component, ElementRef, OnDestroy, ViewChild } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { firstValueFrom, Subject, takeUntil } from 'rxjs';\nimport { ClickOutsideDirective } from 'src/app/admin-page/MODELS/click-outside.directive';\nimport { environment } from 'src/environments/environment';\nimport { ViewStateService } from '../pos-accueil/view-state.service';\nimport { ProduitDetailsResponseDTO } from 'src/app/admin-page/MODELS/produit-category.model';\nimport { CategorieService } from 'src/app/admin-page/SERVICES/categorie.service';\nimport { CommandeStateService } from 'src/app/admin-page/SERVICES/commande-state.service';\nimport { RemboursementRequest, VenteResponse } from 'src/app/admin-page/MODELS/VenteModel/vente-model';\nimport { UsersService } from 'src/app/admin-page/SERVICES/users.service';\nimport { PosCommandeService } from 'src/app/admin-page/SERVICES/VenteService/pos-commande-service';\nimport { CfaCurrencyPipe } from 'src/app/admin-page/MODELS/cfa-currency.pipe';\n\ntype FilterKey = 'en-cours' | 'payer' | 'terminee' | 'annuler';\n\n@Component({\n  selector: 'app-pos-commande',\n  imports: [FormsModule, CommonModule, CfaCurrencyPipe],\n  templateUrl: './pos-commande.component.html',\n  styleUrl: './pos-commande.component.scss'\n})\nexport class PosCommandeComponent implements OnDestroy {\n  @ViewChild('selectAllCheckbox') selectAllCheckbox!: ElementRef<HTMLInputElement>;\n  private apiUrl = environment.imgUrl;\n  private destroy$ = new Subject<void>();\n\n  // view state\n  isListView = true;\n  showDropdown = false;\n  showFilterDropdown = false;\n\n  errorMessage: string | null = null;\n  successMessage: string | null = null;\n\n  // commandes locales\n  commandes: any[] = [];\n  products: ProduitDetailsResponseDTO[] = [];\n  activeCommandeId: string = '';\n\n  activeCommandeCart: Map<number, number> = new Map();\n  activeCommandeTotal = 0;\n  activeCommandeItems: { product: ProduitDetailsResponseDTO, quantity: number }[] = [];\n\n\n  // état du header checkbox\n  allSelected = false;\n\n  // ventes backend\n  allVentes: VenteResponse[] = [];\n  ventes: VenteResponse[] = [];\n  activeVenteId: number | null = null;\n  activeVenteItems: any[] = [];\n  activeVente: VenteResponse | null = null;\n\n  selectedItems: any[] = [];\n  motifRemboursement: string = '';\n  showMotifPopup: boolean = false;\n  isProcessing: boolean = false;\n  \n  // filtre\n  filterOptions = [\n    { key: 'en-cours' as FilterKey, label: 'En cours' },\n    { key: 'payer' as FilterKey, label: 'Payées' },\n    { key: 'annuler' as FilterKey, label: 'Annuler' }\n  ];\n\n  currentFilterKey: FilterKey = 'en-cours';\n  currentFilterLabel = 'En cours';\n\n  // recherche\n  searchTerm = '';\n\n  showCancelPopup = false;\n  pin: string[] = ['', '', '', ''];\n  isCodeWrong = false;\n\n  activeVenteLoading = false;\n\n  private scannerBuffer: string = '';\n  private lastKeyTime: number = 0;\n\n  // snapshot map pour garder une copie initiale des lignes par venteId\n  private venteLineSnapshots: Map<number, any[]> = new Map<number, any[]>();\n  // clé pour localStorage (changer version si tu modifies le format)\n  private readonly SNAPSHOT_KEY = 'vente_line_snapshots_v1';\n\n  private pendingRemboursementItem: any = null;\n\n    // --- Pagination (par filter key) ---\n  pageSize = 10; // ou tout autre valeur (ex: 10)\n  private pageMap = new Map<FilterKey, number>();\n\n  constructor(\n    public router: Router,\n    private viewState: ViewStateService,\n    private commandeState: CommandeStateService,\n    private categorieService: CategorieService,\n    private posCommandeService: PosCommandeService,\n    private usersService: UsersService\n  ) {}\n\n  ngOnInit() {\n\n    this.loadSnapshotsFromStorage();\n\n    window.addEventListener('keydown', this.handleScannerInput.bind(this));\n\n    this.viewState.isListView$.pipe(takeUntil(this.destroy$)).subscribe(view => {\n      this.isListView = view;\n    });\n\n    // charger produits + commandes locales par défaut (en-cours)\n    this.applyFilter(this.currentFilterKey);\n\n    // s'abonner aux events venant du state\n    this.commandeState.commandeUpdated$.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      this.loadCommandes();\n      this.loadActiveCommandeDetails();\n    });\n\n    this.commandeState.activeCommandeId$.pipe(takeUntil(this.destroy$)).subscribe(id => {\n      this.activeCommandeId = id;\n      this.loadActiveCommandeDetails();\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    window.removeEventListener('keydown', this.handleScannerInput.bind(this));\n  }\n\n  ngAfterViewInit() {\n    // s'assure que l'état visuel du checkbox est correct une fois la vue initialisée\n    this.updateSelectAllState();\n  }\n\n  /** Toggle quand on clique le checkbox header */\n  toggleSelectAll(checked: boolean) {\n    if (!this.activeVenteItems || this.activeVenteItems.length === 0) return;\n\n    this.activeVenteItems.forEach(item => {\n      item.selected = !!checked;\n    });\n\n    // mettre à jour la sélection dérivée & l'état du header\n    this.updateSelectedItems();\n    this.updateSelectAllState();\n  }\n\n  /** Charger snapshots depuis localStorage au démarrage */\n  private loadSnapshotsFromStorage(): void {\n    try {\n      const raw = localStorage.getItem(this.SNAPSHOT_KEY);\n      if (!raw) return;\n      const obj = JSON.parse(raw) as Record<string, any[]>;\n      Object.keys(obj).forEach(k => {\n        const id = Number(k);\n        if (!Number.isNaN(id)) {\n          this.venteLineSnapshots.set(id, obj[k]);\n        }\n      });\n      console.debug('Loaded vente snapshots from storage', this.venteLineSnapshots);\n    } catch (e) {\n      console.warn('Failed to load vente snapshots from storage', e);\n    }\n  }\n\n  /** Sauvegarder snapshots en localStorage */\n  private saveSnapshotsToStorage(): void {\n    try {\n      const obj: Record<string, any[]> = {};\n      this.venteLineSnapshots.forEach((v, k) => obj[String(k)] = v);\n      localStorage.setItem(this.SNAPSHOT_KEY, JSON.stringify(obj));\n      console.debug('Saved vente snapshots to storage');\n    } catch (e) {\n      console.warn('Failed to save vente snapshots to storage', e);\n    }\n  }\n\n  /** Mise à jour pratique du snapshot pour une vente (appelée après fetch initial ou remboursement) */\n  private ensureSnapshotForVente(venteId: number, lignes: any[] | null): void {\n    if (this.venteLineSnapshots.has(venteId)) return;\n    if (!lignes || !Array.isArray(lignes)) return;\n    try {\n      this.venteLineSnapshots.set(venteId, JSON.parse(JSON.stringify(lignes)));\n    } catch {\n      this.venteLineSnapshots.set(venteId, lignes.map(l => ({ ...l })));\n    }\n    this.saveSnapshotsToStorage();\n  }\n\n  /* ---------------- Filter / UI ---------------- */\n  toggleFilterDropdown() {\n    this.showFilterDropdown = !this.showFilterDropdown;\n  }\n  closeFilterDropdown() {\n    this.showFilterDropdown = false;\n  }\n  selectFilter(key: FilterKey) {\n    this.showFilterDropdown = false;\n    this.resetPageForKey(key);    // <- reset page\n    this.applyFilter(key);\n  }\n\n  private applyFilter(key: FilterKey) {\n    this.currentFilterKey = key;\n    const opt = this.filterOptions.find(o => o.key === key);\n    this.currentFilterLabel = opt ? opt.label : 'Filtre';\n\n    if (key === 'en-cours') {\n      // commandes locales\n      this.loadProducts();\n    } else {\n      // ventes backend (charger si pas déjà chargé, puis filtrer)\n      this.loadVentesAndFilter(key);\n    }\n  }\n\n  /* ---------------- Chargement produits / commandes locales ---------------- */\n  loadProducts() {\n    this.categorieService.getCategories().pipe(takeUntil(this.destroy$)).subscribe({\n      next: (categories) => {\n        this.products = [];\n        categories.forEach(categorie => {\n          if (categorie.produits) {\n            this.products = [...this.products, ...categorie.produits];\n          }\n        });\n        // Charger commandes locales\n        this.loadCommandes();\n        this.loadActiveCommandeDetails();\n      },\n      error: (error) => console.error('Erreur chargement produits', error)\n    });\n  }\n\n  loadCommandes() {\n    this.commandes = this.commandeState.getAllCommandesIds().map(id => {\n      // après remplissage de this.commandes ou this.ventes\n      const cur = this.pageMap.get(this.currentFilterKey) ?? 1;\n      this.setCurrentPage(cur); // clamp la page si nécessaire\n\n      const commande = this.commandeState.getCommandeDetails(id);\n      let totalItems = 0;\n      let totalAmount = 0;\n\n      if (commande?.cart) {\n        commande.cart.forEach((quantity, productId) => {\n          const product = this.products.find(p => p.id === productId);\n          if (product) {\n            totalItems += quantity;\n            totalAmount += quantity * product.prixVente;\n          }\n        });\n\n        this.commandeState.updateCommandeTotals(id, totalItems, totalAmount);\n      }\n\n      return {\n        id,\n        totalItems,\n        totalAmount,\n        createdAt: commande?.createdAt || new Date()\n      };\n    });\n\n    // Tri décroissant par createdAt (plus récent d'abord)\n    this.commandes.sort((a, b) => {\n      const ta = new Date(a.createdAt).getTime();\n      const tb = new Date(b.createdAt).getTime();\n      return tb - ta;\n    });\n  }\n\n  loadActiveCommandeDetails() {\n    if (!this.activeCommandeId) return;\n    const commande = this.commandeState.getCommandeDetails(this.activeCommandeId);\n    if (commande) {\n      this.activeCommandeCart = commande.cart;\n      this.activeCommandeTotal = commande.totalAmount || 0;\n      this.updateActiveCommandeItems();\n    }\n  }\n\n  updateActiveCommandeItems() {\n    this.activeCommandeItems = [];\n    if (!this.activeCommandeCart || !this.products.length) return;\n    this.activeCommandeCart.forEach((quantity, productId) => {\n      if (quantity > 0) {\n        const product = this.products.find(p => p.id === productId);\n        if (product) {\n          this.activeCommandeItems.push({ product, quantity });\n        }\n      }\n    });\n  }\n\n  /* ---------------- Ventes backend ---------------- */\n  private loadVentesAndFilter(key: FilterKey) {\n    const vendeurId = this.usersService.getCurrentUser()?.id;\n    if (!vendeurId) {\n      console.warn('Utilisateur non connecté — impossible de charger ventes');\n      this.allVentes = [];\n      this.ventes = [];\n      return;\n    }\n\n    // on récupère toujours les ventes du backend (on peut cacher cache si nécessaire)\n    this.posCommandeService.getVentesByVendeur(vendeurId).pipe(takeUntil(this.destroy$)).subscribe({\n      next: (ventes) => {\n        console.debug('Ventes API raw:', ventes);\n        // assigner d'abord les ventes reçues\n        this.allVentes = ventes || [];\n\n        // --- conserver un snapshot initial des lignes pour chaque vente (si pas déjà présent) ---\n        // utiliser uniquement 'lignes' (conforme à ton model)\n        this.allVentes.forEach(v => {\n          const rawLines = (v.lignes ?? []) as any[];\n          if (!this.venteLineSnapshots.has(v.venteId)) {\n            try {\n              this.venteLineSnapshots.set(v.venteId, JSON.parse(JSON.stringify(rawLines)));\n            } catch {\n              this.venteLineSnapshots.set(v.venteId, rawLines.map(l => ({ ...l })));\n            }\n          }\n        });\n\n        // persister après avoir initialisé les snapshots\n        this.saveSnapshotsToStorage();\n        this.applyVentesFilter(key);\n\n        // si on a des ventes filtrées, s'assurer que la première soit active\n        if (this.ventes.length > 0) {\n          const first = this.ventes[0];\n          if (!this.activeVente || this.activeVente.venteId !== first.venteId) {\n            this.setActiveVente(first.venteId);\n          }\n        } else {\n          // aucune vente pour ce filtre : nettoyer l'état actif\n          this.activeVenteId = null;\n          this.activeVente = null;\n          this.activeVenteItems = [];\n          this.updateSelectedItems();\n        }\n      },\n      error: (err) => {\n        console.error('Erreur chargement ventes', err);\n        this.allVentes = [];\n        this.ventes = [];\n      }\n    });\n  }\n\n  // private applyVentesFilter(key: FilterKey) {\n  //   // filtre flexible selon le contenu de VenteResponse\n  //   this.ventes = this.allVentes.filter(v => this.matchesVenteStatus(v, key));\n  // }\n\n  private applyVentesFilter(key: FilterKey) {\n    this.ventes = this.allVentes.filter(v => this.matchesVenteStatus(v, key));\n    // après remplissage de this.commandes ou this.ventes\n    const cur = this.pageMap.get(this.currentFilterKey) ?? 1;\n    this.setCurrentPage(cur); // clamp la page si nécessaire\n\n\n    // Tri décroissant par date (dateVente > createdAt > fallback sur venteId)\n    this.ventes.sort((a, b) => {\n      const ta = this.getTimeFromVente(a);\n      const tb = this.getTimeFromVente(b);\n      return tb - ta; // tb - ta => ordre décroissant\n    });\n  }\n\n  /** Retourne un timestamp à partir d'une vente (robuste aux champs manquants) */\n  private getTimeFromVente(v: any): number {\n    const candidates = [v.dateVente, v.createdAt, v.date || v.timestamp];\n    for (const c of candidates) {\n      if (c !== undefined && c !== null) {\n        const dt = new Date(c);\n        if (!Number.isNaN(dt.getTime())) return dt.getTime();\n      }\n    }\n    // fallback : si pas de date, utilise venteId numérique sinon 0\n    const idNum = Number(v.venteId ?? v.id);\n    return Number.isNaN(idNum) ? 0 : idNum;\n  }\n\n  private matchesVenteStatus(v: VenteResponse, key: FilterKey): boolean {\n    const cat = this.determineVenteCategory(v);\n\n    if (key === 'en-cours') return cat === 'en-cours';\n    if (key === 'payer') return cat === 'payer';\n    if (key === 'annuler') return cat === 'annuler';\n\n    return false;\n  }\n\n  loadVentes() {\n    const vendeurId = this.usersService.getCurrentUser()?.id;\n    if (!vendeurId) return;\n    this.posCommandeService.getVentesByVendeur(vendeurId).pipe(takeUntil(this.destroy$)).subscribe({\n      next: (ventes) => {\n        this.allVentes = ventes || [];\n        this.ventes = [...this.allVentes];\n      },\n      error: (err) => console.error('Erreur chargement ventes', err)\n    });\n  }\n\n  // Version corrigée et typée — coller à la place de l'ancienne\n  async loadActiveVenteDetails(): Promise<void> {\n    // Si pas d'ID actif, nettoyer et retourner\n    if (!this.activeVenteId) {\n      this.activeVenteItems = [];\n      this.updateSelectedItems();\n      return;\n    }\n\n    // Indiquer qu'on charge la vente active (utile pour éviter le \"flash\" UI)\n    this.activeVenteLoading = true;\n\n    try {\n      console.debug('loadActiveVenteDetails - starting for id', this.activeVenteId);\n\n      // Helper pour récupérer la vente complète depuis un endpoint getVenteById si disponible,\n      // sinon retomber sur getVentesByVendeur et trouver l'élément\n      const ensureFullVente = async (): Promise<any> => {\n        try {\n          const svcAny = this.posCommandeService as any;\n          if (typeof svcAny.getVenteById === 'function') {\n            return await firstValueFrom(svcAny.getVenteById(this.activeVenteId));\n          }\n          if (typeof this.posCommandeService.getVentesByVendeur === 'function') {\n            const vendeurId = this.usersService.getCurrentUser()?.id;\n            if (!vendeurId) return this.activeVente;\n            const all = await firstValueFrom(this.posCommandeService.getVentesByVendeur(vendeurId) as any);\n            if (Array.isArray(all)) {\n              return all.find((v: any) => v.venteId === this.activeVenteId) || this.activeVente;\n            }\n          }\n        } catch (err) {\n          console.warn('ensureFullVente error', err);\n        }\n        return this.activeVente;\n      };\n\n      // Tenter de récupérer la version complète\n      const fullVente = await ensureFullVente();\n      if (fullVente && (!this.activeVente || fullVente.venteId !== this.activeVente.venteId)) {\n        console.debug('Fetched fullVente from API for id', this.activeVenteId, fullVente);\n        this.activeVente = fullVente;\n        const idx = this.allVentes.findIndex(v => v.venteId === this.activeVenteId);\n        if (idx >= 0) this.allVentes[idx] = fullVente;\n      } else {\n        console.debug('Using existing activeVente (no fetch or unchanged)');\n      }\n\n      // Récupérer les lignes depuis différents champs possibles\n      const raw: any = this.activeVente || {};\n      const lignes: any[] = raw.lignes ?? raw.lines ?? raw.items ?? raw.lignesVente ?? [];\n\n      console.debug('lines used for building items:', lignes);\n\n      // utilitaires pour extraire des nombres depuis objets avec clés variées\n      const resolveNumberFrom = (obj: any, keys: string[]): number | null => {\n        if (!obj) return null;\n        for (const k of keys) {\n          if (Object.prototype.hasOwnProperty.call(obj, k) && obj[k] !== undefined && obj[k] !== null) {\n            const v = obj[k];\n            const n = (typeof v === 'number') ? v : Number(String(v).replace(',', '.'));\n            if (!Number.isNaN(n)) return n;\n          }\n        }\n        return null;\n      };\n\n      const qtyKeysOriginal = ['quantiteOriginale','quantiteInitiale','initialQuantity','originalQuantity','quantiteAvantRemboursement','qtyOriginal','original_qty','qty_initial'];\n      const qtyKeysCurrent  = ['quantite','quantity','qty','quantite_actuelle','currentQuantity','current_qty'];\n      const priceKeysOriginal = ['prixOriginal','prixAvantRemboursement','unitPriceOriginal','prixUnitaireOriginal','originalPrice'];\n      const priceKeysCurrent  = ['prixUnitaire','prix','price','unitPrice','prix_unitaire'];\n\n      // snapshot pour cette vente (si disponible)\n      const snapshot = this.venteLineSnapshots.get(this.activeVenteId!) ?? [];\n\n      const findInSnapshot = (ligne: any) => {\n        if (!snapshot || snapshot.length === 0) return null;\n        // tenter de matcher par id produit\n        const prodId = ligne.produitId ?? ligne.productId ?? ligne.idProduit ?? null;\n        if (prodId != null) {\n          const found = snapshot.find((s: any) =>\n            (s.produitId ?? s.productId ?? s.idProduit) === prodId\n          );\n          if (found) return found;\n        }\n        // fallback par nom (tolérance minime)\n        const name = (ligne.nomProduit ?? ligne.productName ?? ligne.name ?? '').toString().toLowerCase();\n        if (name) {\n          return snapshot.find((s: any) => {\n            const sname = (s.nomProduit ?? s.productName ?? s.name ?? '').toString().toLowerCase();\n            return sname && sname === name;\n          }) || null;\n        }\n        return null;\n      };\n\n      const isCancelledSale = this.activeVente ? this.determineVenteCategory(this.activeVente) === 'annuler' : false;\n      console.debug('isCancelledSale:', isCancelledSale, 'activeVente.status:', this.activeVente?.status);\n\n      // Construire activeVenteItems en normalisant current/original\n      this.activeVenteItems = (lignes || []).map((ligne: any) => {\n        const currentQty  = resolveNumberFrom(ligne, qtyKeysCurrent)  ?? resolveNumberFrom(ligne, qtyKeysOriginal) ?? 0;\n        const currentPrice = resolveNumberFrom(ligne, priceKeysCurrent) ?? resolveNumberFrom(ligne, priceKeysOriginal) ?? (ligne.prixUnitaire ?? 0);\n\n        let originalQty  = resolveNumberFrom(ligne, qtyKeysOriginal) ?? null;\n        let originalPrice = resolveNumberFrom(ligne, priceKeysOriginal) ?? null;\n\n        // compléter les originaux depuis le snapshot si manquant\n        if ((originalQty === null || originalPrice === null) && snapshot && snapshot.length > 0) {\n          const snapLine = findInSnapshot(ligne);\n          if (snapLine) {\n            if (originalQty === null) originalQty = resolveNumberFrom(snapLine, qtyKeysOriginal) ?? resolveNumberFrom(snapLine, qtyKeysCurrent) ?? originalQty;\n            if (originalPrice === null) originalPrice = resolveNumberFrom(snapLine, priceKeysOriginal) ?? resolveNumberFrom(snapLine, priceKeysCurrent) ?? originalPrice;\n          }\n        }\n\n        const productObj = {\n          id: ligne.produitId ?? ligne.productId ?? ligne.idProduit ?? null,\n          nom: ligne.nomProduit ?? ligne.productName ?? ligne.name ?? 'Produit',\n          prixVente: currentPrice ?? 0\n        };\n\n        return {\n          product: productObj,\n          quantity: currentQty ?? 0,\n          originalQuantity: originalQty,\n          currentQuantity: currentQty,\n          originalPrice: originalPrice,\n          currentPrice: currentPrice,\n          selected: false,\n          editing: false, // <-- Ajoutez cette ligne\n          editQuantity: 0, // <-- Ajoutez cette ligne\n          __rawLine: ligne\n        } as any;\n      });\n\n      // si pas vente annulée, supprimer lignes avec quantité 0 (après remboursement)\n      if (!isCancelledSale) {\n        this.activeVenteItems = this.activeVenteItems.filter(it => (it.quantity ?? 0) > 0);\n      }\n\n      // sélection par défaut si onglet \"annuler\"\n      if (this.currentFilterKey === 'annuler') {\n        this.activeVenteItems.forEach(it => it.selected = true);\n      } else {\n        this.activeVenteItems.forEach(it => it.selected = false);\n      }\n\n      console.debug('activeVenteItems built:', this.activeVenteItems);\n\n      // Mettre à jour la sélection dérivée\n      this.updateSelectedItems();\n    } catch (err) {\n      console.error('Erreur dans loadActiveVenteDetails', err);\n      // En cas d'erreur, on vide pour éviter d'afficher de l'ancien contenu\n      this.activeVenteItems = [];\n      this.updateSelectedItems();\n    } finally {\n      // Toujours désactiver le flag de chargement\n      this.activeVenteLoading = false;\n    }\n  }\n\n  setActiveVente(venteId: number) {\n    // définir l'id actif\n    this.activeVenteId = venteId;\n    // trouver la vente rapide (peut être incomplète)\n    this.activeVente = this.ventes.find(v => v.venteId === venteId) || null;\n\n    // --- important: vider immédiatement les items & selection pour éviter le 'flash' ---\n    this.activeVenteItems = [];\n    this.selectedItems = [];\n    this.updateSelectedItems();\n\n    // lancer le chargement complet (async)\n    this.loadActiveVenteDetails();\n  }\n\n\n  getTotalItems(vente: VenteResponse): number {\n    return vente.lignes?.reduce((sum, ligne) => sum + ligne.quantite, 0) || 0;\n  }\n\n  /* ---------------- Commande manip ---------------- */\n  setActiveCommande(id: string) {\n    this.commandeState.setActiveCommande(id);\n    this.loadActiveCommandeDetails(); // déjà existant\n    this.updateActiveCommandeItems(); // forcer update immédiat\n  }\n\n  removeCommande(id: string) {\n    this.commandeState.removeCommande(id);\n    this.loadCommandes();\n  }\n\n  removeProductFromCommande(productId: number) {\n    const commande = this.commandeState.getCommandeDetails(this.activeCommandeId);\n    if (commande) {\n      commande.cart.delete(productId);\n      const totalItems = this.calculateTotalItems(commande.cart);\n      const totalAmount = this.calculateTotalAmount(commande.cart);\n      this.commandeState.updateCommandeTotals(this.activeCommandeId, totalItems, totalAmount);\n      this.loadCommandes();\n      this.loadActiveCommandeDetails();\n    }\n  }\n\n  private calculateTotalItems(cart: Map<number, number>): number {\n    let total = 0;\n    cart.forEach(quantity => total += quantity);\n    return total;\n  }\n\n  private calculateTotalAmount(cart: Map<number, number>): number {\n    let total = 0;\n    cart.forEach((quantity, productId) => {\n      const product = this.products.find(p => p.id === productId);\n      if (product) {\n        total += quantity * product.prixVente;\n      }\n    });\n    return total;\n  }\n\n  // signature de onSearch — attend une chaîne (template ref fournit une string)\n  onSearch(term: string) {\n    this.searchTerm = (term || '').trim().toLowerCase();\n    this.resetPageForKey(this.currentFilterKey);\n\n    if (this.currentFilterKey === 'en-cours') {\n      // recharger les commandes originales avant filter pour ne pas écraser la source\n      this.loadCommandes();\n      if (this.searchTerm) {\n        this.commandes = this.commandes.filter(c =>\n          String(c.id).toLowerCase().includes(this.searchTerm) ||\n          String(c.totalAmount).toLowerCase().includes(this.searchTerm) ||\n          String(c.totalItems).toLowerCase().includes(this.searchTerm)\n        );\n      }\n    } else {\n      // recharge la liste complète depuis allVentes puis filtre\n      this.applyVentesFilter(this.currentFilterKey);\n      if (this.searchTerm) {\n        this.ventes = this.ventes.filter(v =>\n          String(v.venteId).toLowerCase().includes(this.searchTerm) ||\n          String(v.montantTotal).toLowerCase().includes(this.searchTerm) ||\n          (v.clientNom && String(v.clientNom).toLowerCase().includes(this.searchTerm)) ||\n          (v.numeroFacture && v.numeroFacture.toLowerCase().includes(this.searchTerm))\n        );\n      }\n    }\n  }\n\n  getVenteStatus(vente: VenteResponse): string {\n    if (vente.status) {\n      switch (vente.status.toUpperCase()) {\n        case 'EN_COURS': return 'En cours';\n        case 'PARTIELLEMENT_REMBOURSEE': return 'Partiellement remboursée';\n        case 'REMBOURSEE': return 'Annulée'; // afficher \"Annulée\" si backend dit REMBOURSEE\n        case 'ANNULEE': return 'Annulée';\n        case 'PAYEE':\n        case 'PAYER':\n          return 'Payée';\n        default:\n          // si status inconnu, retombe sur la catégorie\n          break;\n      }\n    }\n\n    const cat = this.determineVenteCategory(vente);\n    switch (cat) {\n      case 'payer': return 'Payée';\n      case 'annuler': return 'Annulée';\n      case 'en-cours': return 'En cours';\n      default: return '—';\n    }\n  }\n\n  private normalizeStr(val: any): string {\n    if (val === null || val === undefined) return '';\n    const s = String(val).toLowerCase();\n    // enlever accents pour meilleure robustesse (ex : 'annulé' -> 'annule')\n    try {\n      return s.normalize('NFD').replace(/\\p{Diacritic}/gu, '');\n    } catch {\n      // fallback si l'environnement ne supporte pas \\p{Diacritic}\n      return s.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n    }\n  }\n\n  // remplace entirely determineVenteCategory\n  private determineVenteCategory(v: VenteResponse): 'payer' | 'annuler' | 'en-cours' | 'unknown' {\n    // 1) Si le backend fournit un status, on s'en sert (priorité)\n    if (v.status) {\n      switch (v.status.toUpperCase()) {\n        case 'EN_COURS':\n          return 'en-cours';\n        case 'PARTIELLEMENT_REMBOURSEE':\n          // encore considéré comme \"payer\" côté filtre (partiel = pas totalement annulée)\n          return 'payer';\n        case 'REMBOURSEE':\n          // Vente entièrement remboursée -> la considérer comme \"annuler\" pour le filtrage\n          return 'annuler';\n        case 'ANNULEE':\n          return 'annuler';\n        case 'PAYEE':\n        case 'PAYER': // possible variantes\n          return 'payer';\n        default:\n          // laisser continuer au fallback\n          break;\n      }\n    }\n\n    // 2) Fallback : si on a les lignes, et que toutes les quantités = 0 => annuler\n    const lignes = (v.lignes || []) as Array<any>;\n    if (lignes.length > 0) {\n      const totalQuantites = lignes.reduce((sum, l) => sum + (l.quantite || 0), 0);\n      if (totalQuantites === 0) return 'annuler';\n    }\n\n    // 3) Ancienne logique heuristique (texte, champs alternatifs)\n    const vAny = v as any;\n    const candidates = [\n      vAny.paymentStatus,\n      vAny.statut,\n      vAny.etat,\n      vAny.status,\n      vAny.isPaid ? 'payer' : undefined,\n      vAny.paye ? 'payer' : undefined\n    ].filter(Boolean).map(x => this.normalizeStr(x));\n\n    const has = (terms: string[]) => candidates.some(c => terms.some(t => c.includes(t)));\n\n    if (has(['payer', 'paid', 'paye', 'payed', 'settled'])) {\n      return 'payer';\n    }\n    if (has(['annul', 'cancel', 'void', 'annulee', 'rembourse'])) {\n      return 'annuler';\n    }\n    if (has(['en cours', 'encours', 'pending', 'in_progress', 'ongoing', 'draft'])) {\n      return 'en-cours';\n    }\n\n    // 4) Fallback sur montants\n    if (typeof v.montantPaye === 'number' && v.montantPaye > 0) {\n      return 'payer';\n    }\n\n    return 'unknown';\n  }\n\n  /* ---------------- Helpers UI ---------------- */\n  toggleView(viewType: 'grid' | 'list') {\n    this.isListView = viewType === 'grid';\n    this.showDropdown = true;\n    localStorage.setItem('viewPreference', viewType);\n  }\n\n  pagePosVente() {\n    // this.router.navigate(['/pos-accueil']);\n  }\n\n  closeCancelPopup(): void {\n    this.showCancelPopup = false;\n  }\n\n  goToNext(currentInput: HTMLInputElement, nextInput?: HTMLInputElement): void {\n    if (currentInput.value && nextInput) {\n      nextInput.focus();\n    }\n  }\n\n  handleBackspace(event: KeyboardEvent, index: number, currentInput: HTMLInputElement, prevInput?: HTMLInputElement): void {\n    if (event.key === 'Backspace' && !currentInput.value && prevInput) {\n      prevInput.focus();\n    }\n  }\n\n  /** Appelée après toute modification individuelle pour recalculer selectedItems */\n  updateSelectedItems(): void {\n    this.selectedItems = this.activeVenteItems.filter(item => item.selected);\n    this.updateSelectAllState();\n  }\n\n  /** Met à jour allSelected et l'état indéterminé visuel */\n  private updateSelectAllState(): void {\n    if (!this.activeVenteItems || !this.selectAllCheckbox) {\n      this.allSelected = false;\n      return;\n    }\n\n    const total = this.activeVenteItems.length;\n    const selectedCount = this.activeVenteItems.filter(i => i.selected).length;\n\n    this.allSelected = (selectedCount === total && total > 0);\n\n    // indeterminate = some selected but not all\n    try {\n      const el = this.selectAllCheckbox.nativeElement;\n      el.indeterminate = selectedCount > 0 && selectedCount < total;\n    } catch (e) {\n      // si ViewChild pas encore prêt ou environnement ne supporte pas, ignore\n    }\n  }\n\n  // Ouvrir la popup d'annulation\n  openCancelPopup(): void {\n    if (this.selectedItems.length === 0) {\n      alert('Veuillez sélectionner au moins un produit à rembourser');\n      return;\n    }\n    \n    this.showCancelPopup = true;\n    this.pin = ['', '', '', ''];\n    this.isCodeWrong = false;\n  }\n\n  // Vérifier le code PIN\n  verifyCode(): void {\n    const enteredPin = this.pin.join('');\n    this.usersService.verifyCode(enteredPin, ['ADMIN', 'MANAGER']).subscribe({\n      next: (isValid: boolean) => {\n        if (isValid) {\n          this.showCancelPopup = false;\n          this.showMotifPopup = true;\n        } else {\n          this.handleInvalidPin();\n        }\n      },\n      error: () => this.handleInvalidPin()\n    });\n  }\n\n  private handleInvalidPin(): void {\n    this.isCodeWrong = true;\n    setTimeout(() => this.isCodeWrong = false, 500);\n  }\n\n  // Confirmer le remboursement\n  confirmRemboursement(): void {\n    if (!this.motifRemboursement.trim()) {\n      alert('Veuillez saisir un motif');\n      return;\n    }\n\n    this.successMessage = null;\n    this.errorMessage = null;\n    this.isProcessing = true;\n\n    let produitsQuantites: { [key: number]: number } = {};\n    if (this.pendingRemboursementItem) {\n      // Utilise la quantité à rembourser calculée\n      produitsQuantites[this.pendingRemboursementItem.product.id] = this.pendingRemboursementItem.qtyToRefund;\n    } else {\n      produitsQuantites = this.getProduitsQuantites();\n    }\n\n    const request: RemboursementRequest = {\n      venteId: this.activeVenteId!,\n      produitsQuantites,\n      motif: this.motifRemboursement,\n      rescodePin: this.pin.join('')\n    };\n\n    this.posCommandeService.rembourserVente(request).subscribe({ \n      next: (response) => {\n        this.pendingRemboursementItem = null;\n        this.closeAllPopups(); \n        this.loadVentesAndFilter(this.currentFilterKey);\n        this.activeVente = response;\n        this.loadActiveVenteDetails();\n\n        this.successMessage = \"Remboursement effectué avec succès !\";\n      },\n      error: (error) => {\n        console.error('Erreur remboursement', error);\n        this.errorMessage = error.error?.message || 'Une erreur est survenue lors du remboursement';\n      },\n      complete: () => this.isProcessing = false\n    });\n  }\n\n  // Nouvelle méthode pour mettre à jour le statut localement\n  private updateVenteStatus(venteId: number, newStatus: string) {\n    const vente = this.allVentes.find(v => v.venteId === venteId);\n    if (vente) {\n      vente.status = newStatus;\n      this.applyVentesFilter(this.currentFilterKey);\n    }\n    \n    if (this.activeVenteId === venteId) {\n      this.activeVente!.status = newStatus;\n    }\n  }\n\n  // Helper pour construire produitsQuantites\n  private getProduitsQuantites(): { [key: number]: number } {\n    const quantites: { [key: number]: number } = {};\n\n    this.selectedItems.forEach(item => {\n      // quantité effectivement remboursable (currentQuantity) — fallback à item.quantity\n      const qtyToRefund = item.currentQuantity ?? item.quantity ?? 0;\n      quantites[item.product.id] = qtyToRefund;\n    });\n\n    return quantites;\n  }\n\n  // Fermer toutes les popups\n  closeAllPopups(): void {\n    this.showCancelPopup = false;\n    this.showMotifPopup = false;\n    this.motifRemboursement = '';\n    this.selectedItems = [];\n    this.pendingRemboursementItem = null;\n    this.activeVenteItems.forEach(item => item.selected = false);\n  }\n\n  // Calculer le montant total sélectionné\n  getSelectedAmount(): number {\n    return this.selectedItems.reduce((total, item) => {\n      const qtyToRefund = item.currentQuantity ?? item.quantity ?? 0;\n      const price = item.currentPrice ?? item.product.prixVente ?? 0;\n      return total + (qtyToRefund * price);\n    }, 0);\n  }\n\n  // Calculer le total des items sélectionnés\n  getSelectedItemsCount(): number {\n    return this.selectedItems.reduce((total, item) => {\n      const qtyToRefund = item.currentQuantity ?? item.quantity ?? 0;\n      return total + qtyToRefund;\n    }, 0);\n  }\n\n  getUpdatedTotalItems(vente: VenteResponse | null): number {\n    if (!vente) return 0;\n\n    // si on n'est pas sur la vente active, retourner le backend\n    if (!this.activeVenteId || vente.venteId !== this.activeVenteId) {\n      return this.getTotalItems(vente);\n    }\n\n    // si on est en train de charger les lignes, retourner le total backend pour éviter le flash\n    if (this.activeVenteLoading) {\n      return vente.lignes?.reduce((s, l) => s + (l.quantite || 0), 0) || vente.montantTotal ? this.getTotalItems(vente) : 0;\n    }\n\n    // sinon calculer à partir de activeVenteItems\n    return this.activeVenteItems.reduce((sum, item) => {\n      const qty = item.selected ? 0 : (item.currentQuantity ?? item.quantity ?? 0);\n      return sum + qty;\n    }, 0);\n  }\n\n  getUpdatedTotalAmount(vente: VenteResponse | null): number {\n    if (!vente) return 0;\n\n    if (!this.activeVenteId || vente.venteId !== this.activeVenteId) {\n      return vente.montantTotal ?? 0;\n    }\n\n    // éviter d'utiliser la liste momentanément obsolète\n    if (this.activeVenteLoading) {\n      return vente.montantTotal ?? 0;\n    }\n\n    return this.activeVenteItems.reduce((total, item) => {\n      const qty = item.selected ? 0 : (item.currentQuantity ?? item.quantity ?? 0);\n      const price = item.currentPrice ?? item.product.prixVente ?? 0;\n      return total + (qty * price);\n    }, 0);\n  }\n\n  /** Retourne true si la vente active est considérée comme annulée */\n  public isActiveVenteAnnule(): boolean {\n    if (!this.activeVente) return false;\n    try {\n      // utilise la logique existante pour déterminer la catégorie ('annuler'|'payer'|'en-cours')\n      return this.determineVenteCategory(this.activeVente) === 'annuler';\n    } catch {\n      // fallback : tenter d'utiliser getVenteStatus si determineVenteCategory non disponible\n      return this.getVenteStatus(this.activeVente).toLowerCase().includes('annul');\n    }\n  }\n\n  // Méthode pour basculer entre mode édition et affichage\n  toggleQuantityEdit(item: any): void {\n    if (item.editing) {\n      // Si on est déjà en mode édition, valider les changements\n      this.validateQuantityEdit(item);\n    } else {\n      // Activer le mode édition\n      item.editing = true;\n      item.editQuantity = item.quantity; // Initialiser avec la valeur actuelle\n    }\n  }\n\n  // Méthode pour valider la modification de quantité\n  validateQuantityEdit(item: any): void {\n    if (item.editQuantity && item.editQuantity > 0) {\n      item.quantity = item.editQuantity;\n      \n      // Mettre à jour les totaux si nécessaire\n      this.updateSelectedItems();\n    }\n    \n    // Désactiver le mode édition\n    item.editing = false;\n  }\n\n  startEditQuantity(item: any) {\n    item.editing = true;\n    item.editQuantity = item.quantity;\n  }\n\n  onValidateQuantityEdit(item: any) {\n    // Sauvegarde la quantité initiale avant modification\n    const initialQuantity = item.quantity;\n\n    if (item.editQuantity >= 1 && item.editQuantity < initialQuantity) {\n      // Calcule la quantité à rembourser\n      const qtyToRefund = initialQuantity - item.editQuantity;\n\n      // Mets à jour la quantité affichée\n      item.quantity = item.editQuantity;\n\n      // Prépare l'item pour remboursement partiel\n      this.pendingRemboursementItem = {\n        ...item,\n        qtyToRefund\n      };\n\n      this.showCancelPopup = true;\n      this.pin = ['', '', '', ''];\n      this.isCodeWrong = false;\n      setTimeout(() => {\n      const firstInput = document.getElementById('0') as HTMLInputElement;\n      firstInput?.focus();\n    }, 0);\n    } else {\n      item.editing = false;\n    }\n  }\n\n\n   private handleScannerInput(event: KeyboardEvent): void {\n    console.log(event.key);\n    const now = Date.now();\n\n    if (now - this.lastKeyTime > 100) {\n      this.scannerBuffer = '';\n    }\n\n    this.lastKeyTime = now;\n\n    if (/^\\d$/.test(event.key)) { \n      this.scannerBuffer += event.key;\n\n      if (this.scannerBuffer.length === 4) {\n        this.pin = this.scannerBuffer.split('');\n        this.verifyCode();\n        this.scannerBuffer = '';\n      }\n    }\n\n    if (event.key === 'Enter' && this.scannerBuffer.length === 4) {\n      this.pin = this.scannerBuffer.split('');\n      this.verifyCode();\n      this.scannerBuffer = '';\n    }\n  }\n\n  /** Obtenir la page courante pour le filtre actif */\nprivate getCurrentPage(): number {\n  return this.pageMap.get(this.currentFilterKey) ?? 1;\n}\nprivate setCurrentPage(page: number): void {\n  const total = this.getTotalForCurrentFilter();\n  const last = Math.max(1, Math.ceil((total || 0) / this.pageSize));\n  const p = Math.max(1, Math.min(page, last));\n  this.pageMap.set(this.currentFilterKey, p);\n}\n\n/** Reset page to 1 for given key (useful on filter change or new search) */\nprivate resetPageForKey(key: FilterKey) {\n  this.pageMap.set(key, 1);\n}\n\n  /** Prev / Next */\n  prevPage(): void {\n    const cur = this.getCurrentPage();\n    if (cur > 1) {\n      this.setCurrentPage(cur - 1);\n    }\n  }\n  nextPage(): void {\n    const cur = this.getCurrentPage();\n    const total = this.getTotalForCurrentFilter();\n    const last = Math.max(1, Math.ceil((total || 0) / this.pageSize));\n    if (cur < last) {\n      this.setCurrentPage(cur + 1);\n    }\n  }\n  isFirstPage(): boolean {\n    return this.getCurrentPage() <= 1;\n  }\n  isLastPage(): boolean {\n    const total = this.getTotalForCurrentFilter();\n    const last = Math.max(1, Math.ceil((total || 0) / this.pageSize));\n    return this.getCurrentPage() >= last;\n  }\n\n  /** Totaux / bornes pour l'affichage du pager */\n  get pagerTotal(): number {\n    return this.getTotalForCurrentFilter();\n  }\n  get pagerStart(): number {\n    const total = this.pagerTotal;\n    if (!total) return 0;\n    const start = (this.getCurrentPage() - 1) * this.pageSize + 1;\n    return Math.min(start, total);\n  }\n  get pagerEnd(): number {\n    const total = this.pagerTotal;\n    if (!total) return 0;\n    const end = this.getCurrentPage() * this.pageSize;\n    return Math.min(end, total);\n  }\n\n  /** Total items selon le filtre courant */\n  private getTotalForCurrentFilter(): number {\n    if (this.currentFilterKey === 'en-cours') {\n      return this.commandes?.length ?? 0;\n    } else {\n      return this.ventes?.length ?? 0;\n    }\n  }\n\n  /** Listes paginées exposées au template */\n  get displayedCommandes(): any[] {\n    if (this.currentFilterKey !== 'en-cours') return [];\n    const total = this.commandes || [];\n    const page = this.getCurrentPage();\n    const start = (page - 1) * this.pageSize;\n    return total.slice(start, start + this.pageSize);\n  }\n\n  get displayedVentes(): any[] {\n    if (this.currentFilterKey === 'en-cours') return [];\n    const total = this.ventes || [];\n    const page = this.getCurrentPage();\n    const start = (page - 1) * this.pageSize;\n    return total.slice(start, start + this.pageSize);\n  }\n\n\n}","<div class=\"toast-container\">\n    <div *ngIf=\"successMessage\" class=\"alert alert-success toast-message-success\">\n      {{ successMessage }}\n    </div>\n  \n    <div *ngIf=\"errorMessage\" class=\"alert alert-danger toast-message-danger\">\n      {{ errorMessage }}\n    </div>\n</div>\n\n<div class=\"section_contenu_container\">\n    <!-- // section contenu left -->\n    <div class=\"section_contenu_left\">\n        <!-- // section favory produit -->\n        <div class=\"section_commande\">\n            <!-- // section recherche  -->\n                <!-- toolbar avec template ref pour l'input -->\n            <div class=\"toolbar\" appClickOutside (clickOutside)=\"closeFilterDropdown()\">\n                <div class=\"icon_search\">\n                    <i class=\"ri-search-line\"></i>\n                </div>\n\n                <div class=\"search\">\n                    <!-- utilisation de #searchInput pour éviter l'erreur TS -->\n                    <input #searchInput type=\"text\" placeholder=\"Rechercher des commandes...\" (input)=\"onSearch(searchInput.value)\" />\n                </div>\n\n                <div class=\"btn_search_filtre\">\n                    <button class=\"btn\" (click)=\"toggleFilterDropdown()\">\n                      {{ currentFilterLabel }} <i class=\"ri-arrow-down-s-fill\"></i>\n                    </button>\n\n                    <ul *ngIf=\"showFilterDropdown\" class=\"dropdown_filter\">\n                      <li *ngFor=\"let opt of filterOptions\" (click)=\"selectFilter(opt.key)\">\n                          {{ opt.label }}\n                      </li>\n                    </ul>\n                </div>\n\n                <!-- pager -->\n                <div class=\"pager\" aria-label=\"Pagination\">\n                  <div class=\"pager-info\" aria-live=\"polite\">\n                    <span class=\"o_pager_counter\">\n                      <span>{{ pagerStart }} - {{ pagerEnd }}</span>\n                      <span> / </span>\n                      <span class=\"o_pager_limit\">{{ pagerTotal }}</span>\n                    </span>\n                  </div>\n\n                  <div class=\"btn-group d-print-none\" aria-atomic=\"true\" role=\"group\" aria-label=\"Navigation pages\">\n                    <button\n                      type=\"button\"\n                      class=\"o_pager_previous\"\n                      aria-label=\"Précédent\"\n                      title=\"Page précédente\"\n                      [disabled]=\"isFirstPage() || pagerTotal === 0\"\n                      (click)=\"prevPage()\">\n                      <i class=\"ri-arrow-left-s-line\"></i>\n                    </button>\n\n                    <button\n                      type=\"button\"\n                      class=\"o_pager_next\"\n                      aria-label=\"Suivant\"\n                      title=\"Page suivante\"\n                      [disabled]=\"isLastPage() || pagerTotal === 0\"\n                      (click)=\"nextPage()\">\n                      <i class=\"ri-arrow-right-s-line\"></i>\n                    </button>\n                  </div>\n                </div>\n\n            </div>\n\n            <!-- Section liste des commandes / ventes -->\n            <div class=\"section_list_commande\">\n            <!-- Si on est en mode \"en-cours\" on affiche les commandes locales -->\n            <ng-container *ngIf=\"currentFilterKey === 'en-cours'\">\n                <ul *ngFor=\"let commande of commandes\" class=\"ul_commande\"\n                      [class.ul_commande_active]=\"activeCommandeId === commande.id\"\n                      (click)=\"setActiveCommande(commande.id)\">\n                  <li class=\"li_commande\">\n                      <div class=\"commande_date_heure\">\n                      <p class=\"commande_date\">{{ commande.createdAt | date:'dd/MM/yyyy' }}</p>\n                      <p class=\"commande_heure\">{{ commande.createdAt | date:'HH:mm' }}</p>\n                      </div>\n                  </li>\n                  <li class=\"li_commande\">\n                      <div class=\"num_onglet_commande\"><p>{{ commande.id }}</p></div>\n                  </li>\n                  <li class=\"li_commande\">\n                      <div class=\"quantite_commande\"><p>Quantité {{ commande.totalItems }}</p></div>\n                  </li>\n                  <li class=\"li_commande\">\n                      <div class=\"price_commande\"><p>{{ commande.totalAmount | cfaCurrency }}</p></div>\n                  </li>\n                  <li class=\"li_commande\" style=\"display:flex;align-items:center;gap:30px;\">\n                      <div class=\"etat_commande\"><p>En cours</p></div>\n                  </li>\n                </ul>\n\n                <div *ngIf=\"!commandes.length\" class=\"loading_commande\">\n                Pas de commandes en cours\n                </div>\n            </ng-container>\n\n            <!-- Si on est en mode ventes (payer/terminee/annuler), on affiche les ventes -->\n              <ng-container *ngIf=\"currentFilterKey !== 'en-cours'\">\n                  <ul *ngFor=\"let vente of ventes\" class=\"ul_commande\"\n                      [class.ul_commande_active]=\"activeVenteId === vente.venteId\"\n                      (click)=\"setActiveVente(vente.venteId)\">\n                  <li class=\"li_commande\">\n                      <div class=\"commande_date_heure\">\n                      <p class=\"commande_date\">{{ vente.dateVente | date:'dd/MM/yyyy' }}</p>\n                      <p class=\"commande_heure\">{{ vente.dateVente | date:'HH:mm' }}</p>\n                      </div>\n                  </li>\n                  <li class=\"li_commande\">\n                      <div class=\"num_onglet_commande\"><p>{{ vente.venteId }}</p></div>\n                  </li>\n                  <li class=\"li_commande\">\n                      <div class=\"quantite_commande\"><p>Quantité {{ getUpdatedTotalItems(vente) }}</p></div>\n                  </li>\n                  <li class=\"li_commande\">\n                      <div class=\"price_commande\"><p>{{ getUpdatedTotalAmount(vente) | cfaCurrency }}</p></div>\n                  </li>\n                  <li class=\"li_commande\" style=\"display:flex;align-items:center;gap:30px;\">\n                    <div class=\"etat_commande\">\n                      <p [class.status-paid]=\"getVenteStatus(vente) === 'Payer'\">\n                        {{ getVenteStatus(vente) }}\n                      </p>\n                    </div>\n                  </li>\n                  </ul>\n\n                  <div *ngIf=\"!ventes.length\" class=\"loading_commande\">\n                  Pas de ventes pour ce filtre\n                  </div>\n              </ng-container>\n            </div>\n        </div>\n    </div>\n    <!-- // section contenu right -->\n    <div class=\"section_contenu_right\" style=\"background-color: #ffffff; height: 100vh; box-shadow: rgba(0, 0, 0, 0.04) 0px 3px 5px;\">\n        <div class=\"list_produit_select\">\n\n          <!-- Si on est sur \"En cours\" : montrer les produits de la commande locale active -->\n          <ng-container *ngIf=\"currentFilterKey === 'en-cours'\">\n            <ul class=\"ul_list_produit_select\">\n              <li class=\"li_list_produit_select\" *ngFor=\"let item of activeCommandeItems\">\n                <div class=\"double_commande\">\n                  <div class=\"nombre_select\">{{ item.quantity }}</div>\n                  <div class=\"name_produit_select\">\n                    <p style=\"margin:0;\">\n                      {{ item.product.nom }}\n                      <span>({{ item.product.prixVente | cfaCurrency }})</span>\n                    </p>\n                  </div>\n                </div>\n                <div class=\"double_commande\">\n                  <div class=\"price_produit\">\n                    {{ (item.quantity * item.product.prixVente) | cfaCurrency }}\n                  </div>\n                </div>\n              </li>\n            </ul>\n\n            <div *ngIf=\"activeCommandeItems.length === 0\" class=\"empty-cart-message\">\n              <p>Aucun produit dans cette commande</p>\n            </div>\n          </ng-container>\n\n          <!-- Sinon : afficher les produits de la vente (backend) -->\n          <ng-container *ngIf=\"currentFilterKey !== 'en-cours'\">\n            <div class=\"container_titre\">\n              <div class=\"content_titre\">\n                <ul class=\"ul_list_produit_select\" style=\"margin: 0;\">\n                  <li class=\"li_list_produit_select\" style=\"background: none; font-weight: 700;\">\n                    <div class=\"double_commande\">\n                      <div class=\"nombre_select\" title=\"Quantité sélectionner\">Q</div>\n                      <div class=\"name_produit_select\">\n                        <p style=\"margin:0;\">\n                          Nom du produit\n                          <span title=\"Prix unitaire\">(PU)</span>\n                        </p>\n                      </div>\n                    </div>\n                    <div class=\"double_commande\">\n                      <div class=\"price_produit\">\n                        Prix total\n                      </div>\n                    </div>\n                    <div class=\"icon_check\">\n                      <label class=\"cyber-checkbox\">\n                        <input \n                            #selectAllCheckbox\n                            type=\"checkbox\"\n                            [(ngModel)]=\"allSelected\"\n                            (ngModelChange)=\"toggleSelectAll($event)\"\n                            [disabled]=\"activeVenteItems.length === 0\">\n                            \n                            <span class=\"cyber-checkbox__mark\">\n                              <div class=\"cyber-checkbox__box\">\n                                  <svg class=\"cyber-checkbox__check\" viewBox=\"0 0 12 10\">\n                                  <polyline points=\"1.5 6 4.5 9 10.5 1\"></polyline>\n                                  </svg>\n                              </div>\n                              <div class=\"cyber-checkbox__effects\">\n                                  <div class=\"cyber-checkbox__spark\"></div>\n                                  <div class=\"cyber-checkbox__spark\"></div>\n                                  <div class=\"cyber-checkbox__spark\"></div>\n                                  <div class=\"cyber-checkbox__spark\"></div>\n                              </div>\n                              <div class=\"cyber-checkbox__particles\">\n                                  <div class=\"particle-1\"></div>\n                                  <div class=\"particle-2\"></div>\n                                  <div class=\"particle-3\"></div>\n                                  <div class=\"particle-4\"></div>\n                                  <div class=\"particle-5\"></div>\n                                  <div class=\"particle-6\"></div>\n                                  <div class=\"particle-7\"></div>\n                                  <div class=\"particle-8\"></div>\n                              </div>\n                            </span>\n                        </label>\n                    </div>\n                  </li>\n                </ul>\n              </div>\n            </div>\n            <ul class=\"ul_list_produit_select\">\n              <li class=\"li_list_produit_select\" *ngFor=\"let item of activeVenteItems\" [class.selected-item]=\"item.selected\">\n                <div class=\"double_commande\">\n                  <div class=\"nombre_select\">\n\n                    <!-- Mode édition -->\n                    <input\n                      *ngIf=\"item.editing\"\n                      type=\"number\"\n                      min=\"1\"\n                      [max]=\"item.originalQuantity || 100\"\n                      [(ngModel)]=\"item.editQuantity\"\n                      class=\"quantity-input\"\n                    />\n                    <p *ngIf=\"!item.editing\">\n                      <span *ngIf=\"currentFilterKey === 'annuler' && item.originalQuantity !== null\">\n                        {{ item.originalQuantity }} ➔ \n                      </span>\n                      {{ item.quantity }}\n                    </p>\n                  </div>\n                  \n                  <div class=\"name_produit_select\">\n                    <p style=\"margin:0;\">\n                      {{ item.product.nom }}\n                      <!-- Afficher le prix original si annulée -->\n                      <span *ngIf=\"currentFilterKey === 'annuler' && item.originalPrice !== null\">\n                        (Orig: {{ item.originalPrice | cfaCurrency }})\n                      </span>\n                      <span *ngIf=\"currentFilterKey !== 'annuler' || item.originalPrice === null\">\n                        ({{ item.product.prixVente | cfaCurrency }})\n                      </span>\n                    </p>\n                  </div>\n                </div>\n                \n                <div class=\"double_commande\">\n                  <div class=\"price_produit\">\n                    <!-- Afficher le total original si annulée -->\n                    <span *ngIf=\"currentFilterKey === 'annuler' && item.originalPrice !== null\">\n                      <span style=\"text-decoration: line-through; opacity: 0.7;\">\n                        {{ (item.originalQuantity * item.originalPrice) }}\n                      </span><br>\n                    </span>\n                    {{ (item.quantity * item.product.prixVente) | cfaCurrency }}\n                  </div>\n\n                  <div class=\"icon_edit_quantite\">\n                    <i class=\"ri-edit-2-line\" *ngIf=\"!item.editing\" (click)=\"startEditQuantity(item)\"></i>\n                    <i class=\"ri-check-line\" *ngIf=\"item.editing\" (click)=\"onValidateQuantityEdit(item)\"></i>\n                  </div>\n                </div>\n                <div class=\"icon_check\">\n                  <label class=\"cyber-checkbox\">\n                    <input \n                        type=\"checkbox\"\n                        [(ngModel)]=\"item.selected\"\n                        (ngModelChange)=\"updateSelectedItems()\">\n                        \n                        <span class=\"cyber-checkbox__mark\">\n                          <div class=\"cyber-checkbox__box\">\n                              <svg class=\"cyber-checkbox__check\" viewBox=\"0 0 12 10\">\n                              <polyline points=\"1.5 6 4.5 9 10.5 1\"></polyline>\n                              </svg>\n                          </div>\n                          <div class=\"cyber-checkbox__effects\">\n                              <div class=\"cyber-checkbox__spark\"></div>\n                              <div class=\"cyber-checkbox__spark\"></div>\n                              <div class=\"cyber-checkbox__spark\"></div>\n                              <div class=\"cyber-checkbox__spark\"></div>\n                          </div>\n                          <div class=\"cyber-checkbox__particles\">\n                              <div class=\"particle-1\"></div>\n                              <div class=\"particle-2\"></div>\n                              <div class=\"particle-3\"></div>\n                              <div class=\"particle-4\"></div>\n                              <div class=\"particle-5\"></div>\n                              <div class=\"particle-6\"></div>\n                              <div class=\"particle-7\"></div>\n                              <div class=\"particle-8\"></div>\n                          </div>\n                        </span>\n                    </label>\n                </div>\n              </li>\n            </ul>\n\n            <div *ngIf=\"activeVenteItems.length === 0\" class=\"empty-cart-message\">\n              <p>Aucun produit dans cette vente</p>\n            </div>\n            <!-- <div *ngIf=\"selectedItems.length === activeVenteItems.length && activeVenteItems.length > 0\" \n                class=\"full-refund-warning\">\n              Tous les produits sélectionnés - la vente sera annulée\n            </div> -->\n            <div *ngIf=\"\n                  selectedItems.length === activeVenteItems.length &&\n                  activeVenteItems.length > 0 &&\n                  currentFilterKey !== 'annuler' &&\n                  !isActiveVenteAnnule()\n                \"\n                class=\"full-refund-warning\">\n              Tous les produits sélectionnés - la vente sera annulée\n            </div>\n\n          </ng-container>\n\n        </div>\n\n        <!-- Récapitulatif : Taxes / Total -->\n        <div class=\"summary_panel\">\n            <div class=\"double_row\">\n                <span>Taxes</span>\n                <span>00 CFA</span>\n            </div>\n            <div class=\"double_row total\">\n              <strong>Total</strong>\n              <strong>\n                <span *ngIf=\"selectedItems.length > 0 && activeVente\" style=\"text-decoration: line-through; opacity: 0.6;\">\n                  {{ activeVente.montantTotal | cfaCurrency }}\n                </span>\n                {{ getUpdatedTotalAmount(activeVente) | cfaCurrency }}\n              </strong>\n            </div>\n        </div>\n\n        <!-- Boutons d'action -->\n        <div class=\"btn_container\">\n            <!-- Bouton retour -->\n            <div class=\"btn_action_commande\">\n                <button class=\"btn_retourn\" (click)=\"router.navigate(['/pos-accueil'])\">\n                    <i class=\"ri-arrow-left-s-line\"></i>\n                </button>\n            </div>\n            \n            <!-- Bouton paiement -->\n            <div class=\"btn_content\">\n              <button class=\"btn-payment\" (click)=\"openCancelPopup()\">Annuler la commande</button>\n            </div>\n            \n            <!-- Bouton supprimer la commande -->\n            <div class=\"btn_action_commande\">\n                <button class=\"btn_delete\" (click)=\"removeCommande(activeCommandeId)\">\n                    <i class=\"ri-delete-bin-5-line\"></i>\n                </button>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!-- Ajoutez ceci à la fin de votre template -->\n<div *ngIf=\"showCancelPopup\" class=\"popup-overlay\">\n  <div class=\"popup\">\n\n    <!-- Bouton de fermeture en haut à droite -->\n    <button class=\"close-btn\" (click)=\"closeCancelPopup()\">\n      <i class=\"ri-close-line\"></i>\n    </button>\n\n    <h4 class=\"titlh\">Confirmation d'annulation</h4>\n    <p class=\"titlp\">Veuillez entrer le Code PIN pour annuler la commande.</p>\n    \n    <div class=\"pin-container\" [class.shake]=\"isCodeWrong\">\n      <input type=\"password\" maxlength=\"1\" [(ngModel)]=\"pin[0]\" #pin0 id=\"0\"\n             (input)=\"goToNext(pin0, pin1)\" \n             (keydown)=\"handleBackspace($event, 0, pin0, pin1)\" />\n\n      <input type=\"password\" maxlength=\"1\" [(ngModel)]=\"pin[1]\" #pin1 id=\"1\"\n             (input)=\"goToNext(pin1, pin2)\" \n             (keydown)=\"handleBackspace($event, 1, pin1, pin0)\" />\n\n      <input type=\"password\" maxlength=\"1\" [(ngModel)]=\"pin[2]\" #pin2 id=\"2\"\n             (input)=\"goToNext(pin2, pin3)\" \n             (keydown)=\"handleBackspace($event, 2, pin2, pin1)\" />\n\n      <input type=\"password\" maxlength=\"1\" [(ngModel)]=\"pin[3]\" #pin3 id=\"3\"\n             (input)=\"verifyCode()\" \n             (keydown)=\"handleBackspace($event, 3, pin3, pin2)\" />\n    </div>\n    <!-- <button (click)=\"verifyCode()\">Valider</button> -->\n  </div>\n</div>\n\n<!-- Popup pour le motif -->\n<div *ngIf=\"showMotifPopup\" class=\"popup-overlay\">\n  <div class=\"popup\">\n    <button class=\"close-btn\" (click)=\"closeAllPopups()\">\n      <i class=\"ri-close-line\"></i>\n    </button>\n\n    <h6>Motif du remboursement</h6>\n    <textarea [(ngModel)]=\"motifRemboursement\" placeholder=\"Raison du remboursement\" rows=\"4\"></textarea>\n    \n    <div class=\"btn-container\">\n      \n      <button class=\"btn-confirm\" (click)=\"confirmRemboursement()\">Confirmer</button>\n      <button class=\"btn-cancel\" (click)=\"closeAllPopups()\">Annuler</button>\n    </div>\n  </div>\n</div>","// creez un fichier : cfa-currency.pipe.ts\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'cfaCurrency'\n})\nexport class CfaCurrencyPipe implements PipeTransform {\n  transform(value: number | null | undefined): string {\n    if (value === null || value === undefined || isNaN(value)) {\n      return 'N/A';\n    }\n    const hasDecimals = value % 1 !== 0;\n      const formattedValue = value\n      .toFixed(hasDecimals ? 2 : 0)\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.');\n\n    return `${formattedValue} FCFA`;\n  }\n}","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable, switchMap } from \"rxjs\";\nimport { environment } from \"src/environments/environment\";\nimport { RemboursementRequest, VenteResponse } from \"../../MODELS/VenteModel/vente-model\";\nimport { UsersService } from \"../users.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PosCommandeService {\n  private apiUrl = environment.apiBaseUrl;\n\n  constructor(private http: HttpClient, private usersService: UsersService) {}\n\n  getVentesByVendeur(vendeurId: number): Observable<VenteResponse[]> {\n    return this.usersService.getValidAccessToken().pipe(\n      switchMap(token => {\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n        return this.http.get<VenteResponse[]>(`${this.apiUrl}/vente/vendeur/${vendeurId}`, { headers });\n      })\n    );\n  }\n\n  rembourserVente(request: RemboursementRequest): Observable<VenteResponse> {\n    return this.usersService.getValidAccessToken().pipe(\n      switchMap(token => {\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n        return this.http.post<VenteResponse>(\n          `${this.apiUrl}/vente/rembourser`, \n          request, \n          { headers }\n        );\n      })\n    );\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject, catchError, Observable, switchMap, tap, throwError } from 'rxjs';\nimport { Categorie } from '../MODELS/categorie.model';\nimport { environment } from 'src/environments/environment';\nimport { UsersService } from './users.service';\nimport { ProduitPaginatedResponseDTO } from '../MODELS/ProduitPaginatedResponseDTO';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategorieService {\n  private apiUrl = environment.apiBaseUrl;\n  private categoriesSubject = new BehaviorSubject<Categorie[]>([]);\n  public categories$ = this.categoriesSubject.asObservable();\n  constructor(private http: HttpClient, private usersService: UsersService) {}\n\n  ajouterCategorie(category: Categorie): Observable<Categorie> {\n    return this.usersService.getValidAccessToken().pipe(\n      switchMap(token => {\n        if (!token) {\n          console.error('⚠️ Token vide ou non défini ! Vérifiez que l\\'utilisateur est bien connecté.');\n          return throwError(() => new Error('Aucun token valide trouvé'));\n        }\n\n        const headers = new HttpHeaders({\n          'Authorization': `Bearer ${token}`\n        });\n\n        return this.http.post<Categorie>(`${this.apiUrl}/createCategory`, category, { headers }).pipe(\n          tap((newCategory) => {\n            // Met à jour le BehaviorSubject dès qu'une nouvelle catégorie est ajoutée\n            const currentCategories = this.categoriesSubject.value;\n            this.categoriesSubject.next([...currentCategories, newCategory]);\n          })\n        );\n      }),\n      catchError(error => {\n        console.error('Erreur lors de l\\'ajout de la catégorie:', error);\n        return throwError(() => error);\n      })\n    );\n  }\n\n getProduitsByCategorie(\n  categorieId: number,\n  page: number = 0,\n  size: number = 20\n): Observable<ProduitPaginatedResponseDTO> {\n  return this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      if (!token) {\n        console.error('⚠️ Token vide ou non défini ! Vérifiez que l\\'utilisateur est bien connecté.');\n        return new Observable<ProduitPaginatedResponseDTO>(); \n      }\n\n      const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n      const params = { page: page.toString(), size: size.toString() };\n\n      return this.http.get<ProduitPaginatedResponseDTO>(\n        `${this.apiUrl}/categories/${categorieId}/produits`,\n        { headers, params }\n      );\n    }),\n    catchError(error => {\n      console.error('Erreur lors de la récupération des produits paginés:', error);\n      return throwError(() => error);\n    })\n  );\n}\n\n\n  deleteCategorie(id: number): Observable<string> {\n    return this.usersService.getValidAccessToken().pipe(\n      switchMap(token => {\n        if (!token) {\n          console.error('⚠️ Token JWT manquant pour suppression catégorie.');\n          return throwError(() => new Error(\"Token manquant\"));\n        }\n\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n        console.log(\"🔹 Token envoyé pour DELETE catégorie :\", headers);\n\n        return this.http.delete(`${this.apiUrl}/deleteCategory/${id}`, {\n          headers,\n          responseType: 'text'\n        });\n      }),\n      catchError(error => {\n        console.error(\"❌ Erreur API DELETE :\", error);\n        return throwError(() => error);\n      })\n    );\n  }\n\n  getCategories(): Observable<Categorie[]> {\n    return this.usersService.getValidAccessToken().pipe(\n      switchMap(token => {\n        if (!token) {\n          console.error('⚠️ Token vide ou non défini ! Vérifiez que l\\'utilisateur est bien connecté.');\n          return throwError(() => new Error('Aucun token valide trouvé'));\n        }\n\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n\n        return this.http.get<Categorie[]>(`${this.apiUrl}/allCategory`, { headers }).pipe(\n          tap((categories) => {\n            // Met à jour le BehaviorSubject avec les catégories récupérées\n            this.categoriesSubject.next(categories);\n          })\n        );\n      }),\n      catchError(error => {\n        console.error('Erreur lors de la récupération des catégories:', error);\n        return throwError(() => error);\n      })\n    );\n  }\n\n}","// commande-state.service.ts\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\n\ninterface Commande {\n  id: string;\n  cart: Map<number, number>;\n  createdAt: Date;\n  totalItems?: number;\n  totalAmount?: number;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class CommandeStateService {\n  // Correction: Changer le type de commandesMap\n  private commandesMap = new Map<string, Commande>();\n  private commandesIds: string[] = ['001'];\n  private activeCommandeId = new BehaviorSubject<string>('001');\n  \n  activeCommandeId$ = this.activeCommandeId.asObservable();\n\n  private commandesIdsSubject = new BehaviorSubject<string[]>(this.commandesIds);\n  commandesIds$ = this.commandesIdsSubject.asObservable();\n\n  private commandeUpdated = new Subject<void>();\n  commandeUpdated$ = this.commandeUpdated.asObservable();\n\n\n  constructor() {\n    this.commandesMap.set('001', { \n      id: '001', \n      cart: new Map<number, number>(),\n      createdAt: new Date()\n    });\n  }\n\n  getCommandeDetails(id: string): Commande | undefined {\n    return this.commandesMap.get(id);\n  }\n\n  updateCommandeTotals(id: string, totalItems: number, totalAmount: number) {\n    const commande = this.commandesMap.get(id);\n    if (commande) {\n      commande.totalItems = totalItems;\n      commande.totalAmount = totalAmount;\n      this.commandesMap.set(id, commande);\n      \n    }\n  }\n\n  setActiveCommande(id: string) {\n    if (!this.commandesMap.has(id)) {\n      this.commandesMap.set(id, { \n        id, \n        cart: new Map<number, number>(),\n        createdAt: new Date()\n      });\n      this.commandesIds.push(id);\n    }\n    this.activeCommandeId.next(id);\n  }\n\n  // Correction: Retourner le cart de la commande\n  getActiveCart() {\n    const activeId = this.activeCommandeId.getValue();\n    const commande = this.commandesMap.get(activeId);\n    return commande ? commande.cart : new Map<number, number>();\n  }\n\n  updateActiveCart(cart: Map<number, number>) {\n    const activeId = this.activeCommandeId.getValue();\n    const commande = this.commandesMap.get(activeId);\n    if (commande) {\n      commande.cart = new Map(cart);\n      this.commandesMap.set(activeId, commande);\n    }\n  }\n\n  getAllCommandesIds() {\n    return [...this.commandesIds];\n  }\n\n  addNewCommande() {\n    const newId = (this.commandesIds.length + 1).toString().padStart(3, '0');\n    const newCommande: Commande = {\n      id: newId,\n      cart: new Map<number, number>(),\n      createdAt: new Date()\n    };\n    this.commandesMap.set(newId, newCommande);\n    this.commandesIds.push(newId);\n    this.commandesIdsSubject.next([...this.commandesIds]); // Notifier du changement\n    return newId;\n  }\n\n  // Ajout de la méthode removeCommande\n  removeCommande(id: string): void {\n    if (id === '001') {\n      // Ne pas supprimer la commande par défaut\n      return;\n    }\n    this.commandesMap.delete(id);\n    this.commandeUpdated.next();\n    const index = this.commandesIds.indexOf(id);\n    if (index !== -1) {\n      this.commandesIds.splice(index, 1);\n    }\n    // Si on supprime la commande active, on active la première commande\n    if (this.activeCommandeId.getValue() === id) {\n      this.activeCommandeId.next(this.commandesIds[0] || '001');\n    }\n    this.commandesIdsSubject.next([...this.commandesIds]);\n  }\n  \n  // Ajout d'une méthode pour obtenir l'ID actif\n  getActiveCommandeId(): string {\n    return this.activeCommandeId.getValue();\n  }\n}"],"names":["BehaviorSubject","ViewStateService","constructor","isListViewSubject","isListView$","asObservable","setViewPreference","isList","next","localStorage","setItem","factory","ɵfac","providedIn","CommonModule","FormsModule","firstValueFrom","Subject","takeUntil","environment","CfaCurrencyPipe","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r1","successMessage","errorMessage","ɵɵlistener","PosCommandeComponent_ul_16_li_1_Template_li_click_0_listener","opt_r5","ɵɵrestoreView","_r4","$implicit","ɵɵnextContext","ɵɵresetView","selectFilter","key","label","ɵɵtemplate","PosCommandeComponent_ul_16_li_1_Template","ɵɵproperty","filterOptions","PosCommandeComponent_ng_container_32_ul_1_Template_ul_click_0_listener","commande_r7","_r6","setActiveCommande","id","ɵɵclassProp","activeCommandeId","ɵɵtextInterpolate","ɵɵpipeBind2","createdAt","totalItems","ɵɵpipeBind1","totalAmount","ɵɵelementContainerStart","PosCommandeComponent_ng_container_32_ul_1_Template","PosCommandeComponent_ng_container_32_div_2_Template","commandes","length","PosCommandeComponent_ng_container_33_ul_1_Template_ul_click_0_listener","vente_r9","_r8","setActiveVente","venteId","activeVenteId","dateVente","getUpdatedTotalItems","getUpdatedTotalAmount","getVenteStatus","PosCommandeComponent_ng_container_33_ul_1_Template","PosCommandeComponent_ng_container_33_div_2_Template","ventes","item_r10","quantity","product","nom","prixVente","PosCommandeComponent_ng_container_36_li_2_Template","PosCommandeComponent_ng_container_36_div_3_Template","activeCommandeItems","ɵɵtwoWayListener","PosCommandeComponent_ng_container_37_li_39_input_3_Template_input_ngModelChange_0_listener","$event","_r13","item_r14","ɵɵtwoWayBindingSet","editQuantity","originalQuantity","ɵɵtwoWayProperty","PosCommandeComponent_ng_container_37_li_39_p_4_span_1_Template","currentFilterKey","originalPrice","ɵɵelement","PosCommandeComponent_ng_container_37_li_39_i_16_Template_i_click_0_listener","_r15","startEditQuantity","PosCommandeComponent_ng_container_37_li_39_i_17_Template_i_click_0_listener","_r16","onValidateQuantityEdit","PosCommandeComponent_ng_container_37_li_39_input_3_Template","PosCommandeComponent_ng_container_37_li_39_p_4_Template","PosCommandeComponent_ng_container_37_li_39_span_8_Template","PosCommandeComponent_ng_container_37_li_39_span_9_Template","PosCommandeComponent_ng_container_37_li_39_span_12_Template","PosCommandeComponent_ng_container_37_li_39_i_16_Template","PosCommandeComponent_ng_container_37_li_39_i_17_Template","PosCommandeComponent_ng_container_37_li_39_Template_input_ngModelChange_20_listener","_r12","selected","updateSelectedItems","editing","PosCommandeComponent_ng_container_37_Template_input_ngModelChange_18_listener","_r11","allSelected","toggleSelectAll","PosCommandeComponent_ng_container_37_li_39_Template","PosCommandeComponent_ng_container_37_div_40_Template","PosCommandeComponent_ng_container_37_div_41_Template","activeVenteItems","selectedItems","isActiveVenteAnnule","activeVente","montantTotal","PosCommandeComponent_div_61_Template_button_click_2_listener","_r17","closeCancelPopup","PosCommandeComponent_div_61_Template_input_ngModelChange_9_listener","pin","PosCommandeComponent_div_61_Template_input_input_9_listener","pin0_r18","ɵɵreference","pin1_r19","goToNext","PosCommandeComponent_div_61_Template_input_keydown_9_listener","handleBackspace","PosCommandeComponent_div_61_Template_input_ngModelChange_11_listener","PosCommandeComponent_div_61_Template_input_input_11_listener","pin2_r20","PosCommandeComponent_div_61_Template_input_keydown_11_listener","PosCommandeComponent_div_61_Template_input_ngModelChange_13_listener","PosCommandeComponent_div_61_Template_input_input_13_listener","pin3_r21","PosCommandeComponent_div_61_Template_input_keydown_13_listener","PosCommandeComponent_div_61_Template_input_ngModelChange_15_listener","PosCommandeComponent_div_61_Template_input_input_15_listener","verifyCode","PosCommandeComponent_div_61_Template_input_keydown_15_listener","isCodeWrong","PosCommandeComponent_div_62_Template_button_click_2_listener","_r22","closeAllPopups","PosCommandeComponent_div_62_Template_textarea_ngModelChange_6_listener","motifRemboursement","PosCommandeComponent_div_62_Template_button_click_8_listener","confirmRemboursement","PosCommandeComponent_div_62_Template_button_click_10_listener","PosCommandeComponent","router","viewState","commandeState","categorieService","posCommandeService","usersService","apiUrl","imgUrl","destroy$","isListView","showDropdown","showFilterDropdown","products","activeCommandeCart","Map","activeCommandeTotal","allVentes","showMotifPopup","isProcessing","currentFilterLabel","searchTerm","showCancelPopup","activeVenteLoading","scannerBuffer","lastKeyTime","venteLineSnapshots","SNAPSHOT_KEY","pendingRemboursementItem","pageSize","pageMap","ngOnInit","loadSnapshotsFromStorage","window","addEventListener","handleScannerInput","bind","pipe","subscribe","view","applyFilter","commandeUpdated$","loadCommandes","loadActiveCommandeDetails","activeCommandeId$","ngOnDestroy","complete","removeEventListener","ngAfterViewInit","updateSelectAllState","checked","forEach","item","raw","getItem","obj","JSON","parse","Object","keys","k","Number","isNaN","set","console","debug","e","warn","saveSnapshotsToStorage","v","String","stringify","ensureSnapshotForVente","lignes","has","Array","isArray","map","l","toggleFilterDropdown","closeFilterDropdown","resetPageForKey","opt","find","o","loadProducts","loadVentesAndFilter","getCategories","categories","categorie","produits","error","getAllCommandesIds","cur","get","setCurrentPage","commande","getCommandeDetails","cart","productId","p","updateCommandeTotals","Date","sort","a","b","ta","getTime","tb","updateActiveCommandeItems","push","vendeurId","getCurrentUser","getVentesByVendeur","rawLines","applyVentesFilter","first","err","filter","matchesVenteStatus","getTimeFromVente","candidates","date","timestamp","c","undefined","dt","idNum","cat","determineVenteCategory","loadVentes","loadActiveVenteDetails","_this","_asyncToGenerator","ensureFullVente","_ref","svcAny","getVenteById","all","apply","arguments","fullVente","idx","findIndex","lines","items","lignesVente","resolveNumberFrom","prototype","hasOwnProperty","call","n","replace","qtyKeysOriginal","qtyKeysCurrent","priceKeysOriginal","priceKeysCurrent","snapshot","findInSnapshot","ligne","prodId","produitId","idProduit","found","s","name","nomProduit","productName","toString","toLowerCase","sname","isCancelledSale","status","currentQty","currentPrice","prixUnitaire","originalQty","snapLine","productObj","currentQuantity","__rawLine","it","getTotalItems","vente","reduce","sum","quantite","removeCommande","removeProductFromCommande","delete","calculateTotalItems","calculateTotalAmount","total","onSearch","term","trim","includes","clientNom","numeroFacture","toUpperCase","normalizeStr","val","normalize","totalQuantites","vAny","paymentStatus","statut","etat","isPaid","paye","Boolean","x","terms","some","t","montantPaye","toggleView","viewType","pagePosVente","currentInput","nextInput","value","focus","event","index","prevInput","selectAllCheckbox","selectedCount","i","el","nativeElement","indeterminate","openCancelPopup","alert","enteredPin","join","isValid","handleInvalidPin","setTimeout","produitsQuantites","qtyToRefund","getProduitsQuantites","request","motif","rescodePin","rembourserVente","response","message","updateVenteStatus","newStatus","quantites","getSelectedAmount","price","getSelectedItemsCount","qty","toggleQuantityEdit","validateQuantityEdit","initialQuantity","firstInput","document","getElementById","log","now","test","split","getCurrentPage","page","getTotalForCurrentFilter","last","Math","max","ceil","min","prevPage","nextPage","isFirstPage","isLastPage","pagerTotal","pagerStart","start","pagerEnd","end","displayedCommandes","slice","displayedVentes","ɵɵdirectiveInject","i1","Router","i2","i3","CommandeStateService","i4","CategorieService","i5","PosCommandeService","i6","UsersService","selectors","viewQuery","PosCommandeComponent_Query","rf","ctx","PosCommandeComponent_div_1_Template","PosCommandeComponent_div_2_Template","PosCommandeComponent_Template_div_clickOutside_6_listener","_r1","PosCommandeComponent_Template_input_input_10_listener","searchInput_r3","PosCommandeComponent_Template_button_click_13_listener","PosCommandeComponent_ul_16_Template","PosCommandeComponent_Template_button_click_27_listener","PosCommandeComponent_Template_button_click_29_listener","PosCommandeComponent_ng_container_32_Template","PosCommandeComponent_ng_container_33_Template","PosCommandeComponent_ng_container_36_Template","PosCommandeComponent_ng_container_37_Template","PosCommandeComponent_span_48_Template","PosCommandeComponent_Template_button_click_53_listener","navigate","PosCommandeComponent_Template_button_click_56_listener","PosCommandeComponent_Template_button_click_59_listener","PosCommandeComponent_div_61_Template","PosCommandeComponent_div_62_Template","ɵɵtextInterpolate2","i7","DefaultValueAccessor","NumberValueAccessor","CheckboxControlValueAccessor","NgControlStatus","MaxLengthValidator","MinValidator","MaxValidator","NgModel","i8","NgForOf","NgIf","DatePipe","styles","transform","hasDecimals","formattedValue","toFixed","pure","HttpHeaders","switchMap","http","apiBaseUrl","getValidAccessToken","token","headers","post","ɵɵinject","HttpClient","catchError","Observable","tap","throwError","categoriesSubject","categories$","ajouterCategorie","category","Error","newCategory","currentCategories","getProduitsByCategorie","categorieId","size","params","deleteCategorie","responseType","commandesMap","commandesIds","commandesIdsSubject","commandesIds$","commandeUpdated","getActiveCart","activeId","getValue","updateActiveCart","addNewCommande","newId","padStart","newCommande","indexOf","splice","getActiveCommandeId"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}
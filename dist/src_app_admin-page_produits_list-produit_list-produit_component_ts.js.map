{"version":3,"file":"src_app_admin-page_produits_list-produit_list-produit_component_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAC+C;AACoE;AAC5C;AACjB;AAGe;AAQpB;AACU;;;;;;;;;;;;;;;;;;;ICdvDa,4DADF,cAA+C,cAChB;IAC3BA,uDAAA,cAA2B;IAC3BA,4DAAA,QAAG;IAAAA,oDAAA,4BAAqB;IAE5BA,0DAF4B,EAAI,EACxB,EACF;;;;;;IA0DYA,4DAAA,YAG8B;IAA1BA,wDAAA,mBAAAM,sDAAA;MAAAN,2DAAA,CAAAQ,GAAA;MAAA,MAAAC,MAAA,GAAAT,2DAAA;MAAA,OAAAA,yDAAA,CAASS,MAAA,CAAAG,aAAA,EAAe;IAAA,EAAC;IAACZ,0DAAA,EAAI;;;;;;IAElCA,4DAAA,YAG8B;IAA1BA,wDAAA,mBAAAa,sDAAA;MAAAb,2DAAA,CAAAc,GAAA;MAAA,MAAAL,MAAA,GAAAT,2DAAA;MAAA,OAAAA,yDAAA,CAASS,MAAA,CAAAG,aAAA,EAAe;IAAA,EAAC;IAACZ,0DAAA,EAAI;;;;;IAWhCA,4DAAA,WAA4C;IAAAA,oDAAA,+BAAwB;IAAAA,0DAAA,EAAO;;;;;IAC3EA,4DAAA,WAA6C;IAAAA,oDAAA,oDAAwC;IAAAA,0DAAA,EAAO;;;;;IAF9FA,4DAAA,cAAwE;IAEtEA,wDADA,IAAAgB,2CAAA,mBAA4C,IAAAC,2CAAA,mBACC;IAC/CjB,0DAAA,EAAM;;;;IAFGA,uDAAA,EAAmC;IAAnCA,wDAAA,SAAAS,MAAA,CAAAW,CAAA,QAAAC,MAAA,kBAAAZ,MAAA,CAAAW,CAAA,QAAAC,MAAA,aAAmC;IACnCrB,uDAAA,EAAoC;IAApCA,wDAAA,SAAAS,MAAA,CAAAW,CAAA,QAAAC,MAAA,kBAAAZ,MAAA,CAAAW,CAAA,QAAAC,MAAA,cAAoC;;;;;IAoBzCrB,4DAAA,qBAA4E;IAC1EA,oDAAA,GACF;IAAAA,0DAAA,EAAa;;;;IAF8CA,wDAAA,UAAAsB,SAAA,CAAgB;IACzEtB,uDAAA,EACF;IADEA,gEAAA,MAAAsB,SAAA,CAAAE,GAAA,MACF;;;;;IA4BJxB,4DAAA,cAAoF;IAClFA,oDAAA,mCACF;IAAAA,0DAAA,EAAM;;;;;IAiCFA,4DAAA,qBAAuF;IACrFA,oDAAA,GACF;IAAAA,0DAAA,EAAa;;;;IAFoDA,wDAAA,UAAAyB,cAAA,CAAqB;IACpFzB,uDAAA,EACF;IADEA,gEAAA,MAAAyB,cAAA,CAAAD,GAAA,MACF;;;;;IAoGExB,4DAAA,WAAkD;IAAAA,oDAAA,2DAA+C;IAAAA,0DAAA,EAAO;;;;;IACxGA,4DAAA,WAAkD;IAAAA,oDAAA,kEAAiD;IAAAA,0DAAA,EAAO;;;;;IAF5GA,4DAAA,cAAkF;IAEhFA,wDADA,IAAA0B,4CAAA,mBAAkD,IAAAC,4CAAA,mBACA;IACpD3B,0DAAA,EAAM;;;;IAFGA,uDAAA,EAAyC;IAAzCA,wDAAA,SAAAS,MAAA,CAAAW,CAAA,aAAAC,MAAA,kBAAAZ,MAAA,CAAAW,CAAA,aAAAC,MAAA,cAAyC;IACzCrB,uDAAA,EAAyC;IAAzCA,wDAAA,SAAAS,MAAA,CAAAW,CAAA,aAAAC,MAAA,kBAAAZ,MAAA,CAAAW,CAAA,aAAAC,MAAA,cAAyC;;;;;IAIpDrB,4DAAA,cAAoD;IAClDA,uDAAA,uBAQe;IACjBA,0DAAA,EAAM;;;;IARFA,uDAAA,EAAgC;IAMhCA,wDANA,aAAAS,MAAA,CAAAW,CAAA,aAAAQ,KAAA,CAAgC,4BAEL,eACb,iBACE,oBACG,0BACM;;;;;IAsC7B5B,4DAAA,cAAsF;IACpFA,oDAAA,iCACF;IAAAA,0DAAA,EAAM;;;;;IANRA,4DADJ,cAA6C,cACH;IACpCA,uDAAA,gBACyC;IACzCA,4DAAA,gBAAiD;IAAAA,oDAAA,qBAAc;IAAAA,0DAAA,EAAQ;IACvEA,wDAAA,IAAA6B,2CAAA,kBAAsF;IAGxF7B,0DAAA,EAAM;IACNA,4DAAA,cAAsC;IACpCA,uDAAA,gBAM2B;IAC3BA,4DAAA,gBAA+C;IAAAA,oDAAA,eAAQ;IAG7DA,0DAH6D,EAAQ,EAC3D,EAEJ;;;;IAfMA,uDAAA,GAAwD;IAAxDA,wDAAA,SAAAS,MAAA,CAAAW,CAAA,eAAAU,OAAA,IAAArB,MAAA,CAAAW,CAAA,eAAAW,OAAA,CAAwD;IAU5D/B,uDAAA,GAA+B;IAA/BA,wDAAA,UAAAS,MAAA,CAAAuB,mBAAA,GAA+B;;;;;IAevChC,4DAAA,YAAgE;IAAAA,oDAAA,wBAAiB;IAAAA,0DAAA,EAAI;;;;;IACrFA,4DAAA,YAA2E;IAAAA,oDAAA,GAAkB;IAAAA,0DAAA,EAAI;;;;IAAtBA,uDAAA,EAAkB;IAAlBA,+DAAA,CAAAS,MAAA,CAAAyB,YAAA,CAAkB;;;;;;IAS3FlC,4DAAA,iBAAsG;IAA/CA,wDAAA,mBAAAmC,iEAAA;MAAAnC,2DAAA,CAAAoC,GAAA;MAAA,MAAA3B,MAAA,GAAAT,2DAAA;MAAA,OAAAA,yDAAA,CAASS,MAAA,CAAA4B,UAAA,EAAY;IAAA,EAAC;IAC3ErC,uDAAA,YAAoC;IACtCA,0DAAA,EAAS;;;;;;IAEPA,4DADF,UAAuB,gBACiB;IACpCA,uDAAA,YAA8B;IAC9BA,4DAAA,QAAG;IAAAA,oDAAA,yBAAkB;IACvBA,0DADuB,EAAI,EACnB;IACRA,4DAAA,gBAAuF;IAAzCA,wDAAA,oBAAAsC,8DAAAC,MAAA;MAAAvC,2DAAA,CAAAwC,GAAA;MAAA,MAAA/B,MAAA,GAAAT,2DAAA;MAAA,OAAAA,yDAAA,CAAUS,MAAA,CAAAgC,cAAA,CAAAF,MAAA,CAAsB;IAAA,EAAC;IACjFvC,0DADE,EAAuF,EACnF;;;;;IAURA,4DAAA,cAAgD;IAC9CA,oDAAA,GACF;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,EACF;IADEA,gEAAA,MAAAS,MAAA,CAAAyB,YAAA,MACF;;;;;;IAWElC,4DADF,eAA2C,kBAC2B;IAA7BA,wDAAA,mBAAA0C,8DAAA;MAAA1C,2DAAA,CAAA2C,GAAA;MAAA,MAAAlC,MAAA,GAAAT,2DAAA;MAAA,OAAAA,yDAAA,CAASS,MAAA,CAAAmC,gBAAA,EAAkB;IAAA,EAAC;IAAC5C,oDAAA,eAAQ;IAC9EA,0DAD8E,EAAS,EACjF;;;;;;IASJA,4DAHN,eAA6C,eACkC,eACjD,eACD;IACnBA,uDAAA,eAA6D;IACjEA,0DAAA,EAAM;IACNA,4DAAA,SAAI;IAAAA,oDAAA,GAAqB;IAC3BA,0DAD2B,EAAK,EAC1B;IACNA,4DAAA,QAAG;IAAAA,oDAAA,GAAuB;IAAAA,0DAAA,EAAI;IAC9BA,4DAAA,kBAA+B;IAAvBA,wDAAA,mBAAA6C,8DAAA;MAAA7C,2DAAA,CAAA8C,IAAA;MAAA,MAAArC,MAAA,GAAAT,2DAAA;MAAA,OAAAA,yDAAA,CAASS,MAAA,CAAAsC,UAAA,EAAY;IAAA,EAAC;IAAC/C,oDAAA,UAAE;IAErCA,0DAFqC,EAAS,EACtC,EACF;;;;IAVuBA,uDAAA,EAAiD;IAAjDA,wDAAA,YAAAA,6DAAA,IAAAiD,GAAA,EAAAxC,MAAA,CAAAyC,SAAA,CAAAC,IAAA,cAAiD;IAG/DnD,uDAAA,GAAuB;IAAvBA,wDAAA,QAAAS,MAAA,CAAAyC,SAAA,CAAAE,KAAA,EAAApD,2DAAA,CAAuB;IAE5BA,uDAAA,GAAqB;IAArBA,+DAAA,CAAAS,MAAA,CAAAyC,SAAA,CAAAI,KAAA,CAAqB;IAExBtD,uDAAA,GAAuB;IAAvBA,+DAAA,CAAAS,MAAA,CAAAyC,SAAA,CAAAK,OAAA,CAAuB;;;;;IA8B9BvD,4DAAA,WAAsD;IAAAA,oDAAA,oDAAwC;IAAAA,0DAAA,EAAO;;;;;IACrGA,4DAAA,WAAsD;IAAAA,oDAAA,2DAA0C;IAAAA,0DAAA,EAAO;;;;;IAFzGA,4DAAA,cAA0F;IAExFA,wDADA,IAAAwD,mDAAA,mBAAsD,IAAAC,mDAAA,mBACA;IACxDzD,0DAAA,EAAM;;;;IAFGA,uDAAA,EAA6C;IAA7CA,wDAAA,SAAAS,MAAA,CAAAiD,CAAA,iBAAArC,MAAA,kBAAAZ,MAAA,CAAAiD,CAAA,iBAAArC,MAAA,cAA6C;IAC7CrB,uDAAA,EAA6C;IAA7CA,wDAAA,SAAAS,MAAA,CAAAiD,CAAA,iBAAArC,MAAA,kBAAAZ,MAAA,CAAAiD,CAAA,iBAAArC,MAAA,cAA6C;;;;;IAIxDrB,4DAAA,eAAiE;IAC/DA,oDAAA,GACF;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,EACF;IADEA,gEAAA,MAAAS,MAAA,CAAAkD,oBAAA,MACF;;;;;IAEA3D,4DAAA,eAAyC;IACvCA,uDAAA,eAAiH;IACjHA,4DAAA,WAAM;IAAAA,oDAAA,GAAgB;IACxBA,0DADwB,EAAO,EACzB;;;;IAFCA,uDAAA,EAAyF;IAAzFA,wDAAA,QAAAS,MAAA,CAAAmD,cAAA,qEAAA5D,2DAAA,CAAyF;IACxFA,uDAAA,GAAgB;IAAhBA,+DAAA,CAAAS,MAAA,CAAAoD,UAAA,CAAgB;;;;;;IAtB1B7D,4DAHN,eAAqD,eACE,eACjB,SAC5B;IAAAA,oDAAA,oCAAmB;IAAAA,0DAAA,EAAK;IAC5BA,4DAAA,kBAAyD;IAA/BA,wDAAA,mBAAA8D,8DAAA;MAAA9D,2DAAA,CAAA+D,IAAA;MAAA,MAAAtD,MAAA,GAAAT,2DAAA;MAAA,OAAAA,yDAAA,CAASS,MAAA,CAAAuD,kBAAA,EAAoB;IAAA,EAAC;IAAChE,oDAAA,aAAO;IAClEA,0DADkE,EAAS,EACrE;IAGFA,4DAFJ,gBAAuC,eACb,eAC6B;IACjDA,uDAAA,kBAEoE;IACpEA,4DAAA,kBAAmD;IAAAA,oDAAA,0BAAa;IAAAA,0DAAA,EAAQ;IACxEA,wDAAA,KAAAiE,4CAAA,kBAA0F;IAI5FjE,0DAAA,EAAM;IAMNA,wDAJA,KAAAkE,4CAAA,mBAAiE,KAAAC,4CAAA,mBAIxB;IAI3CnE,0DAAA,EAAM;IAEJA,4DADF,gBAA0B,mBACkC;IAA/BA,wDAAA,mBAAAoE,+DAAA;MAAApE,2DAAA,CAAA+D,IAAA;MAAA,MAAAtD,MAAA,GAAAT,2DAAA;MAAA,OAAAA,yDAAA,CAASS,MAAA,CAAAuD,kBAAA,EAAoB;IAAA,EAAC;IAAChE,oDAAA,eAAO;IAAAA,0DAAA,EAAS;IAC1EA,4DAAA,mBAGuC;IAA/BA,wDAAA,mBAAAqE,+DAAA;MAAArE,2DAAA,CAAA+D,IAAA;MAAA,MAAAtD,MAAA,GAAAT,2DAAA;MAAA,OAAAA,yDAAA,CAASS,MAAA,CAAA6D,kBAAA,EAAoB;IAAA,EAAC;IACpCtE,oDAAA,iBACF;IAIRA,0DAJQ,EAAS,EACL,EACD,EACH,EACF;;;;IAjCIA,uDAAA,GAAgC;IAAhCA,wDAAA,cAAAS,MAAA,CAAA8D,kBAAA,CAAgC;IAO1BvE,uDAAA,GAA4D;IAA5DA,wDAAA,SAAAS,MAAA,CAAAiD,CAAA,iBAAA5B,OAAA,IAAArB,MAAA,CAAAiD,CAAA,iBAAA3B,OAAA,CAA4D;IAM9D/B,uDAAA,EAA0B;IAA1BA,wDAAA,SAAAS,MAAA,CAAAkD,oBAAA,CAA0B;IAIT3D,uDAAA,EAAgB;IAAhBA,wDAAA,SAAAS,MAAA,CAAAoD,UAAA,CAAgB;IAS/B7D,uDAAA,GAA4E;IAA5EA,yDAAA,qBAAAS,MAAA,CAAA8D,kBAAA,CAAAE,KAAA,2BAA4E;IAD5EzE,wDAAA,aAAAS,MAAA,CAAA8D,kBAAA,CAAAxC,OAAA,CAAuC;;;;;IAyB3C/B,4DAAA,WAAmD;IAAAA,oDAAA,oDAAwC;IAAAA,0DAAA,EAAO;;;;;IAClGA,4DAAA,WAAmD;IAAAA,oDAAA,2DAA0C;IAAAA,0DAAA,EAAO;;;;;IAFtGA,4DAAA,cAAoF;IAElFA,wDADA,IAAA0E,mDAAA,mBAAmD,IAAAC,mDAAA,mBACA;IACrD3E,0DAAA,EAAM;;;;IAFGA,uDAAA,EAA0C;IAA1CA,wDAAA,SAAAS,MAAA,CAAAmE,CAAA,cAAAvD,MAAA,kBAAAZ,MAAA,CAAAmE,CAAA,cAAAvD,MAAA,cAA0C;IAC1CrB,uDAAA,EAA0C;IAA1CA,wDAAA,SAAAS,MAAA,CAAAmE,CAAA,cAAAvD,MAAA,kBAAAZ,MAAA,CAAAmE,CAAA,cAAAvD,MAAA,cAA0C;;;;;IAIrDrB,4DAAA,eAA8D;IAC5DA,oDAAA,GACF;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,EACF;IADEA,gEAAA,MAAAS,MAAA,CAAAoE,iBAAA,MACF;;;;;IAEA7E,4DAAA,eAAyC;IACvCA,uDAAA,eAAiH;IACjHA,4DAAA,WAAM;IAAAA,oDAAA,GAAgB;IACxBA,0DADwB,EAAO,EACzB;;;;IAFCA,uDAAA,EAAyF;IAAzFA,wDAAA,QAAAS,MAAA,CAAAmD,cAAA,qEAAA5D,2DAAA,CAAyF;IACxFA,uDAAA,GAAgB;IAAhBA,+DAAA,CAAAS,MAAA,CAAAoD,UAAA,CAAgB;;;;;;IAtB1B7D,4DAHN,eAAiD,eACM,eACjB,SAC5B;IAAAA,oDAAA,gCAAe;IAAAA,0DAAA,EAAK;IACxBA,4DAAA,kBAAqD;IAA3BA,wDAAA,mBAAA8E,8DAAA;MAAA9E,2DAAA,CAAA+E,IAAA;MAAA,MAAAtE,MAAA,GAAAT,2DAAA;MAAA,OAAAA,yDAAA,CAASS,MAAA,CAAAuE,cAAA,EAAgB;IAAA,EAAC;IAAChF,oDAAA,aAAO;IAC9DA,0DAD8D,EAAS,EACjE;IAGFA,4DAFJ,gBAAoC,eACV,eAC6B;IACjDA,uDAAA,kBAE6D;IAC7DA,4DAAA,kBAAgD;IAAAA,oDAAA,sBAAS;IAAAA,0DAAA,EAAQ;IACjEA,wDAAA,KAAAiF,4CAAA,kBAAoF;IAItFjF,0DAAA,EAAM;IAMNA,wDAJA,KAAAkF,4CAAA,mBAA8D,KAAAC,4CAAA,mBAIrB;IAI3CnF,0DAAA,EAAM;IAEJA,4DADF,gBAA0B,mBAC8B;IAA3BA,wDAAA,mBAAAoF,+DAAA;MAAApF,2DAAA,CAAA+E,IAAA;MAAA,MAAAtE,MAAA,GAAAT,2DAAA;MAAA,OAAAA,yDAAA,CAASS,MAAA,CAAAuE,cAAA,EAAgB;IAAA,EAAC;IAAChF,oDAAA,eAAO;IAAAA,0DAAA,EAAS;IACtEA,4DAAA,mBAGoC;IAA5BA,wDAAA,mBAAAqF,+DAAA;MAAArF,2DAAA,CAAA+E,IAAA;MAAA,MAAAtE,MAAA,GAAAT,2DAAA;MAAA,OAAAA,yDAAA,CAASS,MAAA,CAAA6E,eAAA,EAAiB;IAAA,EAAC;IACjCtF,oDAAA,iBACF;IAIRA,0DAJQ,EAAS,EACL,EACD,EACH,EACF;;;;IAjCIA,uDAAA,GAA6B;IAA7BA,wDAAA,cAAAS,MAAA,CAAA8E,eAAA,CAA6B;IAOvBvF,uDAAA,GAAsD;IAAtDA,wDAAA,SAAAS,MAAA,CAAAmE,CAAA,cAAA9C,OAAA,IAAArB,MAAA,CAAAmE,CAAA,cAAA7C,OAAA,CAAsD;IAMxD/B,uDAAA,EAAuB;IAAvBA,wDAAA,SAAAS,MAAA,CAAAoE,iBAAA,CAAuB;IAIN7E,uDAAA,EAAgB;IAAhBA,wDAAA,SAAAS,MAAA,CAAAoD,UAAA,CAAgB;IAS/B7D,uDAAA,GAAyE;IAAzEA,yDAAA,qBAAAS,MAAA,CAAA8E,eAAA,CAAAd,KAAA,2BAAyE;IADzEzE,wDAAA,aAAAS,MAAA,CAAA8E,eAAA,CAAAxD,OAAA,CAAoC;;;AD7c9C,MAAOyD,oBAAoB;EAyC/BC,gBAAgBA,CAACC,IAAe;IAAU,IAAI,CAACxC,SAAS,GAAGwC,IAAI;IAAE,IAAI,CAACC,SAAS,GAAG,IAAI;EAAE;EACxF;EACA5C,UAAUA,CAAA;IAAW,IAAI,CAAC4C,SAAS,GAAG,KAAK;IAAE,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;EAAE;EA+BjF;EACA,IAAInC,CAACA,CAAA;IAAK,OAAO,IAAI,CAACa,kBAAkB,CAACuB,QAAQ;EAAE;EACnD,IAAIlB,CAACA,CAAA;IAAK,OAAO,IAAI,CAACW,eAAe,CAACO,QAAQ;EAAE;EAChD,IAAI1E,CAACA,CAAA;IAAK,OAAO,IAAI,CAAC2E,mBAAmB,CAACD,QAAQ;EAAE;EAEpDE;EACE;EACQC,gBAAkC,EAClCC,kBAAsC,EACtCC,cAA8B,EAC9BC,EAAe,EACfR,MAAc,EACdS,KAAqB,EACrBC,YAA0B;IAN1B,KAAAL,gBAAgB,GAAhBA,gBAAgB;IAChB,KAAAC,kBAAkB,GAAlBA,kBAAkB;IAClB,KAAAC,cAAc,GAAdA,cAAc;IACd,KAAAC,EAAE,GAAFA,EAAE;IACF,KAAAR,MAAM,GAANA,MAAM;IACN,KAAAS,KAAK,GAALA,KAAK;IACL,KAAAC,YAAY,GAAZA,YAAY;IAtFtB,KAAAC,aAAa,GAAa,EAAE;IAC5B,KAAAC,gBAAgB,GAAQ,IAAI;IAC5B,KAAAC,wBAAwB,GAAe,IAAI;IAC3C,KAAAC,gBAAgB,GAAW,sBAAsB;IACjD,KAAAC,SAAS,GAAU,EAAE;IACrB,KAAAC,SAAS,GAAG,IAAI;IAChB,KAAAC,gBAAgB,GAAa,EAAE;IAC/B,KAAAC,YAAY,GAAW,EAAE;IACzB,KAAAC,UAAU,GAAW,CAAC;IACtB,KAAAlD,UAAU,GAAW,EAAE;IACvB,KAAAD,cAAc,GAA6B,EAAE;IAK7C,KAAA1B,YAAY,GAAW,EAAE;IACzB,KAAAyB,oBAAoB,GAAW,EAAE;IACjC,KAAAkB,iBAAiB,GAAW,EAAE;IAC9B,KAAAmC,UAAU,GAAW,EAAE;IACvB,KAAAC,YAAY,GAAW,EAAE;IACzB,KAAAC,UAAU,GAAW,EAAE;IACvB,KAAAC,SAAS,GAAwB,SAAS;IAC1C,KAAAC,UAAU,GAAkB,IAAI;IAChC,KAAAC,aAAa,GAAW,EAAE;IAC1B,KAAAC,iBAAiB,GAAW,EAAE;IAC9B,KAAAC,cAAc,GAAU,EAAE;IAC1B;IACA,KAAAC,SAAS,GAAgB,IAAI;IAC7B,KAAAC,SAAS,GAAY,KAAK;IAC1B;IACA,KAAA9B,SAAS,GAAY,KAAK;IAC1B;IACA,KAAA+B,OAAO,GAAW,yBAAyB;IAC3C,KAAAC,WAAW,GAAkB,IAAI;IACzB,KAAAC,UAAU,GAAE7H,qEAAW,CAAC8H,UAAU;IAChC,KAAAC,MAAM,GAAG/H,qEAAW,CAACgI,MAAM;IAGrC,KAAAC,YAAY,GAA4B,IAAI;IAC5C,KAAAC,kBAAkB,GAAkB,IAAI;IAIxC;IACA,KAAA/E,SAAS,GAAc;MAAEI,KAAK,EAAE,EAAE;MAAEC,OAAO,EAAE,EAAE;MAAEH,KAAK,EAAE,EAAE;MAAED,IAAI,EAAE;IAAS,CAAE;IAC7E,KAAA+E,WAAW,GAAG,KAAK;IACnB,KAAAC,iBAAiB,GAAY,KAAK;IAClC,KAAAC,aAAa,GAAY,KAAK;IAC9B,KAAAC,SAAS,GAAY,KAAK;IAE1B;IACA,KAAAC,SAAS,GAAG,IAAIlJ,uDAAW,EAAE;IAC7B,KAAAmJ,YAAY,GAAG,IAAInJ,uDAAW,EAAE;IAEhC;IACA,KAAAoJ,OAAO,GAAY;MACjBC,EAAE,EAAE,CAAC;MACLjH,GAAG,EAAE,EAAE;MACPkH,SAAS,EAAE,CAAC;MACZC,WAAW,EAAE,EAAE;MACfC,aAAa,EAAE,EAAE;MACjBC,SAAS,EAAE,CAAC;MACZC,QAAQ,EAAE,CAAC;MACXC,UAAU,EAAE,CAAC;MACbC,WAAW,EAAE,IAAI;MACjBC,OAAO,EAAE,IAAI;MACbC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,KAAK;MACdrC,UAAU,EAAE;MACZ;KACD;IAwGD,KAAAsC,OAAO,GAAgB,EAAE,CAAC,CAAC;IAC3B,KAAAC,YAAY,GAAkB,EAAE,CAAC,CAAC;IAClC,KAAAC,eAAe,GAA4B5J,wCAAE,CAAC,EAAE,CAAC;IACjD,KAAA6J,gBAAgB,GAA8B7J,wCAAE,CAAC,EAAE,CAAC;IAsRpD;IACA,KAAA8J,aAAa,GAAG,IAAIrK,uDAAW,EAAE;IACjC,KAAAsK,oBAAoB,GAAY,KAAK;IACrC,KAAAC,iBAAiB,GAAY,KAAK;EApX/B;EAEHC,QAAQA,CAAA;IACN;IACA;IACA;IACA,IAAI,CAACC,2BAA2B,EAAE;IAClC,IAAI,CAACC,sBAAsB,EAAE;IAC7B,IAAI,CAACC,qBAAqB,EAAE;IAC5B,IAAI,CAACC,kBAAkB,EAAE;IACzB,IAAI,CAACC,iCAAiC,EAAE;IACxC,IAAI,CAACC,8BAA8B,EAAE;IACrC,IAAI,CAACC,8BAA8B,EAAE;IACrC,IAAI,CAACpE,mBAAmB,CAACqE,OAAO,EAAE;IAClC,IAAI,CAAC9B,SAAS,CAAC8B,OAAO,EAAE;IACxB,IAAI,CAAC7B,YAAY,CAAC6B,OAAO,EAAE;IAE3B,IAAI,CAAC/D,KAAK,CAACgE,WAAW,CAACC,SAAS,CAACC,MAAM,IAAG;MACxC,IAAI,CAACtC,kBAAkB,GAAGsC,MAAM,CAAC,YAAY,CAAC,GAAG,CAACA,MAAM,CAAC,YAAY,CAAC,GAAG,IAAI;MAC7E,IAAI,CAACC,UAAU,EAAE;IACnB,CAAC,CAAC;EACJ;EAEA;EACAC,qBAAqBA,CAACC,QAAa;IACjC;IACA,MAAMC,YAAY,GAAGD,QAAQ,CAACvH,IAAI,KAAK,SAAS,GAAG,uBAAuB,GAAG,sBAAsB;IACnG,IAAI,CAACsC,gBAAgB,CAAC;MACpBnC,KAAK,EAAEoH,QAAQ,CAACvH,IAAI,KAAK,SAAS,GAAG,QAAQ,GAAG,QAAQ;MACxDI,OAAO,EAAEmH,QAAQ,CAACnH,OAAO;MACzBH,KAAK,EAAEuH,YAAY;MACnBxH,IAAI,EAAEuH,QAAQ,CAACvH;KAChB,CAAC;EACJ;EAEAyH,cAAcA,CAACC,KAAY;IACzB;IACA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAA0B;IACjDC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEH,QAAQ,CAACI,OAAO,CAAC;IAC3C;EACF;EAEA7I,UAAUA,CAAA;IACR,IAAI,CAACsF,WAAW,GAAG,IAAI;IACvB,IAAI,CAACH,SAAS,GAAG,IAAI;EACvB;EAEA;EACA/E,cAAcA,CAACoI,KAAY;IACzB,MAAMM,KAAK,GAAGN,KAAK,CAACE,MAA0B;IAC9C,IAAII,KAAK,CAACC,KAAK,IAAID,KAAK,CAACC,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;MACzC,MAAMC,IAAI,GAAGH,KAAK,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;MAE7B;MACA,MAAMG,OAAO,GAAG,CAAC,GAAG,IAAI,GAAG,IAAI;MAC/B,IAAID,IAAI,CAACE,IAAI,GAAGD,OAAO,EAAE;QACvB,IAAI,CAACrJ,YAAY,GAAG,+EAA+E;QACnG,IAAI,CAAC8F,YAAY,GAAG,IAAI;QACxB,IAAI,CAACR,SAAS,GAAG,IAAI,CAAC,CAAE;QACxB,IAAI,CAACG,WAAW,GAAG,IAAI;QACvB;MACF;MAEA;MACA,IAAI,CAACzF,YAAY,GAAG,EAAE;MACtB,IAAI,CAAC8F,YAAY,GAAGsD,IAAI;MACxB,IAAI,CAAC9D,SAAS,GAAG8D,IAAI,CAAC,CAAC;MAEvB,MAAMG,MAAM,GAAG,IAAIC,UAAU,EAAE;MAC/BD,MAAM,CAACE,MAAM,GAAIC,CAAC,IAAI;QACpB,IAAI,CAACjE,WAAW,GAAGiE,CAAC,CAACb,MAAM,EAAEc,MAAgB;MAC/C,CAAC;MACDJ,MAAM,CAACK,aAAa,CAAC,IAAI,CAAC9D,YAAY,CAAC;IACzC;EACF;EAEA+D,WAAWA,CAACvD,OAAgB;IAC1B,IAAIA,OAAO,CAACW,KAAK,EAAE;MACjB,OAAO,IAAI,CAACrB,MAAM,GAAGU,OAAO,CAACW,KAAK,CAAC,CAAE;IACvC,CAAC,MAAM,IAAIX,OAAO,CAAChH,GAAG,EAAE;MACtB,MAAMwK,WAAW,GAAGxD,OAAO,CAAChH,GAAG,CAACyK,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,CAAC,CAAE;MAC1D,OAAO,sBAAsBF,WAAW,MAAM,CAAC,CAAE;IACnD,CAAC,MAAM;MACL,OAAO,yBAAyB,CAAC,CAAE;IACrC;EACF;EAQA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACAG,iBAAiBA,CAAA;IACf,IAAI,CAAChE,iBAAiB,GAAG,IAAI;IAC7B,IAAI,CAAC5D,kBAAkB,CAAC6H,KAAK,EAAE;IAC/B,IAAI,CAACzI,oBAAoB,GAAG,EAAE;IAC9B,IAAI,CAACE,UAAU,GAAG,EAAE;EACtB;EAEAG,kBAAkBA,CAAA;IAChB,IAAI,CAACmE,iBAAiB,GAAG,KAAK;EAChC;EAEA;EACAkE,aAAaA,CAAA;IACX,IAAI,CAACjE,aAAa,GAAG,IAAI;IACzB,IAAI,CAAC7C,eAAe,CAAC6G,KAAK,EAAE;IAC5B,IAAI,CAACvH,iBAAiB,GAAG,EAAE;IAC3B,IAAI,CAAChB,UAAU,GAAG,EAAE;EACtB;EAEAmB,cAAcA,CAAA;IACZ,IAAI,CAACoD,aAAa,GAAG,KAAK;EAC5B;EAGDyB,2BAA2BA,CAAA;IAC1B,MAAMyC,KAAK,GAAG,IAAI,CAAChG,YAAY,CAACiG,mBAAmB,EAAE,CAAC,CAAC;IAEvD,IAAI,CAACD,KAAK,EAAE;MACVtB,OAAO,CAACwB,KAAK,CAAC,sBAAsB,CAAC;MACrC;IACF;IAEA;IACA,IAAI,CAACvG,gBAAgB,CAACwG,aAAa,EAAE,CAACnC,SAAS,CAAC;MAC9CoC,IAAI,EAAGC,UAAU,IAAI;QACnB3B,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAE0B,UAAU,CAAC;QAC5D,IAAI,CAACtD,OAAO,GAAGsD,UAAU;QAEzB,IAAI,CAACpD,eAAe,GAAG,IAAI,CAACjB,SAAS,CAACsE,YAAY,CAACC,IAAI,CACrDjN,+CAAS,CAAqB,EAAE,CAAC,EACjCF,yCAAG,CAACkC,KAAK,IAAKA,KAAK,GAAI,OAAOA,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAGA,KAAK,CAACJ,GAAG,GAAI,EAAG,CAAC,EAC5E9B,yCAAG,CAACoN,IAAI,IAAKA,IAAI,GAAG,IAAI,CAACC,OAAO,CAACD,IAAI,CAAC,GAAG,IAAI,CAACzD,OAAO,CAAC2D,KAAK,EAAG,CAAC,CAChE;MACH,CAAC;MACDR,KAAK,EAAGA,KAAK,IAAI;QACfxB,OAAO,CAACwB,KAAK,CAAC,iDAAiD,EAAEA,KAAK,CAAC;MACzE;KACD,CAAC;IAEF;IACA,IAAI,CAACtG,kBAAkB,CAAC+G,cAAc,EAAE,CAAC3C,SAAS,CAAC;MACjDoC,IAAI,EAAGQ,YAAY,IAAI;QACrBlC,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAEiC,YAAY,CAAC;QACpE,IAAI,CAAC5D,YAAY,GAAG4D,YAAY;QAEhC,IAAI,CAAC1D,gBAAgB,GAAG,IAAI,CAACjB,YAAY,CAACqE,YAAY,CAACC,IAAI,CACzDjN,+CAAS,CAAuB,EAAE,CAAC,EACnCF,yCAAG,CAACkC,KAAK,IAAKA,KAAK,GAAI,OAAOA,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAGA,KAAK,CAACJ,GAAG,GAAI,EAAG,CAAC,EAC5E9B,yCAAG,CAACoN,IAAI,IAAKA,IAAI,GAAG,IAAI,CAACK,YAAY,CAACL,IAAI,CAAC,GAAG,IAAI,CAACxD,YAAY,CAAC0D,KAAK,EAAG,CAAC,CAC1E;MACH,CAAC;MACDR,KAAK,EAAGA,KAAK,IAAI;QACfxB,OAAO,CAACwB,KAAK,CAAC,uDAAuD,EAAEA,KAAK,CAAC;MAC/E;KACD,CAAC;EACJ;EAGE1C,sBAAsBA,CAAA;IACpB,IAAI,CAAC/D,mBAAmB,GAAG,IAAI,CAACK,EAAE,CAACgH,KAAK,CAAC;MACvC5L,GAAG,EAAE,CAAC,EAAE,EAAE,CAAChC,sDAAU,CAAC6N,QAAQ,EAAE7N,sDAAU,CAAC8N,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MACzD5E,SAAS,EAAE,CAAC,EAAE,EAAElJ,sDAAU,CAAC6N,QAAQ,CAAC;MACpCxE,SAAS,EAAE,CAAC,EAAE,CAAC;MACfC,QAAQ,EAAE,CAAC,EAAE,CAAC;MACdC,UAAU,EAAE,CAAC,EAAE,EAAEvJ,sDAAU,CAAC6N,QAAQ,CAAC;MACrC1E,WAAW,EAAE,CAAC,EAAE,CAAC;MACjBO,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC1J,sDAAU,CAAC8N,SAAS,CAAC,CAAC,CAAC,EAAE9N,sDAAU,CAAC+N,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MACnEvE,WAAW,EAAE,CAAC,EAAE,CAAC;MACjBC,OAAO,EAAE,CAAC,EAAE;KACb,CAAC;EACJ;EAEA;EACA;EACA;EACA;EACA;EACA;EAEAc,qBAAqBA,CAAA;IACnB;IACA,IAAI,CAACxF,kBAAkB,GAAG,IAAI,CAAC6B,EAAE,CAACgH,KAAK,CAAC;MACtCI,YAAY,EAAE,CAAC,EAAE,EAAE,CAAC,wBAAyBhO,sDAAU,CAAC8N,SAAS,CAAC,CAAC,CAAC,EAAE9N,sDAAU,CAAC+N,SAAS,CAAC,EAAE,CAAC,CAAC;KAChG,CAAC;EACJ;EAEAvD,kBAAkBA,CAAA;IAChB;IACA,IAAI,CAACzE,eAAe,GAAG,IAAI,CAACa,EAAE,CAACgH,KAAK,CAAC;MACnCK,SAAS,EAAE,CAAC,EAAE,EAAE,CAAEjO,sDAAU,CAAC8N,SAAS,CAAC,CAAC,CAAC,EAAE9N,sDAAU,CAAC+N,SAAS,CAAC,EAAE,CAAC,CAAC;KACrE,CAAC;EACJ;EAEAtD,iCAAiCA,CAAA;IAC/B;IACA,IAAI,CAAC1F,kBAAkB,CAACmJ,GAAG,CAAC,cAAc,CAAC,EAAEd,YAAY,CAACtC,SAAS,CAAC,MAAK;MACvE,IAAI,CAAC3G,oBAAoB,GAAG,EAAE;MAC9B,IAAI,CAACE,UAAU,GAAG,EAAE;MACpB,IAAI,CAACD,cAAc,GAAG,EAAE;IAC1B,CAAC,CAAC;EACJ;EAEAsG,8BAA8BA,CAAA;IAC5B;IACA,IAAI,CAAC3E,eAAe,CAACmI,GAAG,CAAC,WAAW,CAAC,EAAEd,YAAY,CAACtC,SAAS,CAAC,MAAK;MACjE,IAAI,CAACzF,iBAAiB,GAAG,EAAE;MAC3B,IAAI,CAAChB,UAAU,GAAG,EAAE;MACpB,IAAI,CAACD,cAAc,GAAG,EAAE;IAC1B,CAAC,CAAC;EACJ;EAEAuG,8BAA8BA,CAAA;IAC5B;IACA,IAAI,CAACpE,mBAAmB,CAAC2H,GAAG,CAAC,UAAU,CAAC,EAAEd,YAAY,CAACtC,SAAS,CAAC1I,KAAK,IAAG;MACvE,IAAI,CAACsG,WAAW,GAAGtG,KAAK,IAAIA,KAAK,CAACyJ,MAAM,IAAI,CAAC;IAC/C,CAAC,CAAC;EACJ;EAEA;EACAsC,cAAcA,CAACC,QAAoB;IAC/B5C,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAE2C,QAAQ,CAAC;IAE/C;IACA,IAAIA,QAAQ,KAAK,IAAI,EAAE;MACnB,IAAI,CAACpH,gBAAgB,GAAG,IAAI;MAC5B,IAAI,CAACE,gBAAgB,GAAG,sBAAsB,CAAC,CAAC;IACpD,CAAC,MAAM;MACH,IAAI,CAACF,gBAAgB,GAAGoH,QAAQ;MAChC,IAAI,CAAClH,gBAAgB,GAAGkH,QAAQ,CAACpM,GAAG,IAAI,mBAAmB,CAAC,CAAC;IACjE;IAEAwJ,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAE,IAAI,CAACzE,gBAAgB,CAAC;IACzEwE,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAE,IAAI,CAACvE,gBAAgB,CAAC;IAEzE;IACA,IAAI,CAAC8D,UAAU,EAAE;EACrB;EAEAA,UAAUA,CAAA;IACR,MAAMqD,OAAO,GAAG,IAAI,CAACxH,KAAK,CAACyH,QAAQ,CAACC,QAAQ,CAACL,GAAG,CAAC,IAAI,CAAC;IACtD,MAAMM,SAAS,GAAGH,OAAO,GAAG,CAACA,OAAO,GAAG,CAAC;IAExC,IAAI,CAAC1H,cAAc,CAAC8H,cAAc,CAACD,SAAS,CAAC,CAAC1D,SAAS,CAAC;MACtDoC,IAAI,EAAGhH,IAAa,IAAI;QACtB,IAAI,CAAC8C,OAAO,GAAG9C,IAAI;QACnB,IAAI,CAACK,mBAAmB,CAACmI,UAAU,CAAC,IAAI,CAAC1F,OAAO,CAAC;QACjD,IAAI,CAAC2F,iBAAiB,EAAE;QAExB;QACA,IAAI,CAAC7F,SAAS,CAAC8B,OAAO,EAAE;QACxB,IAAI,CAAC7B,YAAY,CAAC6B,OAAO,EAAE;QAE3B;QACA,IAAI,IAAI,CAAC5B,OAAO,CAAC7B,SAAS,IAAI,IAAI,CAAC6B,OAAO,CAAC7B,SAAS,CAAC0E,MAAM,GAAG,CAAC,EAAE;UAC/D,IAAI,CAACxE,gBAAgB,GAAG,IAAI,CAAC2B,OAAO,CAAC7B,SAAS,CAACjH,GAAG,CAAC0O,CAAC,IAAIA,CAAC,CAAC5M,GAAG,CAAC;UAE9D,IAAI,IAAI,CAACyG,kBAAkB,EAAE;YAC3B,MAAM2F,QAAQ,GAAG,IAAI,CAACpF,OAAO,CAAC7B,SAAS,CAAC0H,IAAI,CAACD,CAAC,IAAIA,CAAC,CAAC3F,EAAE,KAAK,IAAI,CAACR,kBAAkB,CAAC;YACnF,IAAI,CAACnB,YAAY,GAAG8G,QAAQ,GAAGA,QAAQ,CAACpM,GAAG,GAAG,sBAAsB;UACtE;QACF,CAAC,MAAM;UACL,IAAI,CAACqF,gBAAgB,GAAG,CAAC,iBAAiB,CAAC;UAC3C,IAAI,CAACC,YAAY,GAAG,iBAAiB;QACvC;MACF,CAAC;MACD0F,KAAK,EAAG8B,GAAG,IAAI;QACbtD,OAAO,CAACwB,KAAK,CAAC,2CAA2C,EAAE8B,GAAG,CAAC;MACjE;KACD,CAAC;EACJ;EAEAtM,mBAAmBA,CAAA;IACjB,IAAI,CAAC,IAAI,CAACiG,kBAAkB,IAAI,CAAC,IAAI,CAACO,OAAO,CAAC7B,SAAS,EAAE,OAAO,CAAC;IACjE,MAAMiH,QAAQ,GAAG,IAAI,CAACpF,OAAO,CAAC7B,SAAS,CAAC0H,IAAI,CAACD,CAAC,IAAIA,CAAC,CAAC3F,EAAE,KAAK,IAAI,CAACR,kBAAkB,CAAC;IACnF,OAAO2F,QAAQ,EAAE9E,QAAQ,IAAI,CAAC;EAChC;EAEAyF,gBAAgBA,CAAC5H,SAAsE;IACrF,IAAIA,SAAS,IAAIA,SAAS,CAAC0E,MAAM,GAAG,CAAC,EAAE;MACrC,OAAO1E,SAAS,CAACjH,GAAG,CAAC0O,CAAC,IAAI,GAAGA,CAAC,CAAC5M,GAAG,SAAS4M,CAAC,CAAC3F,EAAE,iBAAiB2F,CAAC,CAACtF,QAAQ,EAAE,CAAC;IAC/E;IACAkC,OAAO,CAACwB,KAAK,CAAC,yCAAyC,CAAC;IACxD,OAAO,CAAC,iBAAiB,CAAC;EAC5B;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA5L,aAAaA,CAAA;IACX,IAAI,CAACyH,SAAS,GAAG,CAAC,IAAI,CAACA,SAAS;IAEhC,IAAI,IAAI,CAACA,SAAS,EAAE;MAClB;MACA,IAAI,CAACtC,mBAAmB,CAACyI,MAAM,EAAE;MACjC,IAAI,CAAClG,SAAS,CAACkG,MAAM,EAAE;MACvB,IAAI,CAACjG,YAAY,CAACiG,MAAM,EAAE;IAC5B,CAAC,MAAM;MACL;MACA,IAAI,CAACzI,mBAAmB,CAACqE,OAAO,EAAE;MAClC,IAAI,CAAC9B,SAAS,CAAC8B,OAAO,EAAE;MACxB,IAAI,CAAC7B,YAAY,CAAC6B,OAAO,EAAE;MAE3B;MACA,IAAI,CAACI,UAAU,EAAE;IACnB;EACF;EAEA;EACAiE,kBAAkBA,CAAC5D,KAAU;IAC3BG,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEJ,KAAK,CAAC6D,MAAM,CAAC9M,KAAK,CAAC;IACxD,IAAIiJ,KAAK,CAAC6D,MAAM,IAAI7D,KAAK,CAAC6D,MAAM,CAAC9M,KAAK,EAAE;MACtC,IAAI,CAACmE,mBAAmB,CAAC2H,GAAG,CAAC,aAAa,CAAC,EAAEiB,QAAQ,CAAC9D,KAAK,CAAC6D,MAAM,CAAC9M,KAAK,CAAC6G,EAAE,CAAC;IAC9E,CAAC,MAAM;MACL,IAAI,CAAC1C,mBAAmB,CAAC2H,GAAG,CAAC,aAAa,CAAC,EAAEiB,QAAQ,CAAC,IAAI,CAAC;IAC7D;EACF;EAEAC,eAAeA,CAAC/D,KAAU;IACxBG,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEJ,KAAK,CAAC6D,MAAM,CAAC9M,KAAK,CAAC;IACvD,IAAIiJ,KAAK,CAAC6D,MAAM,IAAI7D,KAAK,CAAC6D,MAAM,CAAC9M,KAAK,EAAE;MACtC,IAAI,CAACmE,mBAAmB,CAAC2H,GAAG,CAAC,SAAS,CAAC,EAAEiB,QAAQ,CAAC9D,KAAK,CAAC6D,MAAM,CAAC9M,KAAK,CAAC6G,EAAE,CAAC;IAC1E,CAAC,MAAM;MACL,IAAI,CAAC1C,mBAAmB,CAAC2H,GAAG,CAAC,SAAS,CAAC,EAAEiB,QAAQ,CAAC,IAAI,CAAC;IACzD;EACF;EAEA;EACQ5B,OAAOA,CAACD,IAAY;IAC1B,MAAM+B,WAAW,GAAG/B,IAAI,CAACgC,WAAW,EAAE;IACtC,OAAO,IAAI,CAACzF,OAAO,CAAC0F,MAAM,CAACL,MAAM,IAAIA,MAAM,CAAClN,GAAG,CAACsN,WAAW,EAAE,CAACE,QAAQ,CAACH,WAAW,CAAC,CAAC;EACtF;EAEAI,SAASA,CAACC,QAAoB;IAC5B,OAAOA,QAAQ,GAAGA,QAAQ,CAAC1N,GAAG,GAAG,EAAE;EACrC;EAEA;EACQ2L,YAAYA,CAACL,IAAY;IAC/B,MAAM+B,WAAW,GAAG/B,IAAI,CAACgC,WAAW,EAAE;IACtC,OAAO,IAAI,CAACxF,YAAY,CAACyF,MAAM,CAACL,MAAM,IACpCA,MAAM,CAAClN,GAAG,CAACsN,WAAW,EAAE,CAACE,QAAQ,CAACH,WAAW,CAAC,CAC/C;EACH;EAEAM,cAAcA,CAACC,WAAyB;IACtC,OAAOA,WAAW,GAAGA,WAAW,CAAC5N,GAAG,GAAG,EAAE;EAC3C;EAOA;EACA6N,qBAAqBA,CAAA;IACnB,IAAI,CAAC3F,oBAAoB,GAAG,IAAI;IAChC,IAAI,CAACC,iBAAiB,GAAG,KAAK;IAC9B,IAAI,CAACwC,iBAAiB,EAAE;IACxB;IACA,IAAI,CAAC5H,kBAAkB,CAACmJ,GAAG,CAAC,cAAc,CAAE,CAACiB,QAAQ,CAAC,EAAE,CAAC;EAC3D;EAEA;EACAW,kBAAkBA,CAAA;IAChB,IAAI,CAAC3F,iBAAiB,GAAG,IAAI;IAC7B,IAAI,CAACD,oBAAoB,GAAG,KAAK;IACjC,IAAI,CAAC2C,aAAa,EAAE;IACpB,IAAI,CAAC9G,eAAe,CAACmI,GAAG,CAAC,WAAW,CAAE,CAACiB,QAAQ,CAAC,EAAE,CAAC;IACnD;EACF;EAEA;EACAY,sBAAsBA,CAAA;IACpB,IAAI,CAAC7F,oBAAoB,GAAG,KAAK;EACnC;EAEA8F,mBAAmBA,CAAA;IACjB,IAAI,CAAC7F,iBAAiB,GAAG,KAAK;EAChC;EAEArF,kBAAkBA,CAAA;IAChB,MAAMmL,YAAY,GAAG;MAAEjO,GAAG,EAAE,IAAI,CAAC+C,kBAAkB,CAAC3C,KAAK,CAAC4L;IAAY,CAAE;IAExE,IAAI,CAACvH,gBAAgB,CAACyJ,gBAAgB,CAACD,YAAY,CAAC,CAACnF,SAAS,CAAC;MAC7DoC,IAAI,EAAGhC,QAAa,IAAI;QACtBM,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEP,QAAQ,CAAC;QACzD,IAAIA,QAAQ,IAAIA,QAAQ,CAACjC,EAAE,EAAE;UAC3B;UACA,IAAI,CAAClE,kBAAkB,CAACmJ,GAAG,CAAC,cAAc,CAAE,CAACiB,QAAQ,CAAC,EAAE,CAAC;UAEzD;UACA,MAAMgB,WAAW,GAAc;YAC7BlH,EAAE,EAAEiC,QAAQ,CAACjC,EAAE;YACfjH,GAAG,EAAEiO,YAAY,CAACjO;WACnB;UAED;UACA,IAAI,CAAC6H,OAAO,CAACuG,IAAI,CAACD,WAAW,CAAC;UAE9B,IAAI,CAACxH,iBAAiB,GAAG,KAAK;UAE9B;UACA,IAAI,CAACG,SAAS,CAACqG,QAAQ,CAACgB,WAAW,CAAC;UAEpC;UACA,IAAI,CAAC5J,mBAAmB,CAAC2H,GAAG,CAAC,aAAa,CAAC,EAAEiB,QAAQ,CAACgB,WAAW,CAAClH,EAAE,CAAC;UAErE;UACA,IAAI,CAACc,eAAe,GAAG,IAAI,CAACjB,SAAS,CAACsE,YAAY,CAACC,IAAI,CACrDjN,+CAAS,CAAC+P,WAAW,CAAC;UAAE;UACxBjQ,yCAAG,CAACkC,KAAK,IAAK,OAAOA,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAGA,KAAK,EAAEJ,GAAI,CAAC,EAC9D9B,yCAAG,CAACoN,IAAI,IAAKA,IAAI,GAAG,IAAI,CAACC,OAAO,CAACD,IAAI,CAAC,GAAG,IAAI,CAACzD,OAAO,CAAC2D,KAAK,EAAG,CAAC,CAChE;UAED;UACA,IAAI,CAACpJ,cAAc,GAAG,SAAS;UAC/B,IAAI,CAACC,UAAU,GAAG6G,QAAQ,CAACnH,OAAO,IAAI,uCAAuC;QAC/E;MACF,CAAC;MACDiJ,KAAK,EAAGA,KAAK,IAAI;QACfxB,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEuB,KAAK,CAAC;QACvCxB,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEuB,KAAK,CAACA,KAAK,CAAC;QACzC,IAAIjJ,OAAO,GAAG,8DAA8D;QAE5E,IAAIiJ,KAAK,CAACA,KAAK,EAAE;UACf,IAAI,OAAOA,KAAK,CAACA,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACA,KAAK,CAACA,KAAK,EAAE;YACxDjJ,OAAO,GAAGiJ,KAAK,CAACA,KAAK,CAACA,KAAK;UAC7B,CAAC,MAAM,IAAI,OAAOA,KAAK,CAACA,KAAK,KAAK,QAAQ,EAAE;YAC1CjJ,OAAO,GAAGiJ,KAAK,CAACA,KAAK;UACvB;QACF;QAEA,IAAI,CAAC5I,cAAc,GAAG,OAAO;QAC7B,IAAI,CAACC,UAAU,GAAGN,OAAO;MAC3B;KACD,CAAC;EACJ;EAEQ4K,iBAAiBA,CAAA;IACvB,IAAG,IAAI,CAAC3F,OAAO,CAACS,OAAO,EAAE;MACvB,MAAM4G,YAAY,GAAG,IAAI,CAACvG,YAAY,CAAC+E,IAAI,CAACzJ,CAAC,IAAIA,CAAC,CAAC6D,EAAE,KAAK,IAAI,CAACD,OAAO,CAACS,OAAO,CAAC;MAC/E,IAAG4G,YAAY,EAAE,IAAI,CAACtH,YAAY,CAACoG,QAAQ,CAACkB,YAAY,CAAC;IAC3D;IAEA,IAAG,IAAI,CAACrH,OAAO,CAACQ,WAAW,EAAE;MAC3B,MAAM8G,gBAAgB,GAAG,IAAI,CAACzG,OAAO,CAACgF,IAAI,CAAC3K,CAAC,IAAIA,CAAC,CAAC+E,EAAE,KAAK,IAAI,CAACD,OAAO,CAACQ,WAAW,CAAC;MAClF,IAAG8G,gBAAgB,EAAE,IAAI,CAACxH,SAAS,CAACqG,QAAQ,CAACmB,gBAAgB,CAAC;IAChE;EACF;EAEAxK,eAAeA,CAAA;IACb,MAAMyK,SAAS,GAAG;MAAEvO,GAAG,EAAE,IAAI,CAAC+D,eAAe,CAAC3D,KAAK,CAAC6L;IAAS,CAAE;IAE/D,IAAI,CAACvH,kBAAkB,CAAC8J,YAAY,CAACD,SAAS,CAAC,CAACzF,SAAS,CAAC;MACxDoC,IAAI,EAAGhC,QAAa,IAAI;QACtBM,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEP,QAAQ,CAAC;QACpD,IAAIA,QAAQ,IAAIA,QAAQ,CAACjC,EAAE,EAAE;UAC3B;UACA,IAAI,CAAClD,eAAe,CAACmI,GAAG,CAAC,WAAW,CAAE,CAACiB,QAAQ,CAAC,EAAE,CAAC;UAEnD;UACA,MAAMsB,QAAQ,GAAgB;YAC5BxH,EAAE,EAAEiC,QAAQ,CAACjC,EAAE;YACfjH,GAAG,EAAEuO,SAAS,CAACvO;WAChB;UAED;UACA,IAAI,CAAC8H,YAAY,CAACsG,IAAI,CAACK,QAAQ,CAAC;UAEhC,IAAI,CAAC7H,aAAa,GAAG,KAAK;UAE1B;UACA,IAAI,CAACG,YAAY,CAACoG,QAAQ,CAACsB,QAAQ,CAAC;UACpC,IAAI,CAAClK,mBAAmB,CAAC2H,GAAG,CAAC,SAAS,CAAC,EAAEiB,QAAQ,CAACsB,QAAQ,CAACxH,EAAE,CAAC;UAE9D;UACA,IAAI,CAACe,gBAAgB,GAAG,IAAI,CAACjB,YAAY,CAACqE,YAAY,CAACC,IAAI,CACzDjN,+CAAS,CAACqQ,QAAQ,CAAC,EACnBvQ,yCAAG,CAACkC,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAGA,KAAK,EAAEJ,GAAG,CAAC,EAC5D9B,yCAAG,CAAEoN,IAAY,IAAKA,IAAI,GAAG,IAAI,CAACK,YAAY,CAACL,IAAI,CAAC,GAAG,IAAI,CAACxD,YAAY,CAAC0D,KAAK,EAAE,CAAC,CAClF;UAED;UACA,IAAI,CAACzE,YAAY,CAAC2H,sBAAsB,EAAE;UAE1C;UACA,IAAI,CAACtM,cAAc,GAAG,SAAS;UAC/B,IAAI,CAACC,UAAU,GAAG6G,QAAQ,CAACnH,OAAO,IAAI,kCAAkC;QAC1E;MACF,CAAC;MACDiJ,KAAK,EAAGA,KAAK,IAAI;QACfxB,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEuB,KAAK,CAAC;QACvCxB,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEuB,KAAK,CAACA,KAAK,CAAC;QACzC,IAAIjJ,OAAO,GAAG,yDAAyD;QAEvE,IAAIiJ,KAAK,CAACA,KAAK,EAAE;UACf,IAAI,OAAOA,KAAK,CAACA,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACA,KAAK,CAACA,KAAK,EAAE;YACxDjJ,OAAO,GAAGiJ,KAAK,CAACA,KAAK,CAACA,KAAK;UAC7B,CAAC,MAAM,IAAI,OAAOA,KAAK,CAACA,KAAK,KAAK,QAAQ,EAAE;YAC1CjJ,OAAO,GAAGiJ,KAAK,CAACA,KAAK;UACvB;QACF;QAEA,IAAI,CAAC5I,cAAc,GAAG,OAAO;QAC7B,IAAI,CAACC,UAAU,GAAGN,OAAO;MAC3B;KACD,CAAC;EACJ;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEAX,gBAAgBA,CAAA;IAChB;IACA,IAAI,CAAC,IAAI,CAACyF,SAAS,EAAE;IAErB;IACA,IAAI,IAAI,CAACtC,mBAAmB,CAAChE,OAAO,EAAE;MACpC,IAAI,CAACG,YAAY,GAAG,mDAAmD;MAEvE;MACA,IAAI,CAACiO,oBAAoB,CAAC,IAAI,CAACpK,mBAAmB,CAAC;MACnD;IACF;IAEA;IACA,MAAMqK,cAAc,GAAY;MAC9B,GAAG,IAAI,CAAC5H,OAAO;MACf,GAAG,IAAI,CAACzC,mBAAmB,CAACnE;KAC7B;IAED;IACA,IAAI,CAAC6F,SAAS,GAAG,IAAI;IACrB,IAAI,CAACtB,cAAc,CAACkK,eAAe,CACjCD,cAAc,EACd,IAAI,CAACpI,YAAY,IAAIsI,SAAS,CAC/B,CAAChG,SAAS,CAAC;MACVoC,IAAI,EAAGhC,QAAiB,IAAI;QAC1B,IAAI,CAACjD,SAAS,GAAG,KAAK;QAEtB;QACA,IAAI,CAACe,OAAO,GAAGkC,QAAQ;QAEvB;QACA,IAAI,CAACrC,SAAS,GAAG,KAAK;QACtB,IAAI,CAACtC,mBAAmB,CAACqE,OAAO,EAAE;QAElC;QACA,IAAI,CAACpC,YAAY,GAAG,IAAI;QACxB,IAAI,CAACL,WAAW,GAAG,IAAI;QAEvB;QACA,IAAI,CAAClC,gBAAgB,CAAC;UACpBnC,KAAK,EAAE,QAAQ;UACfC,OAAO,EAAE,6BAA6B;UACtCH,KAAK,EAAE,yBAAyB;UAChCD,IAAI,EAAE;SACP,CAAC;MACJ,CAAC;MACDqJ,KAAK,EAAGA,KAAK,IAAI;QACf,IAAI,CAAC/E,SAAS,GAAG,KAAK;QAEtB;QACA,IAAIvF,YAAY,GAAG,2CAA2C;QAE9D,IAAIsK,KAAK,CAACA,KAAK,EAAEjJ,OAAO,EAAE;UACxBrB,YAAY,IAAI,KAAKsK,KAAK,CAACA,KAAK,CAACjJ,OAAO,EAAE;QAC5C,CAAC,MAAM,IAAIiJ,KAAK,CAAC+D,UAAU,EAAE;UAC3BrO,YAAY,IAAI,KAAKsK,KAAK,CAAC+D,UAAU,EAAE;QACzC;QAEA;QACA,IAAI,CAAC9K,gBAAgB,CAAC;UACpBnC,KAAK,EAAE,QAAQ;UACfC,OAAO,EAAErB,YAAY;UACrBkB,KAAK,EAAE,sBAAsB;UAC7BD,IAAI,EAAE;SACP,CAAC;MACJ;KACD,CAAC;EACJ;EAEE;EACQgN,oBAAoBA,CAACK,SAAoB;IAC/CC,MAAM,CAACC,MAAM,CAACF,SAAS,CAAC1K,QAAQ,CAAC,CAAC6K,OAAO,CAACC,OAAO,IAAG;MAClDA,OAAO,CAACC,aAAa,EAAE;MAEvB,IAAID,OAAO,YAAYvR,qDAAS,EAAE;QAChC,IAAI,CAAC8Q,oBAAoB,CAACS,OAAO,CAAC;MACpC;IACF,CAAC,CAAC;EACJ;EAEA;EACAE,eAAeA,CAAA;IACb,MAAMC,aAAa,GAAG,IAAI,CAAChL,mBAAmB,CAAC2H,GAAG,CAAC,UAAU,CAAC,EAAE9L,KAAK,IAAI,EAAE;IAC3E,IAAI,CAACsG,WAAW,GAAG6I,aAAa,CAAC1F,MAAM,IAAI,CAAC;EAC9C;EAEA2F,oBAAoBA,CAACnG,KAAoB;IACvC,MAAMoG,QAAQ,GAAGpG,KAAK,CAACqG,KAAK,GAAGrG,KAAK,CAACqG,KAAK,GAAGrG,KAAK,CAACsG,OAAO;IAC1D,IAAIF,QAAQ,GAAG,EAAE,IAAIA,QAAQ,GAAG,EAAE,EAAE;MAClCpG,KAAK,CAACuG,cAAc,EAAE;IACxB;EACF;EAEAC,YAAYA,CAAA;IACV,IAAI,CAACzL,MAAM,CAACC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;EACpC;;;uCA5vBWL,oBAAoB,EAAAxF,+DAAA,CAAAuR,yEAAA,GAAAvR,+DAAA,CAAAyR,uEAAA,GAAAzR,+DAAA,CAAA2R,qEAAA,GAAA3R,+DAAA,CAAA6R,uDAAA,GAAA7R,+DAAA,CAAA+R,oDAAA,GAAA/R,+DAAA,CAAA+R,4DAAA,GAAA/R,+DAAA,CAAAkS,iEAAA;IAAA;EAAA;;;YAApB1M,oBAAoB;MAAA4M,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;;UChCjC1S,4DAAA,aAA8B;UAC5BA,wDAAA,IAAA4S,mCAAA,iBAA+C;UAezC5S,4DAPN,aAAgC,aAEN,cAE+C,WAG8D;UAArGA,wDAAA,mBAAA6S,iDAAA;YAAA7S,2DAAA,CAAA8S,GAAA;YAAA,OAAA9S,yDAAA,CAAS2S,GAAA,CAAAtB,YAAA,EAAc;UAAA,EAAC;UAChDrR,uDAAA,WAAoC;UAACA,4DAAA,cAAiD;UAAAA,oDAAA,cAAO;UACjGA,0DADiG,EAAO,EACpG;UAIFA,4DADF,cAAmB,UACb;UAAAA,oDAAA,gCAAmB;UACzBA,0DADyB,EAAK,EACxB;UAoBEA,4DARR,eAA6B,eAGH,eAGS,eACC,UACxB;UAAAA,oDAAA,gBAAQ;UAAAA,0DAAA,EAAK;UAGjBA,4DAAA,eAAyB;UACvBA,uDAAA,iBAK4C;UAC5CA,4DAAA,iBAAiD;UAAAA,oDAAA,oBAAY;UAGnEA,0DAHmE,EAAQ,EACjE,EACF,EACF;UAMAA,4DAHN,eAA+B,eACC,eAC4E,UAClG;UAAAA,oDAAA,gCAAwB;UAAAA,0DAAA,EAAK;UACjCA,4DAAA,eAAgD;UAM9CA,wDALA,KAAA+S,kCAAA,gBAG8B,KAAAC,kCAAA,gBAKA;UAElChT,0DADE,EAAM,EACF;UAIJA,4DAFF,eAAwB,eAEG;UACvBA,uDAAA,iBACuC;UACvCA,4DAAA,iBAA0C;UAAAA,oDAAA,mBAAW;UAAAA,0DAAA,EAAQ;UAC7DA,wDAAA,KAAAiT,oCAAA,kBAAwE;UAI1EjT,0DAAA,EAAM;UAGJA,4DADF,eAA2B,eACA;UACvBA,uDAAA,iBAG6C;UAC7CA,4DAAA,iBAAqD;UAAAA,oDAAA,sBAAS;UAAAA,0DAAA,EAAQ;UACtEA,4DAAA,+BAAkH;UAAxEA,wDAAA,4BAAAkT,0EAAA3Q,MAAA;YAAAvC,2DAAA,CAAA8S,GAAA;YAAA,OAAA9S,yDAAA,CAAkB2S,GAAA,CAAAlE,kBAAA,CAAAlM,MAAA,CAA0B;UAAA,EAAC;UAErFvC,4DAAA,sBAAoE;UAAlCA,wDAAA,mBAAAmT,2DAAA;YAAAnT,2DAAA,CAAA8S,GAAA;YAAA,OAAA9S,yDAAA,CAAS2S,GAAA,CAAAtD,qBAAA,EAAuB;UAAA,EAAC;UACjErP,4DAAA,eAAiE;UAC/DA,uDAAA,aAA2D;UAC3DA,4DAAA,gBAAgC;UAAAA,oDAAA,qCAAmB;UAEvDA,0DAFuD,EAAO,EACtD,EACK;UAEbA,wDAAA,KAAAoT,2CAAA,yBAA4E;;UAKhFpT,0DAFE,EAAmB,EAEf;UAGNA,4DAAA,eAA0E;UACxEA,uDAAA,aAA6D;UAanEA,0DAZI,EAAM,EACF,EAWF;UAIHA,4DAFH,eAAwB,eAEI;UACxBA,uDAAA,iBACuC;UACvCA,4DAAA,iBAAgD;UAAAA,oDAAA,qBAAa;UAAAA,0DAAA,EAAQ;UACrEA,wDAAA,KAAAqT,oCAAA,kBAAoF;UAGtFrT,0DAAA,EAAM;UAGNA,4DAAA,eAAyB;UACvBA,uDAAA,iBACqC;UACrCA,4DAAA,iBAAgD;UAAAA,oDAAA,4BAAe;UAMnEA,0DANmE,EAAQ,EAInE,EAEF;UAKFA,4DAHJ,eAAwB,eAEK,eACA;UACvBA,uDAAA,iBAG6C;UAC7CA,4DAAA,iBAAiD;UAAAA,oDAAA,4BAAe;UAAAA,0DAAA,EAAQ;UACxEA,4DAAA,+BAA+I;UAA1EA,wDAAA,4BAAAsT,0EAAA/Q,MAAA;YAAAvC,2DAAA,CAAA8S,GAAA;YAAA,OAAA9S,yDAAA,CAAkB2S,GAAA,CAAA/D,eAAA,CAAArM,MAAA,CAAuB;UAAA,EAAC;UAE7GvC,4DAAA,sBAAiE;UAA/BA,wDAAA,mBAAAuT,2DAAA;YAAAvT,2DAAA,CAAA8S,GAAA;YAAA,OAAA9S,yDAAA,CAAS2S,GAAA,CAAArD,kBAAA,EAAoB;UAAA,EAAC;UAC9DtP,4DAAA,eAAiE;UAC/DA,uDAAA,aAA2D;UAC3DA,4DAAA,gBAAgC;UAAAA,oDAAA,iCAAe;UAEnDA,0DAFmD,EAAO,EAClD,EACK;UAEbA,wDAAA,KAAAwT,2CAAA,yBAAuF;;UAI3FxT,0DADE,EAAmB,EACf;UAINA,4DAAA,eAA0E;UACxEA,uDAAA,aAA6D;UAEjEA,0DADE,EAAM,EACF;UAIJA,4DADF,eAAsD,eAC3B;UACvBA,uDAAA,iBAA8P;;UAC9PA,4DAAA,iBAAiD;UAAAA,oDAAA,qBAAa;UAChEA,0DADgE,EAAQ,EAClE;UACNA,4DAAA,eAAyB;UACvBA,uDAAA,iBAAgQ;;UAChQA,4DAAA,iBAAiD;UAAAA,oDAAA,yBAAiB;UAkD5EA,0DAlD4E,EAAQ,EACtE,EACF,EAEF,EA6CF,EACF;UAKFA,4DAFJ,eAA+B,eACC,UACxB;UAAAA,oDAAA,gCAAmB;UAAAA,0DAAA,EAAK;UAI1BA,4DADD,eAA0B,eACa;UAClCA,uDAAA,iBACgC;UAChCA,4DAAA,iBAAoD;UAAAA,oDAAA,uBAAe;UACrEA,0DADqE,EAAQ,EACvE;UAKFA,4DAFJ,eAAqC,gBACV,kBAWuB;UAA1CA,wDAAA,sBAAAyT,0DAAAlR,MAAA;YAAAvC,2DAAA,CAAA8S,GAAA;YAAA,OAAA9S,yDAAA,CAAY2S,GAAA,CAAA3B,oBAAA,CAAAzO,MAAA,CAA4B;UAAA,EAAC;UAV7CvC,0DAAA,EAU8C;UAC9CA,4DAAA,kBAA+C;UAAAA,oDAAA,4CAA8B;UAAAA,0DAAA,EAAQ;UACrFA,wDAAA,MAAA0T,qCAAA,kBAAkF;UAIpF1T,0DAAA,EAAM;UAENA,wDAAA,MAAA2T,qCAAA,kBAAoD;UAc1D3T,0DAHI,EAAM,EAGJ;UAENA,4DAAA,gBAAyB;UACvBA,uDAAA,qBACgE;UAChEA,4DAAA,kBAAkD;UAAAA,oDAAA,iCAAwB;UAIhFA,0DAJgF,EAAQ,EAC9E,EAEF,EACF;UAKFA,4DAFJ,gBAA+B,gBACC,WACxB;UAAAA,oDAAA,mBAAU;UAAAA,0DAAA,EAAK;UAGjBA,4DADF,gBAAoC,UAC/B;UAAAA,oDAAA,gCAAuB;UAAAA,0DAAA,EAAI;UAE5BA,4DADF,kBAAsB,kBAKsB;UAHnCA,8DAAA,2BAAA6T,+DAAAtR,MAAA;YAAAvC,2DAAA,CAAA8S,GAAA;YAAA9S,gEAAA,CAAA2S,GAAA,CAAA/L,SAAA,EAAArE,MAAA,MAAAoQ,GAAA,CAAA/L,SAAA,GAAArE,MAAA;YAAA,OAAAvC,yDAAA,CAAAuC,MAAA;UAAA,EAAuB;UAACvC,wDAAA,oBAAA+T,wDAAAxR,MAAA;YAAAvC,2DAAA,CAAA8S,GAAA;YAAA,OAAA9S,yDAAA,CAAU2S,GAAA,CAAA/H,cAAA,CAAArI,MAAA,CAAsB;UAAA,EAAC;UAEzDvC,8DAAA,2BAAA6T,+DAAAtR,MAAA;YAAAvC,2DAAA,CAAA8S,GAAA;YAAA9S,gEAAA,CAAA2S,GAAA,CAAAnK,OAAA,CAAAY,OAAA,EAAA7G,MAAA,MAAAoQ,GAAA,CAAAnK,OAAA,CAAAY,OAAA,GAAA7G,MAAA;YAAA,OAAAvC,yDAAA,CAAAuC,MAAA;UAAA,EAA6B;UAC7BvC,wDAAA,oBAAA+T,wDAAAxR,MAAA;YAAAvC,2DAAA,CAAA8S,GAAA;YAAA,OAAA9S,yDAAA,CAAU2S,GAAA,CAAA/H,cAAA,CAAArI,MAAA,CAAsB;UAAA,EAAC;UAJxCvC,0DAAA,EAI0C;UAC1CA,uDAAA,iBAAkC;UAEtCA,0DADE,EAAQ,EACJ;UACNA,wDAAA,MAAAgU,qCAAA,mBAA6C;UAuBjDhU,0DAFE,EAAM,EAEF;UAKFA,4DAFJ,gBAA+B,gBACC,WACxB;UAAAA,oDAAA,0BAAiB;UAAAA,0DAAA,EAAK;UAG1BA,wDADA,MAAAiU,mCAAA,gBAAgE,MAAAC,mCAAA,gBACW;UAKzElU,4DADF,gBAA4B,gBACD;UAEvBA,uDAAA,gBAA4E;UAC9EA,0DAAA,EAAM;UAINA,wDAHA,MAAAmU,wCAAA,qBAAsG,MAAAC,qCAAA,kBAG/E;UAS7BpU,0DAFI,EAAM,EACF,EACF;UAMJA,4DAHF,gBAAsD,gBAGf;UACnCA,wDAAA,MAAAqU,qCAAA,kBAAgD;UAGlDrU,0DAAA,EAAM;UAMFA,4DAJJ,gBAAmD,gBAGxB,mBAC2B;UAAAA,oDAAA,gBAAO;UAC3DA,0DAD2D,EAAS,EAC9D;UAENA,wDAAA,MAAAsU,qCAAA,kBAA2C;UAK/CtU,0DADE,EAAM,EACF;UAGNA,wDAAA,MAAAuU,qCAAA,mBAA6C;UAqBzDvU,0DARU,EAAM,EAEF,EAED,EAEH,EACJ,EACA;UA6CNA,wDA1CA,MAAAwU,qCAAA,mBAAqD,MAAAC,qCAAA,mBA0CJ;;;;;UA7czCzU,uDAAA,EAAe;UAAfA,wDAAA,SAAA2S,GAAA,CAAAlL,SAAA,CAAe;UAYkBzH,uDAAA,GAAiC;UAAjCA,wDAAA,cAAA2S,GAAA,CAAA5M,mBAAA,CAAiC;UAoCnD/F,uDAAA,IAAyE;UAAzEA,wDAAA,UAAA2S,GAAA,CAAA1K,kBAAA,GAAA0K,GAAA,CAAA7L,YAAA,GAAA6L,GAAA,CAAA9L,gBAAA,CAAA6N,IAAA,OAAyE;UAexE1U,uDAAA,GAAgB;UAAhBA,wDAAA,UAAA2S,GAAA,CAAAtK,SAAA,CAAgB;UAKhBrI,uDAAA,EAAe;UAAfA,wDAAA,SAAA2S,GAAA,CAAAtK,SAAA,CAAe;UAUZrI,uDAAA,GAAwC;;UAGzCA,uDAAA,GAA0C;UAA1CA,wDAAA,SAAA2S,GAAA,CAAAvR,CAAA,QAAAU,OAAA,IAAA6Q,GAAA,CAAAvR,CAAA,QAAAW,OAAA,CAA0C;UASb/B,uDAAA,GAAyB;UACJA,wDADrB,gBAAA2S,GAAA,CAAArK,SAAA,CAAyB,oBAAAqM,QAAA,CAC9B,UAAAhC,GAAA,CAAAnK,OAAA,CAAAoM,YAAA,oBAA4E;;UAGhB5U,uDAAA,GAAyB;UAAzBA,wDAAA,gBAAA2S,GAAA,CAAA1D,SAAA,CAAyB;UAShFjP,uDAAA,GAA0B;UAA1BA,wDAAA,YAAAA,yDAAA,SAAA2S,GAAA,CAAApJ,eAAA,EAA0B;UA8BvDvJ,uDAAA,GAAsD;UAAtDA,wDAAA,SAAA2S,GAAA,CAAAvR,CAAA,cAAAU,OAAA,IAAA6Q,GAAA,CAAAvR,CAAA,cAAAW,OAAA,CAAsD;UAsB7C/B,uDAAA,GAA4B;UACkBA,wDAD9C,gBAAA2S,GAAA,CAAApK,YAAA,CAA4B,oBAAAuM,aAAA,CACR,UAAAnC,GAAA,CAAAnK,OAAA,CAAAuM,QAAA,iBAAoE;;UAGW/U,uDAAA,GAA8B;UAA9BA,wDAAA,gBAAA2S,GAAA,CAAAxD,cAAA,CAA8B;UASxGnP,uDAAA,GAA2B;UAA3BA,wDAAA,YAAAA,yDAAA,SAAA2S,GAAA,CAAAnJ,gBAAA,EAA2B;UAgB1DxJ,uDAAA,GAA2D;UAAiCA,wDAA5F,UAAAA,yDAAA,SAAA2S,GAAA,CAAAnK,OAAA,CAAAyM,SAAA,+BAA2D,kBAAkD;UAI7GjV,uDAAA,GAA6D;UAAiCA,wDAA9F,UAAAA,yDAAA,SAAA2S,GAAA,CAAAnK,OAAA,CAAA0M,WAAA,+BAA6D,kBAAkD;UA6D/GlV,uDAAA,IAA+B;UAAoFA,wDAAnH,UAAA2S,GAAA,CAAAnK,OAAA,CAAAI,aAAA,CAA+B,kBAAqG;UAoBnI5I,uDAAA,GAAoD;UAApDA,wDAAA,SAAA2S,GAAA,CAAAvR,CAAA,aAAAU,OAAA,IAAA6Q,GAAA,CAAAvR,CAAA,aAAAW,OAAA,CAAoD;UAM3B/B,uDAAA,EAAiB;UAAjBA,wDAAA,SAAA2S,GAAA,CAAAzK,WAAA,CAAiB;UAkC7ClI,uDAAA,IAAuB;UAAvBA,8DAAA,YAAA2S,GAAA,CAAA/L,SAAA,CAAuB;UACvB5G,wDAAA,mBAAAA,6DAAA,KAAAqV,GAAA,EAAqC;UACrCrV,8DAAA,YAAA2S,GAAA,CAAAnK,OAAA,CAAAY,OAAA,CAA6B;UAKZpJ,uDAAA,GAAe;UAAfA,wDAAA,SAAA2S,GAAA,CAAA/L,SAAA,CAAe;UA8BvC5G,uDAAA,GAAmB;UAAnBA,wDAAA,UAAA2S,GAAA,CAAAzQ,YAAA,CAAmB;UACnBlC,uDAAA,EAAkB;UAAlBA,wDAAA,SAAA2S,GAAA,CAAAzQ,YAAA,CAAkB;UAOblC,uDAAA,GAAwD;UAAxDA,wDAAA,QAAA2S,GAAA,CAAAhL,WAAA,GAAAgL,GAAA,CAAAhL,WAAA,GAAAgL,GAAA,CAAA5G,WAAA,CAAA4G,GAAA,CAAAnK,OAAA,GAAAxI,2DAAA,CAAwD;UAEtDA,uDAAA,EAA4C;UAA5CA,wDAAA,SAAA2S,GAAA,CAAAhL,WAAA,IAAAgL,GAAA,CAAAhL,WAAA,KAAAgL,GAAA,CAAAjL,OAAA,CAA4C;UAG/C1H,uDAAA,EAAe;UAAfA,wDAAA,SAAA2S,GAAA,CAAAtK,SAAA,CAAe;UAgBjBrI,uDAAA,GAAkB;UAAlBA,wDAAA,SAAA2S,GAAA,CAAAzQ,YAAA,CAAkB;UAYElC,uDAAA,GAAe;UAAfA,wDAAA,SAAA2S,GAAA,CAAAtK,SAAA,CAAe;UAQjBrI,uDAAA,EAAe;UAAfA,wDAAA,SAAA2S,GAAA,CAAAhN,SAAA,CAAe;UAwB3B3F,uDAAA,EAAuB;UAAvBA,wDAAA,SAAA2S,GAAA,CAAAxK,iBAAA,CAAuB;UA0CvBnI,uDAAA,EAAmB;UAAnBA,wDAAA,SAAA2S,GAAA,CAAAvK,aAAA,CAAmB;;;qBDlblC9I,uDAAW,EAAAuS,4DAAA,EAAAA,gEAAA,EAAAA,wEAAA,EAAAA,2DAAA,EAAAA,gEAAA,EAAAA,6DAAA,EAAAA,4DAAA,EAAAA,mDAAA,EAAE1S,0DAAY,EAAA2W,qDAAA,EAAAA,qDAAA,EAAAA,kDAAA,EAAAA,uDAAA,EAAAA,sDAAA,EAAEvW,+DAAmB,EAAAsS,gEAAA,EAAAA,8DAAA,EAAAA,2DAAA,EAAEpS,kFAAqB,EAAA8W,4EAAA,EAAAA,8DAAA,EAAAA,mFAAA,EAAEzW,4DAAiB,EAAA6W,+DAAA,EAAE9W,wDAAU;MAAAgX,MAAA;IAAA;EAAA","sources":["./src/app/admin-page/produits/list-produit/list-produit.component.ts","./src/app/admin-page/produits/list-produit/list-produit.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { map, Observable, of, startWith } from 'rxjs';\nimport { Produit } from '../../MODELS/produit.model';\nimport { ProduitService } from '../../SERVICES/produit.service';\nimport { ActivatedRoute, Router, RouterLink } from '@angular/router';\nimport { Categorie } from '../../MODELS/categorie.model';\nimport { UniteMesure } from '../../MODELS/unite.model';\nimport { CategorieService } from '../../SERVICES/categorie.service';\n// import { SharedDataService } from '../../SERVICES/shared-data.service';\nimport { UniteMesureService } from '../../SERVICES/unite.service';\nimport { UsersService } from '../../SERVICES/users.service';\nimport { PopupData } from '../../MODELS/PopUp/popup-data';\nimport { NgxBarcode6Module } from 'ngx-barcode6';\nimport { environment } from 'src/environments/environment';\n\nexport interface CategorySelect {\n  nom: string;\n}\n\nexport interface UniteSelect {\n  name: string;\n}\n\n@Component({\n  selector: 'app-list-produit',\n  imports: [ FormsModule, CommonModule, ReactiveFormsModule, MatAutocompleteModule, NgxBarcode6Module, RouterLink ],\n  templateUrl: './list-produit.component.html',\n  styleUrl: './list-produit.component.scss'\n})\nexport class ListProduitComponent {\n  boutiqueNames: string[] = [];\n  selectedBoutique: any = null;\n  previousSelectedBoutique: any | null = null;\n  boutiqueActuelle: string = \"Toutes les boutiques\";\n  boutiques: any[] = []; \n  isChecked = true;\n  allBoutiqueNames: string[] = [];\n  boutiqueName: string = '';\n  boutiqueId: number = 1; \n  messageAPI: string = '';\n  apiMessageType: 'success' | 'error' | '' = '';\n  // ajouteProduitForm!: FormGroup;\n  modifierProduitForm!: FormGroup;\n  ajouteCategoryForm!: FormGroup;\n  ajouteUniteForm!: FormGroup;\n  errorMessage: string = '';\n  errorMessageCategory: string = '';\n  errorMessageUnity: string = '';\n  popupTitle: string = '';\n  popupMessage: string = '';\n  popupImage: string = '';\n  popupType: 'success' | 'error' = 'success';\n  imagePopup: string | null = null;\n  nomEntreprise: string = '';\n  adresseEntreprise: string = '';\n  logoEntreprise: string =''\n  // produitForm: FormGroup;\n  imageFile: File | null = null;\n  isLoading: boolean = false;\n  // Variable pour gérer l'affichage du popup\n  showPopup: boolean = false;\n  // Gestion de l'image\n  urllink: string = \"assets/img/appareil.jpg\";\n  newPhotoUrl: string | null = null;\n  private backendUrl =environment.apiBaseUrl;\n    private apiUrl = environment.imgUrl;\n \n\n  selectedFile: File | null | undefined = null;\n  selectedBoutiqueId: number | null = null;\n  showPopupMessage(data: PopupData): void { this.popupData = data; this.showPopup = true; }\n  // Méthode pour fermer le popup\n  closePopup(): void { this.showPopup = false; this.router.navigate(['/produit']); }\n  // Variable regroupant toutes les informations du popup\n  popupData: PopupData = { title: '', message: '', image: '', type: 'success' };\n  showBarcode = false;\n  showPopupCategory: boolean = false;\n  showPopupUnit: boolean = false;\n  isEditing: boolean = false;\n\n  //////// FOCUS CATEGORY\n  myControl = new FormControl();\n  uniteControl = new FormControl();\n    \n  // Produit \n  produit: Produit = {\n    id: 0,\n    nom: '',\n    prixVente: 0,\n    description: '',\n    codeGenerique: '',\n    prixAchat: 0,\n    quantite: 0,\n    seuilAlert: 0,\n    categorieId: null,\n    uniteId: null,\n    codeBare: '',\n    photo: '',\n    enStock: false,\n    boutiqueId: null,\n    // Facultatif : nomCategorie, nomUnite, createdAt\n  };\n\n  // Getter pour faciliter l'accès aux contrôles dans le template\n  get c() { return this.ajouteCategoryForm.controls; }\n  get u() { return this.ajouteUniteForm.controls; }\n  get f() { return this.modifierProduitForm.controls; }\n\n  constructor(\n    // private sharedDataService: SharedDataService,\n    private categorieService: CategorieService,\n    private uniteMesureService: UniteMesureService,\n    private produitService: ProduitService,\n    private fb: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute,\n    private usersService: UsersService,\n  ) {}\n\n  ngOnInit(): void  {\n    // this.getProduit();\n    // this.getPartageNameBoutique();\n    // this.getPartageIdBoutique();\n    this.getFiltrageCategoriesUnites();\n    this.getModifierProduitForm();\n    this.getAjouteCategoryForm();\n    this.getAjouteUniteForm();\n    this.getAjouteCategoryFormCategoryName();\n    this.getAjouteCategoryFormUnityName();\n    this.getModifierProduitFormCodeBare();\n    this.modifierProduitForm.disable();\n    this.myControl.disable();\n    this.uniteControl.disable();\n\n    this.route.queryParams.subscribe(params => {\n      this.selectedBoutiqueId = params['boutiqueId'] ? +params['boutiqueId'] : null;\n      this.getProduit();\n    });\n  }\n\n  // Exemple d'utilisation lors d'une réponse du backend\n  onResponseFromBackend(response: any): void {\n    // Par exemple, si response contient { message, type } et que vous souhaitez afficher une image par défaut\n    const defaultImage = response.type === 'success' ? 'assets/img/succes.png' : 'assets/img/error.png';\n    this.showPopupMessage({\n      title: response.type === 'success' ? 'Succès' : 'Erreur',\n      message: response.message,\n      image: defaultImage,\n      type: response.type\n    });\n  }\n  \n  onToggleChange(event: Event) {\n    // event.target permet d’accéder au checkbox\n    const checkbox = event.target as HTMLInputElement;\n    console.log('isChecked:', checkbox.checked);\n    // Faites ce que vous voulez ici avec la valeur\n  }\n\n  clearImage() {\n    this.newPhotoUrl = null;\n    this.imageFile = null;\n  }\n   \n  // Dans list-produit.component.ts\n  onFileSelected(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    if (input.files && input.files.length > 0) {\n      const file = input.files[0]; // Récupère le fichier sélectionné\n\n      // Vérification de la taille du fichier (2 Mo = 2 * 1024 * 1024 octets)\n      const maxSize = 2 * 1024 * 1024;\n      if (file.size > maxSize) {\n        this.errorMessage = 'Le fichier est trop volumineux. Veuillez choisir un fichier de moins de 2 Mo.';\n        this.selectedFile = null;\n        this.imageFile = null;  // Réinitialise l'image si le fichier est trop grand\n        this.newPhotoUrl = null;\n        return;\n      }\n\n      // Si le fichier est correct, on continue\n      this.errorMessage = '';\n      this.selectedFile = file;\n      this.imageFile = file; // ✅ Associe le fichier sélectionné à imageFile\n    \n      const reader = new FileReader();\n      reader.onload = (e) => {\n        this.newPhotoUrl = e.target?.result as string;\n      };\n      reader.readAsDataURL(this.selectedFile);\n    }\n  }\n\n  getImageUrl(produit: Produit): string {\n    if (produit.photo) {\n      return this.apiUrl + produit.photo;  // Si le produit a une image, on la récupère\n    } else if (produit.nom) {\n      const firstLetter = produit.nom.charAt(0).toUpperCase();  // Si pas d'image, on prend la première lettre du nom du produit\n      return `assets/img/letters/${firstLetter}.png`;  // Assurez-vous d'avoir une image pour chaque lettre dans le dossier \"assets/img/letters/\"\n    } else {\n      return 'assets/img/appareil.jpg';  // Image par défaut si aucune image et nom\n    }\n  }\n  \n\n  options: Categorie[] = []; // Liste des catégories récupérées\n  optionsUnite: UniteMesure[] = []; // Liste des unites récupérées\n  filteredOptions: Observable<Categorie[]> = of([]);\n  filteredNomUnite: Observable<UniteMesure[]> = of([]);\n    \n  // getPartageNameBoutique() {\n  //   // Partage de donner de user\n  //   this.sharedDataService.boutiqueName$.subscribe(name => {\n  //     console.log(\"AddProduitComponent - Nom boutique récupéré :\", name);\n  //     this.boutiqueName = name;\n  //   });\n  // }\n\n  // Méthodes pour ouvrir/fermer le popup\n  openPopupCategory(): void {\n    this.showPopupCategory = true;\n    this.ajouteCategoryForm.reset();\n    this.errorMessageCategory = '';\n    this.messageAPI = '';\n  }\n\n  closePopupCategory(): void { \n    this.showPopupCategory = false; \n  }\n\n  // Méthodes pour ouvrir/fermer le popup\n  openPopupUnit(): void {\n    this.showPopupUnit = true;\n    this.ajouteUniteForm.reset();\n    this.errorMessageUnity = '';\n    this.messageAPI = '';\n  }\n\n  closePopupUnit(): void { \n    this.showPopupUnit = false; \n  }\n  \n\n getFiltrageCategoriesUnites() {\n  const token = this.usersService.getValidAccessToken(); // ✅ Centralisation de l’accès au token\n\n  if (!token) {\n    console.error('Aucun token trouvé !');\n    return;\n  }\n\n  // 🟢 Filtrage des catégories\n  this.categorieService.getCategories().subscribe({\n    next: (categories) => {\n      console.log('Catégories reçues depuis l\\'API :', categories);\n      this.options = categories;\n\n      this.filteredOptions = this.myControl.valueChanges.pipe(\n        startWith<string | Categorie>(''),\n        map(value => (value ? (typeof value === 'string' ? value : value.nom) : '')),\n        map(name => (name ? this._filter(name) : this.options.slice()))\n      );\n    },\n    error: (error) => {\n      console.error('Erreur lors de la récupération des catégories :', error);\n    }\n  });\n\n  // 🟢 Filtrage des unités de mesure\n  this.uniteMesureService.getUniteMesure().subscribe({\n    next: (uniteMesures) => {\n      console.log('Unités de mesure reçues depuis l\\'API :', uniteMesures);\n      this.optionsUnite = uniteMesures;\n\n      this.filteredNomUnite = this.uniteControl.valueChanges.pipe(\n        startWith<string | UniteMesure>(''),\n        map(value => (value ? (typeof value === 'string' ? value : value.nom) : '')),\n        map(name => (name ? this._filterUnite(name) : this.optionsUnite.slice()))\n      );\n    },\n    error: (error) => {\n      console.error('Erreur lors de la récupération des unités de mesure :', error);\n    }\n  });\n}\n\n\n  getModifierProduitForm() {\n    this.modifierProduitForm = this.fb.group({\n      nom: ['', [Validators.required, Validators.minLength(2)]],\n      prixVente: ['', Validators.required],\n      prixAchat: [''],\n      quantite: [''],\n      seuilAlert: ['', Validators.required],\n      description: [''],\n      codeBare: ['', [Validators.minLength(8), Validators.maxLength(18)]],\n      categorieId: [''],\n      uniteId: ['']\n    });\n  }\n\n  // getPartageIdBoutique() {\n  //   // Abonnement pour récupérer l'ID de la boutique active\n  //   this.sharedDataService.boutiqueId$.subscribe(id => {\n  //     this.boutiqueId = id;\n  //   });\n  // }\n\n  getAjouteCategoryForm() {\n    // Formulaire pour ajouter une catégorie\n    this.ajouteCategoryForm = this.fb.group({\n      categoryName: ['', [/*Validators.required,*/ Validators.minLength(3), Validators.maxLength(20)]]\n    });\n  }\n\n  getAjouteUniteForm() {\n    // Formulaire pour ajouter une unite\n    this.ajouteUniteForm = this.fb.group({\n      unityName: ['', [ Validators.minLength(2), Validators.maxLength(20)]]\n    });\n  }\n\n  getAjouteCategoryFormCategoryName() {\n    // À chaque changement de valeur dans le champ \"categoryName\", on réinitialise l'erreur\n    this.ajouteCategoryForm.get('categoryName')?.valueChanges.subscribe(() => {\n      this.errorMessageCategory = '';\n      this.messageAPI = '';\n      this.apiMessageType = '';\n    });\n  }\n\n  getAjouteCategoryFormUnityName() {\n    // À chaque changement de valeur dans le champ \"uniteName\", on réinitialise l'erreur\n    this.ajouteUniteForm.get('unityName')?.valueChanges.subscribe(() => {\n      this.errorMessageUnity = '';\n      this.messageAPI = '';\n      this.apiMessageType = '';\n    });\n  }\n\n  getModifierProduitFormCodeBare() {\n    // Remplacer l'abonnement existant par :\n    this.modifierProduitForm.get('codeBare')?.valueChanges.subscribe(value => {\n      this.showBarcode = value && value.length >= 3;\n    });\n  }\n\n  // Fonction pour récupérer le produit\n  selectBoutique(boutique: any | null): void {\n      console.log(\"Boutique sélectionnée:\", boutique);\n  \n      // Si une boutique est sélectionnée, met à jour selectedBoutique\n      if (boutique === null) {\n          this.selectedBoutique = null;\n          this.boutiqueActuelle = \"Toutes les boutiques\"; // Si aucune boutique n'est sélectionnée\n      } else {\n          this.selectedBoutique = boutique;\n          this.boutiqueActuelle = boutique.nom || \"Boutique sans nom\"; // Mise à jour de la boutique actuelle\n      }\n  \n      console.log(\"selectedBoutique après mise à jour:\", this.selectedBoutique);\n      console.log(\"boutiqueActuelle après mise à jour:\", this.boutiqueActuelle);\n  \n      // Après la mise à jour, appelle getProduit() pour récupérer les produits de la boutique sélectionnée\n      this.getProduit();\n  }\n  \n  getProduit(): void {\n    const idParam = this.route.snapshot.paramMap.get('id');\n    const productId = idParam ? +idParam : 0;\n  \n    this.produitService.getProduitById(productId).subscribe({\n      next: (data: Produit) => {\n        this.produit = data;\n        this.modifierProduitForm.patchValue(this.produit);\n        this.loadInitialValues();\n\n        // Réinitialiser les contrôles après chargement\n        this.myControl.disable();\n        this.uniteControl.disable();\n  \n        // Mise à jour des noms de boutiques\n        if (this.produit.boutiques && this.produit.boutiques.length > 0) {\n          this.allBoutiqueNames = this.produit.boutiques.map(b => b.nom);\n          \n          if (this.selectedBoutiqueId) {\n            const boutique = this.produit.boutiques.find(b => b.id === this.selectedBoutiqueId);\n            this.boutiqueName = boutique ? boutique.nom : 'Boutique non trouvée';\n          }\n        } else {\n          this.allBoutiqueNames = ['Aucune boutique'];\n          this.boutiqueName = 'Aucune boutique';\n        }\n      },\n      error: (err) => {\n        console.error('Erreur lors de la récupération du produit', err);\n      }\n    });\n  }\n\n  getBoutiqueQuantity(): number {\n    if (!this.selectedBoutiqueId || !this.produit.boutiques) return 0;\n    const boutique = this.produit.boutiques.find(b => b.id === this.selectedBoutiqueId);\n    return boutique?.quantite || 0;\n  }\n\n  getBoutiqueNames(boutiques: { id: number, nom: string, quantite: number }[] | undefined): string[] {\n    if (boutiques && boutiques.length > 0) {\n      return boutiques.map(b => `${b.nom} (ID: ${b.id}) - Quantité: ${b.quantite}`);\n    }\n    console.error('Aucune boutique trouvée pour ce produit');\n    return ['Aucune boutique'];\n  }\n\n  // toggleEditing(): void {\n  //   this.isEditing = !this.isEditing;\n    \n  //   if (this.isEditing) {\n  //     this.modifierProduitForm.enable();\n  //   } else {\n  //     // Annuler les modifications et recharger les données originales\n  //     this.modifierProduitForm.disable();\n  //     this.getProduit();\n  //   }\n  // }\n\n  toggleEditing(): void {\n    this.isEditing = !this.isEditing;\n    \n    if (this.isEditing) {\n      // Activer tous les contrôles\n      this.modifierProduitForm.enable();\n      this.myControl.enable();\n      this.uniteControl.enable();\n    } else {\n      // Désactiver et réinitialiser\n      this.modifierProduitForm.disable();\n      this.myControl.disable();\n      this.uniteControl.disable();\n      \n      // Réinitialiser les valeurs aux données originales\n      this.getProduit();\n    }\n  }\n\n  // Méthode pour la sélection d'une catégorie\n  onCategorySelected(event: any): void {\n    console.log('Option sélectionnée :', event.option.value);\n    if (event.option && event.option.value) {\n      this.modifierProduitForm.get('categorieId')?.setValue(event.option.value.id);\n    } else {\n      this.modifierProduitForm.get('categorieId')?.setValue(null);\n    }\n  }\n\n  onUniteSelected(event: any): void {\n    console.log('Unité sélectionnée :', event.option.value);\n    if (event.option && event.option.value) {\n      this.modifierProduitForm.get('uniteId')?.setValue(event.option.value.id);\n    } else {\n      this.modifierProduitForm.get('uniteId')?.setValue(null);\n    }\n  }\n\n  // Pour categorie \n  private _filter(name: string): Categorie[] {\n    const filterValue = name.toLowerCase();\n    return this.options.filter(option => option.nom.toLowerCase().includes(filterValue));\n  }\n    \n  displayFn(category?: Categorie): string {\n    return category ? category.nom : '';\n  }\n    \n  // Pour unite\n  private _filterUnite(name: string): UniteMesure[] {\n    const filterValue = name.toLowerCase();\n    return this.optionsUnite.filter(option => \n      option.nom.toLowerCase().includes(filterValue)\n    );\n  }\n  \n  displayFnUnite(unityMesure?: UniteMesure): string {\n    return unityMesure ? unityMesure.nom : '';\n  }\n  \n  // POUR UNITE\n  UniterControl = new FormControl();\n  showCategoryCreation: boolean = false;\n  showUniteCreation: boolean = false;\n\n  // Lorsque l'utilisateur clique sur \"Créer\" pour une catégorie\n  onCreateCategoryClick() {\n    this.showCategoryCreation = true;\n    this.showUniteCreation = false; \n    this.openPopupCategory();\n    // this.ajouteUniteForm.get('unityName')!.setValue('');\n    this.ajouteCategoryForm.get('categoryName')!.setValue('');\n  }\n\n  // Lorsque l'utilisateur clique sur \"Créer\" pour une unité\n  onCreateUniteClick() {\n    this.showUniteCreation = true;\n    this.showCategoryCreation = false;\n    this.openPopupUnit();\n    this.ajouteUniteForm.get('unityName')!.setValue('');\n    // this.ajouteCategoryForm.get('categoryName')!.setValue('');\n  }\n  \n  // Méthodes pour annuler la création\n  cancelCategoryCreation() {\n    this.showCategoryCreation = false;\n  }\n\n  cancelUniteCreation() {\n    this.showUniteCreation = false;\n  }\n\n  submitFormCategory(): void {\n    const categoryData = { nom: this.ajouteCategoryForm.value.categoryName };\n  \n    this.categorieService.ajouterCategorie(categoryData).subscribe({\n      next: (response: any) => {\n        console.log('Catégorie ajoutée avec succès : ', response);\n        if (response && response.id) {\n          // Réinitialiser le formulaire\n          this.ajouteCategoryForm.get('categoryName')!.setValue('');\n\n          // Créer le nouvel objet catégorie\n          const newCategory: Categorie = { \n            id: response.id, \n            nom: categoryData.nom \n          };\n\n          // Ajouter à la liste des options\n          this.options.push(newCategory);\n\n          this.showPopupCategory = false; \n\n          // 1. Mettre à jour l'input d'autocomplete\n          this.myControl.setValue(newCategory);\n\n          // 2. Mettre à jour la valeur dans le formulaire principal\n          this.modifierProduitForm.get('categorieId')?.setValue(newCategory.id);\n\n          // Mettre à jour les options filtrées\n          this.filteredOptions = this.myControl.valueChanges.pipe(\n            startWith(newCategory), // Pré-remplir avec la nouvelle valeur\n            map(value => (typeof value === 'string' ? value : value?.nom)),\n            map(name => (name ? this._filter(name) : this.options.slice()))\n          );\n\n          // Afficher message\n          this.apiMessageType = 'success';\n          this.messageAPI = response.message || \"La catégorie a été créée avec succès.\";\n        }\n      },\n      error: (error) => {\n        console.log(\"Erreur complète :\", error);\n        console.log(\"Réponse API :\", error.error);\n        let message = \"Une erreur est survenue lors de la création de la catégorie.\";\n  \n        if (error.error) {\n          if (typeof error.error === \"object\" && error.error.error) {\n            message = error.error.error;\n          } else if (typeof error.error === \"string\") {\n            message = error.error;\n          }\n        }\n  \n        this.apiMessageType = 'error';\n        this.messageAPI = message;\n      }\n    });\n  }\n\n  private loadInitialValues() {\n    if(this.produit.uniteId) {\n      const initialUnite = this.optionsUnite.find(u => u.id === this.produit.uniteId);\n      if(initialUnite) this.uniteControl.setValue(initialUnite);\n    }\n    \n    if(this.produit.categorieId) {\n      const initialCategorie = this.options.find(c => c.id === this.produit.categorieId);\n      if(initialCategorie) this.myControl.setValue(initialCategorie);\n    }\n  }\n\n  submitFormUnity(): void {\n    const unityData = { nom: this.ajouteUniteForm.value.unityName };\n  \n    this.uniteMesureService.ajouterUnite(unityData).subscribe({\n      next: (response: any) => {\n        console.log('Unité ajouté avec succès : ', response);\n        if (response && response.id) {\n          // Réinitialiser le formulaire\n          this.ajouteUniteForm.get('unityName')!.setValue('');\n\n          // Créer la nouvelle unité\n          const newUnity: UniteMesure = { \n            id: response.id, \n            nom: unityData.nom \n          };\n\n          // Ajouter à la liste\n          this.optionsUnite.push(newUnity);\n\n          this.showPopupUnit = false; \n\n          // Mettre à jour le contrôle après l'ajout\n          this.uniteControl.setValue(newUnity);\n          this.modifierProduitForm.get('uniteId')?.setValue(newUnity.id);\n          \n          // Forcer la mise à jour des options filtrées\n          this.filteredNomUnite = this.uniteControl.valueChanges.pipe(\n            startWith(newUnity),\n            map(value => typeof value === 'string' ? value : value?.nom),\n            map((name: string) => name ? this._filterUnite(name) : this.optionsUnite.slice())\n          );\n          \n          // Ajouter cette ligne pour actualiser l'affichage\n          this.uniteControl.updateValueAndValidity();\n\n          // Afficher message\n          this.apiMessageType = 'success';\n          this.messageAPI = response.message || \"L'unité a été créée avec succès.\";\n        }\n      },\n      error: (error) => {\n        console.log(\"Erreur complète :\", error);\n        console.log(\"Réponse API :\", error.error);\n        let message = \"Une erreur est survenue lors de la création de l'unité.\";\n  \n        if (error.error) {\n          if (typeof error.error === \"object\" && error.error.error) {\n            message = error.error.error;\n          } else if (typeof error.error === \"string\") {\n            message = error.error;\n          }\n        }\n  \n        this.apiMessageType = 'error';\n        this.messageAPI = message;\n      }\n    });\n  }\n\n  // submitUpdateForm(): void {\n  //   // Vérifier que le formulaire est valide\n  //   if (this.modifierProduitForm.invalid) {\n  //     this.errorMessage = \"Veuillez remplir les champs obligatoires.\";\n  //     return;\n  //   }\n  \n  //   // Fusionner les valeurs du formulaire avec le produit existant\n  //   const updatedProduct: Produit = {\n  //     ...this.produit,\n  //     ...this.modifierProduitForm.value \n  //   };\n  \n  //   // Ajout de logs pour le debug\n  //   console.log(\"Produit mis à jour (avant envoi) :\", updatedProduct);\n  //   console.log(\"Fichier sélectionné :\", this.selectedFile);\n  \n  //   // Appel du service qui se charge de créer le FormData et d'envoyer la requête PATCH\n  //   this.produitService.modifierProduit(updatedProduct, this.selectedFile ?? undefined)\n  //     .subscribe({\n  //       next: (response: Produit) => {\n  //         console.log(\"Produit modifié avec succès\", response);\n  //         this.produit = response;\n  //         this.showPopupMessage({\n  //           title: 'Succès',\n  //           message: 'Le produit a été modifié avec succès.',\n  //           image: 'assets/img/succcccc.png',\n  //           type: 'success'\n  //         });\n  //       },\n  //       error: (error) => {\n  //         console.error(\"Erreur lors de la modification du produit\", error);\n  //         let errorMessage = \"Une erreur est survenue lors de la modification du produit.\";\n  //         if (error.error) {\n  //           if (typeof error.error === \"object\" && error.error.error) {\n  //             errorMessage = error.error.error;\n  //           } else if (typeof error.error === \"string\") {\n  //             errorMessage = error.error;\n  //           }\n  //         }\n  //         this.showPopupMessage({\n  //           title: 'Erreur',\n  //           message: errorMessage,\n  //           image: 'assets/img/error.png',\n  //           type: 'error'\n  //         });\n  //       }\n  //     });\n  // }\n\n  submitUpdateForm(): void {\n  // 1. Vérifier si on est en mode édition\n  if (!this.isEditing) return;\n\n  // 2. Vérifier la validité du formulaire\n  if (this.modifierProduitForm.invalid) {\n    this.errorMessage = \"Veuillez corriger les erreurs dans le formulaire.\";\n    \n    // Marquer tous les champs comme \"touched\" pour afficher les erreurs\n    this.markFormGroupTouched(this.modifierProduitForm);\n    return;\n  }\n\n  // 3. Préparer les données à envoyer\n  const updatedProduct: Produit = {\n    ...this.produit,\n    ...this.modifierProduitForm.value\n  };\n\n  // 4. Appel au service de mise à jour\n  this.isLoading = true;\n  this.produitService.modifierProduit(\n    updatedProduct, \n    this.selectedFile ?? undefined\n  ).subscribe({\n    next: (response: Produit) => {\n      this.isLoading = false;\n      \n      // Mettre à jour les données locales\n      this.produit = response;\n      \n      // Réinitialiser l'état d'édition\n      this.isEditing = false;\n      this.modifierProduitForm.disable();\n      \n      // Réinitialiser la sélection de fichier\n      this.selectedFile = null;\n      this.newPhotoUrl = null;\n      \n      // Afficher message de succès\n      this.showPopupMessage({\n        title: 'Succès',\n        message: 'Produit modifié avec succès',\n        image: 'assets/img/succcccc.png',\n        type: 'success'\n      });\n    },\n    error: (error) => {\n      this.isLoading = false;\n      \n      // Gestion des erreurs\n      let errorMessage = \"Erreur lors de la modification du produit\";\n      \n      if (error.error?.message) {\n        errorMessage += `: ${error.error.message}`;\n      } else if (error.statusText) {\n        errorMessage += `: ${error.statusText}`;\n      }\n      \n      // Afficher message d'erreur\n      this.showPopupMessage({\n        title: 'Erreur',\n        message: errorMessage,\n        image: 'assets/img/error.png',\n        type: 'error'\n      });\n    }\n  });\n}\n\n  // Méthode utilitaire pour marquer tous les champs comme \"touched\"\n  private markFormGroupTouched(formGroup: FormGroup) {\n    Object.values(formGroup.controls).forEach(control => {\n      control.markAsTouched();\n\n      if (control instanceof FormGroup) {\n        this.markFormGroupTouched(control);\n      }\n    });\n  }\n\n  // Modifiez onCodeBarChange() :\n  onCodeBarChange(): void {\n    const codeBareValue = this.modifierProduitForm.get('codeBare')?.value || '';\n    this.showBarcode = codeBareValue.length >= 1;\n  }\n\n  validateNumericInput(event: KeyboardEvent): void {\n    const charCode = event.which ? event.which : event.keyCode;\n    if (charCode < 48 || charCode > 57) {\n      event.preventDefault();\n    }\n  }\n\n  navigateBack() {\n    this.router.navigate(['/produit']);\n  }\n  \n}","<div class=\"container_global\">\n  <div *ngIf=\"isLoading\" class=\"loading-overlay\">\n    <div class=\"loading-content\">\n      <div class=\"spinner\"></div>\n      <p>Connexion en cours...</p>\n    </div>\n  </div>\n  \n\n  <div class=\"content_formulaire\">\n\n    <div class=\"modal-body\">\n\n      <form class=\"container_formulaire\" [formGroup]=\"modifierProduitForm\">\n\n        <!-- Icon return  -->\n        <p class=\"retour_icon_text\" (click)=\"navigateBack()\" style=\"cursor: pointer; color: #0672E4;\" title=\"Retour sur la page produit\">\n            <i class=\"ri-arrow-left-s-line\"></i> <span style=\"margin-left: 8px; font-size: 12px;\">Produit</span>\n        </p>\n\n        <!-- Titre d'ajout de produits  -->\n        <div class=\"Title\">\n          <h3>Détails du produits</h3>\n        </div>\n\n\n        <!-- Button return  -->\n        <!-- <div class=\"information_cadre\">\n          <div class=\"cadre_retour\">\n            <div class=\"retour_icon\" (click)=\"navigateBack()\" style=\"cursor: pointer;\" title=\"Retour sur la page produit\">\n                <i class=\"ri-arrow-left-long-fill\"></i>\n            </div>\n          </div>\n        </div> -->\n\n        <div class=\"form_left_right\">\n\n          <!-- Formular ajouter produit  -->\n          <div class=\"formulaire\">\n            \n            <!-- Les information des magasin  -->\n            <div class=\"information_cadre\">\n              <div class=\"info_titre_input\">\n                <h4>Boutique</h4>\n                <!-- <p>Nom boutique: {{ boutiqueName }}</p> -->\n                <!-- Input de nom magasin  -->\n                <div class=\"champ_input\">\n                  <input type=\"text\" class=\"input_focus input_focus_petit\"\n                       style=\"cursor: no-drop; color: #8d8d8d;\"\n                       [value]=\"selectedBoutiqueId ? boutiqueName : allBoutiqueNames.join(', ')\" \n                       disabled required \n                       id=\"nomMagasin\" name=\"nomMagasin\"\n                       placeholder=\"Saisis le nom de magasin\">\n                  <label for=\"nomMagasin\" class=\"label labelColor\">Nom boutique</label>\n                </div>\n              </div>\n            </div>\n            \n            <!-- Les information des produit  -->\n            <div class=\"information_cadre\">\n              <div class=\"info_titre_input\">\n                <div class=\"content_return\" style=\"display: flex; align-items: center; justify-content: space-between;\">\n                  <h4>Information des produits</h4>\n                  <div class=\"icon_edit\" style=\"cursor: pointer;\">\n                    <i *ngIf=\"!isEditing\" style=\"font-size: 16px;\"\n                        class=\"ri-edit-box-line\" \n                        title=\"Cliquer ici pour modifier\"\n                        (click)=\"toggleEditing()\"></i>\n\n                    <i *ngIf=\"isEditing\" style=\"color: #ff0000; font-size: 16px;\"\n                        class=\"ri-close-line\" \n                        title=\"Fermer l'édition\"\n                        (click)=\"toggleEditing()\"></i>\n                  </div>\n                </div>\n\n                <div class=\"champ_grid\">\n                  <!-- Input de nom produits  -->\n                  <div class=\"champ_input\">\n                    <input [attr.disabled]=\"!isEditing ? '' : null\"  formControlName=\"nom\" type=\"text\" class=\"input_focus \" id=\"nom\" name=\"nom\" \n                    placeholder=\"Saisis le nom de magasin\">\n                    <label for=\"nom\" class=\"label labelColor\">Nom produit</label>\n                    <div *ngIf=\"f['nom'].touched && f['nom'].invalid\" class=\"error-message\">\n                      <span *ngIf=\"f['nom'].errors?.['required']\">Le nom produit est vide.</span>\n                      <span *ngIf=\"f['nom'].errors?.['minlength']\">Le nom doit avoir au moins 2 caractères.</span>\n                    </div>\n                  </div>\n\n                  <div class=\"double_input2\">\n                    <div class=\"champ_input\">\n                      <input type=\"text\" placeholder=\"Saisis le nom de catégorie\"\n                          class=\"input_focus\" matInput [formControl]=\"myControl\" \n                          [matAutocomplete]=\"auto\" style=\"cursor: pointer;\" [value]=\"produit.nomCategorie  || 'non categorie'\"\n                          [attr.disabled]=\"!isEditing ? '' : null\">\n                      <label for=\"categorieId\" class=\"label labelCategory\">Catégorie</label>\n                      <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"onCategorySelected($event)\" [displayWith]=\"displayFn\">\n\n                        <mat-option class=\"select-option\" (click)=\"onCreateCategoryClick()\">\n                          <div style=\"display: flex; align-items: center; color: #0672E4;\">\n                            <i class=\"ri-add-circle-fill\" style=\"font-size: 20px;\"></i>\n                            <span style=\"margin-left: 8px;\">Créer une catégorie</span>\n                          </div>\n                        </mat-option>\n\n                        <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n                          {{ option.nom}}\n                        </mat-option>\n                      </mat-autocomplete>\n                      \n                    </div>\n                                     \n                    \n                    <div class=\"arrow_bas\" style=\"position: absolute; right: 5px; top: 20px;\">\n                      <i class=\"ri-arrow-down-s-line\" style=\"font-size: 20px;\"></i>\n                    </div>\n                  </div>\n\n                  <!-- Input de nom produits  -->\n                  <!-- <div class=\"champ_input champ_input2\">\n                    <input formControlName=\"prixVente\" type=\"text\" class=\"input_focus \" id=\"prixVente\" name=\"prixVente\" \n                    placeholder=\"Saisis le nom de magasin\">\n                    <label for=\"prixVente\" class=\"label labelColor\">Prix de vente</label>\n                    <div *ngIf=\"f['prixVente'].touched && f['prixVente'].invalid\" class=\"error-message\">\n                      Le prix de vente est vide.\n                    </div>\n                  </div> -->\n                </div>\n\n                <div class=\"champ_grid\">\n                   <!-- Input de nom produits  -->\n                   <div class=\"champ_input\">\n                    <input formControlName=\"prixVente\" type=\"text\" class=\"input_focus \" id=\"prixVente\" name=\"prixVente\" \n                    placeholder=\"Saisis le nom de magasin\">\n                    <label for=\"prixVente\" class=\"label labelColor\">Prix de vente</label>\n                    <div *ngIf=\"f['prixVente'].touched && f['prixVente'].invalid\" class=\"error-message\">\n                      Le prix de vente est vide.\n                    </div>\n                  </div>\n\n                  <!-- Input de prixAchat  -->\n                  <div class=\"champ_input\">\n                    <input formControlName=\"prixAchat\" type=\"text\" class=\"input_focus\" id=\"prixAchat\" name=\"prixAchat\" \n                    placeholder=\"Saisis le prix d'achat\">\n                    <label for=\"prixAchat\" class=\"label labelColor\">Coût du produit</label>\n                    <!-- <div *ngIf=\"f['prixAchat'].touched && f['prixAchat'].invalid\" class=\"error-message divError\">\n                      Le Coût du produit est vide.\n                    </div> -->\n                  </div>\n                  \n                </div>\n\n                <div class=\"champ_grid\">\n                  \n                  <div class=\"double_input2\">\n                    <div class=\"champ_input\">\n                      <input type=\"text\" placeholder=\"Saisis l'unité de mesure\" \n                          matInput [formControl]=\"uniteControl\" class=\"input_focus\"\n                          [matAutocomplete]=\"autoUnite\" style=\"cursor: pointer;\" [value]=\"produit.nomUnite || 'sans unite'\"\n                          [attr.disabled]=\"!isEditing ? '' : null\">\n                      <label for=\"uniteId\" class=\"label labelCategory\">Unité de mesure</label>\n                      <mat-autocomplete autoActiveFirstOption #autoUnite=\"matAutocomplete\" (optionSelected)=\"onUniteSelected($event)\" [displayWith]=\"displayFnUnite\">\n\n                        <mat-option class=\"select-option\" (click)=\"onCreateUniteClick()\">\n                          <div style=\"display: flex; align-items: center; color: #0672E4;\">\n                            <i class=\"ri-add-circle-fill\" style=\"font-size: 20px;\"></i>\n                            <span style=\"margin-left: 8px;\">Créer une unité</span>\n                          </div>\n                        </mat-option>\n\n                        <mat-option *ngFor=\"let optionUnite of filteredNomUnite | async\" [value]=\"optionUnite\">\n                          {{ optionUnite.nom }}\n                        </mat-option>\n                      </mat-autocomplete>\n                    </div>\n                    <!-- <div class=\"btn_add_categoryDiv2\">\n                      <button class=\"btn_add_category2\" type=\"button\" (click)=\"onCreateUniteClick()\">Créer une unité</button>\n                    </div> -->\n                    <div class=\"arrow_bas\" style=\"position: absolute; right: 5px; top: 20px;\">\n                      <i class=\"ri-arrow-down-s-line\" style=\"font-size: 20px;\"></i>\n                    </div>\n                  </div>\n\n                  <!-- // TRIPLE  -->\n                  <div class=\"triple\" style=\"display: flex; gap: 20px;\">\n                    <div class=\"champ_input\">\n                      <input [value]=\"produit.createdAt | date:'dd-MM-yyyy \\'à\\' HH:mm'\" type=\"text\" class=\"input_focus\" [disabled]=\"true\" style=\"cursor: no-drop; color: #9c9c9c; font-style: italic; letter-spacing: 0.50px; min-width: 190px;\" id=\"dateCreate\" name=\"dateCreate\">\n                      <label for=\"dateCreate\" class=\"label labelColor\">Date creation</label>\n                    </div>\n                    <div class=\"champ_input\">\n                      <input [value]=\"produit.lastUpdated | date:'dd-MM-yyyy \\'à\\' HH:mm'\" type=\"text\" class=\"input_focus\" [disabled]=\"true\" style=\"cursor: no-drop; color: #9c9c9c; font-style: italic; letter-spacing: 0.50px; min-width: 190px;\" id=\"dateUpdate\" name=\"dateUpdate\">\n                      <label for=\"dateUpdate\" class=\"label labelColor\">Date modification</label>\n                    </div>\n                  </div>\n\n                </div>\n\n                <!-- Input de categorie  -->\n                <!-- <div class=\"champ_input\">\n                  <input type=\"text\" class=\"input_focus \" required id=\"category\" name=\"category\" placeholder=\"Saisis le nom de categorie\">\n                  <label for=\"category\" class=\"label labelColor\">Catégorie (Facultatif)</label>\n                </div> -->\n\n                <!-- <div class=\"double_input2\">\n                  <div class=\"champ_input\">\n                    <input type=\"text\" placeholder=\"Saisis le nom de catégorie\"\n                        class=\"input_focus\" matInput [formControl]=\"myControl\" \n                        [matAutocomplete]=\"auto\" style=\"cursor: pointer;\" [value]=\"produit.nomCategorie  || 'non categorie'\">\n                    <label for=\"categorieId\" class=\"label labelCategory\">Catégorie</label>\n                    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"onCategorySelected($event)\" [displayWith]=\"displayFn\">\n                      <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n                        {{ option.nom}}\n                      </mat-option>\n                    </mat-autocomplete>\n                    \n                  </div>\n                                   \n                  \n                  <div class=\"btn_add_categoryDiv2\">\n                    <button class=\"btn_add_category2\" (click)=\"onCreateCategoryClick()\">Créer une catégorie</button>\n                  </div>\n                </div> -->\n\n                <!-- <div class=\"double_input2\">\n                  <div class=\"champ_input\">\n                    <input type=\"text\" placeholder=\"Saisis l'unité de mesure\" \n                        matInput [formControl]=\"uniteControl\" class=\"input_focus\"\n                        [matAutocomplete]=\"autoUnite\" style=\"cursor: pointer;\" [value]=\"produit.nomUnite || 'non unite'\">\n                    <label for=\"uniteId\" class=\"label labelCategory\">Unité de mesure</label>\n                    <mat-autocomplete autoActiveFirstOption #autoUnite=\"matAutocomplete\" (optionSelected)=\"onUniteSelected($event)\" [displayWith]=\"displayFnUnite\">\n                      <mat-option *ngFor=\"let optionUnite of filteredNomUnite | async\" [value]=\"optionUnite\">\n                        {{ optionUnite.nom }}\n                      </mat-option>\n                    </mat-autocomplete>\n                  </div>\n                  <div class=\"btn_add_categoryDiv2\">\n                    <button class=\"btn_add_category2\" type=\"button\" (click)=\"onCreateUniteClick()\">Créer une unité</button>\n                  </div>\n                </div> -->\n                \n              </div>\n            </div>\n            \n            <!-- Les information des produit identite  -->\n            <div class=\"information_cadre\">\n              <div class=\"info_titre_input\">\n                <h4>Identité de produit</h4>\n\n                <!-- Input de produits  -->\n                 <div class=\"double_input\">\n                  <div class=\"champ_input champ_input2\">\n                      <input [value]=\"produit.codeGenerique\" style=\"cursor: no-drop; color: #9c9c9c; letter-spacing: 0.50px; min-width: 190px;\" [disabled]=\"true\" type=\"text\" class=\"input_focus \" id=\"codeGenerique\" name=\"codeGenerique\" \n                      placeholder=\"Numéro code barre\">\n                      <label for=\"codeGenerique\" class=\"label labelColor\">Code du produit</label>\n                    </div>\n\n                    <!-- // champs_code_bare_double -->\n                    <div class=\"champs_code_bare_double\">\n                      <div class=\"champ_input\">\n                        <input \n                            type=\"text\" \n                            formControlName=\"codeBare\"\n                            autocomplete=\"off\"\n                            class=\"input_focus\"\n                            id=\"codeBar\"\n                            name=\"codeBar\"\n                            placeholder=\"Numéro code barre\"\n                            inputmode=\"numeric\"\n                            pattern=\"[0-9]*\"\n                            (keypress)=\"validateNumericInput($event)\"> \n                        <label for=\"codeBare\" class=\"label labelColor\">Numéro code barre (Facultatif)</label>\n                        <div *ngIf=\"f['codeBare'].touched && f['codeBare'].invalid\" class=\"error-message\">\n                          <span *ngIf=\"f['codeBare'].errors?.['minlength']\">Le code barre doit avoir au moins 8 caractères.</span>\n                          <span *ngIf=\"f['codeBare'].errors?.['maxlength']\">Le code barre ne doit pas dépasser 13 caractères.</span>\n                        </div>\n                      </div>\n                    \n                      <div style=\"margin-left: 15px;\" *ngIf=\"showBarcode\">\n                        <ngx-barcode6\n                          [bc-value]=\"f['codeBare'].value\"\n                          bc-format=\"CODE128\"\n                          [bc-line-color]=\"'#000000'\"\n                          [bc-width]=\"1\"\n                          [bc-height]=\"40\"\n                          [bc-font-size]=\"12\"\n                          [bc-display-value]=\"true\">\n                        </ngx-barcode6>\n                      </div>\n                    </div>\n                    \n\n                </div>\n\n                <div class=\"champ_input\">\n                  <textarea formControlName=\"description\" class=\"input_focus2\" id=\"description\" name=\"description\" \n                  placeholder=\"Saisis Une description pour ce produit\"></textarea>\n                  <label for=\"description\" class=\"label labelColor\">Description (Facultatif)</label>\n                </div>\n                \n              </div>\n            </div>\n            \n            <!-- Les information des produit Inventaire  -->\n            <div class=\"information_cadre\">\n              <div class=\"info_titre_input\">\n                <h4>Inventaire</h4>\n\n                <div class=\"champ_input_inventaire\">\n                  <p>Ajouter dans les stocks</p>\n                  <label class=\"switch\">\n                    <input type=\"checkbox\"\n                           [(ngModel)]=\"isChecked\" (change)=\"onToggleChange($event)\"\n                           [ngModelOptions]=\"{standalone: true}\"\n                           [(ngModel)]=\"produit.enStock\"\n                           (change)=\"onToggleChange($event)\"/>\n                    <span class=\"slider round\"></span>\n                  </label>\n                </div>\n                <div class=\"double_inputh\" *ngIf=\"isChecked\">\n                    <div class=\"champ_input champ_input2\">\n                      <input formControlName=\"seuilAlert\" type=\"text\" class=\"input_focus \" required id=\"seuilAlert\" name=\"seuilAlert\" \n                      placeholder=\"Saisis le montant d'alerte\">\n                      <label for=\"seuilAlert\" class=\"label labelColor\">Seuil d'alerte</label>\n                      <div *ngIf=\"f['seuilAlert'].touched && f['seuilAlert'].invalid\" class=\"error-message\">\n                        Le alert seuil est vide.\n                      </div>\n                    </div>\n                    <div class=\"champ_input champ_input2\">\n                      <input \n                        formControlName=\"quantite\" \n                        type=\"text\" \n                        class=\"input_focus\" \n                        readonly \n                        [value]=\"getBoutiqueQuantity()\"\n                        style=\"cursor: no-drop;\">\n                      <label for=\"quantite\" class=\"label labelColor\">En stock</label>\n                    </div>\n                    \n                </div>\n              </div>   \n              \n            </div> \n            \n            <!-- Les information des produit Photo  -->\n            <div class=\"information_cadre\">\n              <div class=\"info_titre_input\">\n                <h4>Ajouter une image</h4>\n\n                <p *ngIf=\"!errorMessage\" style=\"font-size: 12px; float: right;\">Taille : 2 Mo max</p>\n                <p *ngIf=\"errorMessage\" style=\"font-size: 12px; float: right; color: red;\">{{ errorMessage }}</p>\n\n                <!-- Input de produits photo -->\n                <!-- Section pour la gestion de l'image du produit -->\n                <div class=\"container_file\"> \n                  <div class=\"header_file\">\n                    <!-- <img [src]=\"newPhotoUrl ? newPhotoUrl : (produit.photo ? (backendUrl + produit.photo) : 'assets/img/appareil.jpg')\" alt=\"Produit\"> -->\n                    <img [src]=\"newPhotoUrl ? newPhotoUrl : getImageUrl(produit)\" alt=\"Produit\">\n                  </div> \n                  <button *ngIf=\"newPhotoUrl && newPhotoUrl !== urllink\" (click)=\"clearImage()\" class=\"clear-image-btn\">\n                    <i class=\"ri-delete-bin-5-line\"></i>\n                  </button>\n                  <div *ngIf=\"isEditing\">\n                    <label for=\"file\" class=\"footer_file\"> \n                      <i class=\"ri-file-3-fill\"></i>\n                      <p>Choisir un fichier</p>\n                    </label> \n                    <input type=\"file\" accept=\"image/*\" id=\"file\" (change)=\"onFileSelected($event)\" hidden>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <!-- Buttom ajouter et annuler  -->\n            <div class=\"information_cadre information_cadre_save\">\n\n              <!-- Message d'erreur global -->\n              <div class=\"container_error_message\">\n                <div *ngIf=\"errorMessage\" class=\"error-message\">\n                  {{ errorMessage }}\n                </div>\n              </div>\n\n              <div class=\"info_titre_input info_titre_input_btn\">\n\n                <!-- Input de produits  -->\n                <div class=\"btn_annuler\">\n                  <button class=\"btn_cancel\" routerLink=\"/produit\" >Annuler</button>\n                </div>\n\n                <div class=\"btn_ajouter\" *ngIf=\"isEditing\">\n                  <button class=\"btn_save\" type=\"submit\" (click)=\"submitUpdateForm()\">Modifier</button>\n                </div>\n                \n              </div>\n            </div>\n\n            <!-- Popup de confirmation / d'erreur -->\n            <div class=\"modal-overlay\" *ngIf=\"showPopup\">\n              <div class=\"modal-content\" [ngClass]=\"{'error': popupData.type === 'error'}\">\n                <div class=\"popup-header\">\n                  <div class=\"popup-img\">\n                      <img [src]=\"popupData.image\" alt=\"Icone\" class=\"popup-icon2\">\n                  </div>\n                  <h2>{{ popupData.title }}</h2>\n                </div>\n                <p>{{ popupData.message }}</p>\n                <button (click)=\"closePopup()\">OK</button>\n              </div>\n            </div>\n\n          </div>\n\n        </div>\n        \n      </form>\n\n    </div>\n</div>\n</div>\n\n<!-- Popup pour créer une catégorie -->\n<div class=\"popup-overlay\" *ngIf=\"showPopupCategory\">\n  <div class=\"popup-content\" style=\"max-width: 350px;\">\n    <div class=\"popup-headerBoutique\">\n      <h4>Créer une catégorie</h4>\n      <button class=\"close-btn\" (click)=\"closePopupCategory()\">&times;</button>\n    </div>\n    <form [formGroup]=\"ajouteCategoryForm\">\n      <div class=\"popup-body\">\n        <div class=\"champ_input\" style=\"margin-top: 15px;\">\n          <input autocomplete=\"off\" formControlName=\"categoryName\" type=\"text\" \n                 class=\"input_focus input_focus_cree_cate\" required id=\"categoryName\" \n                 name=\"categoryName\" placeholder=\"Saisis le nom de catégorie\">\n          <label for=\"categoryName\" class=\"label labelColor\">Nom catégorie</label>\n          <div *ngIf=\"c['categoryName'].touched && c['categoryName'].invalid\" class=\"error-message\">\n            <span *ngIf=\"c['categoryName'].errors?.['minlength']\">Le nom doit avoir au moins 3 caractères.</span>\n            <span *ngIf=\"c['categoryName'].errors?.['maxlength']\">Le nom ne doit pas dépasser 20 caractères.</span>\n          </div>\n        </div>\n\n        <div *ngIf=\"errorMessageCategory\" class=\"error-message-category\">\n          {{ errorMessageCategory }}\n        </div>\n\n        <div class=\"errorAPI\" *ngIf=\"messageAPI\">\n          <img [src]=\"apiMessageType === 'success' ? 'assets/img/succcccc.png' : 'assets/img/error.png'\" alt=\"Message API\">\n          <span>{{ messageAPI }}</span>\n        </div>\n      </div>\n      <div class=\"popup-footer\">\n        <button class=\"btn-cancel\" (click)=\"closePopupCategory()\">Annuler</button>\n        <button class=\"btn-submit\" \n                [disabled]=\"ajouteCategoryForm.invalid\" \n                [style.backgroundColor]=\"ajouteCategoryForm.valid ? '#0672E4' : '#0671e434'\"\n                (click)=\"submitFormCategory()\">\n          Ajouter\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n\n<!-- Popup pour créer une unité -->\n<div class=\"popup-overlay\" *ngIf=\"showPopupUnit\">\n  <div class=\"popup-content\" style=\"max-width: 350px;\">\n    <div class=\"popup-headerBoutique\">\n      <h4>Créer une unité</h4>\n      <button class=\"close-btn\" (click)=\"closePopupUnit()\">&times;</button>\n    </div>\n    <form [formGroup]=\"ajouteUniteForm\">\n      <div class=\"popup-body\">\n        <div class=\"champ_input\" style=\"margin-top: 15px;\">\n          <input autocomplete=\"off\" formControlName=\"unityName\" type=\"text\" \n                 class=\"input_focus input_focus_cree_cate\" required id=\"unityName\" \n                 name=\"unityName\" placeholder=\"Saisis le nom de unité\">\n          <label for=\"unityName\" class=\"label labelColor\">Nom unité</label>\n          <div *ngIf=\"u['unityName'].touched && u['unityName'].invalid\" class=\"error-message\">\n            <span *ngIf=\"u['unityName'].errors?.['minlength']\">Le nom doit avoir au moins 2 caractères.</span>\n            <span *ngIf=\"u['unityName'].errors?.['maxlength']\">Le nom ne doit pas dépasser 20 caractères.</span>\n          </div>\n        </div>\n\n        <div *ngIf=\"errorMessageUnity\" class=\"error-message-category\">\n          {{ errorMessageUnity }}\n        </div>\n\n        <div class=\"errorAPI\" *ngIf=\"messageAPI\">\n          <img [src]=\"apiMessageType === 'success' ? 'assets/img/succcccc.png' : 'assets/img/error.png'\" alt=\"Message API\">\n          <span>{{ messageAPI }}</span>\n        </div>\n      </div>\n      <div class=\"popup-footer\">\n        <button class=\"btn-cancel\" (click)=\"closePopupUnit()\">Annuler</button>\n        <button class=\"btn-submit\" \n                [disabled]=\"ajouteUniteForm.invalid\" \n                [style.backgroundColor]=\"ajouteUniteForm.valid ? '#0672E4' : '#0671e434'\"\n                (click)=\"submitFormUnity()\">\n          Ajouter\n        </button>\n      </div>\n    </form>\n  </div>\n</div>"],"names":["CommonModule","FormControl","FormGroup","FormsModule","ReactiveFormsModule","Validators","MatAutocompleteModule","map","of","startWith","RouterLink","NgxBarcode6Module","environment","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ListProduitComponent_i_28_Template_i_click_0_listener","ɵɵrestoreView","_r2","ctx_r2","ɵɵnextContext","ɵɵresetView","toggleEditing","ListProduitComponent_i_29_Template_i_click_0_listener","_r4","ɵɵtemplate","ListProduitComponent_div_35_span_1_Template","ListProduitComponent_div_35_span_2_Template","ɵɵadvance","ɵɵproperty","f","errors","option_r5","ɵɵtextInterpolate1","nom","optionUnite_r6","ListProduitComponent_div_104_span_1_Template","ListProduitComponent_div_104_span_2_Template","value","ListProduitComponent_div_120_div_5_Template","touched","invalid","getBoutiqueQuantity","ɵɵtextInterpolate","errorMessage","ListProduitComponent_button_130_Template_button_click_0_listener","_r7","clearImage","ListProduitComponent_div_131_Template_input_change_5_listener","$event","_r8","onFileSelected","ListProduitComponent_div_139_Template_button_click_1_listener","_r9","submitUpdateForm","ListProduitComponent_div_140_Template_button_click_9_listener","_r10","closePopup","ɵɵpureFunction1","_c1","popupData","type","image","ɵɵsanitizeUrl","title","message","ListProduitComponent_div_141_div_13_span_1_Template","ListProduitComponent_div_141_div_13_span_2_Template","c","errorMessageCategory","apiMessageType","messageAPI","ListProduitComponent_div_141_Template_button_click_5_listener","_r11","closePopupCategory","ListProduitComponent_div_141_div_13_Template","ListProduitComponent_div_141_div_14_Template","ListProduitComponent_div_141_div_15_Template","ListProduitComponent_div_141_Template_button_click_17_listener","ListProduitComponent_div_141_Template_button_click_19_listener","submitFormCategory","ajouteCategoryForm","ɵɵstyleProp","valid","ListProduitComponent_div_142_div_13_span_1_Template","ListProduitComponent_div_142_div_13_span_2_Template","u","errorMessageUnity","ListProduitComponent_div_142_Template_button_click_5_listener","_r12","closePopupUnit","ListProduitComponent_div_142_div_13_Template","ListProduitComponent_div_142_div_14_Template","ListProduitComponent_div_142_div_15_Template","ListProduitComponent_div_142_Template_button_click_17_listener","ListProduitComponent_div_142_Template_button_click_19_listener","submitFormUnity","ajouteUniteForm","ListProduitComponent","showPopupMessage","data","showPopup","router","navigate","controls","modifierProduitForm","constructor","categorieService","uniteMesureService","produitService","fb","route","usersService","boutiqueNames","selectedBoutique","previousSelectedBoutique","boutiqueActuelle","boutiques","isChecked","allBoutiqueNames","boutiqueName","boutiqueId","popupTitle","popupMessage","popupImage","popupType","imagePopup","nomEntreprise","adresseEntreprise","logoEntreprise","imageFile","isLoading","urllink","newPhotoUrl","backendUrl","apiBaseUrl","apiUrl","imgUrl","selectedFile","selectedBoutiqueId","showBarcode","showPopupCategory","showPopupUnit","isEditing","myControl","uniteControl","produit","id","prixVente","description","codeGenerique","prixAchat","quantite","seuilAlert","categorieId","uniteId","codeBare","photo","enStock","options","optionsUnite","filteredOptions","filteredNomUnite","UniterControl","showCategoryCreation","showUniteCreation","ngOnInit","getFiltrageCategoriesUnites","getModifierProduitForm","getAjouteCategoryForm","getAjouteUniteForm","getAjouteCategoryFormCategoryName","getAjouteCategoryFormUnityName","getModifierProduitFormCodeBare","disable","queryParams","subscribe","params","getProduit","onResponseFromBackend","response","defaultImage","onToggleChange","event","checkbox","target","console","log","checked","input","files","length","file","maxSize","size","reader","FileReader","onload","e","result","readAsDataURL","getImageUrl","firstLetter","charAt","toUpperCase","openPopupCategory","reset","openPopupUnit","token","getValidAccessToken","error","getCategories","next","categories","valueChanges","pipe","name","_filter","slice","getUniteMesure","uniteMesures","_filterUnite","group","required","minLength","maxLength","categoryName","unityName","get","selectBoutique","boutique","idParam","snapshot","paramMap","productId","getProduitById","patchValue","loadInitialValues","b","find","err","getBoutiqueNames","enable","onCategorySelected","option","setValue","onUniteSelected","filterValue","toLowerCase","filter","includes","displayFn","category","displayFnUnite","unityMesure","onCreateCategoryClick","onCreateUniteClick","cancelCategoryCreation","cancelUniteCreation","categoryData","ajouterCategorie","newCategory","push","initialUnite","initialCategorie","unityData","ajouterUnite","newUnity","updateValueAndValidity","markFormGroupTouched","updatedProduct","modifierProduit","undefined","statusText","formGroup","Object","values","forEach","control","markAsTouched","onCodeBarChange","codeBareValue","validateNumericInput","charCode","which","keyCode","preventDefault","navigateBack","ɵɵdirectiveInject","i1","CategorieService","i2","UniteMesureService","i3","ProduitService","i4","FormBuilder","i5","Router","ActivatedRoute","i6","UsersService","selectors","decls","vars","consts","template","ListProduitComponent_Template","rf","ctx","ListProduitComponent_div_1_Template","ListProduitComponent_Template_p_click_5_listener","_r1","ListProduitComponent_i_28_Template","ListProduitComponent_i_29_Template","ListProduitComponent_div_35_Template","ListProduitComponent_Template_mat_autocomplete_optionSelected_41_listener","ListProduitComponent_Template_mat_option_click_43_listener","ListProduitComponent_mat_option_48_Template","ListProduitComponent_div_57_Template","ListProduitComponent_Template_mat_autocomplete_optionSelected_68_listener","ListProduitComponent_Template_mat_option_click_70_listener","ListProduitComponent_mat_option_75_Template","ListProduitComponent_Template_input_keypress_101_listener","ListProduitComponent_div_104_Template","ListProduitComponent_div_105_Template","ɵɵtwoWayListener","ListProduitComponent_Template_input_ngModelChange_118_listener","ɵɵtwoWayBindingSet","ListProduitComponent_Template_input_change_118_listener","ListProduitComponent_div_120_Template","ListProduitComponent_p_125_Template","ListProduitComponent_p_126_Template","ListProduitComponent_button_130_Template","ListProduitComponent_div_131_Template","ListProduitComponent_div_134_Template","ListProduitComponent_div_139_Template","ListProduitComponent_div_140_Template","ListProduitComponent_div_141_Template","ListProduitComponent_div_142_Template","join","auto_r13","nomCategorie","ɵɵpipeBind1","autoUnite_r14","nomUnite","ɵɵpipeBind2","createdAt","lastUpdated","ɵɵtwoWayProperty","ɵɵpureFunction0","_c0","ɵNgNoValidate","DefaultValueAccessor","CheckboxControlValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","PatternValidator","NgModel","i7","NgClass","NgForOf","NgIf","AsyncPipe","DatePipe","FormControlDirective","FormGroupDirective","FormControlName","i8","MatAutocomplete","MatOption","MatAutocompleteTrigger","i9","NgxBarcode6Component","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}
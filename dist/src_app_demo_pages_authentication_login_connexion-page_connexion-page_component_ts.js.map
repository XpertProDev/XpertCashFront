{"version":3,"file":"src_app_demo_pages_authentication_login_connexion-page_connexion-page_component_ts.js","mappings":"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","sources":["./src/app/demo/pages/authentication/login/connexion-page/connexion-page.component.ts","./src/app/demo/pages/authentication/login/connexion-page/connexion-page.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UsersService } from 'src/app/admin-page/SERVICES/users.service';\nimport { AuthService } from 'src/app/admin-page/SERVICES/auth.service';\nimport { HeaderNavComponent } from 'src/app/admin-page/Navigation/header-nav/header-nav.component';\nimport { CommonModule } from '@angular/common';\n\nexport interface ForgotPasswordResponse {\n  message: string;\n}\n\n@Component({\n  selector: 'app-connexion-page',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, HeaderNavComponent],\n  templateUrl: './connexion-page.component.html',\n  styleUrls: ['./connexion-page.component.scss']\n})\nexport class ConnexionPageComponent {\n  loginForm!: FormGroup;\n  errorMessage: string = '';\n  isResetPassword: boolean = false;\n  resetForm!: FormGroup;\n\n  // Propriétés pour la popup (utilisées uniquement en cas d'erreur)\n  showPopup: boolean = false;\n  popupTitle: string = '';\n  popupMessage: string = '';\n  popupImage: string = '';\n  popupType: 'success' | 'error' = 'success';\n\n  isLoading: boolean = false;\n  resetSuccessMessage: string | null = null;\n  resetErrorMessage: string | null = null;\n\n  showOtpVerification: boolean = false;\n  otpForm!: FormGroup;\n  resetEmailForOtp: string = '';\n  otpErrorMessage: string = '';\n  otpSuccessMessage: string = '';\n\n  showPasswordResetForm: boolean = false;\n  resetToken: string = '';\n  newPasswordForm!: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private usersService: UsersService,\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(8)]]\n    });\n\n    this.resetForm = this.fb.group({\n      resetEmail: ['', [Validators.required, Validators.email]]\n    });\n\n    this.initOptForm();\n    this.initNewPassword();\n    \n  }\n\n  initNewPassword() {\n    this.newPasswordForm = this.fb.group({\n      newPassword: ['', [Validators.required, Validators.minLength(8)]],\n      confirmPassword: ['', Validators.required]\n    }, { validators: this.passwordMatchValidator });\n  }\n\n  passwordMatchValidator(form: FormGroup) {\n    return form.get('newPassword')?.value === form.get('confirmPassword')?.value \n      ? null : { mismatch: true };\n  }\n\n  initOptForm() {\n    this.otpForm = this.fb.group({\n      digit1: ['', [Validators.required, Validators.pattern(/[0-9]/)]],\n      digit2: ['', [Validators.required, Validators.pattern(/[0-9]/)]],\n      digit3: ['', [Validators.required, Validators.pattern(/[0-9]/)]],\n      digit4: ['', [Validators.required, Validators.pattern(/[0-9]/)]],\n      digit5: ['', [Validators.required, Validators.pattern(/[0-9]/)]],\n      digit6: ['', [Validators.required, Validators.pattern(/[0-9]/)]]\n    });\n    this.otpErrorMessage = ''; // <-- Ajout ici\n    this.otpSuccessMessage = '';\n  }\n\n  onOtpBackspace(index: number, event: KeyboardEvent) {\n    const input = event.target as HTMLInputElement;\n    \n    if (event.key === 'Backspace' && !input.value && index > 1) {\n      const prevInput = document.querySelector(`[formControlName=\"digit${index - 1}\"]`) as HTMLInputElement;\n      if (prevInput) {\n        prevInput.focus();\n        prevInput.select(); // Sélectionne le contenu pour faciliter la suppression\n      }\n    }\n  }\n\n  // Getter pour accéder facilement aux contrôles\n  get rf() { return this.resetForm.controls; }\n\n  goToInscription() {\n    this.router.navigate(['/inscription']);\n  }\n\n  // Méthode pour basculer entre les vues\n  toggleResetPassword() {\n    this.isResetPassword = !this.isResetPassword;\n  }\n\n  openPopup(title: string, message: string, type: 'success' | 'error'): void {\n    this.popupTitle = title;\n    this.popupMessage = message;\n    this.popupType = type;\n    this.popupImage = type === 'success'\n      ? 'assets/img/succcccc.png'\n      : 'assets/img/error.png';\n    this.showPopup = true;\n  }\n\n  closePopup(): void {\n    this.showPopup = false;\n  }\n\nsubmitForm(): void {\n  if (this.loginForm.invalid) {\n    this.errorMessage = \"Veuillez vérifier les informations saisies.\";\n    return;\n  }\n\n  this.isLoading = true;\n  const credentials = this.loginForm.value;\n\n  setTimeout(() => { \n    this.usersService.connexionUser(credentials).subscribe({\n      next: (response) => {\n        this.isLoading = false;\n\n        if (response.accessToken && response.refreshToken) {\n          console.log(\"Access Token :\", response.accessToken);\n          console.log(\"Refresh Token :\", response.refreshToken);\n\n          // Sauvegarde les tokens dans le service d'authentification\n          this.authService.saveTokens(response.accessToken, response.refreshToken);\n\n          // Récupérer les informations de l'utilisateur après la connexion\n          this.usersService.getUserInfo().subscribe({\n            next: (user) => {\n              const userRoleType = user.roleType;  // Récupérer le roleType de l'utilisateur\n              const userPermissions = user.permissions;  // Récupérer les permissions de l'utilisateur\n\n              // Vérification des permissions\n              if (userPermissions.includes(\"VENDRE_PRODUITS\")) {\n                // Si l'utilisateur a \"VENDRE_PRODUITS\" + une autre permission\n                if (userPermissions.length > 1) {\n                  // Redirection vers \"analytics\" si l'utilisateur a plus qu'une seule permission\n                  this.router.navigate(['/analytics']).then(success => {\n                    console.log(\"Navigation vers analytics réussie ?\", success);\n                  });\n                } else {\n                  // Si l'utilisateur n'a que \"VENDRE_PRODUITS\", redirection vers \"pos-caisse\"\n                  this.router.navigate(['/pos-caisse']).then(success => {\n                    console.log(\"Navigation vers pos-caisse réussie ?\", success);\n                  });\n                }\n              } else if (\n                userPermissions.includes(\"VENDRE_PRODUITS\")\n              ) {\n                // Redirection vers \"pos-caisse\" pour les permissions liées à la gestion des produits\n                this.router.navigate(['/pos-caisse']).then(success => {\n                  console.log(\"Navigation vers pos-caisse réussie ?\", success);\n                });\n              } else {\n                // Redirection par défaut si aucune des conditions ci-dessus n'est remplie\n                this.router.navigate(['/analytics']).then(success => {\n                  console.log(\"Navigation vers la page par défaut réussie ?\", success);\n                });\n              }\n            },\n            error: (err) => {\n              console.error(\"Erreur lors de la récupération des infos utilisateur :\", err);\n              this.errorMessage = \"Impossible de récupérer les informations utilisateur.\";\n              this.openPopup(\"Erreur\", this.errorMessage, \"error\");\n            }\n          });\n        } else {\n          this.errorMessage = response.error || \"Erreur de connexion, veuillez réessayer.\";\n          this.openPopup(\"Erreur de connexion\", this.errorMessage, 'error');\n        }\n      },\n      error: (error) => {\n        this.isLoading = false;\n        console.log(\"Erreur complète :\", error);\n        console.log(\"Réponse API :\", error.error);\n\n        let message = \"Une erreur est survenue lors de la connexion.\";\n        if (error.status === 400 || error.status === 401) {\n          if (typeof error.error === \"string\") {\n            message = error.error;\n          } else if (error.error?.error) {\n            message = error.error.error;\n          }\n        }\n        this.openPopup(\"❌ Oups, une erreur !\", message, \"error\");\n      }\n    });\n  }, 1000);\n}\n\n\n\n\n\n  \n  get f() { return this.loginForm.controls; }\n\n  // Méthode de soumission du formulaire de réinitialisation\n\n  submitResetForm(): void {\n    this.resetSuccessMessage = null;\n    this.resetErrorMessage = null;\n\n    if (this.resetForm.invalid) {\n      this.resetErrorMessage = 'Veuillez saisir une adresse email valide.';\n      return;\n    }\n\n    const email = this.resetForm.get('resetEmail')?.value;\n    this.isLoading = true;\n\n    this.usersService.forgotPassword(email).subscribe({\n      next: (response) => {\n        this.isLoading = false;\n        // this.resetSuccessMessage = `Un lien de réinitialisation a été envoyé à ${email}. Vérifiez votre boîte de réception.`;\n        this.resetSuccessMessage = `Votre code de vérification a été envoyé par e-mail.`;\n        this.resetEmailForOtp = email; \n        this.resetForm.reset();\n        this.resetOtpForm();\n\n        setTimeout(() => {\n          this.isResetPassword = false; // Masquer la vue réinitialisation\n          this.showOtpVerification = true; // Afficher la vue OTP\n          this.resetSuccessMessage = null; // Effacer le message\n        }, 2000);\n      },\n      error: (error) => {\n        this.isLoading = false;\n        \n        if (error.status === 404) {\n          this.resetErrorMessage = \"Une erreur s'est produite. Veuillez réessayer plus tard.\";\n        } else {\n          this.resetErrorMessage = \"Aucun compte n'est associé à cet email.\";\n          // this.resetErrorMessage = \"Une erreur s'est produite. Veuillez réessayer plus tard.\";\n        }\n      }\n    });\n  }\n\n  submitOtpForm(): void {\n      if (this.otpForm.invalid) {\n          this.otpErrorMessage = \"Veuillez saisir un code complet à 6 chiffres\";\n          return;\n      }\n\n      this.isLoading = true;\n      this.otpErrorMessage = '';\n      \n      // Concaténer les chiffres\n      const code = Object.values(this.otpForm.value).join('');\n      \n      // Appel au backend pour validation\n      this.usersService.validateOtp(this.resetEmailForOtp, code).subscribe({\n          next: (response) => {\n              this.isLoading = false;\n              this.otpSuccessMessage = \"Votre email a été vérifié avec succès!\";\n              this.resetToken = response.token; // Stocker le token reçu du backend\n              this.otpForm.reset();\n              \n              setTimeout(() => {\n                  this.otpSuccessMessage = '';\n                  this.showOtpVerification = false;\n                  this.showPasswordResetForm = true;\n              }, 2000);\n          },\n          error: (error) => {\n              this.isLoading = false;\n              this.otpErrorMessage = error.error?.error || \"Code invalide ou expiré\";\n          }\n      });\n  }\n\n  resetComponentState(): void {\n    this.isResetPassword = false;\n    this.showOtpVerification = false;\n    this.showPasswordResetForm = false;\n    this.otpSuccessMessage = '';\n    this.otpErrorMessage = '';\n    this.resetSuccessMessage = null;\n    this.resetErrorMessage = null;\n    this.errorMessage = '';\n    \n    // Réinitialiser les formulaires\n    this.loginForm.reset();\n    this.resetForm.reset();\n    this.otpForm.reset();\n    this.newPasswordForm.reset();\n  }\n\n  // Ajouter pour la navigation entre les vues\n  goBackToReset() {\n    this.resetOtpForm();\n\n    this.resetForm.patchValue({\n      resetEmail: this.resetEmailForOtp\n    });\n\n    this.showOtpVerification = false;\n    this.isResetPassword = true;\n    this.otpErrorMessage = '';\n    this.otpSuccessMessage = '';\n    this.resetSuccessMessage = null;\n  }\n\n  // Ajoutez cette méthode pour réinitialiser les champs OTP\n  resetOtpForm(): void {\n    this.otpForm.reset();\n    this.otpErrorMessage = '';\n    this.otpSuccessMessage = '';\n  }\n\n  goToLogin(): void {\n    this.isResetPassword = false;\n    this.showOtpVerification = false;\n    this.resetSuccessMessage = null;\n    this.resetErrorMessage = null;\n    this.otpErrorMessage = '';\n    this.otpSuccessMessage = '';\n  }\n\n  // Gestion du focus automatique\n  onOtpInput(index: number, event: any) {\n    const value = event.target.value;\n    if (value && index < 6) {\n      const nextInput = document.querySelector(`[formControlName=\"digit${index + 1}\"]`) as HTMLInputElement;\n      if (nextInput) {\n        nextInput.focus();\n      }\n    }\n  }\n\n  goBackToOtpVerification() {\n    this.showPasswordResetForm = false;\n    this.showOtpVerification = true;\n  }\n  \n  submitNewPasswordForm(): void {\n      if (this.newPasswordForm.invalid) {\n          return;\n      }\n\n      const newPassword = this.newPasswordForm.get('newPassword')?.value;\n      this.isLoading = true;\n\n      this.usersService.resetPassword(this.resetToken, newPassword).subscribe({\n          next: () => {\n              this.isLoading = false;\n              this.otpSuccessMessage = \"Votre mot de passe a été réinitialisé avec succès!\";\n              \n              setTimeout(() => {\n                  // Réinitialiser tous les états avant la navigation\n                  this.isResetPassword = false;\n                  this.showOtpVerification = false;\n                  this.showPasswordResetForm = false;\n                  this.otpSuccessMessage = '';\n                  this.otpErrorMessage = '';\n                  this.resetSuccessMessage = null;\n                  this.resetErrorMessage = null;\n                  \n                  // Naviguer vers la page de connexion\n                  this.resetComponentState();\n                  this.router.navigate(['/connexion']);\n              }, 2000);\n          },\n          error: (error) => {\n              this.isLoading = false;\n              this.otpErrorMessage = error.error?.error || \"Erreur lors de la réinitialisation du mot de passe.\";\n          }\n      });\n  }\n\n\n\n}\n","<!--=========================== NAVIGATION ===========================-->\n<app-header-nav></app-header-nav>\n\n<div class=\"container_global\">\n  <div class=\"container_global_content\">\n    <div *ngIf=\"isLoading\" class=\"loading-overlay\">\n      <div class=\"loading-content\">\n        <div class=\"spinner\"></div>\n        <p>Connexion en cours...</p>\n      </div>\n    </div>\n    \n    <!-- Page -->\n    <div class=\"content_page\">\n      <div class=\"title_form\">\n        <h2>Connexion</h2>\n      </div>\n  \n      <section class=\"formulaire_img\">\n        <div class=\"info_form_left\">\n          <div *ngIf=\"showPasswordResetForm\">\n            <form [formGroup]=\"newPasswordForm\">\n              <div class=\"formulaire\">\n                <h2>Réinitialiser votre mot de passe</h2>\n                \n                <div class=\"champ_input\">\n                  <input type=\"password\" formControlName=\"newPassword\" class=\"input_focus\" placeholder=\"Nouveau mot de passe\">\n                  <label class=\"label\">Nouveau mot de passe</label>\n                  <div *ngIf=\"newPasswordForm.get('newPassword')?.touched && newPasswordForm.get('newPassword')?.invalid\" class=\"error-message\">\n                    <span *ngIf=\"newPasswordForm.get('newPassword')?.errors?.['required']\">Le mot de passe est requis</span>\n                    <span *ngIf=\"newPasswordForm.get('newPassword')?.errors?.['minlength']\">Au moins 8 caractères</span>\n                  </div>\n                </div>\n\n                <div class=\"champ_input\">\n                  <input type=\"password\" formControlName=\"confirmPassword\" class=\"input_focus\" placeholder=\"Confirmer le mot de passe\">\n                  <label class=\"label\">Confirmation</label>\n                  <div *ngIf=\"newPasswordForm.get('confirmPassword')?.touched && newPasswordForm.get('confirmPassword')?.invalid\" class=\"error-message\">\n                    <span *ngIf=\"newPasswordForm.get('confirmPassword')?.errors?.['required']\">La confirmation est requise</span>\n                  </div>\n                  <div *ngIf=\"newPasswordForm.errors?.['mismatch'] && newPasswordForm.touched\" class=\"error-message\">\n                    Les mots de passe ne correspondent pas\n                  </div>\n                </div>\n\n                <div *ngIf=\"otpErrorMessage\" class=\"error-message\">\n                  {{ otpErrorMessage }}\n                </div>\n                \n                <div *ngIf=\"otpSuccessMessage\" class=\"success-message\">\n                  {{ otpSuccessMessage }}\n                </div>\n\n                <div class=\"btn_contact\">\n                  <button type=\"submit\" [disabled]=\"isLoading || newPasswordForm.invalid\" (click)=\"submitNewPasswordForm()\">\n                    <span *ngIf=\"!isLoading\">Réinitialiser le mot de passe</span>\n                    <span *ngIf=\"isLoading\">Traitement en cours...</span>\n                  </button>\n                </div>\n\n                <p class=\"reset-instructions\" style=\"text-align: center; margin-top: 20px;\">\n                  <a (click)=\"goBackToOtpVerification()\" style=\"cursor: pointer; color: #0672E4; text-decoration: underline;\">\n                    ← Retour à la vérification\n                  </a>\n                </p>\n              </div>\n            </form>\n          </div>\n\n          <div *ngIf=\"showOtpVerification\">\n            <form [formGroup]=\"otpForm\">\n              <div class=\"formulaire\">\n                <h2>Vérifiez votre adresse e-mail</h2>\n                <p class=\"reset-instructions\">Nous avons envoyé un code à 6 chiffres à votre adresse e-mail</p>\n                <p class=\"reset-instructions\">{{ resetEmailForOtp }}</p>\n                \n                <div class=\"otp-inputs\">\n                  <input type=\"text\" formControlName=\"digit1\" maxlength=\"1\" class=\"otp-input\" \n                        (input)=\"onOtpInput(1, $event)\" \n                        (keydown)=\"onOtpBackspace(1, $event)\">\n                  <input type=\"text\" formControlName=\"digit2\" maxlength=\"1\" class=\"otp-input\" \n                        (input)=\"onOtpInput(2, $event)\" \n                        (keydown)=\"onOtpBackspace(2, $event)\">\n                  <input type=\"text\" formControlName=\"digit3\" maxlength=\"1\" class=\"otp-input\" \n                        (input)=\"onOtpInput(3, $event)\" \n                        (keydown)=\"onOtpBackspace(3, $event)\">\n                  <input type=\"text\" formControlName=\"digit4\" maxlength=\"1\" class=\"otp-input\" \n                        (input)=\"onOtpInput(4, $event)\" \n                        (keydown)=\"onOtpBackspace(4, $event)\">\n                  <input type=\"text\" formControlName=\"digit5\" maxlength=\"1\" class=\"otp-input\" \n                        (input)=\"onOtpInput(5, $event)\" \n                        (keydown)=\"onOtpBackspace(5, $event)\">\n                  <input type=\"text\" formControlName=\"digit6\" maxlength=\"1\" class=\"otp-input\" \n                        (input)=\"onOtpInput(6, $event)\" \n                        (keydown)=\"onOtpBackspace(6, $event)\">\n                </div>\n\n                <div *ngIf=\"otpForm.invalid && otpForm.touched\" class=\"error-message\">\n                  Veuillez saisir un code complet à 6 chiffres\n                </div>\n                \n                <div *ngIf=\"otpErrorMessage\" class=\"error-message\">\n                  {{ otpErrorMessage }}\n                </div>\n                \n                <div *ngIf=\"otpSuccessMessage\" class=\"success-message\">\n                  {{ otpSuccessMessage }}\n                </div>\n\n                <p class=\"reset-instructions\" style=\"font-size: 12px; text-align: center;\">\n                  Vous souhaitez modifier votre adresse e-mail? \n                  <a (click)=\"goBackToReset()\" style=\"cursor: pointer; color: #0672E4; text-decoration: underline;\">\n                    Cliquez ici.\n                  </a>\n                </p>\n\n                <div class=\"btn_contact\">\n                  <button type=\"submit\" [disabled]=\"isLoading\" (click)=\"submitOtpForm()\">\n                    <span *ngIf=\"!isLoading\">Verify Email</span>\n                    <span *ngIf=\"isLoading\">Vérification en cours...</span>\n                  </button>\n                </div>\n\n                <div class=\"registerPage\">\n                  <p><a class=\"logout\" (click)=\"goToLogin()\">Connexion</a></p>\n                </div>\n              </div>\n            </form>\n          </div>\n\n          <!-- Vue Réinitialisation de mot de passe -->\n          <div *ngIf=\"isResetPassword && !showOtpVerification\">\n            <form [formGroup]=\"resetForm\">\n              <div class=\"formulaire\">\n                <h2>Mot de passe oublié ?</h2>\n                <p class=\"reset-instructions\">Indiquez votre adresse e-mail ci-dessous</p>\n                <p class=\"reset-instructions\">Un code de vérification à 6 chiffres vous sera envoyé par e-mail afin de réinitialiser votre <br>mot de passe.</p>\n                \n                <div class=\"champ_input\">\n                  <input type=\"email\" formControlName=\"resetEmail\" class=\"input_focus\" style=\"min-width: 200px;\" placeholder=\"Saisis votre email\">\n                  <label class=\"label\">Adresse e-mail</label>\n                  <div *ngIf=\"rf['resetEmail'].touched && rf['resetEmail'].invalid\" class=\"error-message\">\n                    <span *ngIf=\"rf['resetEmail'].errors?.['required']\">Email est vide.</span>\n                    <span *ngIf=\"rf['resetEmail'].errors?.['email']\">Email n'est pas valide.</span>\n                  </div>\n                </div>\n\n                <div *ngIf=\"resetSuccessMessage\" class=\"success-message\">\n                  {{ resetSuccessMessage }}\n                </div>\n                \n                <div *ngIf=\"resetErrorMessage\" class=\"error-message\">\n                  {{ resetErrorMessage }}\n                </div>\n\n                <div class=\"btn_contact\">\n                  <button type=\"submit\" [disabled]=\"isLoading || resetForm.invalid\" (click)=\"submitResetForm(); resetOtpForm()\">\n                    <span *ngIf=\"!isLoading\">Envoyer le code de vérification</span>\n                    <span *ngIf=\"isLoading\">Envoi en cours...</span>\n                  </button>\n                </div>\n\n                <!-- Ajouter ce bloc après le bouton de réinitialisation -->\n                <!-- <div *ngIf=\"resetFormSubmitted && !showPopup\" class=\"success-message\">\n                  <p>✓ Un email de réinitialisation a été envoyé !</p>\n                </div> -->\n\n                <div class=\"registerPage\">\n                  <p><a class=\"logout\" (click)=\"toggleResetPassword()\">Connexion</a></p>\n                </div>\n              </div>\n            </form>\n          </div>\n\n          <form *ngIf=\"!isResetPassword && !showOtpVerification && !showPasswordResetForm\" [formGroup]=\"loginForm\">\n            <div class=\"formulaire\">\n              <!-- Champ email -->\n              <div class=\"champ_input\">\n                <input type=\"email\" formControlName=\"email\" class=\"input_focus\" placeholder=\"Saisis votre email\">\n                <label class=\"label\">Votre email</label>\n                <div *ngIf=\"f['email'].touched && f['email'].invalid\" class=\"error-message\">\n                  <span *ngIf=\"f['email'].errors?.['required']\">Email est vide.</span>\n                  <span *ngIf=\"f['email'].errors?.['email']\">Email n'est pas valide.</span>\n                </div>\n              </div>\n  \n              <!-- Champ mot de passe -->\n              <div class=\"champ_input\">\n                <input type=\"password\" formControlName=\"password\" class=\"input_focus\" placeholder=\"****************\">\n                <label class=\"label\">Mot de passe</label>\n                <div *ngIf=\"f['password'].touched && f['password'].invalid\" class=\"error-message\">\n                  <span *ngIf=\"f['password'].errors?.['required']\">Mot de passe est vide.</span>\n                  <span *ngIf=\"f['password'].errors?.['minlength']\">Au moins 8 caractères.</span>\n                </div>\n              </div>\n  \n              <div class=\"resetPassword\">\n                <p (click)=\"toggleResetPassword()\">Mot de passe oublié</p>\n              </div>\n          \n              <!-- Message d'erreur global -->\n              <div *ngIf=\"errorMessage\" class=\"error-message\">\n                {{ errorMessage }}\n              </div>\n          \n              <!-- Bouton de soumission -->\n              <div class=\"btn_contact\">\n                <button type=\"submit\" (click)=\"submitForm()\" [disabled]=\"isLoading\" (click)=\"submitForm()\">\n                  <span></span> \n                  <span>Se connecter</span>\n                </button>\n              </div>\n  \n              <div class=\"registerPage\">\n                <p>Vous n’avez pas encore de compte ? <a class=\"logout\" (click)=\"goToInscription()\">Inscription</a></p>\n              </div>\n            </div>\n  \n            <!-- Popup d'erreur (affichée uniquement en cas d'erreur) -->\n            <div class=\"modal-overlay\" *ngIf=\"showPopup\">\n              <div class=\"modal-content\" [ngClass]=\"{'error': popupType === 'error'}\">\n                <div class=\"popup-header\">\n                  <div class=\"popup-img\">\n                    <img [src]=\"popupImage\" alt=\"Icone\" class=\"popup-icon\">\n                  </div>\n                  <h2>{{ popupTitle }}</h2>\n                </div>\n                <p>{{ popupMessage }}</p>\n                <button (click)=\"closePopup()\">OK</button>\n              </div>\n            </div>\n          </form>\n        </div>\n  \n        <div class=\"info_form_right\">\n          <div class=\"image_header\">\n            <img src=\"assets/img/logout_img.png\" alt=\"\">\n          </div>\n        </div>\n      </section>\n    </div>\n  </div>\n  \n</div>\n\n<!-- Les diffrenet temoignage -->\n<div class=\"container_temoignage\">\n\n  <div class=\"content_temoignage\">\n    <!-- temoignage left image -->\n    <div class=\"temoignage_left\">\n      <div class=\"image_temoignage\">\n        <img src=\"assets/img/temoignage1.png\" alt=\"Image de temoignage\">\n      </div>\n    </div>\n    <!-- temoignage right contenue -->\n    <div class=\"temoignage_right\">\n      <h2 class=\"title\">Une Expérience Exceptionnelle !</h2>\n      <div class=\"contenue\">\n        J’ai été impressionné par la qualité du service et l’attention portée aux détails. Dès le premier contact, j’ai ressenti un réel professionnalisme et une écoute attentive.\n        <ul>\n          <li>\n            Le processus a été fluide, rapide et parfaitement adapté à mes besoins.\n          </li>\n          <li>\n            Je recommande vivement à toute personne cherchant une expérience fiable et de grande qualité. Merci encore pour cette belle prestation !\n          </li>\n        </ul>\n      </div>\n      \n    </div>\n  </div>\n\n</div>\n\n <!-- Page footer -->\n\n <footer class=\"mes_footer\">\n  <p class=\"copyRight\">\n    © Copyright Groupe XpertPro\n  </p>\n </footer>"],"names":["Validators","ReactiveFormsModule","HeaderNavComponent","CommonModule","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","ConnexionPageComponent_div_10_div_9_span_1_Template","ConnexionPageComponent_div_10_div_9_span_2_Template","ɵɵadvance","ɵɵproperty","tmp_2_0","ctx_r1","newPasswordForm","get","errors","tmp_3_0","ConnexionPageComponent_div_10_div_14_span_1_Template","ɵɵtextInterpolate1","otpErrorMessage","otpSuccessMessage","ConnexionPageComponent_div_10_div_9_Template","ConnexionPageComponent_div_10_div_14_Template","ConnexionPageComponent_div_10_div_15_Template","ConnexionPageComponent_div_10_div_16_Template","ConnexionPageComponent_div_10_div_17_Template","ɵɵlistener","ConnexionPageComponent_div_10_Template_button_click_19_listener","ɵɵrestoreView","_r1","ɵɵnextContext","ɵɵresetView","submitNewPasswordForm","ConnexionPageComponent_div_10_span_20_Template","ConnexionPageComponent_div_10_span_21_Template","ConnexionPageComponent_div_10_Template_a_click_23_listener","goBackToOtpVerification","touched","invalid","isLoading","ConnexionPageComponent_div_11_Template_input_input_10_listener","$event","_r3","onOtpInput","ConnexionPageComponent_div_11_Template_input_keydown_10_listener","onOtpBackspace","ConnexionPageComponent_div_11_Template_input_input_11_listener","ConnexionPageComponent_div_11_Template_input_keydown_11_listener","ConnexionPageComponent_div_11_Template_input_input_12_listener","ConnexionPageComponent_div_11_Template_input_keydown_12_listener","ConnexionPageComponent_div_11_Template_input_input_13_listener","ConnexionPageComponent_div_11_Template_input_keydown_13_listener","ConnexionPageComponent_div_11_Template_input_input_14_listener","ConnexionPageComponent_div_11_Template_input_keydown_14_listener","ConnexionPageComponent_div_11_Template_input_input_15_listener","ConnexionPageComponent_div_11_Template_input_keydown_15_listener","ConnexionPageComponent_div_11_div_16_Template","ConnexionPageComponent_div_11_div_17_Template","ConnexionPageComponent_div_11_div_18_Template","ConnexionPageComponent_div_11_Template_a_click_21_listener","goBackToReset","ConnexionPageComponent_div_11_Template_button_click_24_listener","submitOtpForm","ConnexionPageComponent_div_11_span_25_Template","ConnexionPageComponent_div_11_span_26_Template","ConnexionPageComponent_div_11_Template_a_click_29_listener","goToLogin","otpForm","ɵɵtextInterpolate","resetEmailForOtp","ConnexionPageComponent_div_12_div_15_span_1_Template","ConnexionPageComponent_div_12_div_15_span_2_Template","rf","resetSuccessMessage","resetErrorMessage","ConnexionPageComponent_div_12_div_15_Template","ConnexionPageComponent_div_12_div_16_Template","ConnexionPageComponent_div_12_div_17_Template","ConnexionPageComponent_div_12_Template_button_click_19_listener","_r4","submitResetForm","resetOtpForm","ConnexionPageComponent_div_12_span_20_Template","ConnexionPageComponent_div_12_span_21_Template","ConnexionPageComponent_div_12_Template_a_click_24_listener","toggleResetPassword","resetForm","ConnexionPageComponent_form_13_div_6_span_1_Template","ConnexionPageComponent_form_13_div_6_span_2_Template","f","ConnexionPageComponent_form_13_div_11_span_1_Template","ConnexionPageComponent_form_13_div_11_span_2_Template","errorMessage","ConnexionPageComponent_form_13_div_26_Template_button_click_9_listener","_r6","closePopup","ɵɵpureFunction1","_c0","popupType","popupImage","ɵɵsanitizeUrl","popupTitle","popupMessage","ConnexionPageComponent_form_13_div_6_Template","ConnexionPageComponent_form_13_div_11_Template","ConnexionPageComponent_form_13_Template_p_click_13_listener","_r5","ConnexionPageComponent_form_13_div_15_Template","ConnexionPageComponent_form_13_Template_button_click_17_listener","submitForm","ConnexionPageComponent_form_13_Template_a_click_24_listener","goToInscription","ConnexionPageComponent_form_13_div_26_Template","loginForm","showPopup","ConnexionPageComponent","constructor","fb","usersService","authService","router","isResetPassword","showOtpVerification","showPasswordResetForm","resetToken","ngOnInit","group","email","required","password","minLength","resetEmail","initOptForm","initNewPassword","newPassword","confirmPassword","validators","passwordMatchValidator","form","value","mismatch","digit1","pattern","digit2","digit3","digit4","digit5","digit6","index","event","input","target","key","prevInput","document","querySelector","focus","select","controls","navigate","openPopup","title","message","type","credentials","setTimeout","connexionUser","subscribe","next","response","accessToken","refreshToken","console","log","saveTokens","getUserInfo","user","userRoleType","roleType","userPermissions","permissions","includes","length","then","success","error","err","status","forgotPassword","reset","code","Object","values","join","validateOtp","token","resetComponentState","patchValue","nextInput","resetPassword","ɵɵdirectiveInject","i1","FormBuilder","i2","UsersService","i3","AuthService","i4","Router","selectors","decls","vars","consts","template","ConnexionPageComponent_Template","ctx","ConnexionPageComponent_div_3_Template","ConnexionPageComponent_div_10_Template","ConnexionPageComponent_div_11_Template","ConnexionPageComponent_div_12_Template","ConnexionPageComponent_form_13_Template","i5","NgClass","NgIf","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","MaxLengthValidator","FormGroupDirective","FormControlName","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}
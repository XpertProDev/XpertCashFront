{"version":3,"file":"src_app_admin-page_clients_add-entreprise-client_add-entreprise-client_component_ts.js","mappings":"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","sources":["./src/app/admin-page/clients/add-entreprise-client/add-entreprise-client.component.ts","./src/app/admin-page/clients/add-entreprise-client/add-entreprise-client.component.html"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { ClientService } from '../../SERVICES/client-service';\nimport { Router } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { Subject, takeUntil } from 'rxjs';\nimport { EntrepriseClientService } from '../../SERVICES/entreprise-clients-service';\n\n@Component({\n  selector: 'app-add-entreprise-client',\n  imports: [\n    FormsModule,\n    CommonModule,\n    ReactiveFormsModule,\n  ],\n  templateUrl: './add-entreprise-client.component.html',\n  styleUrl: './add-entreprise-client.component.scss'\n})\nexport class AddEntrepriseClientComponent implements OnInit, OnDestroy  {\n  entrepriseClientForm!: FormGroup;\n  errorMessageApi: string = '';\n  errorMessage: string = '';\n  successMessage: string = '';\n  isSubmitting = false;\n  private destroy$ = new Subject<void>();\n  entrepriseIndicatif: string = '';\n  entrepriseMaxPhoneLength: number = 0;\n\n    paysIndicatifs: { [key: string]: { indicatif: string, longueur: number } } = {\n  'Mali': { indicatif: '+223', longueur: 8 },\n  'Sénégal': { indicatif: '+221', longueur: 9 },\n  'Côte d\\'Ivoire': { indicatif: '+225', longueur: 10 },\n  'Burkina Faso': { indicatif: '+226', longueur: 8 },\n  'Niger': { indicatif: '+227', longueur: 8 },\n  'France': { indicatif: '+33', longueur: 9 },\n  'Belgique': { indicatif: '+32', longueur: 9 },\n  'Suisse': { indicatif: '+41', longueur: 9 },\n  'Canada': { indicatif: '+1', longueur: 10 },\n  'États-Unis': { indicatif: '+1', longueur: 10 },\n  'Maroc': { indicatif: '+212', longueur: 9 },\n  'Algérie': { indicatif: '+213', longueur: 9 },\n  'Tunisie': { indicatif: '+216', longueur: 8 },\n  'Togo': { indicatif: '+228', longueur: 8 },\n  'Bénin': { indicatif: '+229', longueur: 8 },\n  'Guinée': { indicatif: '+224', longueur: 9 },\n  'Tchad': { indicatif: '+235', longueur: 8 },\n  'Cameroun': { indicatif: '+237', longueur: 9 },\n  'RDC': { indicatif: '+243', longueur: 9 },\n  'Gabon': { indicatif: '+241', longueur: 9 },\n  'Afrique du Sud': { indicatif: '+27', longueur: 9 },\n  'Rwanda': { indicatif: '+250', longueur: 9 },\n  'Kenya': { indicatif: '+254', longueur: 9 },\n  'Nigéria': { indicatif: '+234', longueur: 10 },\n  'Ghana': { indicatif: '+233', longueur: 9 },\n  'Éthiopie': { indicatif: '+251', longueur: 9 },\n  'Égypte': { indicatif: '+20', longueur: 10 },\n  'Inde': { indicatif: '+91', longueur: 10 },\n  'Chine': { indicatif: '+86', longueur: 11 },\n  'Mexique': { indicatif: '+52', longueur: 10 },\n  'Allemagne': { indicatif: '+49', longueur: 10 },\n  'Espagne': { indicatif: '+34', longueur: 9 },\n  'Italie': { indicatif: '+39', longueur: 10 },\n  'Royaume-Uni': { indicatif: '+44', longueur: 10 },\n  'Pays-Bas': { indicatif: '+31', longueur: 9 },\n  'Portugal': { indicatif: '+351', longueur: 9 }\n  };\n\n  paysKeys: string[] = Object.keys(this.paysIndicatifs);\n\n\n  constructor(\n      private router: Router,\n      private fb: FormBuilder,\n      private entrepriseClientService: EntrepriseClientService,\n  ) {}\n\n  ngOnInit(): void {\n    this.initializeForm();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  // Ajouter ces méthodes\n  onEntreprisePaysChange(event: any): void {\n    const paysSelectionne = event.target.value as string;\n    const paysInfo = this.paysIndicatifs[paysSelectionne];\n    if (!paysInfo) return;\n  \n    this.entrepriseIndicatif    = paysInfo.indicatif;\n    this.entrepriseMaxPhoneLength = paysInfo.longueur;\n  \n    const ctrl = this.entrepriseClientForm.get('telephone')!;\n    if (!ctrl.value?.startsWith(this.entrepriseIndicatif)) {\n      ctrl.setValue(this.entrepriseIndicatif);\n    }\n    this.updatePhoneValidator(paysInfo.longueur);\n  }\n\n  // Méthode de mise à jour du validateur\n  private updatePhoneValidator(longueur: number): void {\n    const ctrl = this.entrepriseClientForm.get('telephone')!;\n   const regex = new RegExp(`^\\\\${this.entrepriseIndicatif.trim()}\\\\s?\\\\d{${longueur}}$`);\n    ctrl.setValidators([Validators.required, Validators.pattern(regex)]);\n    ctrl.updateValueAndValidity();\n  }\n  \n\n  // Formatage \"en direct\" du numéro\n  formatEntreprisePhoneNumber(): void {\n    const ctrl = this.entrepriseClientForm.get('telephone')!;\n    let valeur = ctrl.value as string;\n  \n    if (!valeur.startsWith(this.entrepriseIndicatif)) {\n      ctrl.setValue(this.entrepriseIndicatif);\n      return;\n    }\n  \n    // Retirer tout sauf les chiffres après l’indicatif\n    const chiffres = valeur.replace(this.entrepriseIndicatif, '').replace(/\\D/g, '');\n  \n    // Reformater avec espace conservé\n    const numeroFormate = `${this.entrepriseIndicatif}${chiffres}`.slice(0, this.entrepriseIndicatif.length + this.entrepriseMaxPhoneLength);\n    ctrl.setValue(numeroFormate, { emitEvent: false });\n  }\n  \n\n  private initializeForm(): void {\n    this.entrepriseClientForm = this.fb.group({\n      nom: ['', [Validators.required, Validators.minLength(2)]],\n      adresse: [''],\n      email: ['', [Validators.email]],\n      telephone: [''],\n      pays: [''],\n      siege: [''],\n      secteur: ['']\n    });\n  }\n\n  ajouterEntrepriseClient(): void {\n    this.errorMessageApi = '';\n    this.successMessage = '';\n\n    if (this.entrepriseClientForm.invalid) {\n      this.markAllAsTouched();\n      return;\n    }\n\n    this.isSubmitting = true;\n    const entrepriseClient = this.entrepriseClientForm.value;\n\n    this.entrepriseClientService.addEntrepriseClient(entrepriseClient)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe({\n        next: (response) => {\n          this.successMessage = 'Entreprise ajoutée avec succès!';\n          this.entrepriseClientForm.reset();\n          setTimeout(() => this.router.navigate(['/clients']), 2000);\n        },\n        error: (err) => {\n          this.errorMessageApi = err.error?.error || err.message || 'Erreur lors de l\\'ajout de l\\'entreprise';\n          this.isSubmitting = false;\n        },\n      });\n  }\n\n  private markAllAsTouched(): void {\n    Object.values(this.entrepriseClientForm.controls).forEach(control => {\n      control.markAsTouched();\n    });\n  }\n\n  // Annuler et revenir à la liste\n  goToClients() {\n    this.router.navigate(['/clients']);\n  }\n\n  navigateBack() {\n    this.router.navigate(['/clients'])\n  }\n\n\n}\n","<div class=\"container_global\">\n    <div class=\"content_formulaire\">\n      <div class=\"modal-body\">\n        <form [formGroup]=\"entrepriseClientForm\" class=\"container_formulaire\">\n\n          <!-- Icon return  -->\n          <p class=\"retour_icon_text\" (click)=\"navigateBack()\" style=\"cursor: pointer; color: #0672E4; margin-bottom: 15px;\" title=\"Retour sur la page client\">\n              <i class=\"ri-arrow-left-s-line\"></i> <span style=\"margin-left: 8px; font-size: 12px;\">Clients</span>\n          </p>\n\n          <!-- Titre d'ajout de produits -->\n          <div class=\"Title\">\n            <h3>Ajouter un client entreprise</h3>\n          </div>\n  \n          <div class=\"form_left_right\">\n            <div class=\"formulaire\">\n              <!-- Cadre contenant le select et la description -->\n              <div class=\"information_cadre\">\n                <div class=\"info_titre_input\">\n                  \n                  <div class=\"double_input\">\n                    <!-- Nom et prenom -->\n                    <div class=\"champ_input champ_input2\">\n                      <input type=\"text\" class=\"input_focus\"\n                                id=\"nomComplet\" formControlName=\"nom\"\n                                name=\"nomComplet\"\n                                placeholder=\"Saisis le nom d'entreprise\">\n                      <label for=\"nomComplet\" class=\"label\">Nom d'entreprise</label>\n                      <div *ngIf=\"entrepriseClientForm.get('nom')?.touched && entrepriseClientForm.get('nom')?.invalid\" \n                            class=\"error\">\n                            <small *ngIf=\"entrepriseClientForm.get('nom')?.errors?.['required']\">\n                            Ce champ est obligatoire\n                            </small>\n                            <small *ngIf=\"entrepriseClientForm.get('nom')?.errors?.['minlength']\">\n                            Minimum 2 caractères\n                            </small>\n                        </div>\n                    </div>\n                    <!-- Email -->\n                    <div class=\"champ_input champ_input2\">\n                      <input type=\"email\" class=\"input_focus\"\n                                id=\"email\" formControlName=\"email\"\n                                name=\"email\"\n                                placeholder=\"Saisis l'email\">\n                      <label for=\"email\" class=\"label\">Email</label>\n                      <div *ngIf=\"entrepriseClientForm.get('email')?.touched && entrepriseClientForm.get('email')?.invalid\" class=\"error\">\n                        <small *ngIf=\"entrepriseClientForm.get('email')?.errors?.['email']\">\n                            Format d'email invalide\n                        </small>\n                        </div>\n                    </div>\n\n                  </div>\n                  <div class=\"double_input\">\n                    <!-- Adresse -->\n                    <div class=\"champ_input champ_input2\">\n                      <input class=\"input_focus\"\n                                autocomplete=\"off\"\n                                id=\"adresse\" formControlName=\"adresse\"\n                                name=\"adresse\"\n                                placeholder=\"Saisis l'adresse\">\n                      <label for=\"adresse\" class=\"label\">Adresse</label>\n                    </div>\n\n                    <!-- siege -->\n                    <div class=\"champ_input champ_input2\">\n                      <input type=\"text\" class=\"input_focus\"\n                                id=\"siege\" formControlName=\"siege\"\n                                name=\"siege\"\n                                placeholder=\"Saisis le siège\">\n                      <label for=\"telephone\" class=\"label\">Ville</label>\n                    </div>\n\n                  </div>\n\n                  <div class=\"grid_colonne\">\n                    <!-- Pays -->\n                    <div class=\"champ_input div1\">\n                      <select class=\"input_focus\" formControlName=\"pays\" (change)=\"onEntreprisePaysChange($event)\">\n                        <option value=\"\" disabled selected>Pays</option>\n                        <option *ngFor=\"let nomPays of paysKeys\" [value]=\"nomPays\">\n                          {{ nomPays }} ({{ paysIndicatifs[nomPays].indicatif }})\n                        </option>\n                      </select>\n                      <label for=\"pays\" class=\"label\">Pays</label>\n                    \n                    </div>\n        \n                    <!-- Téléphone -->\n                    <div class=\"champ_input div2\">\n                      <input type=\"tel\" \n                             class=\"input_focus\"\n                             formControlName=\"telephone\"\n                             placeholder=\"Saisis le numéro de téléphone\"\n                             (input)=\"formatEntreprisePhoneNumber()\">\n                      <label for=\"telephone\" class=\"label\">Téléphone</label>\n                    \n                      <!-- On récupère d’abord \"pays\" via un alias dans le même *ngIf -->  \n                      <div *ngIf=\"\n                            entrepriseClientForm.get('telephone')?.touched &&\n                            entrepriseClientForm.get('telephone')?.errors?.['pattern'] &&\n                            entrepriseClientForm.get('pays')?.value as pays\n                          \"\n                          class=\"error\">\n                        <small>\n                          Le numéro doit contenir\n                          {{ paysIndicatifs[pays].longueur }}\n                          chiffres après l’indicatif {{ paysIndicatifs[pays].indicatif.trim() }}.\n                        </small>\n                      </div>\n                    \n                      <!-- Optionnel : champ requis -->\n                      <div *ngIf=\"\n                            entrepriseClientForm.get('telephone')?.touched &&\n                            entrepriseClientForm.get('telephone')?.errors?.['required']\n                          \"\n                          class=\"error\">\n                        <small>Le téléphone est requis.</small>\n                      </div>\n                    </div>\n        \n                    <!-- Ville -->\n                    <div class=\"champ_input div3\">\n                      <input class=\"input_focus\"\n                                id=\"ville\" formControlName=\"secteur\"\n                                name=\"ville\"\n                                placeholder=\"Saisis la ville\">\n                      <label for=\"ville\" class=\"label\">Secteur</label>\n                    </div>\n                  </div>\n                  \n                </div>\n              </div>\n              \n\n              <!-- Les information des produit Photo  -->\n              <!-- <div class=\"information_cadre\">\n                <div class=\"info_titre_input\">\n                  <h4>Ajouter une image</h4>\n  \n                  <div class=\"container_file\"> \n                    <div class=\"header_file\"> \n                      <img class=\"roudel\" [src]=\"newPhotoUrl || urllink\" alt=\"Aperçu de l'image\" style=\"max-width:200px;\">\n                    </div> \n                    \n                    <div>\n                      <label for=\"file\" class=\"footer_file\"> \n                        <i class=\"ri-file-3-fill\"></i>\n                        <p>Choisir un fichier</p>\n                      </label> \n                      <input type=\"file\" accept=\"image/*\" id=\"file\" (change)=\"onFileSelected($event)\" hidden>\n                    </div>\n                  </div>\n                </div>\n              </div> -->\n  \n              <!-- Boutons Ajouter et Sauvegarder -->\n              <div class=\"information_cadre information_cadre_save\">\n                 <!-- Message d'erreur global -->\n                <div class=\"container_error_message\">\n                    <!-- Messages API -->\n                    <div *ngIf=\"errorMessageApi\" class=\"error-messageApi2\">{{ errorMessageApi }}</div>\n                    <div *ngIf=\"successMessage\" class=\"success-messageApi2\">{{ successMessage }}</div>\n                </div>\n\n                <div class=\"info_titre_input info_titre_input_btn\">\n                  <div class=\"btn_annuler\">\n                    <button class=\"btn_cancel\" (click)=\"goToClients()\">Annuler</button>\n                  </div>\n                  <div class=\"btn_ajouter\">\n                    <!-- <button class=\"btn_save\" (click)=\"ajouterEntrepriseClient()\"\n                          [disabled]=\"clientForm.invalid\"\n                          [disabled]=\"clientForm.invalid\" \n                          [style.backgroundColor]=\"clientForm.valid ? '#0672E4' : '#0671e434'\"\n                          [style.color]=\"clientForm.valid ? '#ffffff' : '#00000073'\"\n                          [style.cursor]=\"clientForm.valid ? 'pointer' : 'no-drop'\">  -->\n                    <!-- Modifier le bouton de soumission -->\n                    <button class=\"btn_save\" (click)=\"ajouterEntrepriseClient()\"\n                          [disabled]=\"entrepriseClientForm.invalid\"\n                          [disabled]=\"entrepriseClientForm.invalid\" \n                          [style.backgroundColor]=\"entrepriseClientForm.valid ? '#0672E4' : '#0671e434'\"\n                          [style.color]=\"entrepriseClientForm.valid ? '#ffffff' : '#00000073'\"\n                          [style.cursor]=\"entrepriseClientForm.valid ? 'pointer' : 'no-drop'\"> \n                        Ajouter\n                    </button>\n                  </div>\n                </div>\n              </div>\n  \n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n</div>\n"],"names":["FormsModule","ReactiveFormsModule","Validators","CommonModule","Subject","takeUntil","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","AddEntrepriseClientComponent_div_20_small_1_Template","AddEntrepriseClientComponent_div_20_small_2_Template","ɵɵadvance","ɵɵproperty","tmp_1_0","ctx_r0","entrepriseClientForm","get","errors","tmp_2_0","AddEntrepriseClientComponent_div_25_small_1_Template","nomPays_r2","ɵɵtextInterpolate2","paysIndicatifs","indicatif","pays_r3","longueur","trim","ɵɵtextInterpolate","errorMessageApi","successMessage","AddEntrepriseClientComponent","constructor","router","fb","entrepriseClientService","errorMessage","isSubmitting","destroy$","entrepriseIndicatif","entrepriseMaxPhoneLength","paysKeys","Object","keys","ngOnInit","initializeForm","ngOnDestroy","next","complete","onEntreprisePaysChange","event","paysSelectionne","target","value","paysInfo","ctrl","startsWith","setValue","updatePhoneValidator","regex","RegExp","setValidators","required","pattern","updateValueAndValidity","formatEntreprisePhoneNumber","valeur","chiffres","replace","numeroFormate","slice","length","emitEvent","group","nom","minLength","adresse","email","telephone","pays","siege","secteur","ajouterEntrepriseClient","invalid","markAllAsTouched","entrepriseClient","addEntrepriseClient","pipe","subscribe","response","reset","setTimeout","navigate","error","err","message","values","controls","forEach","control","markAsTouched","goToClients","navigateBack","ɵɵdirectiveInject","i1","Router","i2","FormBuilder","i3","EntrepriseClientService","selectors","decls","vars","consts","template","AddEntrepriseClientComponent_Template","rf","ctx","ɵɵlistener","AddEntrepriseClientComponent_Template_p_click_4_listener","ɵɵelement","AddEntrepriseClientComponent_div_20_Template","AddEntrepriseClientComponent_div_25_Template","AddEntrepriseClientComponent_Template_select_change_37_listener","$event","AddEntrepriseClientComponent_option_40_Template","AddEntrepriseClientComponent_Template_input_input_44_listener","AddEntrepriseClientComponent_div_47_Template","AddEntrepriseClientComponent_div_48_Template","AddEntrepriseClientComponent_div_55_Template","AddEntrepriseClientComponent_div_56_Template","AddEntrepriseClientComponent_Template_button_click_59_listener","AddEntrepriseClientComponent_Template_button_click_62_listener","touched","tmp_4_0","tmp_5_0","ɵɵstyleProp","valid","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","SelectControlValueAccessor","NgControlStatus","NgControlStatusGroup","i4","NgForOf","NgIf","FormGroupDirective","FormControlName","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}
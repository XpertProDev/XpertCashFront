{"version":3,"file":"src_app_admin-page_facture-proforma_addfacture-proforma_addfacture-proforma_component_ts.js","mappings":"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","sources":["./src/app/admin-page/clients/client-form/client-form.component.ts","./src/app/admin-page/clients/client-form/client-form.component.html","./src/app/admin-page/clients/entreprise-form/entreprise-form.component.ts","./src/app/admin-page/clients/entreprise-form/entreprise-form.component.html","./src/app/admin-page/facture-proforma/addfacture-proforma/addfacture-proforma.component.ts","./src/app/admin-page/facture-proforma/addfacture-proforma/addfacture-proforma.component.html","./src/app/admin-page/produits/produit-form/produit-form.component.ts","./src/app/admin-page/produits/produit-form/produit-form.component.html"],"sourcesContent":["import { Component, EventEmitter, Output } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport imageCompression from 'browser-image-compression';\nimport { Observable, of, BehaviorSubject, combineLatest, startWith, map, switchMap, throwError } from 'rxjs';\nimport { Clients } from '../../MODELS/clients-model';\nimport { Entreprise } from '../../MODELS/entreprise-model';\nimport { ClientService } from '../../SERVICES/client-service';\nimport { EntrepriseService } from '../../SERVICES/entreprise-service';\nimport { CommonModule } from '@angular/common';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { UsersService } from '../../SERVICES/users.service';\n\n@Component({\n  selector: 'app-client-form',\n  standalone: true,\n  imports: [\n    FormsModule,\n    CommonModule,\n    ReactiveFormsModule,\n    MatAutocompleteModule, \n  ],\n  templateUrl: './client-form.component.html',\n  styleUrl: './client-form.component.scss'\n})\nexport class ClientFormComponent {\n  @Output() clientAjoute = new EventEmitter<any>();\n  @Output() close = new EventEmitter<void>();\n\n  errorMessage: string = '';\n  errorMessageApi: string = '';\n  successMessage = '';\n  clientForm!: FormGroup;\n  entrepriseForm!: FormGroup;\n  isEntrepriseSelected = false;\n  showPopup = false;\n  urllink: string = \"assets/img/appareil.jpg\";\n  newPhotoUrl: string | null = null;\n  selectedFile: File | null | undefined = null;\n  imageFile: File | null = null;\n  control = new FormControl();\n  filteredOptions: Observable<Entreprise[]> = of([]);\n  loading = false;\n  optionsEntreprise$ = new BehaviorSubject<Entreprise[]>([]);\n  entrepriseRequiredError = false;\n  isLoading: boolean = false;\n  indicatif: string = '';\n  maxPhoneLength: number = 0;\n  entrepriseIndicatif: string = '';\n  entrepriseMaxPhoneLength: number = 0;\n\n  paysIndicatifs: { [key: string]: { indicatif: string, longueur: number } } = {\n  'Mali': { indicatif: '+223', longueur: 8 },\n  'Sénégal': { indicatif: '+221', longueur: 9 },\n  'Côte d\\'Ivoire': { indicatif: '+225', longueur: 10 },\n  'Burkina Faso': { indicatif: '+226', longueur: 8 },\n  'Niger': { indicatif: '+227', longueur: 8 },\n  'France': { indicatif: '+33', longueur: 9 },\n  'Belgique': { indicatif: '+32', longueur: 9 },\n  'Suisse': { indicatif: '+41', longueur: 9 },\n  'Canada': { indicatif: '+1', longueur: 10 },\n  'États-Unis': { indicatif: '+1', longueur: 10 },\n  'Maroc': { indicatif: '+212', longueur: 9 },\n  'Algérie': { indicatif: '+213', longueur: 9 },\n  'Tunisie': { indicatif: '+216', longueur: 8 },\n  'Togo': { indicatif: '+228', longueur: 8 },\n  'Bénin': { indicatif: '+229', longueur: 8 },\n  'Guinée': { indicatif: '+224', longueur: 9 },\n  'Tchad': { indicatif: '+235', longueur: 8 },\n  'Cameroun': { indicatif: '+237', longueur: 9 },\n  'RDC': { indicatif: '+243', longueur: 9 },\n  'Gabon': { indicatif: '+241', longueur: 9 },\n  'Afrique du Sud': { indicatif: '+27', longueur: 9 },\n  'Rwanda': { indicatif: '+250', longueur: 9 },\n  'Kenya': { indicatif: '+254', longueur: 9 },\n  'Nigéria': { indicatif: '+234', longueur: 10 },\n  'Ghana': { indicatif: '+233', longueur: 9 },\n  'Éthiopie': { indicatif: '+251', longueur: 9 },\n  'Égypte': { indicatif: '+20', longueur: 10 },\n  'Inde': { indicatif: '+91', longueur: 10 },\n  'Chine': { indicatif: '+86', longueur: 11 },\n  'Mexique': { indicatif: '+52', longueur: 10 },\n  'Allemagne': { indicatif: '+49', longueur: 10 },\n  'Espagne': { indicatif: '+34', longueur: 9 },\n  'Italie': { indicatif: '+39', longueur: 10 },\n  'Royaume-Uni': { indicatif: '+44', longueur: 10 },\n  'Pays-Bas': { indicatif: '+31', longueur: 9 },\n  'Portugal': { indicatif: '+351', longueur: 9 }\n  };\n\n  paysKeys: string[] = Object.keys(this.paysIndicatifs);\n\n  constructor(\n    private router: Router,\n    private fb: FormBuilder,\n    private entrepriseService: EntrepriseService,\n    private clientService: ClientService,\n    private usersService: UsersService\n  ) {}\n\n  onPaysChange(event: any): void {\n    const paysSelectionne = event.target.value;\n    const paysInfo = this.paysIndicatifs[paysSelectionne];\n  \n    if (paysInfo) {\n      this.indicatif = `${paysInfo.indicatif} `;\n      this.maxPhoneLength = this.indicatif.length + paysInfo.longueur;\n  \n      if (!this.clientForm.get('telephone')?.value.startsWith(this.indicatif)) {\n        this.clientForm.get('telephone')?.setValue(this.indicatif);\n      }\n  \n      this.updatePhoneValidator(paysInfo.longueur);\n    }\n  }\n\n  updatePhoneValidator(longueur: number): void {\n    // on impose exactement {longueur} chiffres après l’indicatif\n    const regex = new RegExp(`^\\\\${this.indicatif}\\\\d{${longueur}}$`);\n    this.clientForm.controls['telephone'].setValidators([\n      Validators.required,\n      Validators.pattern(regex)\n    ]);\n    this.clientForm.controls['telephone'].updateValueAndValidity();\n  }\n  \n\n  formatPhoneNumber(): void {\n    let valeur = this.clientForm.get('telephone')?.value;\n    \n    if (!valeur.startsWith(this.indicatif)) {\n      this.clientForm.get('telephone')?.setValue(this.indicatif);\n      return;\n    }\n  \n    const chiffres = valeur.replace(this.indicatif, '').replace(/\\D/g, '');\n    const numeroFormate = this.indicatif + chiffres;\n    this.clientForm.get('telephone')?.setValue(numeroFormate.slice(0, this.indicatif.length + this.maxPhoneLength));\n  }\n\n  async testImageCompression(file: File) {\n      if (!file) {\n        console.log('Aucun fichier sélectionné.');\n        return;\n      }\n    \n      console.log('Taille originale:', file.size / 1024, 'Ko');\n    \n      // Options de compression\n      const options = {\n        maxSizeMB: 1,\n        maxWidthOrHeight: 1000,\n        useWebWorker: true,\n      };\n    \n      try {\n        const compressedFile = await imageCompression(file, options);\n        console.log('Taille après compression:', compressedFile.size / 1024, 'Ko');\n    \n        // Vérifier si le fichier est bien en PNG/JPEG après compression\n        if (compressedFile.type !== 'image/png' && compressedFile.type !== 'image/jpeg') {\n          console.error('Le fichier compressé n\\'est pas un format supporté (PNG ou JPEG).');\n          this.errorMessage = 'Erreur de compression : Le format de l\\'image n\\'est pas valide.';\n          return;\n        }\n    \n        // Lire l'image compressée et afficher l'aperçu\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          this.newPhotoUrl = e.target?.result as string;\n          console.log('Image compressée prête à être affichée !');\n        };\n        reader.readAsDataURL(compressedFile);\n      } catch (error) {\n        console.error('Erreur lors de la compression:', error);\n      }\n  }\n\n  onFileSelected(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    if (input.files && input.files.length > 0) {\n      const file = input.files[0];\n  \n      // Vérification du format du fichier\n      const allowedFormats = ['image/jpeg', 'image/png', 'image/jpg'];\n      if (!allowedFormats.includes(file.type)) {\n        this.errorMessage = 'Le fichier doit être une image (JPG, PNG)';\n        return;\n      }\n      this.selectedFile = file;\n      this.imageFile = file;\n  \n      // Tester la compression\n      this.testImageCompression(file);\n\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        this.newPhotoUrl = e.target?.result as string;\n      };\n      reader.readAsDataURL(this.selectedFile);\n    }\n  }\n\n  goToStock() {\n    this.router.navigate(['/clients']);\n  }\n\n  ngOnInit() {\n    this.getListEntreprise();\n    this.initEntreprise();\n    this.getClientForm();\n    // this.getEntrepriseForm();\n    this.loadEntreprises();\n  }\n\n  getClientForm() {\n    this.clientForm = this.fb.group({\n      nomComplet: ['', [Validators.required, Validators.minLength(2)]],\n      email: ['', [Validators.email]],\n      telephone: ['', Validators.required],\n      adresse: [''],\n      poste: [''],\n      pays: [''],\n      ville: ['']\n    });\n  }\n\n  // getEntrepriseForm() {\n  //   this.entrepriseForm = this.fb.group({\n  //     nom: ['', Validators.required],\n  //     email: ['', Validators.email],\n  //     telephone: [''],\n  //     adresse: ['']\n  //   });\n  // }\n\n  onEntreprisePaysChange(event: any): void {\n    const paysSelectionne = event.target.value;\n    const paysInfo = this.paysIndicatifs[paysSelectionne];\n  \n    if (paysInfo) {\n      this.entrepriseIndicatif = `${paysInfo.indicatif} `;\n      this.entrepriseMaxPhoneLength = this.entrepriseIndicatif.length + paysInfo.longueur;\n  \n      if (!this.entrepriseForm.get('telephone')?.value.startsWith(this.entrepriseIndicatif)) {\n        this.entrepriseForm.get('telephone')?.setValue(this.entrepriseIndicatif);\n      }\n  \n      this.updateEntreprisePhoneValidator(paysInfo.longueur);\n    }\n  }\n\n  updateEntreprisePhoneValidator(longueur: number): void {\n    this.entrepriseForm.controls['telephone'].setValidators([\n      Validators.pattern(`^\\\\${this.entrepriseIndicatif}\\\\d{${longueur}}$`)\n    ]);\n    this.entrepriseForm.controls['telephone'].updateValueAndValidity();\n  }\n  \n  formatEntreprisePhoneNumber(): void {\n    let valeur = this.entrepriseForm.get('telephone')?.value;\n    \n    if (!valeur.startsWith(this.entrepriseIndicatif)) {\n      this.entrepriseForm.get('telephone')?.setValue(this.entrepriseIndicatif);\n      return;\n    }\n  \n    const chiffres = valeur.replace(this.entrepriseIndicatif, '').replace(/\\D/g, '');\n    const numeroFormate = this.entrepriseIndicatif + chiffres;\n    this.entrepriseForm.get('telephone')?.setValue(numeroFormate.slice(0, this.entrepriseIndicatif.length + this.entrepriseMaxPhoneLength));\n  }\n\n  private loadEntreprises() {\n    const token = localStorage.getItem('accessToken') || '';\n    if (!token) return;\n\n    this.entrepriseService.getListEntreprise().subscribe(\n        (list: Entreprise[]) => {\n            this.optionsEntreprise$.next(list); // Mettre à jour le BehaviorSubject\n            this.setupAutocomplete();\n        },\n        err => {\n            console.error('Erreur lors de la récupération des entreprises :', err);\n            // this.errorMessage = err.error?.error || 'Client physiques';\n        }\n    );\n  }\n\n  // Ajouter une nouvelle méthode pour configurer l'autocomplete :\n  private setupAutocomplete() {\n    this.filteredOptions = combineLatest([\n      this.control.valueChanges.pipe(\n        startWith(''),\n        map(value => typeof value === 'string' ? value : value?.nom)\n      ),\n      this.optionsEntreprise$\n    ]).pipe(\n      map(([name, entreprises]) => \n        name ? this._filter(name, entreprises) : entreprises\n      )\n    );\n  }\n\ngetListEntreprise() {\n  this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      if (!token) {\n        console.error('Aucun token valide trouvé !');\n        return throwError(() => new Error('Aucun token trouvé'));\n      }\n      return this.entrepriseService.getListEntreprise();\n    })\n  ).subscribe(\n    (entreprises) => {\n      console.log('Entreprises reçues depuis l\\'API :', entreprises);\n      // Mettre à jour le BehaviorSubject\n      this.optionsEntreprise$.next(entreprises); \n      this.filteredOptions = this.control.valueChanges.pipe(\n        startWith<string | Entreprise>(''),\n        map(value => (value ? (typeof value === 'string' ? value : value.nom) : '')),\n        map(name => (name ? this._filter(name, this.optionsEntreprise$.value) : this.optionsEntreprise$.value.slice()))\n      );\n    }, \n    (error) => {\n      console.error('Erreur lors de la récupération des entreprises :', error);\n    }\n  );\n}\n\n\n  private _filter(name: string, entreprises: Entreprise[]): Entreprise[] {\n    const filterValue = name.toLowerCase();\n    return entreprises.filter(e =>\n        e.nom.toLowerCase().includes(filterValue)\n    );\n  }\n\n  displayFnEntreprise(e?: Entreprise): string {\n    return e ? e.nom : '';\n  }\n\n  // Methode pour la selection d'un entreprise\n  onEntrepriseSelected(event: any): void {\n    // console.log(\"Entreprise selectionner :\", event.entreprise.value);\n    // if (event.entreprise && event.entreprise.value) {\n    //   this.ajouteEntrepriseForm.get('entrepriseId')?.setValue(event.option.value.id);\n    // } else {\n    //   this.ajouteEntrepriseForm.get('entrepriseId')?.setValue(null);\n    // }\n  }\n\n  // Ajoutez cette méthode\n  resetForm(): void {\n    this.clientForm.reset({\n      pays: '' // Réinitialisez le champ pays si nécessaire\n    });\n    this.control.reset();\n    this.isEntrepriseSelected = false;\n    this.errorMessage = '';\n    this.successMessage = '';\n    this.entrepriseRequiredError = false;\n  }\n\n  // Ouvre/ferme le popup d’entreprise\n  openPopup() { this.showPopup = true; }\n  closePopup() { this.showPopup = false; }\n  \n  initEntreprise() {\n    this.entrepriseForm = this.fb.group({\n      nom: ['', Validators.required],\n      pays: [''],\n      email: [''],\n      telephone: [''],\n      adresse: [''],\n      siege: [''],\n      secteur: [''],\n    });\n  }\n\n  ajouterEntreprise() {\n    if (this.entrepriseForm.invalid) return;\n  \n    const newEntreprise: Entreprise = {\n      nom: this.entrepriseForm.value.nom,\n      pays: this.entrepriseForm.value.pays,\n      email: this.entrepriseForm.value.email,\n      telephone: this.entrepriseForm.value.telephone,\n      adresse: this.entrepriseForm.value.adresse,\n      siege: this.entrepriseForm.value.siege,\n      secteur: this.entrepriseForm.value.secteur,\n      logo : this.entrepriseForm.value.logo,\n      nif: this.entrepriseForm.value.nif,\n      nina: this.entrepriseForm.value.nina,\n      banque: this.entrepriseForm.value.banque,\n      rccm: this.entrepriseForm.value.rccm,\n      siteWeb: this.entrepriseForm.value.siteWeb,\n      signataire: this.entrepriseForm.value.signataire,\n      signataireNom: this.entrepriseForm.value.signataireNom,\n      prefixe: this.entrepriseForm.value.prefixe,\n      suffixe: this.entrepriseForm.value.suffixe,\n      tauxTva: this.entrepriseForm.value.tauxTva,\n      signaturNum: this.entrepriseForm.value.signaturNum,\n      cachetNum: this.entrepriseForm.value.cachetNum,\n\n      \n\n      \n\n\n    };\n  \n    this.entrepriseService.addEntreprise(newEntreprise).subscribe({\n      next: (createdEntreprise) => {\n        const current = this.optionsEntreprise$.value;\n        this.optionsEntreprise$.next([createdEntreprise, ...current]);\n        this.control.setValue(createdEntreprise);\n        this.closePopup();\n        this.entrepriseForm.reset();\n      },\n      error: (error) => {\n        this.errorMessageApi = error.message || 'Erreur lors de la création';\n      }\n    });\n  }\n\n  // Soumission du formulaire client\n  ajouterClient() {\n    this.errorMessage = '';\n    this.successMessage = '';\n    this.entrepriseRequiredError = false;\n\n    // Vérification de la sélection d'entreprise\n    if (this.isEntrepriseSelected) {\n      const entrepriseSelectionnee = this.control.value;\n      if (!entrepriseSelectionnee || !entrepriseSelectionnee.id) {\n        this.entrepriseRequiredError = true;\n        return;\n      }\n    }\n\n    if (this.clientForm.invalid) {\n      this.errorMessage = 'Veuillez corriger les erreurs du formulaire.';\n      return;\n    }\n\n    this.isLoading = true; // Active le loading\n\n    const client: Clients = this.clientForm.value;\n\n    if (this.isEntrepriseSelected) {\n      const selected = this.control.value as Entreprise;\n      if (selected && selected.id) {\n        client.entrepriseClient = { id: selected.id } as Entreprise;\n      }\n    }\n\n    this.clientService.addClient(client).subscribe({\n      next: (response: { message: string; clientId: string; createdAt: string }) => {\n        this.isLoading = false;\n        this.clientForm.reset();\n        this.isEntrepriseSelected = false;\n\n        // Convertir clientId en nombre\n        const clientIdNum = parseInt(response.clientId, 10);\n\n        // Vérifier si la conversion a réussi\n        if (isNaN(clientIdNum)) {\n          console.error('ID client invalide reçu :', response.clientId);\n          this.errorMessage = 'Erreur : ID du client invalide';\n          return;\n        }\n\n        // Créer un objet Clients avec l'ID converti\n        const newClient: Clients = {\n          id: clientIdNum, // Maintenant un nombre\n          nomComplet: client.nomComplet,\n          adresse: client.adresse,\n          email: client.email,\n          telephone: client.telephone,\n          poste: client.poste,\n          pays: client.pays,\n          ville: client.ville,\n          entrepriseClient: client.entrepriseClient,\n          photo: client.photo || this.urllink, // Utiliser l'URL par défaut si photo est vide\n        };\n\n        this.resetForm();\n\n        // Émettre l'événement avec le nouveau client\n        this.clientAjoute.emit(newClient);\n\n        // Afficher un message de succès\n        this.successMessage = 'Client créé avec succès !';\n\n        this.closeForm();\n      },\n      error: (err) => {\n        this.isLoading = false;\n        this.errorMessage = err.error?.error || 'Erreur lors de la création';\n      }\n    });\n  }\n\n  // Annuler et revenir à la liste\n  goToClients() {\n    this.router.navigate(['/clients']);\n  }\n\n  closeForm(): void {\n    this.close.emit();\n  }\n  \n  // Méthode utilitaire pour marquer tous les champs comme touchés\n  private markFormGroupTouched(formGroup: FormGroup) {\n    Object.values(formGroup.controls).forEach(control => {\n      control.markAsTouched();\n      \n      if (control instanceof FormGroup) {\n        this.markFormGroupTouched(control);\n      }\n    });\n  }\n}\n","<div class=\"container_global\">\n  <div *ngIf=\"isLoading\" class=\"loading-overlay\">\n    <div class=\"loading-content\">\n      <div class=\"spinner\"></div>\n      <p>Creation en cours...</p>\n    </div>\n  </div>\n\n    <div class=\"content_formulaire\">\n      <div class=\"modal-body\">\n        <form [formGroup]=\"clientForm\" class=\"container_formulaire\">\n          <!-- Titre d'ajout de produits -->\n          <div class=\"Title\">\n            <h3>Ajouter un client</h3>\n          </div>\n  \n          <div class=\"form_left_right\">\n            <div class=\"formulaire\">\n              <!-- Cadre contenant le select et la description -->\n              <div class=\"information_cadre\">\n                <div class=\"info_titre_input\">\n                  \n                  <div class=\"double_input\">\n                    <!-- Nom et prenom -->\n                    <div class=\"champ_input champ_input2\">\n                      <input type=\"text\" class=\"input_focus\"\n                                id=\"nomComplet\" formControlName=\"nomComplet\"\n                                name=\"nomComplet\"\n                                placeholder=\"Saisis le nom et prénom\">\n                      <label for=\"nomComplet\" class=\"label\">Nom et prénom</label>\n                      <div *ngIf=\"clientForm.get('nomComplet')?.touched && clientForm.get('nomComplet')?.invalid\" class=\"error\">\n                        <small *ngIf=\"clientForm.get('nomComplet')?.errors?.['required']\">Champ requis.</small>\n                        <small *ngIf=\"clientForm.get('nomComplet')?.errors?.['minlength']\">Au moins 2 caractères.</small>\n                      </div>\n                    </div>\n                    <!-- Email -->\n                    <div class=\"champ_input champ_input2\">\n                      <input type=\"email\" class=\"input_focus\"\n                                id=\"email\" formControlName=\"email\"\n                                name=\"email\"\n                                placeholder=\"Saisis l'email\">\n                      <label for=\"email\" class=\"label\">Email</label>\n                      <div *ngIf=\"clientForm.get('email')?.touched && clientForm.get('email')?.invalid\" class=\"error\">\n                        <small *ngIf=\"clientForm.get('email')?.errors?.['email']\">Format invalide.</small>\n                      </div>\n                    </div>\n\n                  </div>\n                  <div class=\"double_input\">\n                    <!-- Adresse -->\n                    <div class=\"champ_input champ_input2\">\n                      <input class=\"input_focus\"\n                                id=\"adresse\" formControlName=\"adresse\"\n                                name=\"adresse\"\n                                placeholder=\"Saisis l'adresse\">\n                      <label for=\"adresse\" class=\"label\">Adresse</label>\n                    </div>\n\n                    <!-- Poste -->\n                    <div class=\"champ_input champ_input2\">\n                      <input class=\"input_focus\"\n                                id=\"poste\" formControlName=\"poste\"\n                                name=\"poste\"\n                                placeholder=\"Saisissez votre poste \">\n                      <label for=\"poste\" class=\"label\">Poste</label>\n                    </div>\n\n                  </div>\n\n                  <!-- Modifiez le sélecteur de pays et le champ téléphone -->\n                  <div class=\"grid_colonne\">\n                    <!-- Pays -->\n                <div class=\"champ_input div1\">\n                  <select class=\"input_focus\" formControlName=\"pays\" (change)=\"onPaysChange($event)\">\n                    <option value=\"\" disabled selected>Pays</option>\n                    <option *ngFor=\"let nomPays of paysKeys\" [value]=\"nomPays\">\n                      {{ nomPays }} ({{ paysIndicatifs[nomPays].indicatif }})\n                    </option>\n                  </select>\n                  <label for=\"pays\" class=\"label\">Pays</label>\n                  <div *ngIf=\"clientForm.get('pays')?.invalid && clientForm.get('pays')?.touched\" class=\"error\">\n                    <small>Ce champ est requis</small>\n                  </div>\n                </div>\n\n\n                    <!-- Téléphone -->\n                    <div class=\"champ_input div2\">\n                      <input type=\"tel\" class=\"input_focus\"\n                             id=\"telephone\" formControlName=\"telephone\"\n                             name=\"telephone\"\n                             placeholder=\"Saisis le numéro de téléphone\"\n                             (input)=\"formatPhoneNumber()\">\n                      <label for=\"telephone\" class=\"label\">Téléphone</label>\n                    \n                      <!-- Message d'erreur si pattern invalide -->\n                      <div *ngIf=\"\n                            clientForm.get('telephone')?.touched &&\n                            clientForm.get('telephone')?.errors?.['pattern'] &&\n                            clientForm.get('pays')?.value as pays\n                          \" class=\"error\">\n                        <small>\n                          Le numéro doit contenir\n                          {{ paysIndicatifs[pays].longueur }}\n                          chiffres après l’indicatif {{ paysIndicatifs[pays].indicatif.trim() }}.\n                        </small>\n                      </div>\n                    \n                      <!-- Éventuellement, message pour champ requis -->\n                      <div *ngIf=\"\n                            clientForm.get('telephone')?.touched &&\n                            clientForm.get('telephone')?.errors?.['required']\n                          \" class=\"error\">\n                        <small>Le téléphone est requis.</small>\n                      </div>\n                    </div>                    \n\n                    <!-- Ville -->\n                    <div class=\"champ_input div3\">\n                      <input class=\"input_focus\"\n                                id=\"ville\" formControlName=\"ville\"\n                                name=\"ville\"\n                                placeholder=\"Saisis la ville\">\n                      <label for=\"ville\" class=\"label\">Ville</label>\n                    </div>\n                  </div>\n                                    \n                </div>\n              </div>\n\n              <!-- Les information des produit Inventaire  -->\n              <div class=\"information_cadre\">\n                <div class=\"info_titre_input\">\n                  <h4>Entreprise</h4>\n              \n                  <!-- Input de produits inventaire -->\n                  <div class=\"champ_input_inventaire\">\n                    <p>J'appartient à une entreprise</p>\n              \n                    <label class=\"switch\">\n                      <input type=\"checkbox\" [(ngModel)]=\"isEntrepriseSelected\" [ngModelOptions]=\"{standalone: true}\"/>\n                      <span class=\"slider round\"></span>\n                    </label>\n                  </div>\n                </div>    \n              </div>\n\n              <div class=\"information_cadre\"  *ngIf=\"isEntrepriseSelected\">\n                <div class=\"info_titre_input\">\n                  <div class=\"champ_input\">\n                    <input type=\"text\"\n                          placeholder=\"Selectionner un entreprise\"\n                          [formControl]=\"control\" matInput\n                          [matAutocomplete]=\"auto\"\n                          class=\"input_focus input_cursor\">\n                    <label for=\"categorieId\" class=\"label\">Mon entreprise</label>\n                    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"onEntrepriseSelected($event)\" [displayWith]=\"displayFnEntreprise\">\n\n                      <mat-option class=\"select-option\" (click)=\"openPopup()\">\n                        <div style=\"display: flex; align-items: center; color: #0672E4;\">\n                          <!-- <i class=\"ri-checkbox-multiple-line\"></i> -->\n                          <i class=\"ri-community-line\"></i>\n                          <span style=\"margin-left: 8px;\">Créer une entreprise</span>\n                        </div>\n                      </mat-option>\n\n                      <mat-option *ngFor=\"let ent of filteredOptions | async\" [value]=\"ent\">\n                        <div class=\"option-content\">\n                          {{ ent.nom }}\n                        </div>\n                      </mat-option>\n\n                    </mat-autocomplete>\n                    <!-- // icon  -->\n                    <div class=\"icon_arrow\">\n                      <i class=\"ri-arrow-down-s-line\"></i>\n                    </div>\n                  </div>\n                </div>    \n              </div>\n\n              <!-- Les information des produit Photo  -->\n              <!-- <div class=\"information_cadre\">\n                <div class=\"info_titre_input\">\n                  <h4>Ajouter une image</h4>\n  \n                  <div class=\"container_file\"> \n                    <div class=\"header_file\"> \n                      <img class=\"roudel\" [src]=\"newPhotoUrl || urllink\" alt=\"Aperçu de l'image\" style=\"max-width:200px;\">\n                    </div> \n                    \n                    <div>\n                      <label for=\"file\" class=\"footer_file\"> \n                        <i class=\"ri-file-3-fill\"></i>\n                        <p>Choisir un fichier</p>\n                      </label> \n                      <input type=\"file\" accept=\"image/*\" id=\"file\" (change)=\"onFileSelected($event)\" hidden>\n                    </div>\n                  </div>\n                </div>\n              </div> -->\n  \n              <!-- Boutons Ajouter et Sauvegarder -->\n              <div class=\"information_cadre information_cadre_save\">\n                 <!-- Message d'erreur global -->\n                <div class=\"container_error_message\">\n                    <!-- Messages API -->\n                    <div *ngIf=\"errorMessage\" class=\"error-messageApi2\">{{ errorMessage }}</div>\n                    <div *ngIf=\"successMessage\" class=\"success-messageApi2\">{{ successMessage }}</div>\n                    <!-- Ajouter ce bloc d'erreur -->\n                    <div *ngIf=\"entrepriseRequiredError\" class=\"error\" style=\"margin-top: 8px;\">\n                      <p>Vous devez sélectionner ou créer une entreprise</p>\n                    </div>\n                </div>\n\n                <div class=\"info_titre_input info_titre_input_btn\">\n                  <div class=\"btn_annuler\">\n                    <button class=\"btn_cancel\" (click)=\"closeForm()\">Annuler</button>\n                  </div>\n                  <div class=\"btn_ajouter\">\n                    <button class=\"btn_save\" (click)=\"ajouterClient()\"\n                          [disabled]=\"clientForm.invalid\"\n                          [disabled]=\"clientForm.invalid\" \n                          [style.backgroundColor]=\"clientForm.valid ? '#0672E4' : '#0671e434'\"\n                          [style.color]=\"clientForm.valid ? '#ffffff' : '#00000073'\"\n                          [style.cursor]=\"clientForm.valid ? 'pointer' : 'no-drop'\">\n                      Ajouter\n                  </button>\n                  </div>\n                </div>\n              </div>\n  \n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n</div>\n\n<!-- Popup overlay -->\n<div class=\"popup-overlay\" *ngIf=\"showPopup\">\n  <div class=\"popup-content\">\n      <div class=\"popup-header\">\n          <h4>Ajouter une entreprise</h4>\n          <button class=\"close-btn\" (click)=\"closePopup()\">&times;</button>\n      </div>\n      <form [formGroup]=\"entrepriseForm\">\n        <div class=\"popup-body\">\n          <div class=\"champ_grid\">\n            <!-- Nom entreprise -->\n            <div class=\"champ_input\">\n              <input class=\"input_focus\" \n                     type=\"text\" \n                     formControlName=\"nom\"\n                     placeholder=\"Saisis le nom de l'entreprise\">\n              <label class=\"label\">Nom entreprise <span style=\"color: #ff0000; margin-left: 5px;\">*</span></label>\n              <div *ngIf=\"entrepriseForm.get('nom')?.invalid && entrepriseForm.get('nom')?.touched\" \n                   class=\"error-text\">\n                Ce champ est requis\n              </div>\n            </div>\n      \n            <!-- Email -->\n            <div class=\"champ_input\">\n              <input class=\"input_focus\" \n                     type=\"email\" \n                     formControlName=\"email\"\n                     placeholder=\"Saisis l'email\">\n              <label class=\"label\">Email</label>\n              <!-- <div *ngIf=\"entrepriseForm.get('email')?.errors?.['email']\" \n                   class=\"error-text\">\n                Format email invalide\n              </div> -->\n            </div>\n          </div>\n      \n          <div class=\"champ_grid\">\n            <!-- Adresse -->\n            <div class=\"champ_input\">\n              <input class=\"input_focus\" \n                     type=\"text\" \n                     formControlName=\"adresse\"\n                     placeholder=\"Saisis l'adresse\">\n              <label class=\"label\">Adresse</label>\n            </div>\n      \n            <!-- Siege -->\n            <div class=\"champ_input\">\n              <input class=\"input_focus\" \n                     type=\"text\" \n                     formControlName=\"siege\"\n                     placeholder=\"Saisis le siège\">\n              <label class=\"label\">Ville</label>\n            </div>\n\n          </div>\n\n          <!-- Modifiez le sélecteur de pays et le champ téléphone -->\n          <div class=\"grid_colonne\">\n            <!-- Pays -->\n            <div class=\"champ_input div1\">\n              <select class=\"input_focus\" \n                      formControlName=\"pays\" \n                      (change)=\"onEntreprisePaysChange($event)\">\n                <option value=\"\" disabled selected>Pays</option>\n                <option value=\"Mali\">Mali</option>\n                <option value=\"Sénégal\">Sénégal</option>\n                <option value=\"Côte d'Ivoire\">Côte d'Ivoire</option>\n              </select>\n              <label for=\"pays\" class=\"label\">Pays</label>\n            </div>\n\n            <!-- Téléphone -->\n            <div class=\"champ_input div2\">\n              <input type=\"tel\" \n                     class=\"input_focus\"\n                     formControlName=\"telephone\"\n                     placeholder=\"Saisis le numéro de téléphone\"\n                     (input)=\"formatEntreprisePhoneNumber()\">\n              <label for=\"telephone\" class=\"label\">Téléphone</label>\n            </div>\n\n            <!-- Ville -->\n            <div class=\"champ_input div3\">\n              <input class=\"input_focus\"\n                        id=\"ville\" formControlName=\"secteur\"\n                        name=\"ville\"\n                        placeholder=\"Saisis la ville\">\n              <label for=\"ville\" class=\"label\">Secteur</label>\n            </div>\n          </div>\n\n        </div>\n\n        <div class=\"container_error_message\">\n          <div *ngIf=\"errorMessageApi\" class=\"error-messageApi\">\n          {{ errorMessageApi }}\n          </div>\n        </div>\n      \n        <div class=\"popup-footer\">\n          <button type=\"button\" class=\"btn-cancel\" (click)=\"closePopup()\">Annuler</button>\n          <button type=\"submit\" class=\"btn-submit\" \n                [disabled]=\"entrepriseForm.invalid\" \n                [style.backgroundColor]=\"entrepriseForm.valid ? '#0672E4' : '#0671e434'\"\n                [style.color]=\"entrepriseForm.valid ? '#ffffff' : '#00000073'\"\n                [style.cursor]=\"entrepriseForm.valid ? 'pointer' : 'no-drop'\" (click)=\"ajouterEntreprise()\">\n            Ajouter\n          </button>\n        </div>\n      </form>\n  </div>\n</div>\n\n<!-- Dans le message de succès -->\n<div *ngIf=\"successMessage\" class=\"success-messageApi2\">\n  {{ successMessage }}\n  <button (click)=\"resetForm()\">Ajouter un autre</button>\n</div>","import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { Router } from '@angular/router';\nimport { Subject, takeUntil } from 'rxjs';\nimport { EntrepriseClientService } from '../../SERVICES/entreprise-clients-service';\n\n@Component({\n  selector: 'app-entreprise-form',\n  standalone: true,\n  imports: [\n    FormsModule,\n    CommonModule,\n    ReactiveFormsModule,\n    MatAutocompleteModule, \n  ],\n  templateUrl: './entreprise-form.component.html',\n  styleUrl: './entreprise-form.component.scss'\n})\nexport class EntrepriseFormComponent {\n  @Output() entrepriseAjoute = new EventEmitter<any>();\n  @Output() close = new EventEmitter<void>();\n\n  entrepriseClientForm!: FormGroup;\n    errorMessageApi: string = '';\n    errorMessage: string = '';\n    successMessage: string = '';\n    isSubmitting = false;\n    private destroy$ = new Subject<void>();\n    entrepriseIndicatif: string = '';\n    entrepriseMaxPhoneLength: number = 0;\n  \n    paysIndicatifs: { [key: string]: { indicatif: string, longueur: number } } = {\n  'Mali': { indicatif: '+223', longueur: 8 },\n  'Sénégal': { indicatif: '+221', longueur: 9 },\n  'Côte d\\'Ivoire': { indicatif: '+225', longueur: 10 },\n  'Burkina Faso': { indicatif: '+226', longueur: 8 },\n  'Niger': { indicatif: '+227', longueur: 8 },\n  'France': { indicatif: '+33', longueur: 9 },\n  'Belgique': { indicatif: '+32', longueur: 9 },\n  'Suisse': { indicatif: '+41', longueur: 9 },\n  'Canada': { indicatif: '+1', longueur: 10 },\n  'États-Unis': { indicatif: '+1', longueur: 10 },\n  'Maroc': { indicatif: '+212', longueur: 9 },\n  'Algérie': { indicatif: '+213', longueur: 9 },\n  'Tunisie': { indicatif: '+216', longueur: 8 },\n  'Togo': { indicatif: '+228', longueur: 8 },\n  'Bénin': { indicatif: '+229', longueur: 8 },\n  'Guinée': { indicatif: '+224', longueur: 9 },\n  'Tchad': { indicatif: '+235', longueur: 8 },\n  'Cameroun': { indicatif: '+237', longueur: 9 },\n  'RDC': { indicatif: '+243', longueur: 9 },\n  'Gabon': { indicatif: '+241', longueur: 9 },\n  'Afrique du Sud': { indicatif: '+27', longueur: 9 },\n  'Rwanda': { indicatif: '+250', longueur: 9 },\n  'Kenya': { indicatif: '+254', longueur: 9 },\n  'Nigéria': { indicatif: '+234', longueur: 10 },\n  'Ghana': { indicatif: '+233', longueur: 9 },\n  'Éthiopie': { indicatif: '+251', longueur: 9 },\n  'Égypte': { indicatif: '+20', longueur: 10 },\n  'Inde': { indicatif: '+91', longueur: 10 },\n  'Chine': { indicatif: '+86', longueur: 11 },\n  'Mexique': { indicatif: '+52', longueur: 10 },\n  'Allemagne': { indicatif: '+49', longueur: 10 },\n  'Espagne': { indicatif: '+34', longueur: 9 },\n  'Italie': { indicatif: '+39', longueur: 10 },\n  'Royaume-Uni': { indicatif: '+44', longueur: 10 },\n  'Pays-Bas': { indicatif: '+31', longueur: 9 },\n  'Portugal': { indicatif: '+351', longueur: 9 }\n  };\n\n  paysKeys: string[] = Object.keys(this.paysIndicatifs);\n\n  \n    constructor(\n        private router: Router,\n        private fb: FormBuilder,\n        private entrepriseClientService: EntrepriseClientService,\n    ) {}\n  \n    ngOnInit(): void {\n      this.initializeForm();\n      \n    }\n  \n    ngOnDestroy(): void {\n      this.destroy$.next();\n      this.destroy$.complete();\n    }\n\n    // Ajoutez cette méthode\n    resetForm(): void {\n      this.entrepriseClientForm.reset({\n        pays: '' // Réinitialisez le champ pays\n      });\n      this.errorMessageApi = '';\n      this.successMessage = '';\n      this.entrepriseIndicatif = '';\n      this.entrepriseMaxPhoneLength = 0;\n    }\n  \n    // Ajouter ces méthodes\n    onEntreprisePaysChange(event: any): void {\n      const paysSelectionne = event.target.value as string;\n      const paysInfo = this.paysIndicatifs[paysSelectionne];\n      if (!paysInfo) return;\n    \n      this.entrepriseIndicatif    = paysInfo.indicatif;\n      this.entrepriseMaxPhoneLength = paysInfo.longueur;\n    \n      const ctrl = this.entrepriseClientForm.get('telephone')!;\n      if (!ctrl.value?.startsWith(this.entrepriseIndicatif)) {\n        ctrl.setValue(this.entrepriseIndicatif);\n      }\n      this.updatePhoneValidator(paysInfo.longueur);\n    }\n  \n    // Méthode de mise à jour du validateur\n    private updatePhoneValidator(longueur: number): void {\n      const ctrl = this.entrepriseClientForm.get('telephone')!;\n      const regex = new RegExp(`^\\\\${this.entrepriseIndicatif.trim()}\\\\s\\\\d{${longueur}}$`);\n      ctrl.setValidators([Validators.required, Validators.pattern(regex)]);\n      ctrl.updateValueAndValidity();\n    }\n    \n  \n    // Formatage \"en direct\" du numéro\n    formatEntreprisePhoneNumber(): void {\n      const ctrl = this.entrepriseClientForm.get('telephone')!;\n      let valeur = ctrl.value as string;\n    \n      if (!valeur.startsWith(this.entrepriseIndicatif)) {\n        ctrl.setValue(this.entrepriseIndicatif);\n        return;\n      }\n    \n      // Retirer tout sauf les chiffres après l’indicatif\n      const chiffres = valeur.replace(this.entrepriseIndicatif, '').replace(/\\D/g, '');\n    \n      // Reformater avec espace conservé\n      const numeroFormate = `${this.entrepriseIndicatif}${chiffres}`.slice(0, this.entrepriseIndicatif.length + this.entrepriseMaxPhoneLength);\n      ctrl.setValue(numeroFormate, { emitEvent: false });\n    }\n    \n  \n    private initializeForm(): void {\n      this.entrepriseClientForm = this.fb.group({\n        nom: ['', [Validators.required, Validators.minLength(2)]],\n        adresse: [''],\n        email: ['', [Validators.email]],\n        telephone: [''],\n        pays: [''],\n        siege: [''],\n        secteur: ['']\n      });\n    }\n  \n    ajouterEntrepriseClient(): void {\n      this.errorMessageApi = '';\n      this.successMessage = '';\n\n      if (this.entrepriseClientForm.invalid) {\n        this.markAllAsTouched();\n        return;\n      }\n\n      this.isSubmitting = true;\n      const entrepriseClient = this.entrepriseClientForm.value;\n\n      this.entrepriseClientService.addEntrepriseClient(entrepriseClient)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe({\n          next: (response) => {\n            this.successMessage = 'Entreprise ajoutée avec succès!';\n            this.isSubmitting = false;\n\n            // Créer un objet Entreprise à partir des données du formulaire et de la réponse\n            const newEntreprise = {\n              id: response.id || response.id, // Ajustez selon la structure de la réponse\n              nom: entrepriseClient.nom,\n              adresse: entrepriseClient.adresse,\n              email: entrepriseClient.email,\n              telephone: entrepriseClient.telephone,\n              pays: entrepriseClient.pays,\n              siege: entrepriseClient.siege,\n              secteur: entrepriseClient.secteur,\n              // Ajoutez d'autres propriétés si nécessaire\n            };\n\n            // Émettre l'événement avec la nouvelle entreprise\n            this.entrepriseAjoute.emit(newEntreprise);\n            this.resetForm();\n\n            this.entrepriseClientForm.reset();\n            this.closeForm();\n          },\n          error: (err) => {\n            this.errorMessageApi = err.error?.error || err.message || 'Erreur lors de l\\'ajout de l\\'entreprise';\n            this.isSubmitting = false;\n          },\n        });\n    }\n  \n  private markAllAsTouched(): void {\n    Object.values(this.entrepriseClientForm.controls).forEach(control => {\n      control.markAsTouched();\n    });\n  }\n  \n    // Annuler et revenir à la liste\n\n  closeForm(): void {\n    this.close.emit();\n  }\n  \n  // Méthode utilitaire pour marquer tous les champs comme touchés\n  private markFormGroupTouched(formGroup: FormGroup) {\n    Object.values(formGroup.controls).forEach(control => {\n      control.markAsTouched();\n      \n      if (control instanceof FormGroup) {\n        this.markFormGroupTouched(control);\n      }\n    });\n  }\n\n}\n","<div class=\"container_global\">\n    <div class=\"content_formulaire\">\n      <div class=\"modal-body\">\n        <form [formGroup]=\"entrepriseClientForm\" class=\"container_formulaire\">\n\n          <!-- Titre d'ajout de produits -->\n          <div class=\"Title\">\n            <h3>Ajouter un client entreprise</h3>\n          </div>\n  \n          <div class=\"form_left_right\">\n            <div class=\"formulaire\">\n              <!-- Cadre contenant le select et la description -->\n              <div class=\"information_cadre\">\n                <div class=\"info_titre_input\">\n                  \n                  <div class=\"double_input\">\n                    <!-- Nom et prenom -->\n                    <div class=\"champ_input champ_input2\">\n                      <input type=\"text\" class=\"input_focus\"\n                                id=\"nomComplet\" formControlName=\"nom\"\n                                name=\"nomComplet\"\n                                placeholder=\"Saisis le nom d'entreprise\">\n                      <label for=\"nomComplet\" class=\"label\">Nom d'entreprise</label>\n                      <div *ngIf=\"entrepriseClientForm.get('nom')?.touched && entrepriseClientForm.get('nom')?.invalid\" \n                            class=\"error\">\n                            <small *ngIf=\"entrepriseClientForm.get('nom')?.errors?.['required']\">\n                            Ce champ est obligatoire\n                            </small>\n                            <small *ngIf=\"entrepriseClientForm.get('nom')?.errors?.['minlength']\">\n                            Minimum 2 caractères\n                            </small>\n                        </div>\n                    </div>\n                    <!-- Email -->\n                    <div class=\"champ_input champ_input2\">\n                      <input type=\"email\" class=\"input_focus\"\n                                id=\"email\" formControlName=\"email\"\n                                name=\"email\"\n                                placeholder=\"Saisis l'email\">\n                      <label for=\"email\" class=\"label\">Email</label>\n                      <div *ngIf=\"entrepriseClientForm.get('email')?.touched && entrepriseClientForm.get('email')?.invalid\" class=\"error\">\n                        <small *ngIf=\"entrepriseClientForm.get('email')?.errors?.['email']\">\n                            Format d'email invalide\n                        </small>\n                        </div>\n                    </div>\n\n                  </div>\n                  <div class=\"double_input\">\n                    <!-- Adresse -->\n                    <div class=\"champ_input champ_input2\">\n                      <input class=\"input_focus\"\n                                autocomplete=\"off\"\n                                id=\"adresse\" formControlName=\"adresse\"\n                                name=\"adresse\"\n                                placeholder=\"Saisis l'adresse\">\n                      <label for=\"adresse\" class=\"label\">Adresse</label>\n                    </div>\n\n                    <!-- siege -->\n                    <div class=\"champ_input champ_input2\">\n                      <input type=\"text\" class=\"input_focus\"\n                                id=\"siege\" formControlName=\"siege\"\n                                name=\"siege\"\n                                placeholder=\"Saisis le siège\">\n                      <label for=\"telephone\" class=\"label\">Ville</label>\n                    </div>\n\n                  </div>\n\n                  <div class=\"grid_colonne\">\n                    <!-- Pays -->\n                  <div class=\"champ_input div1\">\n                  <select class=\"input_focus\" formControlName=\"pays\" (change)=\"onEntreprisePaysChange($event)\">\n                    <option value=\"\" disabled selected>Pays</option>\n                    <option *ngFor=\"let nomPays of paysKeys\" [value]=\"nomPays\">\n                      {{ nomPays }} ({{ paysIndicatifs[nomPays].indicatif }})\n                    </option>\n                  </select>\n                  <label for=\"pays\" class=\"label\">Pays</label>\n                 \n                </div>\n        \n                    <!-- Téléphone -->\n                    <div class=\"champ_input div2\">\n                      <input type=\"tel\" \n                             class=\"input_focus\"\n                             formControlName=\"telephone\"\n                             placeholder=\"Saisis le numéro de téléphone\"\n                             (input)=\"formatEntreprisePhoneNumber()\">\n                      <label for=\"telephone\" class=\"label\">Téléphone</label>\n                    \n                      <!-- On récupère d’abord \"pays\" via un alias dans le même *ngIf -->  \n                      <div *ngIf=\"\n                            entrepriseClientForm.get('telephone')?.touched &&\n                            entrepriseClientForm.get('telephone')?.errors?.['pattern'] &&\n                            entrepriseClientForm.get('pays')?.value as pays\n                          \"\n                          class=\"error\">\n                        <small>\n                          Le numéro doit contenir\n                          {{ paysIndicatifs[pays].longueur }}\n                          chiffres après l’indicatif {{ paysIndicatifs[pays].indicatif.trim() }}.\n                        </small>\n                      </div>\n                    \n                      <!-- Optionnel : champ requis -->\n                      <div *ngIf=\"\n                            entrepriseClientForm.get('telephone')?.touched &&\n                            entrepriseClientForm.get('telephone')?.errors?.['required']\n                          \"\n                          class=\"error\">\n                        <small>Le téléphone est requis.</small>\n                      </div>\n                    </div>\n        \n                    <!-- Ville -->\n                    <div class=\"champ_input div3\">\n                      <input class=\"input_focus\"\n                                id=\"ville\" formControlName=\"secteur\"\n                                name=\"ville\"\n                                placeholder=\"Saisis la ville\">\n                      <label for=\"ville\" class=\"label\">Secteur</label>\n                    </div>\n                  </div>\n                  \n                </div>\n              </div>\n              \n\n              <!-- Les information des produit Photo  -->\n              <!-- <div class=\"information_cadre\">\n                <div class=\"info_titre_input\">\n                  <h4>Ajouter une image</h4>\n  \n                  <div class=\"container_file\"> \n                    <div class=\"header_file\"> \n                      <img class=\"roudel\" [src]=\"newPhotoUrl || urllink\" alt=\"Aperçu de l'image\" style=\"max-width:200px;\">\n                    </div> \n                    \n                    <div>\n                      <label for=\"file\" class=\"footer_file\"> \n                        <i class=\"ri-file-3-fill\"></i>\n                        <p>Choisir un fichier</p>\n                      </label> \n                      <input type=\"file\" accept=\"image/*\" id=\"file\" (change)=\"onFileSelected($event)\" hidden>\n                    </div>\n                  </div>\n                </div>\n              </div> -->\n  \n              <!-- Boutons Ajouter et Sauvegarder -->\n              <div class=\"information_cadre information_cadre_save\">\n                 <!-- Message d'erreur global -->\n                <div class=\"container_error_message\">\n                    <!-- Messages API -->\n                    <div *ngIf=\"errorMessageApi\" class=\"error-messageApi2\">{{ errorMessageApi }}</div>\n                    <div *ngIf=\"successMessage\" class=\"success-messageApi2\">{{ successMessage }}</div>\n                </div>\n\n                <div class=\"info_titre_input info_titre_input_btn\">\n                  <div class=\"btn_annuler\">\n                    <button class=\"btn_cancel\" (click)=\"closeForm()\">Annuler</button>\n                  </div>\n                  <div class=\"btn_ajouter\">\n                    <!-- <button class=\"btn_save\" (click)=\"ajouterEntrepriseClient()\"\n                          [disabled]=\"clientForm.invalid\"\n                          [disabled]=\"clientForm.invalid\" \n                          [style.backgroundColor]=\"clientForm.valid ? '#0672E4' : '#0671e434'\"\n                          [style.color]=\"clientForm.valid ? '#ffffff' : '#00000073'\"\n                          [style.cursor]=\"clientForm.valid ? 'pointer' : 'no-drop'\">  -->\n                    <!-- Modifier le bouton de soumission -->\n                    <button class=\"btn_save\" (click)=\"ajouterEntrepriseClient()\"\n                          [disabled]=\"entrepriseClientForm.invalid\"\n                          [disabled]=\"entrepriseClientForm.invalid\" \n                          [style.backgroundColor]=\"entrepriseClientForm.valid ? '#0672E4' : '#0671e434'\"\n                          [style.color]=\"entrepriseClientForm.valid ? '#ffffff' : '#00000073'\"\n                          [style.cursor]=\"entrepriseClientForm.valid ? 'pointer' : 'no-drop'\"> \n                        Ajouter\n                    </button>\n                  </div>\n                </div>\n              </div>\n  \n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule, MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport { Router } from '@angular/router';\nimport { ClientService } from '../../SERVICES/client-service';\nimport { Clients } from '../../MODELS/clients-model';\nimport { FactureProFormaService } from '../../SERVICES/factureproforma-service';\nimport { Produit } from '../../MODELS/produit.model';\nimport { ProduitService } from '../../SERVICES/produit.service';\nimport { UsersService } from '../../SERVICES/users.service';\nimport { Observable, map, startWith, switchMap, throwError } from 'rxjs';\nimport { CustomNumberPipe } from '../../MODELS/customNumberPipe';\nimport { FacturePreviewService } from '../../SERVICES/facture-preview-service';\nimport { FactureProForma } from '../../MODELS/FactureProForma.model';\nimport { FormStateService } from '../../SERVICES/form-state.service';\nimport { ProduitFormComponent } from '../../produits/produit-form/produit-form.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NgxBarcode6Module } from 'ngx-barcode6';\nimport { ClientFormComponent } from '../../clients/client-form/client-form.component';\nimport { EntrepriseFormComponent } from '../../clients/entreprise-form/entreprise-form.component';\nimport { EntrepriseService } from '../../SERVICES/entreprise-service';\nimport { Entreprise } from '../../MODELS/entreprise-model';\n\n@Component({\n  selector: 'app-addfacture-proforma',\n  imports: [\n    FormsModule,\n    CommonModule,\n    ReactiveFormsModule,\n    MatAutocompleteModule,\n    CustomNumberPipe,\n    MatIconModule,\n    NgxBarcode6Module,\n    ProduitFormComponent,\n    ClientFormComponent,\n    EntrepriseFormComponent,\n  ],\n  templateUrl: './addfacture-proforma.component.html',\n  styleUrls: ['./addfacture-proforma.component.scss']\n})\nexport class AddfactureProformaComponent implements OnInit {\n  pendingAdjustments: any[] = [];\n  description: string = '';\n  dateFacture: string = '';\n  siege: string = '';\n  typeDestinataire: string = 'client';\n  selectedClientId: number | null = null;\n  selectedEntrepriseId: number | null = null;\n  selectedEntreprise: { id: number; nom: string } | null = null;\n  nomEntreprise: string = '';\n  boutiqueIds: number[] | undefined;\n  produits: Produit[] = [];\n  inputLignes: { produitId: number | null; quantite: number; ligneDescription: string | null; isDuplicate: boolean; }[] = [{\n    produitId: null,\n    quantite: 0,\n    ligneDescription: null,\n    isDuplicate: false,\n  }];\n  confirmedLignes: {\n    produitId: number | null;\n    quantite: number;\n    ligneDescription: string | null;\n    isDuplicate: boolean;\n  }[] = [];\n  clients: Clients[] = [];\n  totalClients = 0;\n  noClientsAvailable = false;\n  entreprises: any[] = [];\n  activeRemise: boolean = false;\n  activeTva: boolean = false;\n  remisePourcentage: number = 0;\n  tva: number = 0;\n  entrepriseId: number = 0;\n  userEntrepriseId: number | null = null;\n  isLoading: boolean = false;\n  facturesproforma: any[] = [];\n  totalHT: number = 0;\n  showDuplicatePopup: boolean = false;\n  showExistingInvoiceError = false;\n  errorMessage = '';\n  hasDuplicateError = false;\n  duplicateIndex: number | null = null;\n\n  // Ajouts pour mat-autocomplete\n  productControl = new FormControl();\n  filteredProduits: Observable<Produit[]>;\n\n  // Ajouter ces variables\n  showProductFormPanel: boolean = false;\n  panelAnimationState: 'hidden' | 'visible' = 'hidden';\n\n  clientControl = new FormControl();\n  filteredClients: Observable<Clients[]>;\n  showClientFormPanel: boolean = false;\n\n  entrepriseControl = new FormControl();\n  filteredEntreprises: Observable<any[]>;\n  showEntrepriseFormPanel: boolean = false;\n\n  constructor(\n    private router: Router,\n    private clientService: ClientService,\n    private factureProFormaService: FactureProFormaService,\n    private produitService: ProduitService,\n    private usersService: UsersService,\n    private previewService: FacturePreviewService,\n    private formStateService: FormStateService,\n    private cdr: ChangeDetectorRef,\n    private entrepriseService: EntrepriseService,\n    private cdRef: ChangeDetectorRef,\n    private fb: FormBuilder,\n    \n  ) {\n    // Initialisation du filtre pour l'autocomplete\n    this.filteredProduits = this.productControl.valueChanges.pipe(\n      startWith(null),\n      map(value => typeof value === 'string' ? value : value?.nom),\n      map(name => name ? this._filterProduits(name) : this.produits.slice())\n    );\n\n    this.filteredClients = this.clientControl.valueChanges.pipe(\n      startWith(''),\n      map(value => (typeof value === 'string' ? value : value?.nomComplet)),\n      map(name => (name ? this._filterClients(name) : this.clients.slice()))\n    );\n\n    // Ajoutez après les autres initialisations\n    this.filteredEntreprises = this.entrepriseControl.valueChanges.pipe(\n      startWith(''),\n      map(value => (typeof value === 'string' ? value : value?.nom)),\n      map(name => (name ? this._filterEntreprises(name) : this.entreprises.slice()))\n    );\n  }\n\n  private _filterClients(name: string): Clients[] {\n    const filterValue = name.toLowerCase();\n    return this.clients.filter(client =>\n      client.nomComplet.toLowerCase().includes(filterValue) ||\n      (client.entrepriseClient?.nom.toLowerCase().includes(filterValue))\n    );\n  }\n\n  // displayClient(client: Clients): string {\n  //   if (!client) return '';\n  //   return client.entrepriseClient \n  //     ? `${client.nomComplet} - ${client.entrepriseClient.nom}`\n  //     : client.nomComplet;\n  // }\n\n  displayClient(client: Clients | null): string {\n    if (!client) return '';\n    return client.entrepriseClient \n      ? `${client.nomComplet} - ${client.entrepriseClient.nom}`\n      : client.nomComplet;\n  }\n\n  // onClientSelected(event: MatAutocompleteSelectedEvent) { \n  //   if (event.option.value === null) {\n  //     this.openClientFormPanel(); // Ouvre le formulaire pour créer un client\n  //   } else {\n  //     this.selectedClientId = event.option.value.id;\n  //     // Optionnel : autres actions liées à la sélection\n  //   }\n  // }\n\n  onClientBlur() {\n    const selectedClient = this.clientControl.value;\n    if (selectedClient && typeof selectedClient === 'object' && 'id' in selectedClient) {\n      this.selectedClientId = selectedClient.id;\n    } else {\n      // Réinitialiser si la valeur n'est pas un objet client valide\n      this.selectedClientId = null;\n      this.clientControl.setValue(null);\n    }\n  }\n\n  onClientSelected(event: MatAutocompleteSelectedEvent) { \n    if (event.option.value === null) {\n      this.openClientFormPanel();\n    } else {\n      this.selectedClientId = event.option.value.id;\n      // Mettre à jour le contrôle pour afficher correctement le client\n      this.clientControl.setValue(event.option.value);\n    }\n  }\n\n  onClientFocus() {\n    if (!this.clientControl.value) {\n      this.clientControl.setValue('');\n    }\n  }\n\n  private _filterEntreprises(name: string): any[] {\n    const filterValue = name.toLowerCase();\n    return this.entreprises.filter(entreprise => \n      entreprise.nom.toLowerCase().includes(filterValue)\n    );\n  }\n\n  displayEntreprise(entreprise: any): string {\n    return entreprise && entreprise.nom ? entreprise.nom : '';\n  }\n\n  onEntrepriseSelected(event: MatAutocompleteSelectedEvent) {\n    if (event.option.value === null) {\n      this.openEntrepriseFormPanel();\n    } else {\n      this.selectedEntreprise = event.option.value;\n    }\n  }\n\n  onEntrepriseFocus() {\n    if (!this.entrepriseControl.value) {\n      this.entrepriseControl.setValue('');\n    }\n  }\n\n  async ngOnInit(): Promise<void> {\n    this.getUserInfo();\n    await Promise.all([\n      this.getListClients(),\n      this.getListEntreprise(),\n      this.getProduits(),\n      this.getFormInit(),\n    this.getEntrepriseInfo()\n    ]);\n\n    const savedState = this.formStateService.getState();\n    if (savedState) {\n      this.typeDestinataire = savedState.typeDestinataire;\n      this.selectedClientId = savedState.selectedClientId;\n      this.selectedEntreprise = savedState.selectedEntreprise;\n      this.description = savedState.description;\n      this.inputLignes = savedState.inputLignes;\n      this.confirmedLignes = savedState.confirmedLignes;\n      this.activeRemise = savedState.activeRemise;\n      this.remisePourcentage = savedState.remisePourcentage;\n      this.activeTva = savedState.activeTva;\n\n      if (savedState.clientControl) {\n        this.clientControl.setValue(savedState.clientControl);\n      }\n\n      if (savedState.entrepriseControl) {\n        this.entrepriseControl.setValue(savedState.entrepriseControl);\n      }\n    }\n  }\n\n  navigateBack() {\n    // this.router.navigate(['/addfacture-proforma']);\n    this.router.navigate(['/facture-proforma']);\n  }\n\n  onToggleRemise() {\n    if (!this.activeRemise) {\n      this.remisePourcentage = 0;\n    }\n  }\n\n  onToggleTVA() {\n    if (!this.activeTva) {\n      this.tva = 0;\n    }\n  }\n\n  onRemiseChange() {\n    this.remisePourcentage = Number(this.remisePourcentage);\n  }\n\n  getMontantRemise(): number {\n    return (this.getTotalHT() * this.remisePourcentage) / 100;\n  }\n  \n\n  getTotalApresRemise(): number {\n    return this.getTotalHT() - this.getMontantRemise();\n  }\n\n getMontantTVA(): number {\n  if (!this.activeTva) return 0;\n\n  const taux = this.form.get('tauxTva')?.value || 0;\n  const montant = this.getTotalApresRemise() * taux;\n  return Math.round(montant * 100) / 100;\n}\n\n\n  getTotalCommercial(): number {\n    return this.getTotalApresRemise();\n  }\n\n  getTotalTTC(): number {\n    return this.getTotalApresRemise() + this.getMontantTVA();\n  }\n\n  updateCalculs() {\n    this.inputLignes = [...this.inputLignes];\n    this.confirmedLignes = [...this.confirmedLignes];\n  }\n\n  closePopup() {\n    if (this.duplicateIndex !== null) {\n      const idx = this.duplicateIndex;\n      this.inputLignes[idx] = {\n        produitId: null,\n        quantite: 1,\n        ligneDescription: null,\n        isDuplicate: false\n      };\n      this.duplicateIndex = null;\n    }\n    this.showDuplicatePopup = false;\n    this.updateCalculs();\n    this.cdr.detectChanges();\n  }\n\n  trackByFn(index: number, item: any): number {\n    return index;\n  }\n\n  supprimerLigneConfirmee(index: number) {\n    this.confirmedLignes.splice(index, 1);\n    this.confirmedLignes = [...this.confirmedLignes];\n  }\n\n  getProduitNom(produitId: number | null): string {\n    if (!produitId) return '';\n    const produit = this.produits.find(p => p.id === produitId);\n    return produit?.nom || '';\n  }\n\n  goToFacture() {\n    this.description = '';\n    this.typeDestinataire = 'client';\n    this.selectedClientId = null;\n    this.selectedEntrepriseId = null;\n    this.selectedEntreprise = null;\n    this.inputLignes = [{\n      produitId: null,\n      quantite: 0,\n      ligneDescription: null,\n      isDuplicate: false,\n    }];\n    this.confirmedLignes = [];\n    this.activeRemise = false;\n    this.remisePourcentage = 0;\n    this.activeTva = false;\n    this.formStateService.clearState();\n    this.router.navigate(['/facture-proforma']);\n  }\n\n getListClients() {\n  this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      if (!token) {\n        console.error('Token manquant pour clients');\n        return throwError(() => new Error('Token manquant'));\n      }\n      return this.clientService.getListClients();\n    })\n  ).subscribe({\n    next: (data) => {\n      this.clients = data.map(client => ({\n        ...client,\n        entrepriseClient: client.entrepriseClient\n          ? { id: client.entrepriseClient.id, nom: client.entrepriseClient.nom }\n          : null\n      })).sort((a, b) => (b.id ?? 0) - (a.id ?? 0));\n\n      this.clientControl.setValue(null);\n      this.totalClients = this.clients.length;\n      this.noClientsAvailable = this.clients.length === 0;\n    },\n    error: (err) => {\n      console.error('Erreur récupération clients :', err);\n    }\n  });\n}\n\n\n getListEntreprise() {\n  const token = this.usersService.getToken();\n  if (!token) {\n    console.error('Token manquant pour entreprises');\n    return;\n  }\n\n  this.clientService.getListEntreprises().subscribe({\n    next: (data) => {\n      this.entreprises = data.sort((a: any, b: any) => (b.id ?? 0) - (a.id ?? 0));\n      this.entrepriseControl.setValue(null);\n    },\n    error: (err) => {\n      console.error('Erreur récupération entreprises :', err);\n    }\n  });\n}\n\n\ngetProduits() {\n  this.usersService.getValidAccessToken().subscribe({\n    next: (token) => {\n      if (!token) {\n        console.error('Token manquant pour récupérer les produits');\n        return;\n      }\n\n      if (!this.userEntrepriseId) {\n        console.error('ID entreprise utilisateur manquant');\n        return;\n      }\n\n      this.produitService.getProduitsParEntreprise(this.userEntrepriseId).subscribe({\n        next: (data: Produit[]) => {\n          console.log('Produits récupérés :', data);\n          this.produits = data;\n\n          // Filtrer uniquement les produits liés à au moins une boutique non entrepôt\n          const produitsBoutiques = this.produits.filter(p =>\n            Array.isArray(p.boutiques) &&\n            p.boutiques.some(b => (b.typeBoutique || '').toUpperCase() !== 'ENTREPOT')\n          );\n\n          // Mettre à jour filteredProduits pour l'autocomplete\n          this.filteredProduits = this.productControl.valueChanges.pipe(\n            startWith(null),\n            map(value => typeof value === 'string' ? value : value?.nom),\n            map(name => {\n              if (!name) return produitsBoutiques;\n              const lowerName = name.toLowerCase();\n              return produitsBoutiques.filter(p =>\n                p.nom?.toLowerCase().includes(lowerName)\n              );\n            })\n          );\n\n          console.log(\"Produits visibles dans autocomplete :\", produitsBoutiques);\n        },\n        error: (err) => console.error('Erreur récupération produits :', err)\n      });\n    },\n    error: (err) => console.error('Erreur récupération token :', err)\n  });\n}\n\n\n\n\n  getPrixVente(produitId: number | null): number {\n    if (!produitId) return 0;\n    const produit = this.produits.find(p => p.id === produitId);\n    return produit?.prixVente || 0;\n  }\n\n  getMontantTotal(ligne: any): number {\n    const prix = this.getPrixVente(ligne.produitId);\n    return prix * (ligne.quantite || 0);\n  }\n\n  getTotalHT(): number {\n    const totalConfirmed = this.confirmedLignes.reduce((total, ligne) =>\n      total + this.getMontantTotal(ligne), 0);\n    const totalInput = this.inputLignes.reduce((total, ligne) => {\n      if (ligne.produitId && ligne.quantite > 0) {\n        return total + this.getMontantTotal(ligne);\n      }\n      return total;\n    }, 0);\n    return totalConfirmed + totalInput;\n  }\n\ncreerFactureProforma() {\n  this.usersService.getValidAccessToken().subscribe({\n    next: (token) => {\n      if (!token) {\n        console.error('Token manquant');\n        return;\n      }\n\n      // Validation des destinataires\n      if (!this.selectedClientId && !this.selectedEntreprise) {\n        this.errorMessage = 'Sélectionnez un client ou une entreprise';\n        this.showExistingInvoiceError = true;\n        return;\n      }\n\n      // Préparation des lignes de facture\n      const allLignes = [...this.confirmedLignes];\n      const currentLine = this.inputLignes[0];\n\n      // Ajout de la ligne courante si valide et non dupliquée\n      if (currentLine.produitId && currentLine.quantite > 0) {\n        const produitExiste = allLignes.some(l => l.produitId === currentLine.produitId);\n        if (produitExiste) {\n          this.showDuplicatePopup = true;\n          return;\n        }\n        allLignes.push(currentLine);\n      }\n\n      if (allLignes.length === 0) {\n        alert('Ajoutez au moins un produit');\n        return;\n      }\n\n      // Formatage de la date (seulement la partie date sans heure)\n      const dateSeule = this.dateFacture.includes('T') ? this.dateFacture.split('T')[0] : this.dateFacture;\n\n      // Construction de l’objet facture à envoyer\n      const facture: any = {\n        description: this.description,\n        lignesFacture: allLignes.map(ligne => ({\n          produit: { id: ligne.produitId },\n          quantite: ligne.quantite,\n          ligneDescription: ligne.ligneDescription,\n        }))\n      };\n\n      if (this.dateFacture) {\n        facture.dateFacture = dateSeule;\n      }\n\n      // Définir le client ou l’entreprise selon le type destinataire\n      if (this.typeDestinataire === 'client' && this.selectedClientId) {\n        facture.client = { id: this.selectedClientId };\n      } else if (this.typeDestinataire === 'entreprise' && this.selectedEntreprise) {\n        facture.entrepriseClient = { id: this.selectedEntreprise.id };\n      } else {\n        console.error('Destinataire non spécifié');\n        return;\n      }\n\n      // Appel au service pour créer la facture proforma avec le token\n      this.factureProFormaService.creerFactureProforma(\n        facture,\n        this.activeRemise ? this.remisePourcentage : undefined,\n        this.activeTva,\n        this.activeRemise || this.activeTva,\n       \n      ).subscribe({\n        next: (res) => {\n          console.log('Facture créée avec succès:', res);\n\n          // Réinitialisation du formulaire et de l’état local\n          this.formStateService.clearState();\n          this.confirmedLignes = [];\n          this.inputLignes = [{\n            produitId: null,\n            quantite: 1,\n            ligneDescription: null,\n            isDuplicate: false\n          }];\n\n          // Navigation vers la liste des factures\n          this.router.navigate(['/facture-proforma']);\n        },\n        error: (err) => {\n          const serverMessage = typeof err.error === 'string' ? err.error : err.error?.message;\n          this.errorMessage = serverMessage || 'Erreur lors de la création : erreur inconnue';\n          this.showExistingInvoiceError = true;\n        }\n      });\n\n    },\n    error: (err) => {\n      console.error('Erreur récupération token :', err);\n    }\n  });\n}\n\n\n\n  removePendingAdjustment(index: number): void {\n    this.pendingAdjustments.splice(index, 1);\n  }\n\n  getUserInfo(): void {\n    this.usersService.getUserInfo().subscribe({\n      next: (user) => {\n        this.nomEntreprise = user.nomEntreprise;\n        this.userEntrepriseId = user.entrepriseId;\n        console.log(\"Infos utilisateur récupérées :\", user);\n        this.getProduits();\n      },\n      error: (err) => {\n        console.error(\"Erreur lors de la récupération des infos utilisateur :\", err);\n      }\n    });\n  }\n\n  onProduitChange(produitId: number | null, ligne: any, index: number) {\n    ligne.produitId = produitId;\n    ligne.isDuplicate = false;\n\n    if (produitId) {\n      const isInConfirmed = this.confirmedLignes.some(l => l.produitId === produitId);\n      const isInInput = this.inputLignes.some((l, i) => i !== index && l.produitId === produitId);\n\n      if (isInConfirmed || isInInput) {\n        this.duplicateIndex = index;\n        this.showDuplicatePopup = true;\n        setTimeout(() => {\n          ligne.produitId = null;\n          ligne.ligneDescription = null;\n          this.updateCalculs();\n          this.cdr.detectChanges();\n        }, 0);\n        return;\n      }\n\n      const produit = this.produits.find(p => p.id === produitId);\n      ligne.ligneDescription = produit?.description || null;\n    } else {\n      ligne.ligneDescription = null;\n    }\n\n    this.updateCalculs();\n  }\n\n  ajouterLigneFacture(index: number) {\n    const ligne = this.inputLignes[index];\n\n    if (ligne.produitId && ligne.quantite > 0) {\n      const allLignes = [...this.confirmedLignes, ...this.inputLignes];\n      const produitExiste = allLignes.filter(l => l !== ligne)\n        .some(l => l.produitId === ligne.produitId);\n\n      if (produitExiste) {\n        this.duplicateIndex = index;\n        this.showDuplicatePopup = true;\n        ligne.isDuplicate = true;\n        setTimeout(() => ligne.isDuplicate = false, 500);\n        return;\n      }\n\n      this.confirmedLignes.push({ ...ligne });\n      this.inputLignes = [{\n        produitId: null,\n        quantite: 1,\n        ligneDescription: null,\n        isDuplicate: false\n      }];\n      this.productControl.setValue(null); // Réinitialiser l'autocomplete\n    }\n  }\n\n  apercuFactureProforma(): void {\n    this.formStateService.saveState({\n      typeDestinataire: this.typeDestinataire,\n      selectedClientId: this.selectedClientId,\n      selectedEntreprise: this.selectedEntreprise,\n      description: this.description,\n      inputLignes: this.inputLignes,\n      confirmedLignes: this.confirmedLignes,\n      activeRemise: this.activeRemise,\n      remisePourcentage: this.remisePourcentage,\n      activeTva: this.activeTva,\n      clientControl: this.clientControl.value,\n      entrepriseControl: this.entrepriseControl.value\n    });\n\n    const lignes = [\n      ...this.confirmedLignes.map(l => ({\n        produit: {\n          id: l.produitId!,\n          nom: this.getProduitNom(l.produitId!)\n        },\n        quantite: l.quantite,\n        ligneDescription: l.ligneDescription,\n        prixUnitaire: this.getPrixVente(l.produitId),\n      })),\n      ...this.inputLignes\n        .filter(l => l.produitId && l.quantite > 0)\n        .map(l => ({\n          produit: {\n            id: l.produitId!,\n            nom: this.getProduitNom(l.produitId!)\n          },\n          quantite: l.quantite,\n          ligneDescription: l.ligneDescription,\n          prixUnitaire: this.getPrixVente(l.produitId),\n        }))\n    ];\n\n    const preview: FactureProForma = {\n      id: 0,\n      numeroFacture: '—',\n      dateCreation: new Date().toISOString(),\n      siege: this.siege,\n      description: this.description,\n      totalHT: this.getTotalHT(),\n      remise: this.activeRemise ? this.remisePourcentage : 0,\n      tva: this.activeTva,\n      totalFacture: this.getTotalTTC(),\n      lignesFacture: lignes as any,\n      client: this.typeDestinataire === 'client' && this.selectedClientId\n        ? { id: this.selectedClientId, nomComplet: this.getClientName(this.selectedClientId) }\n        : undefined,\n      entrepriseClient: this.typeDestinataire === 'entreprise' && this.selectedEntreprise\n        ? { id: this.selectedEntreprise.id, nom: this.selectedEntreprise.nom }\n        : undefined,\n    };\n\n    this.previewService.setPreview(preview);\n    this.router.navigate(['/facture-proforma-apercu']);\n  }\n\n  private getClientName(id: number): string {\n    const c = this.clients.find(c => c.id === id);\n    return c ? c.nomComplet : '';\n  }\n\n  private getEntrepriseName(id: number): string {\n    const e = this.entreprises.find(e => e.id === id);\n    return e ? e.nom : '';\n  }\n\n  onProduitAjoute(nouveauProduit: Produit) {\n    // Ajouter le nouveau produit à la liste des produits\n    this.produits.push(nouveauProduit);\n\n    // Mettre à jour la ligne de facture actuelle\n    if (this.inputLignes.length > 0) {\n      this.inputLignes[0].produitId = nouveauProduit.id;\n      this.inputLignes[0].ligneDescription = nouveauProduit.description || null;\n      this.inputLignes[0].quantite = 1; // Quantité par défaut\n      this.inputLignes[0].isDuplicate = false;\n\n      // Mettre à jour l'autocomplete pour afficher le nom du nouveau produit\n      this.productControl.setValue(nouveauProduit);\n\n      // FORCER LA MISE À JOUR DE L'AUTOCOMPLÉTION\n      // this.productControl.setValue('');\n\n      // Forcer la mise à jour des options filtrées\n      this.filteredProduits = this.productControl.valueChanges.pipe(\n        startWith(''),\n        map(value => typeof value === 'string' ? value : value?.nom),\n        map(name => name ? this._filterProduits(name) : this.produits.slice())\n      );\n\n      // Déclencher une mise à jour de l'interface utilisateur\n      this.updateCalculs();\n      this.cdr.detectChanges();\n    }\n\n    // Fermer le panneau du formulaire\n    this.closeProductFormPanel();\n  }\n\n  // Méthode appelée au focus\n  onFocus() {\n    if (!this.productControl.value) {\n      this.productControl.setValue('');\n    }\n  }\n\n\n  // Méthodes pour mat-autocomplete\n  // private _filterProduits(name: string): Produit[] {\n  //   const filterValue = name.toLowerCase();\n  //   return this.produits.filter(produit => produit.nom.toLowerCase().includes(filterValue));\n  // }\n\n  // Logique de filtrage\nprivate _filterProduits(name: string): Produit[] {\n  if (!name) {\n    return this.produits.slice();\n  }\n  const filterValue = name.toLowerCase();\n  return this.produits.filter(produit => produit.nom.toLowerCase().includes(filterValue));\n}\n\n  // displayProduit(produit: Produit): string {\n  //   return produit ? produit.nom : '';\n  // }\n  \n  // Affichage du nom du produit dans l'input\n  displayProduit(produit: Produit): string {\n    return produit && produit.nom ? produit.nom : '';\n  }\n\n  // Méthode pour ouvrir le panneau\n  openProductFormPanel(): void {\n    this.showProductFormPanel = true;\n    this.panelAnimationState = 'visible';\n  }\n\n  // Méthode pour fermer le panneau\n  closeProductFormPanel(): void {\n    this.panelAnimationState = 'hidden';\n    setTimeout(() => {\n      this.showProductFormPanel = false;\n    }, 300); // Correspond à la durée de l'animation\n  }\n\n  openClientFormPanel() {\n    this.showClientFormPanel = true;\n    this.panelAnimationState = 'visible';\n  }\n\n  closeClientFormPanel() {\n    this.panelAnimationState = 'hidden';\n    setTimeout(() => {\n      this.showClientFormPanel = false;\n    }, 300);\n  }\n\n  openEntrepriseFormPanel() {\n    this.showEntrepriseFormPanel = true;\n    this.panelAnimationState = 'visible';\n  }\n\n  closeEntrepriseFormPanel() {\n    this.panelAnimationState = 'hidden';\n    setTimeout(() => {\n      this.showEntrepriseFormPanel = false;\n    }, 300);\n  }\n\nonProduitSelected(event: MatAutocompleteSelectedEvent) {\n  const selectedProduit: Produit = event.option.value;\n\n  // Si c'est l'option de création de produit\n  if (selectedProduit === null) {\n    this.openProductFormPanel();\n    return;\n  }\n\n  if (selectedProduit && selectedProduit.id) {\n    const ligne = this.inputLignes[0];\n    ligne.produitId = selectedProduit.id;\n    ligne.ligneDescription = selectedProduit.description || null;\n    ligne.quantite = ligne.quantite || 1; // Assurer une quantité par défaut\n    ligne.isDuplicate = false;\n\n    // Vérifier les doublons\n    const isInConfirmed = this.confirmedLignes.some(l => l.produitId === selectedProduit.id);\n    if (isInConfirmed) {\n      this.duplicateIndex = 0;\n      this.showDuplicatePopup = true;\n      setTimeout(() => {\n        ligne.produitId = null;\n        ligne.ligneDescription = null;\n        ligne.quantite = 1;\n        this.productControl.setValue(null);\n        this.updateCalculs();\n        this.cdr.detectChanges();\n      }, 0);\n      return;\n    }\n\n    // Mettre à jour l'autocomplete\n    this.productControl.setValue(selectedProduit);\n    this.updateCalculs();\n    this.cdr.detectChanges();\n  }\n}\n\n// Méthode appelée lors de la réception de l’événement clientAjoute\n  onClientAjoute(nouveauClient: Clients) {\n    // Ajouter le nouveau client à la liste\n    this.clients.push(nouveauClient);\n\n    // Optionnel : trier par ID décroissant\n    this.clients.sort((a, b) => (b.id ?? 0) - (a.id ?? 0));\n\n    // Pré-sélectionner le nouveau client dans l’autocomplete\n    this.selectedClientId = nouveauClient.id;\n    this.clientControl.setValue(nouveauClient);\n\n    // Mettre à jour les options filtrées\n    this.filteredClients = this.clientControl.valueChanges.pipe(\n      startWith(nouveauClient),\n      map(value => (typeof value === 'string' ? value : value?.nomComplet)),\n      map(name => (name ? this._filterClients(name) : this.clients.slice()))\n    );\n\n    this.filteredClients = this.clientControl.valueChanges.pipe(\n      startWith(''),\n      map(value => (typeof value === 'string' ? value : value?.nomComplet)),\n      map(name => (name ? this._filterClients(name) : this.clients.slice()))\n    );\n\n    // Forcer la mise à jour de l’interface utilisateur\n    this.cdr.detectChanges();\n\n    // Fermer le panneau du formulaire client (si applicable)\n    this.closeClientFormPanel();\n  }\n\n  // Méthode appelée lors de la réception de l’événement entrepriseAjoute\n  // onEntrepriseAjoute(nouvelleEntreprise: Entreprise) {\n  //   // Ajouter la nouvelle entreprise à la liste\n  //   this.entreprises.push(nouvelleEntreprise);\n\n  //   // Optionnel : trier par ID décroissant\n  //   this.entreprises.sort((a, b) => (b.id ?? 0) - (a.id ?? 0));\n\n  //   // Pré-sélectionner la nouvelle entreprise dans l’autocomplete\n  //   this.entrepriseControl.setValue(nouvelleEntreprise);\n\n  //   // Mettre à jour les options filtrées\n  //   this.filteredEntreprises = this.entrepriseControl.valueChanges.pipe(\n  //     startWith(nouvelleEntreprise),\n  //     map(value => (typeof value === 'string' ? value : value?.nom)),\n  //     map(name => (name ? this._filterEntreprises(name) : this.entreprises.slice()))\n  //   );\n\n  //   // Forcer la mise à jour de l’interface utilisateur\n  //   this.cdr.detectChanges();\n\n  //   // Fermer le panneau du formulaire\n  //   this.closeEntrepriseFormPanel();\n  // }\n\n  onEntrepriseAjoute(nouvelleEntreprise: any) {\n    this.entreprises.push(nouvelleEntreprise);\n    this.entreprises.sort((a, b) => (b.id ?? 0) - (a.id ?? 0));\n    \n    // Mettre à jour la sélection immédiatement\n    this.selectedEntreprise = nouvelleEntreprise;\n    this.entrepriseControl.setValue(nouvelleEntreprise);\n    \n    // FORCER LA MISE À JOUR DE L'AUTOCOMPLÉTION\n    this.filteredEntreprises = this.entrepriseControl.valueChanges.pipe(\n      startWith(''),\n      map(value => (typeof value === 'string' ? value : value?.nom)),\n      map(name => (name ? this._filterEntreprises(name) : this.entreprises.slice()))\n    );\n    \n    this.cdr.detectChanges();\n  }\n\n  // onEntrepriseBlur() {\n  //   const selectedEntreprise = this.entrepriseControl.value;\n  //   if (selectedEntreprise && typeof selectedEntreprise === 'object' && 'id' in selectedEntreprise) {\n  //     this.selectedEntreprise = selectedEntreprise;\n  //   } else {\n  //     this.selectedEntreprise = null;\n  //     this.entrepriseControl.setValue(null);\n  //   }\n  // }\n\n  onEntrepriseBlur() {\n    const selectedEntreprise = this.entrepriseControl.value;\n    if (selectedEntreprise && typeof selectedEntreprise === 'object' && 'id' in selectedEntreprise) {\n      this.selectedEntreprise = selectedEntreprise;\n    } else {\n      this.selectedEntreprise = null;\n      this.entrepriseControl.setValue(null);\n    }\n  }\n\n  getFormInit() {\n    this.form = this.fb.group({\n\n     tauxTva: [null]\n\n    });\n  }\n\n    form!: FormGroup;\n  \n\n   getEntrepriseInfo() {\n      this.entrepriseService.getEntrepriseInfo().subscribe({\n        next: (entreprise: Entreprise) => {\n          this.form.patchValue({\n      \n            tauxTva: entreprise.tauxTva\n          });\n          console.log(\"data dentreprise\", entreprise);\n          \n         \n        },\n        error: (error) => {\n          console.error('Erreur lors de la récupération des informations de l\\'entreprise', error);\n        }\n      });\n    }\n  \n}","<div class=\"container_global\">\n  <div *ngIf=\"isLoading\" class=\"loading-overlay\">\n    <div class=\"loading-content\">\n      <div class=\"spinner\"></div>\n      <p>Connexion en cours...</p>\n    </div>\n  </div>\n\n  <div class=\"content_formulaire\">\n    <div class=\"modal-body\">\n        <form class=\"container_formulaire\">\n          \n          <!-- Icon return  -->\n          <p class=\"retour_icon_text\" (click)=\"navigateBack()\" style=\"cursor: pointer; color: #0672E4; margin-bottom: 15px;\" title=\"Retour sur la page facture pro forma\">\n              <i class=\"ri-arrow-left-s-line\"></i> <span style=\"margin-left: 8px; font-size: 12px;\">Facture pro forma</span>\n          </p>\n\n            <!-- // Titre -->\n            <div class=\"Title\">\n                <h3>Créer une facture pro forma</h3>\n            </div>\n\n            <!-- Les informations de facture  -->\n            <div class=\"information_cadre\">\n                <div class=\"info_titre_input\">\n                    <h5 style=\"margin-bottom: 8px; font-size: 18px;\">Client(e)</h5>\n\n                     <!-- Client / Entreprise -->\n                    <div class=\"champ_input champ_input2\">\n                      <div class=\"title_input\">\n                        <label>\n                          <input type=\"radio\" name=\"typeDestinataire\" value=\"client\" [(ngModel)]=\"typeDestinataire\" [ngModelOptions]=\"{ standalone: true }\" />\n                          Client\n                        </label>\n                        <label style=\"margin-left: 20px;\">\n                          <input type=\"radio\" name=\"typeDestinataire\" value=\"entreprise\" [(ngModel)]=\"typeDestinataire\" [ngModelOptions]=\"{ standalone: true }\" />\n                          Entreprise\n                        </label>\n                      </div>\n\n                      <div class=\"champ_grid\">\n                        <!-- Select Client -->\n                        <!-- Remplacez le bloc select client par ceci -->\n                        <div *ngIf=\"typeDestinataire === 'client'\">\n                          <div class=\"champ_input\" style=\"margin-right: 15px;\">\n                            <input\n                              matInput\n                              [formControl]=\"clientControl\"\n                              [matAutocomplete]=\"autoClients\"\n                              placeholder=\"Sélectionner un client\"\n                              class=\"input_focus\"\n                              (focus)=\"onClientFocus()\"\n                              (blur)=\"onClientBlur()\"\n                            >\n                            <label for=\"description\" class=\"label\">Clients</label>\n                            <mat-autocomplete #autoClients=\"matAutocomplete\" [displayWith]=\"displayClient\" (optionSelected)=\"onClientSelected($event)\">\n                              <mat-option [value]=\"null\">\n                                <div style=\"display: flex; align-items: center; color: #0672E4;\">\n                                  <i class=\"ri-add-circle-fill\" style=\"font-size: 20px;\"></i>\n                                  <span style=\"margin-left: 8px;\">Créer un client</span>\n                                </div>\n                              </mat-option>\n                              <mat-option *ngFor=\"let client of filteredClients | async\" [value]=\"client\">\n                                <div class=\"option-content\">\n                                  {{ client.nomComplet }} <span *ngIf=\"client.entrepriseClient\">- {{ client.entrepriseClient.nom }}</span>\n                                </div>\n                              </mat-option>\n                            </mat-autocomplete>\n                          </div>\n                        </div>\n\n                        <div *ngIf=\"typeDestinataire === 'entreprise'\">\n                          <div class=\"champ_input\" style=\"margin-right: 15px;\">\n                            <input\n                              matInput\n                              [formControl]=\"entrepriseControl\"\n                              [matAutocomplete]=\"autoEntreprises\"\n                              placeholder=\"Sélectionner une entreprise\"\n                              class=\"input_focus\"\n                              (focus)=\"onEntrepriseFocus()\"\n                              (blur)=\"onEntrepriseBlur()\"\n                            >\n                            <label for=\"description\" class=\"label\">Entreprise</label>\n                            <mat-autocomplete #autoEntreprises=\"matAutocomplete\" [displayWith]=\"displayEntreprise\" (optionSelected)=\"onEntrepriseSelected($event)\">\n                              <mat-option [value]=\"null\">\n                                <div style=\"display: flex; align-items: center; color: #0672E4;\">\n                                  <i class=\"ri-add-circle-fill\" style=\"font-size: 20px;\"></i>\n                                  <span style=\"margin-left: 8px;\">Créer une entreprise</span>\n                                </div>\n                              </mat-option>\n                              <mat-option *ngFor=\"let entreprise of filteredEntreprises | async\" [value]=\"entreprise\">\n                                <div class=\"option-content\">\n                                  {{ entreprise.nom }}\n                                </div>\n                              </mat-option>\n                            </mat-autocomplete>\n                          </div>\n                        </div>\n\n                        <div class=\"champ_input\">\n                          <label for=\"dateFacture\" style=\"font-size:12px; position:relative; top:0;\">\n                            Date de facture\n                          </label>\n                             <input\n                             lass=\"input_focus\" style=\" position: relative; top: -21px;\"\n                                type=\"date\"\n                                id=\"dateFacture\"\n                                name=\"dateFacture\"\n                                class=\"input_focus\"\n                                [(ngModel)]=\"dateFacture\"\n                              />\n\n                        </div>\n\n\n                      </div>\n        \n                      <!-- Select Entreprise -->\n                      <!-- <select *ngIf=\"typeDestinataire === 'entreprise'\" class=\"input_focus\" [(ngModel)]=\"selectedEntrepriseId\" name=\"entreprise_id\" required [ngModelOptions]=\"{ standalone: true }\" >\n                        <option [ngValue]=\"null\">Sélectionner une entreprise</option>\n                        <option *ngFor=\"let entreprise of entreprises\" [value]=\"entreprise.id\">\n                          {{ entreprise.nom }}\n                        </option>\n                      </select> -->\n\n                    </div>\n\n                    <!-- Object -->\n                    <div class=\"champ_input\">\n                      <textarea type=\"text\" class=\"input_focus2\" id=\"description\" name=\"description\" [(ngModel)]=\"description\" [ngModelOptions]=\"{ standalone: true }\" placeholder=\"Saisis l'object\"></textarea>\n                      <label for=\"description\" class=\"label\">Objet</label>\n                    </div>\n                </div>\n            </div>\n\n             <!-- Lignes produit de facture dynamiques -->\n            <div class=\"information_cadre\">\n                <div class=\"info_titre_input\">\n                    <div class=\"add_new_quantite_stock\">\n                        <h4>Produits</h4>\n                    </div>\n\n                    <div class=\"containerTable\">\n                        <table>\n                            <thead>\n                                <tr class=\"titleTableProduit\">\n                                  <th class=\"title_table_name\">Désignation</th>\n                                  <th class=\"\">Description</th>\n                                  <th class=\"\">Quantité</th>\n                                  <th class=\"\">Prix Unitaire</th>\n                                  <th class=\"\">Montant (FCFA)</th>\n                              </tr>\n                            </thead>\n                            <!-- Afficher produit dans la list  -->\n                            <tbody>\n                                <tr class=\"tr_stock\" style=\"border-top: 1px solid #f0f2f5;\" *ngFor=\"let ligne of confirmedLignes; let i = index\">\n                                  <!-- // Produit  -->\n                                  <td>\n                                    <div class=\"champ_input\" style=\"margin-right: 15px;\">\n                                        <input class=\"input_focus_type\" type=\"text\" [value]=\"getProduitNom(ligne.produitId)\" readonly>\n                                    </div>\n                                  </td>\n                                  <!-- // Description -->\n                                  <td>\n                                    <div class=\"champ_input\" style=\"margin-right: 15px;\">\n                                      <textarea\n                                        type=\"text\"\n                                        class=\"input_focus_type\"\n                                        style=\"margin-bottom: -7px; min-width: 120px; resize: none;\"\n                                        [value]=\"ligne.ligneDescription\"\n                                        readonly\n                                        placeholder=\"Description\"></textarea>\n                                    </div>                         \n                                  </td>\n                                  <!-- // Quantité  -->\n                                  <td>\n                                    <div class=\"champ_input\" style=\"margin-right: 15px;\">\n                                        <input type=\"number\" class=\"input_focus_type input_focus_type_quantite\" [value]=\"ligne.quantite\" readonly>\n                                    </div>\n                                  </td>\n                                  <!-- // Prix Unitaire  -->\n                                  <td>\n                                    <div class=\"champ_input\" style=\"margin-right: 15px;\">\n                                        <input type=\"text\" class=\"input_focus_type\" [value]=\"getPrixVente(ligne.produitId) | customNumber\" placeholder=\"Prix unitaire\" style=\"cursor: no-drop;\">\n                                    </div>\n                                  </td>\n                                  <!-- // Total montant -->\n                                  <td>\n                                    <div class=\"champ_input\" style=\"margin-right: 15px;\">\n                                      <input type=\"text\" class=\"input_focus_type\" disabled id=\"prixTotal\" [value]=\"getMontantTotal(ligne) | customNumber\" style=\"cursor: no-drop; text-align: center;\">\n                                    </div>                         \n                                  </td>\n                                  <td>\n                                    <!-- // Button de delele  -->\n                                    <div class=\"btn_delete_icon_add\" (click)=\"supprimerLigneConfirmee(i)\">\n                                      <i class=\"ri-delete-bin-5-fill\"></i>\n                                    </div>\n                                  </td>\n                                </tr>\n                            </tbody>\n                            <!-- Ajouter produit quantite  -->\n                            <tbody>\n                              <tr class=\"tr_stock\" style=\"border-top: 1px solid #f0f2f5;\" *ngFor=\"let ligne of inputLignes; let i = index; trackBy: trackByFn\">\n                                  <!-- // Produit  -->\n                                  <td>\n                                    <div class=\"champ_input\" style=\"margin-right: 15px;\">\n                                      <input\n                                        matInput\n                                        [formControl]=\"productControl\"\n                                        [matAutocomplete]=\"autoProduits\"\n                                        placeholder=\"Sélectionner un produit\"\n                                        class=\"input_focus_type input_focus_type_select\" \n                                        [ngClass]=\"{ 'duplicate': inputLignes[0].isDuplicate }\"\n                                        (focus)=\"onFocus()\" \n                                      >\n                                      <mat-autocomplete #autoProduits=\"matAutocomplete\" [displayWith]=\"displayProduit\" (optionSelected)=\"onProduitSelected($event)\">\n                                        <mat-option [value]=\"null\">\n                                          <div style=\"display: flex; align-items: center; color: #0672E4;\">\n                                            <i class=\"ri-add-circle-fill\" style=\"font-size: 20px;\"></i>\n                                            <span style=\"margin-left: 8px;\">Créer un produit</span>\n                                          </div>\n                                        </mat-option>\n                                        <mat-option *ngFor=\"let produit of filteredProduits | async\" [value]=\"produit\">\n                                          <div class=\"option-content\">\n                                            {{ produit.nom }}\n                                          </div>\n                                        </mat-option>\n                                      </mat-autocomplete>\n                                    </div>\n                                  </td>\n                                  <!-- // Description -->\n                                  <td>\n                                      <div class=\"champ_input\" style=\"margin-right: 15px;\">\n                                        <textarea style=\"margin-bottom: -7px; min-width: 120px; resize: none;\"\n                                          type=\"text\" \n                                          [(ngModel)]=\"ligne.ligneDescription\"\n                                          [ngModelOptions]=\"{ standalone: true }\"\n                                          class=\"input_focus_type\"\n                                          placeholder=\"Description\"></textarea>\n                                      </div>                         \n                                  </td>\n                                  <!-- // Quantité  -->\n                                  <td>\n                                    <div class=\"champ_input\" style=\"margin-right: 15px;\">\n                                      <input type=\"number\" class=\"input_focus_type input_focus_type_quantite\" [(ngModel)]=\"ligne.quantite\" (ngModelChange)=\"updateCalculs()\" [ngModelOptions]=\"{ standalone: true }\" placeholder=\"Quantité\" />\n                                        <!-- <label class=\"label\">Quantité</label> -->\n                                    </div>\n                                  </td>\n                                  <!-- // Prix Unitaire  -->\n                                  <td>\n                                    <div class=\"champ_input\" style=\"margin-right: 15px;\">\n                                      <input \n                                        type=\"text\" \n                                        class=\"input_focus_type\" \n                                        [value]=\"getPrixVente(ligne.produitId) | customNumber\" \n                                        placeholder=\"Prix unitaire\"\n                                        readonly\n                                        style=\"cursor: no-drop;\">\n                                    </div>\n                                  </td>\n                                  <!-- // Montant total -->\n                                  <td>\n                                    <div class=\"champ_input\" style=\"margin-right: 15px;\">\n                                      <input type=\"text\" class=\"input_focus_type\" disabled [value]=\"getMontantTotal(ligne) | customNumber\" style=\"cursor: no-drop; text-align: center;\">\n                                    </div>                         \n                                  </td>\n                                  <!-- // Button de ajouter  -->\n                                  <td>\n                                    <div *ngIf=\"i === inputLignes.length - 1\" class=\"btn_ajouter_icon_add\" (click)=\"ajouterLigneFacture(i)\">\n                                      <i class=\"ri-add-fill\"></i>\n                                    </div>\n                                  </td>\n                              </tr>\n                            </tbody>\n                            <!-- Montant total HT  -->\n                            <tfoot>\n                                <tr class=\"tr_stock\">\n                                    <!-- // Produit -->\n                                    <td >\n                                        <h4>MONTANT TOTAL HT </h4>\n                                    </td>\n                                    <!-- // Description -->\n                                    <td></td>\n                                    <!-- // Prix Unitaire  -->\n                                    <td></td>\n                                    <!-- // Quantité  -->\n                                    <td></td>\n                                    <!-- // Stock actuel -->\n                                    <td>\n                                      <div class=\"champ_input\" style=\"margin-right: 15px;\">\n                                        <input \n                                          type=\"text\" \n                                          class=\"input_focus_type\" \n                                          disabled \n                                          [value]=\"getTotalHT() | customNumber\" \n                                          style=\"cursor: no-drop; text-align: center;\"\n                                        >\n                                      </div>                         \n                                    </td>\n                                    <td></td>\n                                </tr>\n                            </tfoot>\n\n                        </table>\n                    </div>\n                </div>\n            </div>\n\n            <!-- Remise -->\n            <div class=\"information_cadre\">\n              <div class=\"info_titre_input\">\n                <!-- <h4>REMISE</h4> -->\n        \n                <div class=\"champ_input_inventaire\">\n                    <p>Application de REMISE</p>\n                    <label class=\"switch\">\n                        <input type=\"checkbox\" [(ngModel)]=\"activeRemise\" (change)=\"onToggleRemise()\" [ngModelOptions]=\"{standalone: true}\"/>\n                        <span class=\"slider round\"></span>\n                    </label>\n                </div>\n        \n                <div class=\"double_input_grid\" *ngIf=\"activeRemise\" style=\"margin-top: 15px;\">\n                    <div class=\"champ_input champ_input2\">\n                        <input type=\"number\" step=\"0.01\" class=\"input_focus\" name=\"remisePourcentage\" [(ngModel)]=\"remisePourcentage\" (input)=\"onRemiseChange()\" placeholder=\"Remise en %\" />\n                        <label class=\"label\">\n                          REMISE <span *ngIf=\"remisePourcentage !== null\">({{ remisePourcentage }}%)</span>\n                        </label>\n                    </div>\n        \n                    <div class=\"champ_input champ_input2\">\n                      <input \n                      \n                        type=\"text\" \n                        class=\"input_focus\" \n                        readonly\n                        [value]=\"getMontantRemise() | customNumber\" style=\"cursor: no-drop;\"/>\n                      <label class=\"label\">Montant (CFA)</label>\n                    </div>\n                </div>\n        \n              </div>\n            </div> \n\n            <!-- // Toatal TTC  -->\n            <div class=\"information_cadre\">\n              <div class=\"info_titre_input\">\n                  <!-- // Remise et Total hors taxe  -->\n                  <div class=\"double_input_ttc\">\n                      <h4> MONTANT COMMERCIAL </h4>\n                      <div class=\"montantTTC\">\n                          <!-- <h4> -->\n                              {{ getTotalCommercial() | customNumber  }}\n                          <!-- </h4> -->\n                      </div>\n                  </div>\n              </div>\n          </div>\n\n            <!-- TVA -->\n            <div class=\"information_cadre\">\n                <div class=\"info_titre_input\">\n                <!-- <h4> TVA </h4> -->\n        \n                <div class=\"champ_input_inventaire\">\n                    <p>Application de TVA</p>\n                    <label class=\"switch\">\n                        <input type=\"checkbox\" [(ngModel)]=\"activeTva\" (change)=\"onToggleTVA()\" [ngModelOptions]=\"{standalone: true}\"/>\n                        <span class=\"slider round\"></span>\n                    </label>\n                </div>\n        \n              <div class=\"double_input_grid\" *ngIf=\"activeTva\" style=\"margin-top: 15px;\">\n                    <div class=\"champ_input\">\n                      <input\n                        type=\"text\"\n                        class=\"input_focus\"\n                        readonly\n                        [value]=\"(form.get('tauxTva')?.value * 100 | number:'1.0-2') + ' %'\"\n                      />\n                      <label class=\"label\">TVA (%)</label>\n                    </div>\n\n                    <div class=\"champ_input\">\n                      <input\n                        type=\"text\"\n                        class=\"input_focus\"\n                        readonly\n                        [value]=\"getMontantTVA() | customNumber\"\n                        style=\"cursor: no-drop;\"\n                      />\n                      <label class=\"label\">Montant (CFA)</label>\n                    </div>\n              </div>\n\n        \n                </div>\n            </div>\n\n            <!-- // Toatal TTC  -->\n            <div class=\"information_cadre\">\n              <div class=\"info_titre_input\">\n                  <!-- // Remise et Total hors taxe  -->\n                  <div class=\"double_input_ttc\">\n                      <h4>MONTANT TOTAL TTC </h4>\n                      <div class=\"montantTTC\">\n                          <!-- <h4> -->\n                            {{ getTotalTTC() | customNumber }}\n                          <!-- </h4> -->\n                      </div>\n                  </div>\n              </div>\n            </div>\n\n            <!-- Boutons -->\n            <div class=\"information_cadre information_cadre_save\" style=\"display: flex; align-items: center; justify-content: space-between;\">\n\n              <div style=\"cursor: pointer; text-align: right; margin-left: 20px;\" (click)=\"apercuFactureProforma()\">\n                <button class=\"btn_apercu\" title=\"Voir l'aperçu de facture proforma\">Aperçu <i class=\"ri-eye-2-line\"></i></button>\n              </div>\n\n              <div class=\"info_titre_input info_titre_input_btn\" style=\"display: flex; justify-content: flex-end; gap: 10px;\">\n                <div class=\"btn_annuler\">\n                  <button class=\"btn_cancel\" type=\"button\" (click)=\"goToFacture()\">Annuler</button>\n                </div>\n                <!-- <div class=\"btn_ajouter\" (click)=\"apercuFactureProforma()\">\n                  <button class=\"btn_save\">\n                    Aperçu \n                  </button>\n                </div> -->\n                <div class=\"btn_ajouter\">\n                  <!-- <button class=\"btn_save\" (click)=\"creerFactureProforma()\">\n                    {{ inputLignes.length > 0 ? 'Ajouter la facture' : 'Créer facture' }}\n                  </button> -->\n                  <button type=\"button\" class=\"btn_save\" (click)=\"creerFactureProforma()\">\n                    {{ inputLignes.length > 0 ? 'Ajouter la facture' : 'Créer facture' }}\n                  </button>                  \n                </div>\n              </div>\n            </div>\n\n        </form>\n        \n    </div>\n  </div>\n\n  <!-- Modifier le conteneur du panneau -->\n  <div class=\"container_cadre_facture\" \n      [class.show]=\"showProductFormPanel\"\n      [class.slide-in]=\"panelAnimationState === 'visible'\"\n      [class.slide-out]=\"panelAnimationState === 'hidden'\">\n    <div class=\"overlay\" (click)=\"closeProductFormPanel()\"></div>\n    <div class=\"content_cadre_right\" (click)=\"$event.stopPropagation()\">\n      <div class=\"cadre_right\">\n        <div class=\"add_produit\">\n          <app-produit-form \n              *ngIf=\"showProductFormPanel\"\n              (produitAjoute)=\"onProduitAjoute($event)\"\n              (close)=\"closeProductFormPanel()\">\n          </app-produit-form>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Modifier le conteneur du panneau client -->\n  <div class=\"container_cadre_facture\" \n      [class.show]=\"showClientFormPanel\"\n      [class.slide-in]=\"panelAnimationState === 'visible'\"\n      [class.slide-out]=\"panelAnimationState === 'hidden'\">\n    <div class=\"overlay\" (click)=\"closeClientFormPanel()\"></div>\n    <div class=\"content_cadre_right\" (click)=\"$event.stopPropagation()\">\n      <div class=\"cadre_right\">\n        <div class=\"add_client\" style=\"margin: 10% 0 0 5%;\">\n          <app-client-form \n              *ngIf=\"showClientFormPanel\"\n              (clientAjoute)=\"onClientAjoute($event)\"\n              (close)=\"closeClientFormPanel()\">\n          </app-client-form>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Modifier le conteneur du panneau entreprise-->\n  <div class=\"container_cadre_facture\" \n      [class.show]=\"showEntrepriseFormPanel\"\n      [class.slide-in]=\"panelAnimationState === 'visible'\"\n      [class.slide-out]=\"panelAnimationState === 'hidden'\">\n    <div class=\"overlay\" (click)=\"closeEntrepriseFormPanel()\"></div>\n    <div class=\"content_cadre_right\" (click)=\"$event.stopPropagation()\">\n      <div class=\"cadre_right\">\n        <div class=\"add_entreprise\" style=\"margin: 10% 0 0 5%;\">\n          <app-entreprise-form\n          (entrepriseAjoute)=\"onEntrepriseAjoute($event)\"\n            (close)=\"closeEntrepriseFormPanel()\">\n          </app-entreprise-form>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</div>\n\n<!-- Popup de duplication -->\n<div *ngIf=\"showDuplicatePopup\" class=\"duplicate-popup\">\n  <div class=\"popup-content\">\n    <p class=\"modal-content-text\">Ce produit est déjà dans la liste.</p>\n    <button class=\"modal-content-text-button\" (click)=\"closePopup()\" (keyup.enter)=\"closePopup()\">OK</button>\n  </div>\n</div>\n\n<!-- Popup d'erreur de facture existante -->\n<div *ngIf=\"showExistingInvoiceError\" class=\"duplicate-popup\">\n  <div class=\"popup-content\">\n    <p>{{ errorMessage }}</p>\n    <button (click)=\"showExistingInvoiceError = false\">OK</button>\n  </div>\n</div>\n\n\n","import { Component, EventEmitter, Output, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport imageCompression from 'browser-image-compression';\nimport { Observable, of, startWith, map } from 'rxjs';\nimport { Categorie } from '../../MODELS/categorie.model';\nimport { PopupData } from '../../MODELS/PopUp/popup-data';\nimport { UniteMesure } from '../../MODELS/unite.model';\nimport { CategorieService } from '../../SERVICES/categorie.service';\nimport { ProduitService } from '../../SERVICES/produit.service';\nimport { UniteMesureService } from '../../SERVICES/unite.service';\nimport { UsersService } from '../../SERVICES/users.service';\nimport { CommonModule } from '@angular/common';\nimport { MatAutocomplete, MatAutocompleteModule, MatAutocompleteTrigger } from '@angular/material/autocomplete';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NgxBarcode6Module } from 'ngx-barcode6';\nimport { Produit } from '../../MODELS/produit.model';\n\n@Component({\n  selector: 'app-produit-form',\n  standalone: true,\n  imports: [ FormsModule, CommonModule, ReactiveFormsModule, MatAutocompleteModule, NgxBarcode6Module, MatIconModule ],\n  templateUrl: './produit-form.component.html',\n  styleUrl: './produit-form.component.scss'\n})\nexport class ProduitFormComponent {\n  @Output() produitAjoute = new EventEmitter<any>();\n  @Output() close = new EventEmitter<void>();\n  isChecked = false;\n  showPopup: boolean = false;\n  boutiqueName: string = '';\n  boutiqueId: number = 1; \n  messageAPI: string = '';\n  apiMessageType: 'success' | 'error' | '' = '';\n  seuilsMap: { [boutiqueId: number]: number } = {};\n  ajouteProduitForm!: FormGroup;\n  modifierProduitForm!: FormGroup;\n  ajouteCategoryForm!: FormGroup;\n  ajouteUniteForm!: FormGroup;\n  errorMessage: string = '';\n  errorMessageCategory: string = '';\n  errorMessageUnity: string = '';\n  boutiquesList: any[] = [];\n  showPopupCategory: boolean = false;\n  formSubmitted = false;\n  showPopupUnit: boolean = false;\n  popupTitle: string = '';\n  popupMessage: string = '';\n  popupImage: string = '';\n  popupType: 'success' | 'error' = 'success';\n  imagePopup: string | null = null;\n  nomEntreprise: string = '';\n  adresseEntreprise: string = '';\n  logoEntreprise: string =''\n  // produitForm: FormGroup;\n  imageFile: File | null = null;\n  isLoading: boolean = false;\n  boutiqueIdSelected: number[] = [];\n  quantitesMap: { [boutiqueId: number]: number } = {};\n  boutiqueForm!: FormGroup;\n  successMessage: string | null = null;\n  // POUR UNITE\n  UniterControl = new FormControl();\n  showCategoryCreation: boolean = false;\n  showUniteCreation: boolean = false;\n  // Variable initialisée vide\n  formattedPrixVente: string = '';\n  formattedCoutProduit: string = '';\n  // users: any[] = [];\n  filteredUsers: any[] = [];\n  indicatif: string = '';\n  maxPhoneLength: number = 8;\n  isAscending: boolean = true;\n  searchTerm: string = '';\n  urllink: string = \"assets/img/appareil.jpg\";\n  newPhotoUrl: string | null = null;\n  selectedFile: File | null | undefined = null;\n  //////// FOCUS CATEGORY\n  myControl = new FormControl();\n  uniteControl = new FormControl();\n  options: Categorie[] = []; // Liste des catégories récupérées\n  optionsUnite: UniteMesure[] = []; // Liste des unites récupérées\n  filteredOptions: Observable<Categorie[]> = of([]);\n  filteredNomUnite: Observable<UniteMesure[]> = of([]);\n  controlBoutique = new FormControl('');\n  streetsBoutique: { id: number, name: string }[] = []; // Associe les noms aux IDs\n  filteredStreetsBoutique!: Observable<string[]>;\n  showPopupBoutique = false;\n  showBoutiqueSelectionPanel: boolean = false;\n  selectedBoutiques: any[] = [];\n  isSending: boolean = false;\n  showBarcode = false;\n\n  showBoutiqueError: boolean = false;\n  // Variable regroupant toutes les informations du popup\n  popupData: PopupData = { title: '', message: '', image: '', type: 'success' };\n  // Getter pour faciliter l'accès aux contrôles dans le template\n  get c() { return this.ajouteCategoryForm.controls; }\n  get u() { return this.ajouteUniteForm.controls; }\n  get f() { return this.ajouteProduitForm.controls; }\n\n  isUniteDropdownOpen: boolean = false;\n  isCategoryDropdownOpen: boolean = false;\n  @ViewChild('autoUnite') autoUnite!: MatAutocomplete;\n  @ViewChild(MatAutocompleteTrigger) uniteAutocompleteTrigger!: MatAutocompleteTrigger;\n  @ViewChild('autoCategory') autoCategory!: MatAutocomplete;\n  @ViewChild(MatAutocompleteTrigger) categoryAutocompleteTrigger!: MatAutocompleteTrigger;\n\n  clearImage() {\n    this.newPhotoUrl = null;\n    this.imageFile = null;\n  }\n\n  async testImageCompression(file: File) {\n    if (!file) {\n      console.log('Aucun fichier sélectionné.');\n      return;\n    }\n  \n    console.log('Taille originale:', file.size / 1024, 'Ko');\n  \n    // Options de compression\n    const options = {\n      maxSizeMB: 1,\n      maxWidthOrHeight: 1000,\n      useWebWorker: true,\n    };\n  \n    try {\n      const compressedFile = await imageCompression(file, options);\n      console.log('Taille après compression:', compressedFile.size / 1024, 'Ko');\n  \n      // Vérifier si le fichier est bien en PNG/JPEG après compression\n      if (compressedFile.type !== 'image/png' && compressedFile.type !== 'image/jpeg') {\n        console.error('Le fichier compressé n\\'est pas un format supporté (PNG ou JPEG).');\n        this.errorMessage = 'Erreur de compression : Le format de l\\'image n\\'est pas valide.';\n        return;\n      }\n      \n  \n      // Lire l'image compressée et afficher l'aperçu\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        this.newPhotoUrl = e.target?.result as string;\n        console.log('Image compressée prête à être affichée !');\n      };\n      reader.readAsDataURL(compressedFile);\n    } catch (error) {\n      console.error('Erreur lors de la compression:', error);\n    }\n  } \n\n  goToProduit() { this.router.navigate(['/produit']); }\n  \n  // Exemple d'utilisation lors d'une réponse du backend\n  onResponseFromBackend(response: any): void {\n    // Par exemple, si response contient { message, type } et que vous souhaitez afficher une image par défaut\n    const defaultImage = response.type === 'success' ? 'assets/img/succes.png' : 'assets/img/error.png';\n    this.showPopupMessage({\n      title: response.type === 'success' ? 'Succès' : 'Erreur',\n      message: response.message,\n      image: defaultImage,\n      type: response.type\n    });\n  }\n  \n  // Méthode pour afficher le popup avec des données passées en paramètre\n  showPopupMessage(data: PopupData): void { this.popupData = data; this.showPopup = true; }\n\n  // Méthode pour fermer le popup\n  closePopup(): void { this.showPopup = false; }\n\n  constructor(\n    // private sharedDataService: SharedDataService,\n    private categorieService: CategorieService,\n    private uniteMesureService: UniteMesureService,\n    private produitService: ProduitService,\n    private fb: FormBuilder,\n    private router: Router,\n    private usersService: UsersService,\n  ) {}\n  \n  // Méthodes d'ouverture/fermeture des popups\n  openPopupCategory(): void {\n    this.showPopupCategory = true;\n    this.ajouteCategoryForm.reset();\n    this.errorMessageCategory = '';\n    this.messageAPI = '';\n  }\n\n  closePopupCategory(): void { this.showPopupCategory = false; }\n\n  openPopupUnit(): void {\n    this.showPopupUnit = true;\n    this.ajouteUniteForm.reset();\n    this.errorMessageUnity = '';\n    this.messageAPI = '';\n  }\n\n  closePopupUnit(): void { this.showPopupUnit = false; }\n\n  // onToggleChange(event: Event) {\n  //   // event.target permet d’accéder au checkbox\n  //   const checkbox = event.target as HTMLInputElement;\n  //   console.log('isChecked:', checkbox.checked);\n  // }\n\n  onToggleChange(event: Event) {\n    const checkbox = event.target as HTMLInputElement;\n    const newValue = checkbox.checked;\n\n    if (newValue && this.boutiqueIdSelected.length === 0) {\n      this.errorMessage = \"Veuillez sélectionner au moins une boutique avant d'ajouter des stocks.\";\n      this.showBoutiqueError = true;\n      // Annule l'activation du switch\n      setTimeout(() => {\n        this.isChecked = false;\n      }, 0);\n    } else {\n      this.isChecked = newValue;\n      // Efface le message si le switch est désactivé\n      if (this.errorMessage === \"Veuillez sélectionner au moins une boutique avant d'ajouter des stocks.\") {\n        this.errorMessage = '';\n      }\n    }\n  }\n  \n  onFileSelected(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    if (input.files && input.files.length > 0) {\n      const file = input.files[0];\n  \n      // Vérification du format du fichier\n      const allowedFormats = ['image/jpeg', 'image/png', 'image/jpg'];\n      if (!allowedFormats.includes(file.type)) {\n        this.errorMessage = 'Le fichier doit être une image (JPG, PNG)';\n        return;\n      }\n      this.selectedFile = file;\n      this.imageFile = file;\n  \n      // Tester la compression\n      this.testImageCompression(file);\n\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        this.newPhotoUrl = e.target?.result as string;\n      };\n      reader.readAsDataURL(this.selectedFile);\n    }\n  }\n  \n  setupFormSubscriptions() {\n    const token = this.usersService.getValidAccessToken(); // ou via un service d'authentification\n    if (token) {\n      this.categorieService.getCategories().subscribe(\n        (categories) => {\n          console.log('Catégories reçues depuis l\\'API :', categories); // Debug ici\n          this.options = categories;\n          this.filteredOptions = this.myControl.valueChanges.pipe(\n            startWith<string | Categorie>(''),\n            // map(value => (typeof value === 'string' ? value : value.nom)),\n            map(value => (value ? (typeof value === 'string' ? value : value.nom) : '')),\n            map(name => (name ? this._filter(name) : this.options.slice()))\n          );\n        },\n        (error) => {\n          console.error('Erreur lors de la récupération des catégories :', error);\n        }\n      );\n    } else {\n      console.error('Aucun token trouvé !');\n    }\n    // 🟢 Filtrage des unité de mesure (OK)\n    if (token) {\n      this.uniteMesureService.getUniteMesure().subscribe(\n        (uniteMesures) => {\n          console.log('Unité de mesure reçues depuis l\\'API :', uniteMesures); // Debug ici\n          this.optionsUnite = uniteMesures;\n          this.filteredNomUnite = this.uniteControl.valueChanges.pipe(\n            startWith<string | UniteMesure>(''),\n            // map(value => (typeof value === 'string' ? value : value.nom)),\n            map(value => (value ? (typeof value === 'string' ? value : value.nom) : '')),\n            map(name => (name ? this._filterUnite(name) : this.optionsUnite.slice()))\n          );\n        },\n        (error) => {\n          console.error('Erreur lors de la récupération des catégories :', error);\n        }\n      );\n    } else {\n      console.error('Aucun token trouvé !');\n    }\n  }\n\n  loadInitialData() {\n    this.ajouteProduitForm = this.fb.group({\n      nom: ['', [Validators.required, Validators.minLength(2)]],\n      prixVente: ['', Validators.required],\n      prixAchat: [''],\n      quantite: ['0'],\n      seuilAlert: ['0'],\n      description: [''],\n      codeBare: ['', [Validators.minLength(8), Validators.maxLength(13)]],\n      categorieId: [''],\n      uniteId: [''],\n      datePreemption: [''],\n      typeProduit: ['PHYSIQUE', Validators.required]\n    });\n\n    this.ajouteCategoryForm = this.fb.group({\n      categoryName: ['', [/*Validators.required,*/ Validators.minLength(3), Validators.maxLength(20)]]\n    });\n\n    // Formulaire pour ajouter une unite\n    this.ajouteUniteForm = this.fb.group({\n      unityName: ['', [ Validators.minLength(2), Validators.maxLength(20)]]\n    });\n\n    // Abonnement pour mettre à jour l'image par défaut en fonction du nom du produit\n    this.ajouteProduitForm.get('nom')?.valueChanges.subscribe(name => {\n      // Si aucun fichier n'a été sélectionné manuellement\n      // ou si le fichier actuel est le fichier généré par défaut (nommé 'default.svg')\n      if (!this.selectedFile || (this.selectedFile && this.selectedFile.name === 'default.svg')) {\n        if (name && name.trim().length > 0) {\n          this.newPhotoUrl = this.generateImageFromLetter(name.trim()[0]);\n          this.selectedFile = this.dataURLtoFile(this.newPhotoUrl, 'default.svg');\n          this.imageFile = this.selectedFile;\n        } else {\n          // Si le champ est vide, affichez l'image par défaut\n          this.newPhotoUrl = this.urllink;\n        }\n      }\n    });\n    // Remplacer l'abonnement existant par :\n    this.ajouteProduitForm.get('codeBare')?.valueChanges.subscribe(value => {\n      this.showBarcode = value && value.length >= 3;\n    });\n  }\n\n  setupAutocompleteFilters() {\n    // À chaque changement de valeur dans le champ \"categoryName\", on réinitialise l'erreur\n    this.ajouteCategoryForm.get('categoryName')?.valueChanges.subscribe(() => {\n      this.errorMessageCategory = '';\n      this.messageAPI = '';\n      this.apiMessageType = '';\n    });\n\n    // À chaque changement de valeur dans le champ \"uniteName\", on réinitialise l'erreur\n    this.ajouteUniteForm.get('unityName')?.valueChanges.subscribe(() => {\n      this.errorMessageUnity = '';\n      this.messageAPI = '';\n      this.apiMessageType = '';\n    });\n  }\n  \n  ngOnInit(): void  {\n    this.initForm();\n    this.getBoutiqueName();\n    this.setupFormSubscriptions();\n    this.loadInitialData();\n    this.setupAutocompleteFilters();\n    this.getFilteredStreetsBoutique();\n    this.getBoutiqueName();\n\n    document.addEventListener('click', (event) => {\n      const target = event.target as HTMLElement;\n      \n      // Fermer le dropdown catégorie\n      if (!target.closest('.champ_input_cate') && this.isCategoryDropdownOpen) {\n        this.closeCategoryDropdown();\n      }\n      \n      // Fermer le dropdown unité\n      if (!target.closest('.champ_input_uni') && this.isUniteDropdownOpen) {\n        this.closeUniteDropdown();\n      }\n    });\n    // Partage de donner de user\n    // this.sharedDataService.boutiqueName$.subscribe(name => {\n    //   console.log(\"AddProduitComponent - Nom boutique récupéré :\", name);\n    //   this.boutiqueName = name;\n    // });\n    // 🟢 Filtrage des catégories (OK)\n    \n    // Abonnement pour récupérer l'ID de la boutique active\n    // this.sharedDataService.boutiqueId$.subscribe(id => {\n    //   this.boutiqueId = id;\n    // });\n  }\n\n  generateImageFromLetter(letter: string): string {\n    // Génération d'un SVG affichant la première lettre en majuscule\n    const svg = `\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"200\" height=\"200\">\n        <rect width=\"100%\" height=\"100%\" fill=\"#0671e4ac\"/>\n        <text x=\"50%\" y=\"50%\" dominant-baseline=\"middle\" text-anchor=\"middle\" font-size=\"100\" fill=\"#fff\">\n          ${letter.toUpperCase()}\n        </text>\n      </svg>\n    `;\n    return 'data:image/svg+xml;base64,' + btoa(svg);\n  }\n    \n  dataURLtoFile(dataurl: string, filename: string): File {\n    const arr = dataurl.split(',');\n    const mimeMatch = arr[0].match(/:(.*?);/);\n    if (!mimeMatch) {\n      throw new Error('Format de dataURL invalide');\n    }\n    const mime = mimeMatch[1];\n    const bstr = atob(arr[1]);\n    let n = bstr.length;\n    const u8arr = new Uint8Array(n);\n    while (n--) {\n      u8arr[n] = bstr.charCodeAt(n);\n    }\n    return new File([u8arr], filename, { type: mime });\n  }\n  \n  getBoutiqueName(): void {\n    this.usersService.getUserInfo().subscribe(\n      (userInfo) => {\n        if (userInfo && userInfo.boutiques) {\n          // this.streetsBoutique = userInfo.boutiques.map((boutique: any) => boutique.nomBoutique);\n          this.boutiquesList = userInfo.boutiques; // Stocker les objets complets\n          this.streetsBoutique = this.boutiquesList.map(b => b.nomBoutique);\n          this.getFilteredStreetsBoutique();\n        } else {\n          console.error('Aucune boutique trouvée pour cet utilisateur');\n          this.boutiqueName = 'Aucune boutique';\n        }\n      },\n      (error) => {\n        console.error('Erreur lors de la récupération des informations utilisateur', error);\n      }\n    );\n  }\n    \n  // Méthode pour la sélection d'une catégorie\n  onCategorySelected(event: any): void {\n    console.log('Option sélectionnée :', event.option.value);\n    if (event.option && event.option.value) {\n      this.ajouteProduitForm.get('categorieId')?.setValue(event.option.value.id);\n    } else {\n      this.ajouteProduitForm.get('categorieId')?.setValue(null);\n    }\n  }\n\n  onUniteSelected(event: any): void {\n    console.log('Unité sélectionnée :', event.option.value);\n    if (event.option && event.option.value) {\n      this.ajouteProduitForm.get('uniteId')?.setValue(event.option.value.id);\n    } else {\n      this.ajouteProduitForm.get('uniteId')?.setValue(null);\n    }\n  }\n\n  // Pour categorie \n  private _filter(name: string): Categorie[] {\n    const filterValue = name.toLowerCase();\n    return this.options.filter(option => option.nom.toLowerCase().includes(filterValue));\n  }\n  \n  displayFn(category?: Categorie): string {\n    return category ? category.nom : '';\n  }\n  \n  // Pour unite\n  private _filterUnite(name: string): UniteMesure[] {\n    const filterValue = name.toLowerCase();\n    return this.optionsUnite.filter(optionNomUnite => \n      optionNomUnite.nom.toLowerCase().includes(filterValue)\n    );\n  }\n  \n  displayFnUnite(unityMesure?: UniteMesure): string {\n    return unityMesure ? unityMesure.nom : '';\n  }\n  \n  // Lorsque l'utilisateur clique sur \"Créer\" pour une catégorie\n  onCreateCategoryClick() { this.openPopupCategory(); }\n\n  // Lorsque l'utilisateur clique sur \"Créer\" pour une unité\n  onCreateUniteClick() { this.openPopupUnit(); }\n\n  // Méthodes pour annuler la création\n  cancelCategoryCreation() { this.showCategoryCreation = false; }\n\n  cancelUniteCreation() { this.showUniteCreation = false; }\n\n  submitFormCategory(): void {\n    const categoryData = { nom: this.ajouteCategoryForm.value.categoryName };\n    this.categorieService.ajouterCategorie(categoryData).subscribe({\n      next: (response: any) => {\n        console.log('Catégorie ajoutée avec succès : ', response);\n        if (response && response.id) {\n          // Réinitialiser le formulaire\n          this.ajouteCategoryForm.get('categoryName')!.setValue('');\n          this.closePopupCategory();\n          // Créer le nouvel objet catégorie\n          const newCategory: Categorie = { id: response.id, nom: categoryData.nom };\n          // Ajouter à la liste des options\n          this.options.push(newCategory);\n          this.showCategoryCreation = false;\n          // 1. Mettre à jour l'input d'autocomplete\n          this.myControl.setValue(newCategory);\n          // 2. Mettre à jour la valeur dans le formulaire principal\n          this.ajouteProduitForm.get('categorieId')?.setValue(newCategory.id);\n          // Mettre à jour les options filtrées\n          this.filteredOptions = this.myControl.valueChanges.pipe(\n            startWith(newCategory), // Pré-remplir avec la nouvelle valeur\n            map(value => (typeof value === 'string' ? value : value?.nom)),\n            map(name => (name ? this._filter(name) : this.options.slice()))\n          );\n          // Afficher message\n          this.apiMessageType = 'success';\n          this.messageAPI = response.message || \"La catégorie a été créée avec succès.\";\n        }\n      },\n      error: (error) => {\n        console.log(\"Erreur complète :\", error);\n        console.log(\"Réponse API :\", error.error);\n        let message = \"Une erreur est survenue lors de la création de la catégorie.\";\n        if (error.error) {\n          if (typeof error.error === \"object\" && error.error.error) {\n            message = error.error.error;\n          } else if (typeof error.error === \"string\") {\n            message = error.error;\n          }\n        }\n        this.apiMessageType = 'error';\n        this.messageAPI = message;\n      }\n    });\n  }\n\n  submitFormUnity(): void {\n    const unityData = { nom: this.ajouteUniteForm.value.unityName };\n    this.uniteMesureService.ajouterUnite(unityData).subscribe({\n      next: (response: any) => {\n        console.log('Unité ajouté avec succès : ', response);\n        if (response && response.id) {\n          // Réinitialiser le formulaire\n          this.ajouteUniteForm.get('unityName')!.setValue('');\n          this.closePopupUnit();\n          // Créer la nouvelle unité\n          const newUnity: UniteMesure = { \n            id: response.id, \n            nom: unityData.nom \n          };\n          this.showUniteCreation = false;\n          // Ajouter à la liste\n          this.optionsUnite.push(newUnity);\n          // Force la mise à jour du filtre\n          this.uniteControl.updateValueAndValidity();\n          // 1. Mettre à jour l'input d'autocomplete\n          this.uniteControl.setValue(newUnity);\n          // 2. Mettre à jour le formulaire principal\n          this.ajouteProduitForm.get('uniteId')?.setValue(newUnity.id);\n          // 3. Mettre à jour les options filtrées\n          // Corriger la structure du pipe RxJS\n          // Corriger la structure du pipe RxJS\n          this.filteredNomUnite = this.uniteControl.valueChanges.pipe(\n            startWith(newUnity),\n            map(value => typeof value === 'string' ? value : value?.nom),\n            map((name: string) => name ? this._filterUnite(name) : this.optionsUnite.slice())\n          );\n          // Afficher message\n          this.apiMessageType = 'success';\n          this.messageAPI = response.message || \"L'unité a été créée avec succès.\";\n        }\n      },\n      error: (error) => {\n        console.log(\"Erreur complète :\", error);\n        console.log(\"Réponse API :\", error.error);\n        let message = \"Une erreur est survenue lors de la création de l'unité.\";\n  \n        if (error.error) {\n          if (typeof error.error === \"object\" && error.error.error) {\n            message = error.error.error;\n          } else if (typeof error.error === \"string\") {\n            message = error.error;\n          }\n        }\n  \n        this.apiMessageType = 'error';\n        this.messageAPI = message;\n      }\n    });\n  }\n\n  async onSubmit() {\n\n    if (this.ajouteProduitForm.value.prixAchat === '') {\n      this.ajouteProduitForm.patchValue({ prixAchat: null });\n    }\n    \n    if (this.ajouteProduitForm.invalid) {\n      this.errorMessage = \"Veuillez vérifier les informations saisies.\";\n      return;\n    }\n    this.isSending = true;\n    const produit = this.ajouteProduitForm.value;\n    const tokenStored = localStorage.getItem('accessToken');\n    if (!tokenStored) {\n      this.showPopupMessage({\n        title: 'Erreur',\n        message: 'Aucun token trouvé !',\n        image: 'assets/img/error.png',\n        type: 'error'\n      });\n      this.isSending = false;\n      return;\n    }\n\n    const addToStock = this.isChecked;\n    const datePreemption = this.ajouteProduitForm.get('datePreemption')?.value;\n\n    try {\n      let finalImage: File;\n      if (this.imageFile && this.imageFile.name !== 'default.svg') {\n        const options = {\n          maxSizeMB: 1,\n          maxWidthOrHeight: 1000,\n          useWebWorker: true,\n        };\n        const compressedFile = await imageCompression(this.imageFile, options);\n        if (compressedFile.type !== 'image/png' && compressedFile.type !== 'image/jpeg') {\n          this.errorMessage = 'Le fichier compressé n\\'est pas un format valide (PNG ou JPEG).';\n          this.isSending = false;\n          return;\n        }\n        const extension = compressedFile.type === 'image/png' ? '.png' : '.jpeg';\n        finalImage = new File([compressedFile], this.imageFile.name.replace(/\\..+$/, extension), {\n          type: compressedFile.type,\n          lastModified: Date.now()\n        });\n      } else {\n        const productName = produit.nom.trim()[0];\n        finalImage = this.dataURLtoFile(this.generateImageFromLetter(productName), 'default.svg');\n      }\n\n      if (this.boutiqueIdSelected.length === 0) {\n        this.errorMessage = \"Veuillez sélectionner au moins une boutique.\";\n        this.isSending = false;\n        return;\n      }\n\n      const quantitesSelected = this.boutiqueIdSelected.map(id => Number(this.quantitesMap[id]) || 0);\n      const seuilsSelected = this.boutiqueIdSelected.map(id => Number(this.seuilsMap[id]) || 0);\n\n      this.produitService\n        .ajouterProduit(\n          this.boutiqueIdSelected,\n          quantitesSelected,\n          seuilsSelected,\n          produit,\n          finalImage,\n          addToStock,\n          datePreemption,\n        )\n        .subscribe({\n          next: (produits: Produit[]) => {\n            const newProduit = produits[0];\n            if (newProduit) {\n              const updatedProduit: Produit = {\n                id: newProduit.id,\n                nom: produit.nom,\n                description: produit.description || '', // Valeur par défaut si undefined\n                prixVente: produit.prixVente,\n                prixAchat: produit.prixAchat,\n                datePreemption: produit.datePreemption,\n                categorieId: produit.categorieId,\n                uniteId: produit.uniteId,\n                typeProduit: produit.typeProduit,\n                codeBare: produit.codeBare || '', // Valeur par défaut si undefined\n                codeGenerique: newProduit.codeGenerique || '', // Valeur par défaut si undefined\n                quantite: quantitesSelected[0] || 0, // Valeur par défaut si undefined\n                seuilAlert: seuilsSelected[0] || 0, // Valeur par défaut si undefined\n                photo: newProduit.photo || '', // Valeur par défaut si undefined\n                enStock: addToStock,\n                boutiqueId: this.boutiqueIdSelected?.length > 0 ? this.boutiqueIdSelected[0] : null // Ajout de boutiqueId\n              };\n\n              this.resetForm();\n\n              this.ajouteProduitForm.reset();\n              this.myControl.reset();\n              this.uniteControl.reset();\n              this.imageFile = null;\n              this.selectedFile = null;\n              this.newPhotoUrl = null;\n              this.isSending = false;\n\n\n              this.produitAjoute.emit(updatedProduit);\n              this.close.emit();\n            } else {\n              console.error('Aucun produit retourné par l\\'API');\n              this.isSending = false;\n            }\n          },\n          error: (error: any) => {\n            let message: string;\n\n            if (error.status === 409) {\n              // Si le back-end renvoie un 409, c'est un doublon\n              message = 'Un produit portant ce nom existe déjà.';\n            } else if (error.error && typeof error.error === 'string') {\n              // Si le back-end renvoie un message d’erreur au format texte\n              message = error.error;\n            } else if (error.error && error.error.message) {\n              // Si le back-end renvoie un objet { message: string }\n              message = error.error.message;\n            } else {\n              // Cas général\n              message = 'Une erreur est survenue lors de la création du produit.';\n            }\n\n            // Affichage du popup d’erreur\n            this.errorMessage = \"Un produit portant ce nom existe déjà.\";\n            this.isSending = false;\n          }\n        });\n    } catch (error) {\n      console.error('Erreur lors de la compression:', error);\n      this.errorMessage = 'Erreur lors de la compression de l\\'image';\n      this.isSending = false;\n    }\n  }\n\n  // async onSubmit() {\n  \n  //     this.formSubmitted = true; // Active le mode \"soumis\"\n  //     this.showBoutiqueError = false; \n  \n  //     // Vérifiez d'abord les boutiques avant le formulaire\n  //     if (this.boutiqueIdSelected.length === 0) {\n  //       this.showBoutiqueError = true;\n  //       this.errorMessage = \"Veuillez sélectionner au moins une boutique.\";\n  //       return;\n  //     }\n  \n  //     if (this.ajouteProduitForm.invalid) {\n  //       this.errorMessage = \"Veuillez vérifier les informations saisies.\";\n  //       return;\n  //     }\n  //     this.isLoading = true;\n  //     const produit = this.ajouteProduitForm.value;\n  \n  //     // Si le prix d'achat n'est pas fourni, mettez-le à null ou 0\n  //     if (produit.prixAchat === '' || produit.prixAchat === null) {\n  //       produit.prixAchat = null; // ou 0 selon vos besoins\n  //     }\n  \n  //     console.log('Produit soumis:', produit);\n  //     const tokenStored = localStorage.getItem('accessToken');\n  //     if (!tokenStored) {\n  //       this.showPopupMessage({\n  //         title: 'Erreur',\n  //         message: 'Aucun token trouvé !',\n  //         image: 'assets/img/error.png',\n  //         type: 'error'\n  //       });\n  //       this.isLoading = false;\n  //       return;\n  //     }\n  //     // const token = `Bearer ${tokenStored}`;\n  //     const addToStock = this.isChecked;\n  //     try {\n  //       let finalImage: File;\n  //       // Si une image a été sélectionnée\n  //       if (this.imageFile && this.imageFile.name !== 'default.svg') {\n  //         console.log('Compression de l\\'image en cours...');\n  //         // Options de compression\n  //         const options = {\n  //           maxSizeMB: 1,\n  //           maxWidthOrHeight: 1000,\n  //           useWebWorker: true,\n  //         };\n  //         const compressedFile = await imageCompression(this.imageFile, options);\n  //         console.log('Taille après compression:', compressedFile.size / 1024, 'Ko');\n  //         // Vérification du type MIME du fichier compressé\n  //         if (compressedFile.type !== 'image/png' && compressedFile.type !== 'image/jpeg') {\n  //           this.errorMessage = 'Le fichier compressé n\\'est pas un format valide (PNG ou JPEG).';\n  //           this.isLoading = false;\n  //           return;\n  //         }\n  //         // Changer le nom du fichier en fonction du type MIME\n  //         const extension = compressedFile.type === 'image/png' ? '.png' : '.jpeg';\n  //         finalImage = new File([compressedFile], this.imageFile.name.replace(/\\..+$/, extension), {\n  //           type: compressedFile.type, // Forcer le type MIME à PNG ou JPEG\n  //           lastModified: Date.now()\n  //         });\n  //         console.log('Final Image:', finalImage);\n  //       } else {\n  //         // Si aucune image n'a été sélectionnée, utiliser l'image SVG générée\n  //         const productName = produit.nom.trim()[0]; // Récupérer la première lettre du nom du produit\n  //         finalImage = this.dataURLtoFile(this.generateImageFromLetter(productName), 'default.svg');\n  //         console.log('Image par défaut utilisée:', finalImage);\n  //       }\n  //       const quantitesSelected = this.boutiqueIdSelected.map(id => Number(this.quantitesMap[id]) || 0);\n  //       const seuilsSelected = this.boutiqueIdSelected.map(id => Number(this.seuilsMap[id]) || 0);\n  //       this.produitService\n  //         .ajouterProduit(\n  //             this.boutiqueIdSelected, \n  //             quantitesSelected, \n  //             seuilsSelected,\n  //             produit, \n  //             finalImage, \n  //             addToStock\n  //         ).subscribe({\n  //           next: data => {\n  //             this.showPopupMessage({\n  //               title: 'Succès',\n  //               message: 'Produit créé avec succès',\n  //               image: 'assets/img/succcccc.png',\n  //               type: 'success',\n  //             });\n  //             this.ajouteProduitForm.reset();\n  //             this.myControl.reset();\n  //             this.uniteControl.reset();\n  //             this.imageFile = null;\n  //             this.selectedFile = null;\n  //             this.newPhotoUrl = null;\n  //             this.isLoading = false;\n  //             this.router.navigate(['/produit']);\n  //           },\n  //           error: error => {\n  //             let errorMessage = 'Erreur lors de la création du produit';\n  //             if (error.error) {\n  //               if (typeof error.error === 'object' && error.error.error) {\n  //                 errorMessage = error.error.error;\n  //               } else if (typeof error.error === 'string') {\n  //                 errorMessage = error.error;\n  //               }\n  //             }\n  //             errorMessage = errorMessage.replace('Une erreur est survenue : ', '');\n  //             this.showPopupMessage({\n  //               title: 'Erreur',\n  //               message: errorMessage,\n  //               image: 'assets/img/error.png',\n  //               type: 'error'\n  //             });\n  //             this.isLoading = false;\n  //           }\n  //         });\n  //     } catch (error) {\n  //       console.error('Erreur lors de la compression:', error);\n  //       this.errorMessage = 'Erreur lors de la compression de l\\'image';\n  //       this.isLoading = false;\n  //     }\n  //   }\n\n  // Options de configuration pour le code barre\n  \n  // Modifiez onCodeBarChange() :\n  onCodeBarChange(): void {\n    const codeBareValue = this.ajouteProduitForm.get('codeBare')?.value || '';\n    this.showBarcode = codeBareValue.length >= 1;\n  }\n\n  validateNumericInput(event: KeyboardEvent): void {\n    const charCode = event.which ? event.which : event.keyCode;\n    if (charCode < 48 || charCode > 57) {\n      event.preventDefault(); \n    }\n  }\n\n  getFilteredStreetsBoutique() {\n    this.filteredStreetsBoutique = this.controlBoutique.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filterBoutique(value || ''))\n    );\n  }\n  \n  private _filterBoutique(value: string): string[] {\n      const filterValue = this._normalizeValue(value);\n      return this.boutiquesList\n          .filter(b => this._normalizeValue(b.nomBoutique).includes(filterValue))\n          .map(b => b.nomBoutique);\n  }\n  \n  private _normalizeValue(value: string): string {\n    return value.toLowerCase().replace(/\\s/g, '');\n  }\n  \n  onFocusBoutiqueInput(): void {\n    this.controlBoutique.setValue(''); // Réinitialise la valeur pour afficher toutes les options\n  }\n\n  initForm() {\n    this.boutiqueForm = this.fb.group({\n      nomBoutique: ['', Validators.required],\n      emailBoutique: ['', [Validators.email, Validators.pattern(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/)]],\n      adresseBoutique: [''],\n      telephoneBoutique: ['', Validators.pattern(/^\\d{8,15}$/)],\n    });\n  }\n  \n  updatePhoneValidator(longueur: number): void {\n    this.boutiqueForm.controls['phone'].setValidators([\n      Validators.required,\n      Validators.pattern(`^\\\\+\\\\d{1,3}\\\\s?\\\\d{${longueur}}$`)\n    ]);\n    this.boutiqueForm.controls['phone'].updateValueAndValidity();\n  }\n     \n  openPopupBoutique() { this.showPopupBoutique = true; }\n\n  closePopupBoutique() { this.showPopupBoutique = false; this.resetForm(); }\n\n  // private resetForm() {\n  //   this.boutiqueForm.patchValue({\n  //     nomBoutique: '',\n  //     emailBoutique: '',\n  //     adresseBoutique: '',\n  //     telephoneBoutique: ''\n  //   });\n  //   this.boutiqueForm.markAsPristine();\n  //   this.boutiqueForm.markAsUntouched();\n  //   this.boutiqueForm.updateValueAndValidity();\n  // }\n\n  // Ajoutez cette méthode\n  resetForm(): void {\n    this.ajouteProduitForm.reset({\n      typeProduit: 'PHYSIQUE' // Réinitialisez à la valeur par défaut\n    });\n    \n    this.myControl.reset();\n    this.uniteControl.reset();\n    this.imageFile = null;\n    this.selectedFile = null;\n    this.newPhotoUrl = this.urllink; // Réinitialise à l'image par défaut\n    this.isChecked = false;\n    this.boutiqueIdSelected = [];\n    this.quantitesMap = {};\n    this.seuilsMap = {};\n    this.controlBoutique.reset();\n    this.showBoutiqueSelectionPanel = false;\n    this.selectedBoutiques = [];\n    this.errorMessage = '';\n  }\n\n  onBoutiqueSelected(event: any): void {\n    const selectedName = event.option.value;\n    const selectedBoutique = this.boutiquesList.find(b => b.nomBoutique === selectedName);\n    // Ajouter au tableau au lieu d'assigner une valeur unique\n    if (selectedBoutique) {\n        this.boutiqueIdSelected = [selectedBoutique.id]; // Tableau avec un seul élément\n    } else {\n        this.boutiqueIdSelected = []; // Tableau vide\n    }\n  }\n\n  onSubmitBoutique(): void {\n    // Marquer les champs comme touchés pour afficher les erreurs\n    Object.keys(this.boutiqueForm.controls).forEach(field => {\n      const control = this.boutiqueForm.get(field);\n      control?.markAsTouched({ onlySelf: true });\n    });\n  \n    if (this.boutiqueForm.invalid) {\n      return;\n    }\n  \n    const formData = this.boutiqueForm.value;\n    \n    this.usersService.addBoutique(formData).subscribe({\n      next: (response) => {\n        this.showPopupMessage({\n          title: 'Succès',\n          message: 'Boutique créée avec succès',\n          image: 'assets/img/succcccc.png',\n          type: 'success'\n        });\n        this.closePopupBoutique();\n        this.getBoutiqueName(); // Rafraîchir la liste\n        this.boutiqueForm.reset();\n      },\n      error: (error) => {\n        let errorMessage = 'Erreur lors de la création de la boutique';\n        if (error.error) {\n          errorMessage = typeof error.error === 'string' ? error.error : error.error.message;\n        }\n        this.showPopupMessage({\n          title: 'Erreur',\n          message: errorMessage,\n          image: 'assets/img/error.png',\n          type: 'error'\n        });\n      }\n    });\n  }\n\n  displayFnBoutique(boutique?: string): string {\n    return boutique ? boutique : '';\n  }\n\n  toggleBoutiqueSelectionPanel(): void {\n    this.showBoutiqueSelectionPanel = !this.showBoutiqueSelectionPanel;\n  }\n\n  // Sélectionne ou désélectionne toutes les boutiques\n  toggleSelectAllBoutiques(event: Event): void {\n    const isChecked = (event.target as HTMLInputElement).checked;\n    this.boutiquesList.forEach(b => b.selected = isChecked);\n    this.updateSelectedBoutiques();\n  }\n  \n  updateSelectedBoutiques(): void {\n    this.selectedBoutiques = this.boutiquesList.filter(b => b.selected);\n  }\n\n  // confirmBoutiqueSelection(): void {\n  //   this.selectedBoutiques = this.boutiquesList.filter(b => b.selected);\n  //   this.boutiqueIdSelected = this.selectedBoutiques.map(b => b.id);\n  //   const selectedNames = this.selectedBoutiques.map(b => b.nomBoutique);\n  //   this.controlBoutique.setValue(selectedNames.join(', '));\n  //   this.toggleBoutiqueSelectionPanel();\n  // }\n\n  confirmBoutiqueSelection(): void {\n    this.selectedBoutiques = this.boutiquesList.filter(b => b.selected);\n    this.boutiqueIdSelected = this.selectedBoutiques.map(b => b.id);\n    const selectedNames = this.selectedBoutiques.map(b => b.nomBoutique);\n    this.controlBoutique.setValue(selectedNames.join(', '));\n    this.toggleBoutiqueSelectionPanel();\n    \n    // Réinitialisez l'erreur boutique\n    if (this.boutiqueIdSelected.length > 0) {\n      this.showBoutiqueError = false;\n      if (this.errorMessage === \"Veuillez sélectionner au moins une boutique.\") {\n        this.errorMessage = '';\n      }\n    }\n  }\n\n  // Vérifie si toutes les boutiques sont sélectionnées\n  areAllBoutiquesSelected(): boolean {\n    return this.boutiquesList.length > 0 && \n          this.boutiquesList.every(b => b.selected);\n  }\n\n  // Ajouter cette méthode\n  formatPrixVente() {\n    const rawValue = this.ajouteProduitForm.get('prixVente')?.value;\n    if (rawValue !== null && rawValue !== undefined && !isNaN(rawValue)) {\n        const formattedValue = new Intl.NumberFormat('fr-FR').format(rawValue);\n        this.formattedPrixVente = `${formattedValue} FCFA`;\n    } else {\n        this.formattedPrixVente = '';\n    }\n  }\n\n  formatCoutProduit() {\n      const rawValue = this.ajouteProduitForm.get('prixAchat')?.value; // <-- Correction ici\n      if (rawValue !== null && rawValue !== undefined && !isNaN(rawValue)) {\n          const formattedValue = new Intl.NumberFormat('fr-FR').format(rawValue);\n          this.formattedCoutProduit = `${formattedValue} FCFA`;\n      } else {\n          this.formattedCoutProduit = '';\n      }\n  }\n\n  closeForm(): void {\n    this.close.emit();\n  }\n\n  // Méthode utilitaire pour marquer tous les champs comme touchés\n  private markFormGroupTouched(formGroup: FormGroup) {\n    Object.values(formGroup.controls).forEach(control => {\n      control.markAsTouched();\n      \n      if (control instanceof FormGroup) {\n        this.markFormGroupTouched(control);\n      }\n    });\n  }\n\n  gotToReturn() {\n    this.router.navigate(['/addfacture-proforma']);\n  }\n\n  toggleUniteDropdown(event?: MouseEvent): void {\n    if (event) event.stopPropagation();\n    if (this.uniteAutocompleteTrigger) {\n      this.uniteAutocompleteTrigger.openPanel();\n    }\n  }\n\n  closeUniteDropdown(): void {\n    if (this.uniteAutocompleteTrigger) {\n      this.uniteAutocompleteTrigger.closePanel();\n      this.isUniteDropdownOpen = false;\n    }\n  }\n\n  toggleCategoryDropdown(event?: MouseEvent): void {\n     if (event) event.stopPropagation();\n    if (this.categoryAutocompleteTrigger) {\n      this.categoryAutocompleteTrigger.openPanel();\n    }\n  }\n\n  closeCategoryDropdown(): void {\n    if (this.categoryAutocompleteTrigger) {\n      this.categoryAutocompleteTrigger.closePanel();\n      this.isCategoryDropdownOpen = false;\n    }\n  }\n\n}\n","<div class=\"container_global\">\n  <div *ngIf=\"isLoading\" class=\"loading-overlay\">\n    <div class=\"loading-content\">\n      <div class=\"spinner\"></div>\n      <p>Connexion en cours...</p>\n    </div>\n  </div>\n  \n\n  <div class=\"content_formulaire\">\n\n    <div class=\"modal-body\">\n\n      <form class=\"container_formulaire\" [formGroup]=\"ajouteProduitForm\">\n\n        <!-- Icon return  -->\n        <!-- <p class=\"retour_icon_text\" (click)=\"navigateBack()\" style=\"cursor: pointer; color: #0672E4; margin-bottom: 15px;\" title=\"Retour sur la page produit\">\n            <i class=\"ri-arrow-left-s-line\"></i> <span style=\"margin-left: 8px; font-size: 12px;\">Produit</span>\n        </p> -->\n\n        <!-- Titre d'ajout de produits  -->\n        <div class=\"Title\">\n          <h3>Ajouter des produits</h3>\n        </div>\n\n        <div class=\"form_left_right\">\n\n          <!-- Formular ajouter produit  -->\n          <div class=\"formulaire\">\n            \n            <!-- Les information des magasin  -->\n            <div class=\"information_cadre\">\n              <div class=\"info_titre_input\">\n                <h4>Boutique</h4>\n                <!-- Input de nom magasin  -->\n                <!-- <div class=\"champ_input\">\n                  <input type=\"text\" class=\"input_focus input_focus_petit\" [value]=\"boutiqueName\" disabled required id=\"nomMagasin\" name=\"nomMagasin\" placeholder=\"Saisis le nom de magasin\">\n                  <label for=\"nomMagasin\" class=\"label labelColor\">Nom magasin</label>\n                </div> -->\n                <div class=\"double_input2\">\n                  <div class=\"champ_input\" [class.invalid-field]=\"showBoutiqueError\">\n                    <input autocomplete=\"off\" \n                           type=\"text\" \n                           placeholder=\"Sélectionner vos boutiques\"\n                           class=\"input_focus\" \n                           matInput \n                           [formControl]=\"controlBoutique\" \n                           (click)=\"toggleBoutiqueSelectionPanel()\"\n                           style=\"cursor: pointer;\">\n                    <label for=\"boutiqueId\" class=\"label\">Sélectionner vos boutiques</label>\n                  \n                    <!-- Commenté pour désactiver l'autocomplete -->\n                    <!--\n                    <mat-autocomplete #autoBoutique=\"matAutocomplete\" \n                                     (optionSelected)=\"onBoutiqueSelected($event)\" \n                                     [displayWith]=\"displayFnBoutique\">\n                      <mat-option (click)=\"toggleBoutiqueSelectionPanel()\" class=\"select-option\">\n                        <div style=\"display: flex; align-items: center; color: #0672E4;\">\n                          <i class=\"ri-checkbox-multiple-line\"></i>\n                          <span style=\"margin-left: 8px;\">Sélectionner des boutiques</span>\n                        </div>\n                      </mat-option>\n                      \n                      <mat-option *ngFor=\"let street of filteredStreetsBoutique | async\" [value]=\"street\">\n                        {{ street }}\n                      </mat-option>\n                    </mat-autocomplete>\n                    -->\n                  \n                    <!-- Panel de sélection des boutiques -->\n                    <!-- <div class=\"boutique-selection-panel\" *ngIf=\"showBoutiqueSelectionPanel\">\n                      <div class=\"panel-header\">\n                        <h4>Sélectionner des boutiques</h4>\n                        <button class=\"close-btn\" (click)=\"toggleBoutiqueSelectionPanel()\">&times;</button>\n                      </div>\n                      <div class=\"panel-body\">\n                        <div *ngFor=\"let boutique of boutiquesList\" class=\"boutique-item\">\n                          <label>\n                            <input type=\"checkbox\" \n                                   [(ngModel)]=\"boutique.selected\"\n                                   (change)=\"updateSelectedBoutiques()\"\n                                   [ngModelOptions]=\"{standalone: true}\">\n                            {{ boutique.nomBoutique }}\n                          </label>\n                        </div>\n                      </div>\n                      <div class=\"panel-footer\">\n                        <button class=\"btn-confirm\" (click)=\"confirmBoutiqueSelection()\">Confirmer</button>\n                      </div>\n                    </div> -->\n                    <div class=\"boutique-selection-panel\" *ngIf=\"showBoutiqueSelectionPanel\">\n                      <div class=\"panel-header\">\n                        <h4>Sélectionner des boutiques</h4>\n                        <button class=\"close-btn\" (click)=\"toggleBoutiqueSelectionPanel()\">&times;</button>\n                      </div>\n                      <div class=\"panel-body\">\n                        <!-- Ajout de la case \"Tout sélectionner\" -->\n                        <div class=\"boutique-item select-all\">\n                          <label>\n                            <input type=\"checkbox\" \n                                  [checked]=\"areAllBoutiquesSelected()\"\n                                  (change)=\"toggleSelectAllBoutiques($event)\">\n                            Sélectionner toutes les boutiques\n                          </label>\n                        </div>\n                        \n                        <div *ngFor=\"let boutique of boutiquesList\" class=\"boutique-item\">\n                          <label>\n                            <input type=\"checkbox\" \n                                  [(ngModel)]=\"boutique.selected\"\n                                  (change)=\"updateSelectedBoutiques()\"\n                                  [ngModelOptions]=\"{standalone: true}\">\n                            {{ boutique.nomBoutique }}\n                          </label>\n                        </div>\n                      </div>\n                      <div class=\"panel-footer\">\n                        <button class=\"btn-confirm\" (click)=\"confirmBoutiqueSelection()\">Confirmer</button>\n                      </div>\n                    </div>\n                  </div>\n\n                  <!-- <div class=\"btn_add_categoryDiv2\">\n                    <button class=\"btn_add_category2\" (click)=\"openPopupBoutique()\">Créer une boutique</button>\n                  </div> -->\n                </div>\n                \n              </div>\n            </div>\n            \n            <!-- Les information des produit  -->\n            <div class=\"information_cadre\">\n              <div class=\"info_titre_input\"> \n                <h4>Information des produits</h4>\n                  <div class=\"triple\">\n                    <div class=\"radio-group\">\n                      <div class=\"radio-option\">\n                        <input type=\"radio\" \n                              id=\"typePhysique\" \n                              formControlName=\"typeProduit\" \n                              value=\"PHYSIQUE\"\n                              class=\"radio-input\">\n                        <label for=\"typePhysique\" class=\"radio-label\">\n                          <span class=\"radio-custom\"></span>\n                          Produit\n                        </label>\n                      </div>\n                      \n                      <div class=\"radio-option\">\n                        <input type=\"radio\" \n                              id=\"typeService\" \n                              formControlName=\"typeProduit\" \n                              value=\"SERVICE\"\n                              class=\"radio-input\">\n                        <label for=\"typeService\" class=\"radio-label\">\n                          <span class=\"radio-custom\"></span>\n                          Service\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n\n                  \n\n                <div class=\"double_input_grid\">\n                  <!-- Input de nom produits  -->\n                  <div  class=\"champ_input\" [class.invalid-field]=\"f['nom'].invalid && (f['nom'].touched || formSubmitted)\">\n                    <input autocomplete=\"off\" formControlName=\"nom\" type=\"text\" class=\"input_focus \" required id=\"nom\" name=\"nom\" placeholder=\"Saisis le nom de produit\">\n                    <label for=\"nom\" class=\"label\">Nom produit</label>\n                    <div *ngIf=\"f['nom'].touched && f['nom'].invalid\" class=\"error-message\">\n                      <span *ngIf=\"f['nom'].errors?.['required']\">Le nom produit est vide.</span>\n                      <span *ngIf=\"f['nom'].errors?.['minlength']\">Le nom doit avoir au moins 2 caractères.</span>\n                    </div>\n                  </div>\n\n                <!-- <div class=\"double_input_grid\"> -->\n\n                  <!-- <div class=\"double_input2\">\n                    <div class=\"champ_input_cate champ_input\">\n                      <input autocomplete=\"off\" \n                            type=\"text\" \n                            placeholder=\"Saisis le nom de catégorie\"\n                            class=\"input_focus\" \n                            matInput \n                            [formControl]=\"myControl\" \n                            [matAutocomplete]=\"autoCategory\" \n                            style=\"cursor: pointer;\"\n                            (click)=\"toggleCategoryDropdown()\">\n                      <label for=\"categorieId\" class=\"label\">Catégorie</label>\n                      <mat-autocomplete #autoCategory=\"matAutocomplete\" \n                                      (optionSelected)=\"onCategorySelected($event)\" \n                                      [displayWith]=\"displayFn\"\n                                      (opened)=\"isCategoryDropdownOpen = true\"\n                                      (closed)=\"isCategoryDropdownOpen = false\"> \n                        <mat-option class=\"select-option\" (click)=\"onCreateCategoryClick()\">\n                          <div style=\"display: flex; align-items: center; color: #0672E4;\">\n                            <i class=\"ri-add-circle-fill\" style=\"font-size: 20px;\"></i>\n                            <span style=\"margin-left: 8px;\">Créer une catégorie</span>\n                          </div>\n                        </mat-option>\n\n                        <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n                          <div class=\"option-content\">\n                            {{ option.nom }}\n                          </div>\n                        </mat-option>\n                      </mat-autocomplete>\n                    </div>\n                    <div class=\"arrow_bas\" style=\"position: absolute; right: 5px; top: 20px; cursor: pointer;\">\n                      <i *ngIf=\"!isCategoryDropdownOpen\" \n                        class=\"ri-arrow-down-s-line\" \n                        style=\"font-size: 20px; z-index: 999;\"\n                        (click)=\"toggleCategoryDropdown(); $event.stopPropagation()\"></i>\n                        \n                      <i *ngIf=\"isCategoryDropdownOpen\" \n                        class=\"ri-close-line\" \n                        style=\"font-size: 20px; z-index: 999;\"\n                        (click)=\"closeCategoryDropdown(); $event.stopPropagation()\"></i>\n                    </div>\n                  </div> -->\n\n                  <!-- // -->\n                  <div class=\"double_input2\">\n                    <div class=\"champ_input_uni champ_input champ_input2\">\n                      <input autocomplete=\"off\" \n                            type=\"text\" \n                            placeholder=\"Saisis l'unité de mesure\" \n                            matInput \n                            [formControl]=\"uniteControl\" \n                            class=\"input_focus\"\n                            [matAutocomplete]=\"autoUnite\" \n                            style=\"cursor: pointer;\"\n                            (click)=\"toggleUniteDropdown($event)\"> <!-- Ajoutez ce gestionnaire de clic -->\n                      <label for=\"uniteId\" class=\"label\">Unité de mesure</label>\n                      <mat-autocomplete #autoUnite=\"matAutocomplete\" \n                                      (optionSelected)=\"onUniteSelected($event)\" \n                                      [displayWith]=\"displayFnUnite\"\n                                      (opened)=\"isUniteDropdownOpen = true\"\n                                      (closed)=\"isUniteDropdownOpen = false\"> <!-- Mettre à jour l'état -->\n                        <mat-option class=\"select-option\" (click)=\"onCreateUniteClick()\">\n                          <div style=\"display: flex; align-items: center; color: #0672E4;\">\n                            <i class=\"ri-add-circle-fill\" style=\"font-size: 20px;\"></i>\n                            <span style=\"margin-left: 8px;\">Créer une unité</span>\n                          </div>\n                        </mat-option>\n                        <mat-option *ngFor=\"let option of filteredNomUnite | async\" [value]=\"option\">\n                          <div class=\"option-content\">\n                            {{ option.nom }}\n                          </div>\n                        </mat-option>\n                      </mat-autocomplete>\n                    </div>\n                    <div class=\"arrow_bas\" style=\"position: absolute; right: 5px; top: 20px; cursor: pointer;\">\n                      <!-- Icône dynamique avec gestion de clic -->\n                      <i *ngIf=\"!isUniteDropdownOpen\" \n                        class=\"ri-arrow-down-s-line\" \n                        style=\"font-size: 20px; z-index: 999;\"\n                        (click)=\"toggleUniteDropdown(); $event.stopPropagation()\"></i>\n                        \n                      <i *ngIf=\"isUniteDropdownOpen\" \n                        class=\"ri-close-line\" \n                        style=\"font-size: 20px; z-index: 999;\"\n                        (click)=\"closeUniteDropdown(); $event.stopPropagation()\"></i>\n                    </div>\n                  </div>\n\n                </div>\n\n                <div class=\"double_input_grid\">\n                  <!-- Input de nom produits  -->\n                  <div class=\"champ_input\" [class.invalid-field]=\"f['prixVente'].invalid && (f['prixVente'].touched || formSubmitted)\">\n                    <input autocomplete=\"off\" formControlName=\"prixVente\" type=\"number\" class=\"input_focus \" required id=\"prixVente\" name=\"prixVente\" placeholder=\"Saisis le nom de magasin\" (input)=\"formatPrixVente()\">\n                    <label for=\"prixVente\" class=\"label\">Prix de vente</label>\n                    <div class=\"nombreDevise\" *ngIf=\"formattedPrixVente\">\n                      <p>{{ formattedPrixVente }}</p>\n                    </div>\n                    <div *ngIf=\"f['prixVente'].touched && f['prixVente'].invalid\" class=\"error-message\">\n                      Ce champ est obligatoire.\n                    </div>\n                  </div>\n                  \n                                  <!-- Input de prixAchat  -->\n                <div class=\"champ_input\">\n                  <input autocomplete=\"off\" \n                        formControlName=\"prixAchat\" \n                        type=\"number\" \n                        class=\"input_focus\" \n                        id=\"prixAchat\" \n                        name=\"prixAchat\" \n                        placeholder=\"Saisis le prix d'achat\" \n                        (input)=\"formatCoutProduit()\">\n                  <label for=\"prixAchat\" class=\"label\">Coût du produit (Facultatif)</label>\n                  <div class=\"nombreDevise\" *ngIf=\"formattedCoutProduit\">\n                    <p>{{ formattedCoutProduit }}</p>\n                  </div>\n                  <!-- Modifier le message d'erreur pour refléter que ce n'est plus obligatoire -->\n                   <div *ngIf=\"f['prixAchat'].touched && f['prixAchat'].invalid\" class=\"error-message divError\">\n                    <span *ngIf=\"f['prixAchat'].errors?.['min']\">Le coût ne peut pas être négatif.</span>\n                  </div>\n                  <!-- <div *ngIf=\"f['prixAchat'].touched && f['prixAchat'].invalid\" class=\"error-message divError\">\n                    <span *ngIf=\"f['prixAchat'].errors?.['min']\">Le coût ne peut pas être négatif.</span>\n                  </div> -->\n                </div>\n\n                </div>\n\n                \n              </div>\n            </div>\n            \n            <!-- Les information des produit identite  -->\n            <div class=\"information_cadre\">\n              <div class=\"info_titre_input\">\n                <h4>Identité de produit</h4>\n\n                <!--  -->\n\n                <!-- Input de produits  -->\n                <!-- <div class=\"champs_code_bare_double\">\n                  <div class=\"champ_input\">\n                    <input \n                        type=\"text\" \n                        formControlName=\"codeBare\"\n                        autocomplete=\"off\"\n                        class=\"input_focus\"\n                        id=\"codeBar\"\n                        name=\"codeBar\"\n                        placeholder=\"Numéro code barre\"\n                        inputmode=\"numeric\"\n                        pattern=\"[0-9]*\"\n                        (keypress)=\"validateNumericInput($event)\" maxlength=\"20\"> \n                    <label for=\"codeBare\" class=\"label labelColor\">Numéro code barre (Facultatif)</label>\n                    <div *ngIf=\"f['codeBare'].touched && f['codeBare'].invalid\" class=\"error-message\">\n                      <span *ngIf=\"f['codeBare'].errors?.['minlength']\">Le code barre doit avoir au moins 8 caractères.</span>\n                      <span *ngIf=\"f['codeBare'].errors?.['maxlength']\">Le code barre ne doit pas dépasser 20 caractères.</span>\n                    </div>\n                  </div>\n                \n                  <div style=\"margin-left: 15px;\" *ngIf=\"showBarcode\">\n                    <ngx-barcode6\n                      [bc-value]=\"f['codeBare'].value\"\n                      bc-format=\"CODE128\"\n                      [bc-line-color]=\"'#000000'\"\n                      [bc-width]=\"1\"\n                      [bc-height]=\"40\"\n                      [bc-font-size]=\"12\"\n                      [bc-display-value]=\"true\">\n                    </ngx-barcode6>\n                  </div>\n                </div> -->\n\n                <div class=\"champ_input\">\n                  <textarea formControlName=\"description\" class=\"input_focus2\" id=\"description\" name=\"description\" maxlength=\"150\" placeholder=\"Saisis Une description pour ce produit\"></textarea>\n                  <label for=\"description\" class=\"label labelColor\">Description (Facultatif)</label>\n                </div>\n                \n              </div>\n            </div>\n            \n            <!-- Les information des produit Inventaire  -->\n            <div class=\"information_cadre\" *ngIf=\"ajouteProduitForm.get('typeProduit')?.value === 'PHYSIQUE'\">\n              <div class=\"info_titre_input\">\n                <h4>Inventaire</h4>\n            \n                <div class=\"champ_input_inventaire\">\n                  <p>Ajouter dans les stocks</p>\n            \n                  <label class=\"switch\">\n                    <input type=\"checkbox\" [(ngModel)]=\"isChecked\" (change)=\"onToggleChange($event)\" [ngModelOptions]=\"{standalone: true}\"/>\n                    <span class=\"slider round\"></span>\n                  </label>\n                </div>\n\n            \n                <div *ngIf=\"isChecked\">\n                  <ng-container *ngFor=\"let boutique of boutiquesList\">\n                    <div *ngIf=\"boutique.selected\" class=\" double_input_grid_true\">\n                      <div class=\"champ_input champ_input2\">\n                        <!-- Quantité -->\n                        <input  [ngModel]=\"quantitesMap[boutique.id] || 0\" \n                          (ngModelChange)=\"quantitesMap[boutique.id] = $event\"  \n                          [ngModelOptions]=\"{standalone: true}\" type=\"number\" class=\"input_focus\" \n                          required placeholder=\"Saisis la quantité\">\n                        <label for=\"quantite\" class=\"label labelColor\">Quantité en stock pour {{ boutique.nomBoutique }}</label>\n                      </div>\n                \n                      <!-- Seuil d'alerte -->\n                      <div class=\"champ_input champ_input2\">\n                        <input \n                          [(ngModel)]=\"seuilsMap[boutique.id]\" \n                          [ngModelOptions]=\"{standalone: true}\" \n                          type=\"number\" \n                          class=\"input_focus\" \n                          placeholder=\"Seuil d'alerte pour {{ boutique.nomBoutique }}\">\n                        <label for=\"seuilAlert\" class=\"label labelColor\">Seuil d'alerte</label>\n                      </div>\n\n                      <!-- date de preemption -->\n                      <div class=\"champ_input\">\n                          <input \n                            type=\"date\" \n                            class=\"input_focus\" \n                            formControlName=\"datePreemption\"\n                            id=\"datePreemption\"\n                            name=\"datePreemption\">\n                          <label for=\"datePreemption\" class=\"label labelColor\">Date de préemption (Facultatif)</label>\n                      </div>\n                    </div>\n                  </ng-container>\n                </div>\n                \n              </div>\n            </div>\n            \n            \n            <!-- Les information des produit Photo  -->\n            <div class=\"information_cadre\">\n              <div class=\"info_titre_input\">\n                <h4>Ajouter une image</h4>\n\n\n                <!-- <p *ngIf=\"!errorMessage\" style=\"font-size: 12px; float: right;\">Taille : 2 Mo max</p>\n                <p *ngIf=\"errorMessage\" style=\"font-size: 12px; float: right; color: red;\">{{ errorMessage }}</p> -->\n\n                <!-- Input de produits photo -->\n                <div class=\"container_file\"> \n                  <div class=\"header_file\"> \n                    <!-- <img class=\"roudel\" [src]=\"newPhotoUrl || urllink\" alt=\"Aperçu de l'image\" style=\"max-width:200px;\"> -->\n                    <img class=\"roudel\" [src]=\"newPhotoUrl || urllink\" alt=\"Aperçu de l'image\" style=\"max-width:200px;\">\n                  </div> \n                  <button *ngIf=\"newPhotoUrl && newPhotoUrl !== urllink\" (click)=\"clearImage()\" class=\"clear-image-btn\">\n                    <i class=\"ri-delete-bin-5-line\"></i>\n                  </button>\n                  \n                  <div>\n                    <label for=\"file\" class=\"footer_file\"> \n                      <i class=\"ri-file-3-fill\"></i>\n                      <p>Choisir un fichier</p>\n                    </label> \n                    <input type=\"file\" accept=\"image/*\" id=\"file\" (change)=\"onFileSelected($event)\" hidden>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <!-- Buttom ajouter et annuler  -->\n            <div class=\"information_cadre information_cadre_save\">\n\n              <!-- Message d'erreur global -->\n              <div class=\"container_error_message\">\n                <div *ngIf=\"errorMessage\" class=\"error-message\">\n                  {{ errorMessage }}\n                </div>\n              </div>\n\n              <div class=\"info_titre_input info_titre_input_btn\">\n\n                <!-- Input de produits  -->\n                <div class=\"btn_annuler\">\n                  <button class=\"btn_cancel\" (click)=\"goToProduit()\">Annuler</button>\n                </div>\n\n                <div class=\"btn_ajouter\">\n                  <button class=\"btn_save\" (click)=\"onSubmit()\">Sauvegarder</button>\n                </div>\n                \n              </div>\n            </div>\n\n            <!-- Popup de confirmation / d'erreur -->\n            <div class=\"modal-overlay\" *ngIf=\"showPopup\">\n              <div class=\"modal-content\" [ngClass]=\"{'error': popupData.type === 'error'}\">\n                <div class=\"popup-header\">\n                  <div class=\"popup-img\">\n                      <img [src]=\"popupData.image\" alt=\"Icone\" class=\"popup-icon2\">\n                  </div>\n                  <h2>{{ popupData.title }}</h2>\n                </div>\n                <p>{{ popupData.message }}</p>\n                <button (click)=\"closePopup()\">OK</button>\n              </div>\n            </div>\n\n          </div>\n\n        </div>\n        \n      </form>\n\n    </div>\n\n    <!-- Cadre ou on cree  -->\n    \n\n</div>\n</div>\n\n <!-- Popup overlay -->\n<div class=\"popup-overlay\" *ngIf=\"showPopupBoutique\">\n  <div class=\"popup-content\">\n      <div class=\"popup-headerBoutique\">\n          <h4>Ajouter une boutique</h4>\n          <button class=\"close-btn\" (click)=\"closePopupBoutique()\">&times;</button>\n      </div>\n      <form [formGroup]=\"boutiqueForm\">\n        <div class=\"popup-body\">\n          \n          <div class=\"champ_grid\">\n            <!-- Input de nom de boutique  -->\n            <div class=\"champ_input\">\n              <input class=\"input_focus\" style=\"min-width: 150px;\" type=\"text\" formControlName=\"nomBoutique\" placeholder=\"Saisis le nom de boutique\">\n              <label class=\"label\">Nom boutque</label>\n              <div *ngIf=\"boutiqueForm.get('nomBoutique')?.invalid && boutiqueForm.get('nomBoutique')?.touched\">\n                <small class=\"error\">Ce champ est obligatoire.</small>\n              </div>\n            </div>\n\n            <!-- Input d'email'  -->\n            <div class=\"champ_input\">\n              <input class=\"input_focus\" style=\"min-width: 150px;\" type=\"email\" formControlName=\"emailBoutique\" placeholder=\"Saisis l'email\">\n              <label class=\"label\">Email</label>\n              <div *ngIf=\"boutiqueForm.get('emailBoutique')?.invalid && boutiqueForm.get('emailBoutique')?.touched\">\n                <small class=\"error\">Email invalide.</small>\n              </div>\n            </div>\n\n          </div>\n\n          <!-- Input pour pays et phone  -->\n          <div class=\"champ_grid\">\n            <!-- // Input de telephone Boutique  -->\n            <div class=\"champ_input\">\n              <input class=\"input_focus\" style=\"min-width: 150px;\" type=\"number\" formControlName=\"telephoneBoutique\" placeholder=\"00 00 00 00\">\n              <label class=\"label\">Phone</label>\n              <div *ngIf=\"boutiqueForm.get('telephoneBoutique')?.invalid && boutiqueForm.get('telephoneBoutique')?.touched\">\n                <small class=\"error\">Ce champ est obligatoire.</small>\n              </div>\n            </div>\n\n            <!-- Input Numero de téléphone  -->\n            <div class=\"champ_input\">\n                <input class=\"input_focus\" style=\"min-width: 150px;\" type=\"text\" formControlName=\"adresseBoutique\" placeholder=\"Saisis l'adresse\">\n                <label class=\"label\">Adresse boutique</label>\n            </div>\n          </div>\n\n          <div class=\"errorAPI\" *ngIf=\"messageAPI\">\n            <img [src]=\"apiMessageType === 'success' ? 'assets/img/succcccc.png' : 'assets/img/error.png'\" alt=\"Message API\">\n            <span>{{ messageAPI }}</span>\n          </div>\n\n          \n        </div>\n        <div class=\"popup-footer\">\n            <button class=\"btn-cancel\" (click)=\"closePopupBoutique()\">Annuler</button>\n            <button class=\"btn-submit\" \n                    [disabled]=\"boutiqueForm.invalid\" \n                    [style.backgroundColor]=\"boutiqueForm.valid ? '#0672E4' : '#0671e434'\"\n                    [style.color]=\"boutiqueForm.valid ? '#ffffff' : '#00000073'\"\n                    [style.cursor]=\"boutiqueForm.valid ? 'pointer' : 'no-drop'\"\n                    (click)=\"onSubmitBoutique()\">\n              Ajouter\n            </button>\n        </div>\n      </form>\n  </div>\n</div>\n\n<!-- Popup pour créer une catégorie -->\n<div class=\"popup-overlay\" *ngIf=\"showPopupCategory\">\n  <div class=\"popup-content\" style=\"max-width: 350px;\">\n    <div class=\"popup-headerBoutique\">\n      <h4>Créer une catégorie</h4>\n      <button class=\"close-btn\" (click)=\"closePopupCategory()\">&times;</button>\n    </div>\n    <form [formGroup]=\"ajouteCategoryForm\">\n      <div class=\"popup-body\">\n        <div class=\"champ_input\" style=\"margin-top: 15px;\">\n          <input autocomplete=\"off\" formControlName=\"categoryName\" type=\"text\" \n                 class=\"input_focus input_focus_cree_cate\" required id=\"categoryName\" \n                 name=\"categoryName\" placeholder=\"Saisis le nom de catégorie\">\n          <label for=\"categoryName\" class=\"label labelColor\">Nom catégorie</label>\n          <div *ngIf=\"c['categoryName'].touched && c['categoryName'].invalid\" class=\"error-message\">\n            <span *ngIf=\"c['categoryName'].errors?.['minlength']\">Le nom doit avoir au moins 3 caractères.</span>\n            <span *ngIf=\"c['categoryName'].errors?.['maxlength']\">Le nom ne doit pas dépasser 20 caractères.</span>\n          </div>\n        </div>\n\n        <div *ngIf=\"errorMessageCategory\" class=\"error-message-category\">\n          {{ errorMessageCategory }}\n        </div>\n\n        <div class=\"errorAPI\" *ngIf=\"messageAPI\">\n          <img [src]=\"apiMessageType === 'success' ? 'assets/img/succcccc.png' : 'assets/img/error.png'\" alt=\"Message API\">\n          <span>{{ messageAPI }}</span>\n        </div>\n      </div>\n      <div class=\"popup-footer\">\n        <button class=\"btn-cancel\" (click)=\"closePopupCategory()\">Annuler</button>\n        <button class=\"btn-submit\" \n                [disabled]=\"ajouteCategoryForm.invalid\" \n                [style.backgroundColor]=\"ajouteCategoryForm.valid ? '#0672E4' : '#0671e434'\"\n                (click)=\"submitFormCategory()\">\n          Ajouter\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n\n<!-- Popup pour créer une unité -->\n<div class=\"popup-overlay\" *ngIf=\"showPopupUnit\">\n  <div class=\"popup-content\" style=\"max-width: 350px;\">\n    <div class=\"popup-headerBoutique\">\n      <h4>Créer une unité</h4>\n      <button class=\"close-btn\" (click)=\"closePopupUnit()\">&times;</button>\n    </div>\n    <form [formGroup]=\"ajouteUniteForm\">\n      <div class=\"popup-body\">\n        <div class=\"champ_input\" style=\"margin-top: 15px;\">\n          <input autocomplete=\"off\" formControlName=\"unityName\" type=\"text\" \n                 class=\"input_focus input_focus_cree_cate\" required id=\"unityName\" \n                 name=\"unityName\" placeholder=\"Saisis le nom de unité\">\n          <label for=\"unityName\" class=\"label labelColor\">Nom unité</label>\n          <div *ngIf=\"u['unityName'].touched && u['unityName'].invalid\" class=\"error-message\">\n            <span *ngIf=\"u['unityName'].errors?.['minlength']\">Le nom doit avoir au moins 2 caractères.</span>\n            <span *ngIf=\"u['unityName'].errors?.['maxlength']\">Le nom ne doit pas dépasser 20 caractères.</span>\n          </div>\n        </div>\n\n        <div *ngIf=\"errorMessageUnity\" class=\"error-message-category\">\n          {{ errorMessageUnity }}\n        </div>\n\n        <div class=\"errorAPI\" *ngIf=\"messageAPI\">\n          <img [src]=\"apiMessageType === 'success' ? 'assets/img/succcccc.png' : 'assets/img/error.png'\" alt=\"Message API\">\n          <span>{{ messageAPI }}</span>\n        </div>\n      </div>\n      <div class=\"popup-footer\">\n        <button class=\"btn-cancel\" (click)=\"closePopupUnit()\">Annuler</button>\n        <button class=\"btn-submit\" \n                [disabled]=\"ajouteUniteForm.invalid\" \n                [style.backgroundColor]=\"ajouteUniteForm.valid ? '#0672E4' : '#0671e434'\"\n                (click)=\"submitFormUnity()\">\n          Ajouter\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n"],"names":["EventEmitter","FormGroup","FormControl","Validators","FormsModule","ReactiveFormsModule","imageCompression","of","BehaviorSubject","combineLatest","startWith","map","switchMap","throwError","CommonModule","MatAutocompleteModule","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","ClientFormComponent_div_17_small_1_Template","ClientFormComponent_div_17_small_2_Template","ɵɵadvance","ɵɵproperty","tmp_1_0","ctx_r0","clientForm","get","errors","tmp_2_0","ClientFormComponent_div_22_small_1_Template","nomPays_r2","ɵɵtextInterpolate2","paysIndicatifs","indicatif","pays_r3","longueur","trim","ent_r5","ɵɵtextInterpolate1","nom","ɵɵlistener","ClientFormComponent_div_61_Template_mat_autocomplete_optionSelected_6_listener","$event","ɵɵrestoreView","_r4","ɵɵnextContext","ɵɵresetView","onEntrepriseSelected","ClientFormComponent_div_61_Template_mat_option_click_8_listener","openPopup","ClientFormComponent_div_61_mat_option_13_Template","control","auto_r6","displayFnEntreprise","ɵɵpipeBind1","filteredOptions","ɵɵtextInterpolate","errorMessage","successMessage","errorMessageApi","ClientFormComponent_div_74_Template_button_click_5_listener","_r7","closePopup","ClientFormComponent_div_74_div_16_Template","ClientFormComponent_div_74_Template_select_change_32_listener","onEntreprisePaysChange","ClientFormComponent_div_74_Template_input_input_44_listener","formatEntreprisePhoneNumber","ClientFormComponent_div_74_div_52_Template","ClientFormComponent_div_74_Template_button_click_54_listener","ClientFormComponent_div_74_Template_button_click_56_listener","ajouterEntreprise","entrepriseForm","invalid","touched","ɵɵstyleProp","valid","ClientFormComponent_div_75_Template_button_click_2_listener","_r8","resetForm","ClientFormComponent","constructor","router","fb","entrepriseService","clientService","usersService","clientAjoute","close","isEntrepriseSelected","showPopup","urllink","newPhotoUrl","selectedFile","imageFile","loading","optionsEntreprise$","entrepriseRequiredError","isLoading","maxPhoneLength","entrepriseIndicatif","entrepriseMaxPhoneLength","paysKeys","Object","keys","onPaysChange","event","paysSelectionne","target","value","paysInfo","length","startsWith","setValue","updatePhoneValidator","regex","RegExp","controls","setValidators","required","pattern","updateValueAndValidity","formatPhoneNumber","valeur","chiffres","replace","numeroFormate","slice","testImageCompression","file","_this","_asyncToGenerator","console","log","size","options","maxSizeMB","maxWidthOrHeight","useWebWorker","compressedFile","type","error","reader","FileReader","onload","e","result","readAsDataURL","onFileSelected","input","files","allowedFormats","includes","goToStock","navigate","ngOnInit","getListEntreprise","initEntreprise","getClientForm","loadEntreprises","group","nomComplet","minLength","email","telephone","adresse","poste","pays","ville","updateEntreprisePhoneValidator","token","localStorage","getItem","subscribe","list","next","setupAutocomplete","err","valueChanges","pipe","name","entreprises","_filter","getValidAccessToken","Error","filterValue","toLowerCase","filter","reset","siege","secteur","newEntreprise","logo","nif","nina","banque","rccm","siteWeb","signataire","signataireNom","prefixe","suffixe","tauxTva","signaturNum","cachetNum","addEntreprise","createdEntreprise","current","message","ajouterClient","entrepriseSelectionnee","id","client","selected","entrepriseClient","addClient","response","clientIdNum","parseInt","clientId","isNaN","newClient","photo","emit","closeForm","goToClients","markFormGroupTouched","formGroup","values","forEach","markAsTouched","ɵɵdirectiveInject","i1","Router","i2","FormBuilder","i3","EntrepriseService","i4","ClientService","i5","UsersService","selectors","outputs","decls","vars","consts","template","ClientFormComponent_Template","rf","ctx","ClientFormComponent_div_1_Template","ClientFormComponent_div_17_Template","ClientFormComponent_div_22_Template","ClientFormComponent_Template_select_change_34_listener","ClientFormComponent_option_37_Template","ClientFormComponent_div_40_Template","ClientFormComponent_Template_input_input_42_listener","ClientFormComponent_div_45_Template","ClientFormComponent_div_46_Template","ɵɵtwoWayListener","ClientFormComponent_Template_input_ngModelChange_59_listener","ɵɵtwoWayBindingSet","ClientFormComponent_div_61_Template","ClientFormComponent_div_64_Template","ClientFormComponent_div_65_Template","ClientFormComponent_div_66_Template","ClientFormComponent_Template_button_click_69_listener","ClientFormComponent_Template_button_click_72_listener","ClientFormComponent_div_74_Template","ClientFormComponent_div_75_Template","tmp_3_0","tmp_5_0","tmp_6_0","tmp_7_0","ɵɵtwoWayProperty","ɵɵpureFunction0","_c0","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","CheckboxControlValueAccessor","SelectControlValueAccessor","NgControlStatus","NgControlStatusGroup","NgModel","i6","NgForOf","NgIf","AsyncPipe","FormControlDirective","FormGroupDirective","FormControlName","i7","MatAutocomplete","MatOption","MatAutocompleteTrigger","styles","Subject","takeUntil","EntrepriseFormComponent_div_16_small_1_Template","EntrepriseFormComponent_div_16_small_2_Template","entrepriseClientForm","EntrepriseFormComponent_div_21_small_1_Template","EntrepriseFormComponent","entrepriseClientService","entrepriseAjoute","isSubmitting","destroy$","initializeForm","ngOnDestroy","complete","ctrl","emitEvent","ajouterEntrepriseClient","markAllAsTouched","addEntrepriseClient","EntrepriseClientService","EntrepriseFormComponent_Template","EntrepriseFormComponent_div_16_Template","EntrepriseFormComponent_div_21_Template","EntrepriseFormComponent_Template_select_change_33_listener","EntrepriseFormComponent_option_36_Template","EntrepriseFormComponent_Template_input_input_40_listener","EntrepriseFormComponent_div_43_Template","EntrepriseFormComponent_div_44_Template","EntrepriseFormComponent_div_51_Template","EntrepriseFormComponent_div_52_Template","EntrepriseFormComponent_Template_button_click_55_listener","EntrepriseFormComponent_Template_button_click_58_listener","tmp_4_0","CustomNumberPipe","ProduitFormComponent","MatIconModule","NgxBarcode6Module","client_r3","AddfactureProformaComponent_div_25_mat_option_12_span_3_Template","AddfactureProformaComponent_div_25_Template_input_focus_2_listener","_r1","ctx_r1","onClientFocus","AddfactureProformaComponent_div_25_Template_input_blur_2_listener","onClientBlur","AddfactureProformaComponent_div_25_Template_mat_autocomplete_optionSelected_5_listener","onClientSelected","AddfactureProformaComponent_div_25_mat_option_12_Template","clientControl","autoClients_r4","displayClient","filteredClients","entreprise_r6","AddfactureProformaComponent_div_26_Template_input_focus_2_listener","_r5","onEntrepriseFocus","AddfactureProformaComponent_div_26_Template_input_blur_2_listener","onEntrepriseBlur","AddfactureProformaComponent_div_26_Template_mat_autocomplete_optionSelected_5_listener","AddfactureProformaComponent_div_26_mat_option_12_Template","entrepriseControl","autoEntreprises_r7","displayEntreprise","filteredEntreprises","AddfactureProformaComponent_tr_55_Template_div_click_19_listener","i_r9","index","supprimerLigneConfirmee","getProduitNom","ligne_r10","produitId","ligneDescription","quantite","getPrixVente","getMontantTotal","produit_r12","AddfactureProformaComponent_tr_57_div_28_Template_div_click_0_listener","_r14","i_r15","ajouterLigneFacture","AddfactureProformaComponent_tr_57_Template_input_focus_3_listener","_r11","onFocus","AddfactureProformaComponent_tr_57_Template_mat_autocomplete_optionSelected_4_listener","onProduitSelected","AddfactureProformaComponent_tr_57_mat_option_11_Template","AddfactureProformaComponent_tr_57_Template_textarea_ngModelChange_15_listener","ligne_r13","$implicit","AddfactureProformaComponent_tr_57_Template_input_ngModelChange_18_listener","updateCalculs","AddfactureProformaComponent_tr_57_div_28_Template","productControl","autoProduits_r16","ɵɵpureFunction1","_c1","inputLignes","isDuplicate","displayProduit","filteredProduits","remisePourcentage","AddfactureProformaComponent_div_79_Template_input_ngModelChange_2_listener","_r17","AddfactureProformaComponent_div_79_Template_input_input_2_listener","onRemiseChange","AddfactureProformaComponent_div_79_span_5_Template","getMontantRemise","ɵɵpipeBind2","form","getMontantTVA","AddfactureProformaComponent_app_produit_form_122_Template_app_produit_form_produitAjoute_0_listener","_r18","onProduitAjoute","AddfactureProformaComponent_app_produit_form_122_Template_app_produit_form_close_0_listener","closeProductFormPanel","AddfactureProformaComponent_app_client_form_128_Template_app_client_form_clientAjoute_0_listener","_r19","onClientAjoute","AddfactureProformaComponent_app_client_form_128_Template_app_client_form_close_0_listener","closeClientFormPanel","AddfactureProformaComponent_div_135_Template_button_click_4_listener","_r20","AddfactureProformaComponent_div_135_Template_button_keyup_enter_4_listener","AddfactureProformaComponent_div_136_Template_button_click_4_listener","_r21","showExistingInvoiceError","AddfactureProformaComponent","factureProFormaService","produitService","previewService","formStateService","cdr","cdRef","pendingAdjustments","description","dateFacture","typeDestinataire","selectedClientId","selectedEntrepriseId","selectedEntreprise","nomEntreprise","produits","confirmedLignes","clients","totalClients","noClientsAvailable","activeRemise","activeTva","tva","entrepriseId","userEntrepriseId","facturesproforma","totalHT","showDuplicatePopup","hasDuplicateError","duplicateIndex","showProductFormPanel","panelAnimationState","showClientFormPanel","showEntrepriseFormPanel","_filterProduits","_filterClients","_filterEntreprises","selectedClient","option","openClientFormPanel","entreprise","openEntrepriseFormPanel","getUserInfo","Promise","all","getListClients","getProduits","getFormInit","getEntrepriseInfo","savedState","getState","navigateBack","onToggleRemise","onToggleTVA","Number","getTotalHT","getTotalApresRemise","taux","montant","Math","round","getTotalCommercial","getTotalTTC","idx","detectChanges","trackByFn","item","splice","produit","find","p","goToFacture","clearState","data","sort","a","b","getToken","getListEntreprises","getProduitsParEntreprise","produitsBoutiques","Array","isArray","boutiques","some","typeBoutique","toUpperCase","lowerName","prixVente","ligne","prix","totalConfirmed","reduce","total","totalInput","creerFactureProforma","allLignes","currentLine","produitExiste","l","push","alert","dateSeule","split","facture","lignesFacture","undefined","res","serverMessage","removePendingAdjustment","user","onProduitChange","isInConfirmed","isInInput","i","setTimeout","apercuFactureProforma","saveState","lignes","prixUnitaire","preview","numeroFacture","dateCreation","Date","toISOString","remise","totalFacture","getClientName","setPreview","c","getEntrepriseName","nouveauProduit","openProductFormPanel","closeEntrepriseFormPanel","selectedProduit","nouveauClient","onEntrepriseAjoute","nouvelleEntreprise","patchValue","FactureProFormaService","ProduitService","FacturePreviewService","FormStateService","ChangeDetectorRef","i8","i9","AddfactureProformaComponent_Template","AddfactureProformaComponent_div_1_Template","AddfactureProformaComponent_Template_p_click_5_listener","AddfactureProformaComponent_Template_input_ngModelChange_19_listener","AddfactureProformaComponent_Template_input_ngModelChange_22_listener","AddfactureProformaComponent_div_25_Template","AddfactureProformaComponent_div_26_Template","AddfactureProformaComponent_Template_input_ngModelChange_30_listener","AddfactureProformaComponent_Template_textarea_ngModelChange_32_listener","AddfactureProformaComponent_tr_55_Template","AddfactureProformaComponent_tr_57_Template","AddfactureProformaComponent_Template_input_ngModelChange_77_listener","AddfactureProformaComponent_Template_input_change_77_listener","AddfactureProformaComponent_div_79_Template","AddfactureProformaComponent_Template_input_ngModelChange_94_listener","AddfactureProformaComponent_Template_input_change_94_listener","AddfactureProformaComponent_div_96_Template","AddfactureProformaComponent_Template_div_click_106_listener","AddfactureProformaComponent_Template_button_click_112_listener","AddfactureProformaComponent_Template_button_click_115_listener","AddfactureProformaComponent_Template_div_click_118_listener","AddfactureProformaComponent_Template_div_click_119_listener","stopPropagation","AddfactureProformaComponent_app_produit_form_122_Template","AddfactureProformaComponent_Template_div_click_124_listener","AddfactureProformaComponent_Template_div_click_125_listener","AddfactureProformaComponent_app_client_form_128_Template","AddfactureProformaComponent_Template_div_click_130_listener","AddfactureProformaComponent_Template_div_click_131_listener","AddfactureProformaComponent_Template_app_entreprise_form_entrepriseAjoute_134_listener","AddfactureProformaComponent_Template_app_entreprise_form_close_134_listener","AddfactureProformaComponent_div_135_Template","AddfactureProformaComponent_div_136_Template","ɵɵclassProp","NumberValueAccessor","RadioControlValueAccessor","NgForm","i10","NgClass","DecimalPipe","i11","ProduitFormComponent_div_19_div_11_Template_input_ngModelChange_2_listener","boutique_r5","ProduitFormComponent_div_19_div_11_Template_input_change_2_listener","ctx_r2","updateSelectedBoutiques","_c2","nomBoutique","ProduitFormComponent_div_19_Template_button_click_4_listener","_r2","toggleBoutiqueSelectionPanel","ProduitFormComponent_div_19_Template_input_change_9_listener","toggleSelectAllBoutiques","ProduitFormComponent_div_19_div_11_Template","ProduitFormComponent_div_19_Template_button_click_13_listener","confirmBoutiqueSelection","areAllBoutiquesSelected","boutiquesList","ProduitFormComponent_div_41_span_1_Template","ProduitFormComponent_div_41_span_2_Template","f","option_r6","ProduitFormComponent_i_57_Template_i_click_0_listener","toggleUniteDropdown","ProduitFormComponent_i_58_Template_i_click_0_listener","closeUniteDropdown","formattedPrixVente","formattedCoutProduit","ProduitFormComponent_div_71_span_1_Template","ProduitFormComponent_div_80_div_10_ng_container_1_div_1_Template_input_ngModelChange_2_listener","_r10","boutique_r11","quantitesMap","ProduitFormComponent_div_80_div_10_ng_container_1_div_1_Template_input_ngModelChange_6_listener","seuilsMap","ɵɵpropertyInterpolate1","ɵɵelementContainerStart","ProduitFormComponent_div_80_div_10_ng_container_1_div_1_Template","ProduitFormComponent_div_80_div_10_ng_container_1_Template","ProduitFormComponent_div_80_Template_input_ngModelChange_8_listener","_r9","isChecked","ProduitFormComponent_div_80_Template_input_change_8_listener","onToggleChange","ProduitFormComponent_div_80_div_10_Template","ProduitFormComponent_button_88_Template_button_click_0_listener","_r12","clearImage","ProduitFormComponent_div_105_Template_button_click_9_listener","_r13","_c3","popupData","image","ɵɵsanitizeUrl","title","apiMessageType","messageAPI","ProduitFormComponent_div_106_Template_button_click_5_listener","closePopupBoutique","ProduitFormComponent_div_106_div_14_Template","ProduitFormComponent_div_106_div_19_Template","ProduitFormComponent_div_106_div_25_Template","ProduitFormComponent_div_106_div_30_Template","ProduitFormComponent_div_106_Template_button_click_32_listener","ProduitFormComponent_div_106_Template_button_click_34_listener","onSubmitBoutique","boutiqueForm","ProduitFormComponent_div_107_div_13_span_1_Template","ProduitFormComponent_div_107_div_13_span_2_Template","errorMessageCategory","ProduitFormComponent_div_107_Template_button_click_5_listener","_r15","closePopupCategory","ProduitFormComponent_div_107_div_13_Template","ProduitFormComponent_div_107_div_14_Template","ProduitFormComponent_div_107_div_15_Template","ProduitFormComponent_div_107_Template_button_click_17_listener","ProduitFormComponent_div_107_Template_button_click_19_listener","submitFormCategory","ajouteCategoryForm","ProduitFormComponent_div_108_div_13_span_1_Template","ProduitFormComponent_div_108_div_13_span_2_Template","u","errorMessageUnity","ProduitFormComponent_div_108_Template_button_click_5_listener","_r16","closePopupUnit","ProduitFormComponent_div_108_div_13_Template","ProduitFormComponent_div_108_div_14_Template","ProduitFormComponent_div_108_div_15_Template","ProduitFormComponent_div_108_Template_button_click_17_listener","ProduitFormComponent_div_108_Template_button_click_19_listener","submitFormUnity","ajouteUniteForm","ajouteProduitForm","goToProduit","onResponseFromBackend","defaultImage","showPopupMessage","categorieService","uniteMesureService","produitAjoute","boutiqueName","boutiqueId","showPopupCategory","formSubmitted","showPopupUnit","popupTitle","popupMessage","popupImage","popupType","imagePopup","adresseEntreprise","logoEntreprise","boutiqueIdSelected","UniterControl","showCategoryCreation","showUniteCreation","filteredUsers","isAscending","searchTerm","myControl","uniteControl","optionsUnite","filteredNomUnite","controlBoutique","streetsBoutique","showPopupBoutique","showBoutiqueSelectionPanel","selectedBoutiques","isSending","showBarcode","showBoutiqueError","isUniteDropdownOpen","isCategoryDropdownOpen","openPopupCategory","openPopupUnit","checkbox","newValue","checked","setupFormSubscriptions","getCategories","categories","getUniteMesure","uniteMesures","_filterUnite","loadInitialData","prixAchat","seuilAlert","codeBare","maxLength","categorieId","uniteId","datePreemption","typeProduit","categoryName","unityName","generateImageFromLetter","dataURLtoFile","setupAutocompleteFilters","initForm","getBoutiqueName","getFilteredStreetsBoutique","document","addEventListener","closest","closeCategoryDropdown","letter","svg","btoa","dataurl","filename","arr","mimeMatch","match","mime","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","userInfo","onCategorySelected","onUniteSelected","displayFn","category","optionNomUnite","displayFnUnite","unityMesure","onCreateCategoryClick","onCreateUniteClick","cancelCategoryCreation","cancelUniteCreation","categoryData","ajouterCategorie","newCategory","unityData","ajouterUnite","newUnity","onSubmit","_this2","tokenStored","addToStock","finalImage","extension","lastModified","now","productName","quantitesSelected","seuilsSelected","ajouterProduit","newProduit","updatedProduit","codeGenerique","enStock","status","onCodeBarChange","codeBareValue","validateNumericInput","charCode","which","keyCode","preventDefault","filteredStreetsBoutique","_filterBoutique","_normalizeValue","onFocusBoutiqueInput","emailBoutique","adresseBoutique","telephoneBoutique","openPopupBoutique","onBoutiqueSelected","selectedName","selectedBoutique","field","onlySelf","formData","addBoutique","displayFnBoutique","boutique","selectedNames","join","every","formatPrixVente","rawValue","formattedValue","Intl","NumberFormat","format","formatCoutProduit","gotToReturn","uniteAutocompleteTrigger","openPanel","closePanel","toggleCategoryDropdown","categoryAutocompleteTrigger","CategorieService","UniteMesureService","viewQuery","ProduitFormComponent_Query","ProduitFormComponent_div_1_Template","ProduitFormComponent_Template_input_click_16_listener","ProduitFormComponent_div_19_Template","ProduitFormComponent_div_41_Template","ProduitFormComponent_Template_input_click_44_listener","ProduitFormComponent_Template_mat_autocomplete_optionSelected_47_listener","ProduitFormComponent_Template_mat_autocomplete_opened_47_listener","ProduitFormComponent_Template_mat_autocomplete_closed_47_listener","ProduitFormComponent_Template_mat_option_click_49_listener","ProduitFormComponent_mat_option_54_Template","ProduitFormComponent_i_57_Template","ProduitFormComponent_i_58_Template","ProduitFormComponent_Template_input_input_61_listener","ProduitFormComponent_div_64_Template","ProduitFormComponent_div_65_Template","ProduitFormComponent_Template_input_input_67_listener","ProduitFormComponent_div_70_Template","ProduitFormComponent_div_71_Template","ProduitFormComponent_div_80_Template","ProduitFormComponent_button_88_Template","ProduitFormComponent_Template_input_change_94_listener","ProduitFormComponent_div_97_Template","ProduitFormComponent_Template_button_click_100_listener","ProduitFormComponent_Template_button_click_103_listener","ProduitFormComponent_div_105_Template","ProduitFormComponent_div_106_Template","ProduitFormComponent_div_107_Template","ProduitFormComponent_div_108_Template","autoUnite_r17","tmp_19_0","RequiredValidator","MaxLengthValidator"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}
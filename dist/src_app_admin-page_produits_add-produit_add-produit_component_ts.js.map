{"version":3,"file":"src_app_admin-page_produits_add-produit_add-produit_component_ts.js","mappings":"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","sources":["./src/app/admin-page/produits/add-produit/add-produit.component.ts","./src/app/admin-page/produits/add-produit/add-produit.component.html"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { debounceTime, distinctUntilChanged, map, Observable, of, startWith } from 'rxjs';\n// import { SharedDataService } from '../../SERVICES/shared-data.service';\nimport { CategorieService } from '../../SERVICES/categorie.service';\nimport { Categorie } from '../../MODELS/categorie.model';\nimport { UniteMesure } from '../../MODELS/unite.model';\nimport { UniteMesureService } from '../../SERVICES/unite.service';\nimport { Router } from '@angular/router';\nimport { PopupData } from '../../MODELS/PopUp/popup-data';\nimport { UsersService } from '../../SERVICES/users.service';\nimport imageCompression from 'browser-image-compression';\nimport { NgxBarcode6Module } from 'ngx-barcode6';\nimport { ProduitService } from '../../SERVICES/produit.service';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\n\n\n@Component({\n  selector: 'app-add-produit',\n  standalone: true,\n  imports: [ FormsModule, CommonModule, ReactiveFormsModule, MatAutocompleteModule, NgxBarcode6Module, MatIconModule, MatSelectModule],\n  templateUrl: './add-produit.component.html',\n  styleUrl: './add-produit.component.scss'\n})\nexport class AddProduitComponent implements OnInit {\n  isChecked = false;\n  showPopup: boolean = false;\n  boutiqueName: string = '';\n  boutiqueId: number = 1; \n  messageAPI: string = '';\n  apiMessageType: 'success' | 'error' | '' = '';\n  seuilsMap: { [boutiqueId: number]: number } = {};\n  ajouteProduitForm!: FormGroup;\n  modifierProduitForm!: FormGroup;\n  ajouteCategoryForm!: FormGroup;\n  ajouteUniteForm!: FormGroup;\n  errorMessage: string = '';\n  errorMessageCategory: string = '';\n  errorMessageUnity: string = '';\n  boutiquesList: any[] = [];\n  showPopupCategory: boolean = false;\n  showPopupUnit: boolean = false;\n  popupTitle: string = '';\n  popupMessage: string = '';\n  popupImage: string = '';\n  popupType: 'success' | 'error' = 'success';\n  imagePopup: string | null = null;\n  nomEntreprise: string = '';\n  adresseEntreprise: string = '';\n  logoEntreprise: string =''\n  // produitForm: FormGroup;\n  imageFile: File | null = null;\n  isLoading: boolean = false;\n  boutiqueIdSelected: number[] = [];\n  quantitesMap: { [boutiqueId: number]: number } = {};\n  boutiqueForm!: FormGroup;\n  successMessage: string | null = null;\n  // POUR UNITE\n  UniterControl = new FormControl();\n  showCategoryCreation: boolean = false;\n  showUniteCreation: boolean = false;\n  // Variable initialisée vide\n  formattedPrixVente: string = '';\n  formattedCoutProduit: string = '';\n  // users: any[] = [];\n  filteredUsers: any[] = [];\n  indicatif: string = '';\n  maxPhoneLength: number = 8;\n  isAscending: boolean = true;\n  searchTerm: string = '';\n  urllink: string = \"assets/img/appareil.jpg\";\n  newPhotoUrl: string | null = null;\n  selectedFile: File | null | undefined = null;\n  //////// FOCUS CATEGORY\n  myControl = new FormControl();\n  uniteControl = new FormControl();\n  options: Categorie[] = []; // Liste des catégories récupérées\n  optionsUnite: UniteMesure[] = []; // Liste des unites récupérées\n  filteredOptions: Observable<Categorie[]> = of([]);\n  filteredNomUnite: Observable<UniteMesure[]> = of([]);\n  controlBoutique = new FormControl('');\n  streetsBoutique: { id: number, name: string }[] = []; // Associe les noms aux IDs\n  filteredStreetsBoutique!: Observable<string[]>;\n  showPopupBoutique = false;\n  showBoutiqueSelectionPanel: boolean = false;\n  selectedBoutiques: any[] = [];\n  // Variable regroupant toutes les informations du popup\n  popupData: PopupData = { title: '', message: '', image: '', type: 'success' };\n  // Getter pour faciliter l'accès aux contrôles dans le template\n  get c() { return this.ajouteCategoryForm.controls; }\n  get u() { return this.ajouteUniteForm.controls; }\n  get f() { return this.ajouteProduitForm.controls; }\n  formSubmitted = false;\n  showBoutiqueError: boolean = false;\n  preemptionDatesMap: { [boutiqueId: number]: string } = {};\n\n  clearImage() {\n    this.newPhotoUrl = null;\n    this.imageFile = null;\n  }\n\n  async testImageCompression(file: File) {\n    if (!file) {\n      console.log('Aucun fichier sélectionné.');\n      return;\n    }\n  \n    console.log('Taille originale:', file.size / 1024, 'Ko');\n  \n    // Options de compression\n    const options = {\n      maxSizeMB: 1,\n      maxWidthOrHeight: 1000,\n      useWebWorker: true,\n    };\n  \n    try {\n      const compressedFile = await imageCompression(file, options);\n      console.log('Taille après compression:', compressedFile.size / 1024, 'Ko');\n  \n      // Vérifier si le fichier est bien en PNG/JPEG après compression\n      if (compressedFile.type !== 'image/png' && compressedFile.type !== 'image/jpeg') {\n        console.error('Le fichier compressé n\\'est pas un format supporté (PNG ou JPEG).');\n        this.errorMessage = 'Erreur de compression : Le format de l\\'image n\\'est pas valide.';\n        return;\n      }\n  \n      // Lire l'image compressée et afficher l'aperçu\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        this.newPhotoUrl = e.target?.result as string;\n        console.log('Image compressée prête à être affichée !');\n      };\n      reader.readAsDataURL(compressedFile);\n    } catch (error) {\n      console.error('Erreur lors de la compression:', error);\n    }\n  }\n\n  goToProduit() { this.router.navigate(['/produit']); }\n  \n  // Exemple d'utilisation lors d'une réponse du backend\n  onResponseFromBackend(response: any): void {\n    // Par exemple, si response contient { message, type } et que vous souhaitez afficher une image par défaut\n    const defaultImage = response.type === 'success' ? 'assets/img/succes.png' : 'assets/img/error.png';\n    this.showPopupMessage({\n      title: response.type === 'success' ? 'Succès' : 'Erreur',\n      message: response.message,\n      image: defaultImage,\n      type: response.type\n    });\n  }\n  \n  // Méthode pour afficher le popup avec des données passées en paramètre\n  showPopupMessage(data: PopupData): void { this.popupData = data; this.showPopup = true; }\n\n  // Méthode pour fermer le popup\n  closePopup(): void { this.showPopup = false; }\n\n  constructor(\n    // private sharedDataService: SharedDataService,\n    private categorieService: CategorieService,\n    private uniteMesureService: UniteMesureService,\n    private produitService: ProduitService,\n    private fb: FormBuilder,\n    private router: Router,\n    private usersService: UsersService,\n  ) {}\n\n  // Méthodes d'ouverture/fermeture des popups\n  openPopupCategory(): void {\n    this.showPopupCategory = true;\n    this.ajouteCategoryForm.reset();\n    this.errorMessageCategory = '';\n    this.messageAPI = '';\n  }\n\n  closePopupCategory(): void {\n  this.showPopupCategory = false;\n}\n\n  openPopupUnit(): void {\n    this.showPopupUnit = true;\n    this.ajouteUniteForm.reset();\n    this.errorMessageUnity = '';\n    this.messageAPI = '';\n  }\n\n  closePopupUnit(): void { this.showPopupUnit = false; }\n\n  // onToggleChange(event: Event) {\n  //   // event.target permet d’accéder au checkbox\n  //   const checkbox = event.target as HTMLInputElement;\n  //   console.log('isChecked:', checkbox.checked);\n  // }\n\n  onToggleChange(event: Event) {\n    const checkbox = event.target as HTMLInputElement;\n    const newValue = checkbox.checked;\n\n    if (newValue && this.boutiqueIdSelected.length === 0) {\n      this.errorMessage = \"Veuillez sélectionner au moins une boutique avant d'ajouter des stocks.\";\n       this.showBoutiqueError = true;\n      // Annule l'activation du switch\n      setTimeout(() => {\n        this.isChecked = false;\n      }, 0);\n    } else {\n      this.isChecked = newValue;\n      // Efface le message si le switch est désactivé\n      if (this.errorMessage === \"Veuillez sélectionner au moins une boutique avant d'ajouter des stocks.\") {\n        this.errorMessage = '';\n      }\n    }\n  }\n \n  onFileSelected(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    if (input.files && input.files.length > 0) {\n      const file = input.files[0];\n  \n      // Vérification du format du fichier\n      const allowedFormats = ['image/jpeg', 'image/png', 'image/jpg'];\n      if (!allowedFormats.includes(file.type)) {\n        this.errorMessage = 'Le fichier doit être une image (JPG, PNG)';\n        return;\n      }\n      this.selectedFile = file;\n      this.imageFile = file;\n  \n      // Tester la compression\n      this.testImageCompression(file);\n\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        this.newPhotoUrl = e.target?.result as string;\n      };\n      reader.readAsDataURL(this.selectedFile);\n    }\n  }\n\n  navigateBack(){\n    this.router.navigate(['/produit'])\n  }\n\n  setupFormSubscriptions() {\n    // Réinitialisation des messages d'API (sécurité)\n    this.messageAPI = '';\n    this.apiMessageType = '';\n\n    // Chargement des catégories depuis l'API et initialisation du filtre autocomplete\n    this.categorieService.getCategories().subscribe({\n      next: (categories: Categorie[]) => {\n        this.options = categories || [];\n        // filteredOptions émettra une première fois grâce à startWith('')\n        this.filteredOptions = this.myControl.valueChanges.pipe(\n          startWith<string | Categorie>(''),\n          map(value => {\n            // value peut être une string saisie par l'utilisateur ou un objet Categorie\n            const name = value ? (typeof value === 'string' ? value : (value as Categorie).nom) : '';\n            return name;\n          }),\n          map(name => name ? this._filter(name) : this.options.slice())\n        );\n      },\n      error: (error) => {\n        console.error('Erreur lors de la récupération des catégories :', error);\n        // garde options vide si erreur\n        this.options = [];\n        this.filteredOptions = of([]);\n      }\n    });\n\n    // Chargement des unités de mesure et initialisation du filtre autocomplete\n    this.uniteMesureService.getUniteMesure().subscribe({\n      next: (uniteMesures: UniteMesure[]) => {\n        this.optionsUnite = uniteMesures || [];\n        this.filteredNomUnite = this.uniteControl.valueChanges.pipe(\n          startWith<string | UniteMesure>(''),\n          map(value => {\n            const name = value ? (typeof value === 'string' ? value : (value as UniteMesure).nom) : '';\n            return name;\n          }),\n          map(name => name ? this._filterUnite(name) : this.optionsUnite.slice())\n        );\n      },\n      error: (error) => {\n        console.error('Erreur lors de la récupération des unités :', error);\n        this.optionsUnite = [];\n        this.filteredNomUnite = of([]);\n      }\n    });\n\n    // Propagation automatique de la valeur sélectionnée dans myControl vers ajouteProduitForm.categorieId\n    // Ceci gère à la fois les sélections UI (mat-option) et les valeurs définies programatiquement (setValue)\n    this.myControl.valueChanges.subscribe(value => {\n      if (value && typeof value !== 'string' && (value as Categorie).id !== undefined) {\n        // L'utilisateur a sélectionné (ou on a programmé) un objet Categorie\n        this.ajouteProduitForm.get('categorieId')?.setValue((value as Categorie).id);\n      } else {\n        // texte libre ou vide => effacer l'id lié\n        this.ajouteProduitForm.get('categorieId')?.setValue(null);\n      }\n    });\n\n    // Même logique pour l'unité\n    this.uniteControl.valueChanges.subscribe(value => {\n      if (value && typeof value !== 'string' && (value as UniteMesure).id !== undefined) {\n        this.ajouteProduitForm.get('uniteId')?.setValue((value as UniteMesure).id);\n      } else {\n        this.ajouteProduitForm.get('uniteId')?.setValue(null);\n      }\n    });\n\n    // (Optionnel mais utile) Si tu veux que l'input affiche directement 'nom' quand on met un objet dans le control\n    // tu as déjà les displayFn() / displayFnUnite() utilisés par [displayWith] dans le template.\n\n    // Remarque : l'event de création (onCreateCategoryClick / submitFormCategory) doit faire :\n    // this.options.push(newCategory);\n    // this.myControl.setValue(newCategory, { emitEvent: true });\n    // this.ajouteProduitForm.get('categorieId')?.setValue(newCategory.id);\n    // De cette façon, la subscription myControl.valueChanges ci-dessus propagera automatiquement l'id.\n  }\n\n  loadInitialData() {\n    this.ajouteProduitForm = this.fb.group({\n      nom: ['', [Validators.required, Validators.minLength(2)]],\n      prixVente: ['', Validators.required],\n      prixAchat: ['', [Validators.min(0)]],\n      quantite: ['0'],\n      seuilAlert: ['0'],\n      description: [''],\n      codeBare: ['', [Validators.minLength(8), Validators.maxLength(20)]],\n      categorieId: [''],\n      uniteId: [''],\n      datePreemption: [''],\n      typeProduit: ['PHYSIQUE', Validators.required]\n    });\n    this.formSubmitted = false;\n\n    this.ajouteCategoryForm = this.fb.group({\n      categoryName: ['', [/*Validators.required,*/ Validators.minLength(3), Validators.maxLength(20)]]\n    });\n\n    // Formulaire pour ajouter une unite\n    this.ajouteUniteForm = this.fb.group({\n      unityName: ['', [ Validators.minLength(2), Validators.maxLength(20)]]\n    });\n\n    // Abonnement pour mettre à jour l'image par défaut en fonction du nom du produit\n    this.ajouteProduitForm.get('nom')?.valueChanges.subscribe(name => {\n      // Si aucun fichier n'a été sélectionné manuellement\n      // ou si le fichier actuel est le fichier généré par défaut (nommé 'default.svg')\n      if (!this.selectedFile || (this.selectedFile && this.selectedFile.name === 'default.svg')) {\n        if (name && name.trim().length > 0) {\n          this.newPhotoUrl = this.generateImageFromLetter(name.trim()[0]);\n          this.selectedFile = this.dataURLtoFile(this.newPhotoUrl, 'default.svg');\n          this.imageFile = this.selectedFile;\n        } else {\n          // Si le champ est vide, affichez l'image par défaut\n          this.newPhotoUrl = this.urllink;\n        }\n      }\n    });\n    // Remplacer l'abonnement existant par :\n    this.ajouteProduitForm.get('codeBare')?.valueChanges.subscribe(value => {\n      this.showBarcode = value && value.length >= 3;\n    });\n  }\n\n  setupAutocompleteFilters() {\n    // À chaque changement de valeur dans le champ \"categoryName\", on réinitialise l'erreur\n    this.ajouteCategoryForm.get('categoryName')?.valueChanges.subscribe(() => {\n      this.errorMessageCategory = '';\n      this.messageAPI = '';\n      this.apiMessageType = '';\n    });\n\n    // À chaque changement de valeur dans le champ \"uniteName\", on réinitialise l'erreur\n    this.ajouteUniteForm.get('unityName')?.valueChanges.subscribe(() => {\n      this.errorMessageUnity = '';\n      this.messageAPI = '';\n      this.apiMessageType = '';\n    });\n  }\n \n  ngOnInit(): void  {\n    this.initForm();\n    this.getBoutiqueName();\n    this.setupFormSubscriptions();\n    this.loadInitialData();\n    this.setupAutocompleteFilters();\n    this.getFilteredStreetsBoutique();\n    this.getBoutiqueName();\n    // Partage de donner de user\n    // this.sharedDataService.boutiqueName$.subscribe(name => {\n    //   console.log(\"AddProduitComponent - Nom boutique récupéré :\", name);\n    //   this.boutiqueName = name;\n    // });\n    // 🟢 Filtrage des catégories (OK)\n    \n    // Abonnement pour récupérer l'ID de la boutique active\n    // this.sharedDataService.boutiqueId$.subscribe(id => {\n    //   this.boutiqueId = id;\n    // });\n  }\n\n  generateImageFromLetter(letter: string): string {\n    // Génération d'un SVG affichant la première lettre en majuscule\n    const svg = `\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"200\" height=\"200\">\n        <rect width=\"100%\" height=\"100%\" fill=\"#0671e4ac\"/>\n        <text x=\"50%\" y=\"50%\" dominant-baseline=\"middle\" text-anchor=\"middle\" font-size=\"100\" fill=\"#fff\">\n          ${letter.toUpperCase()}\n        </text>\n      </svg>\n    `;\n    return 'data:image/svg+xml;base64,' + btoa(svg);\n  }\n    \n  dataURLtoFile(dataurl: string, filename: string): File {\n    const arr = dataurl.split(',');\n    const mimeMatch = arr[0].match(/:(.*?);/);\n    if (!mimeMatch) {\n      throw new Error('Format de dataURL invalide');\n    }\n    const mime = mimeMatch[1];\n    const bstr = atob(arr[1]);\n    let n = bstr.length;\n    const u8arr = new Uint8Array(n);\n    while (n--) {\n      u8arr[n] = bstr.charCodeAt(n);\n    }\n    return new File([u8arr], filename, { type: mime });\n  }\n  \n  getBoutiqueName(): void {\n    this.usersService.getUserInfo().subscribe(\n      (userInfo) => {\n        if (userInfo && userInfo.boutiques) {\n          // this.streetsBoutique = userInfo.boutiques.map((boutique: any) => boutique.nomBoutique);\n          this.boutiquesList = userInfo.boutiques; // Stocker les objets complets\n          this.streetsBoutique = this.boutiquesList.map(b => b.nomBoutique);\n          this.getFilteredStreetsBoutique();\n        } else {\n          console.error('Aucune boutique trouvée pour cet utilisateur');\n          this.boutiqueName = 'Aucune boutique';\n        }\n      },\n      (error) => {\n        console.error('Erreur lors de la récupération des informations utilisateur', error);\n      }\n    );\n  }\n  \n  // Méthode pour la sélection d'une catégorie\n  onCategorySelected(event: any): void {\n    console.log('Option sélectionnée :', event.option.value);\n    if (event.option && event.option.value) {\n      this.ajouteProduitForm.get('categorieId')?.setValue(event.option.value.id);\n    } else {\n      this.ajouteProduitForm.get('categorieId')?.setValue(null);\n    }\n  }\n\n  onUniteSelected(event: any): void {\n    console.log('Unité sélectionnée :', event.option.value);\n    if (event.option && event.option.value) {\n      this.ajouteProduitForm.get('uniteId')?.setValue(event.option.value.id);\n    } else {\n      this.ajouteProduitForm.get('uniteId')?.setValue(null);\n    }\n  }\n\n  // Pour categorie \n  private _filter(name: string): Categorie[] {\n    const filterValue = name.toLowerCase();\n    return this.options.filter(option => option.nom.toLowerCase().includes(filterValue));\n  }\n  \n  displayFn(category?: Categorie): string {\n    return category ? category.nom : '';\n  }\n  \n  // Pour unite\n  private _filterUnite(name: string): UniteMesure[] {\n    const filterValue = name.toLowerCase();\n    return this.optionsUnite.filter(optionNomUnite => \n      optionNomUnite.nom.toLowerCase().includes(filterValue)\n    );\n  }\n  \n  displayFnUnite(unityMesure?: UniteMesure): string {\n    return unityMesure ? unityMesure.nom : '';\n  }\n\n  // Lorsque l'utilisateur clique sur \"Créer\" pour une catégorie\n  onCreateCategoryClick() { this.openPopupCategory(); }\n\n  // Lorsque l'utilisateur clique sur \"Créer\" pour une unité\n  onCreateUniteClick() { this.openPopupUnit(); }\n\n  // Méthodes pour annuler la création\n  cancelCategoryCreation() { this.showCategoryCreation = false; }\n\n  cancelUniteCreation() { this.showUniteCreation = false; }\n\n submitFormCategory(): void {\n  const categoryData = { nom: this.ajouteCategoryForm.value.categoryName };\n  this.categorieService.ajouterCategorie(categoryData).subscribe({\n    next: (response: any) => {\n      console.log('Catégorie ajoutée avec succès : ', response);\n      if (response && response.message) {\n        // Réinitialiser le formulaire\n        this.ajouteCategoryForm.get('categoryName')!.setValue('');\n        \n        // Fermer le pop-up\n        this.closePopupCategory();\n\n        // Créer le nouvel objet catégorie\n        const newCategory: Categorie = { id: response.id, nom: categoryData.nom };\n\n        // Ajouter à la liste des options\n        this.options.push(newCategory);\n\n        // Mettre la valeur dans l'input (et émettre l'événement valueChanges)\n        this.myControl.setValue(newCategory, { emitEvent: true });\n\n\n        // 1. Mettre à jour l'input d'autocomplete\n        setTimeout(() => {\n          this.myControl.setValue(newCategory);  // Force la mise à jour de la valeur dans le champ autocomplete\n        }, 100);\n\n        // 2. Mettre à jour la valeur dans le formulaire principal\n        this.ajouteProduitForm.get('categorieId')?.setValue(newCategory.id);\n\n        // Mettre à jour les options filtrées\n        this.filteredOptions = this.myControl.valueChanges.pipe(\n          startWith(newCategory), // Pré-remplir avec la nouvelle valeur\n          map(value => (typeof value === 'string' ? value : value?.nom)),\n          map(name => (name ? this._filter(name) : this.options.slice()))\n        );\n\n        // Afficher message\n        this.apiMessageType = 'success';\n        this.messageAPI = response.message || \"La catégorie a été créée avec succès.\";\n      }\n    },\n    error: (error) => {\n      console.log(\"Erreur complète :\", error);\n      let message = \"Une erreur est survenue lors de la création de la catégorie.\";\n      if (error.error && error.error.error) {\n        message = error.error.error;\n      }\n      this.apiMessageType = 'error';\n      this.messageAPI = message;\n    }\n  });\n}\n\n\n  submitFormUnity(): void {\n    const unityData = { nom: this.ajouteUniteForm.value.unityName };\n    this.uniteMesureService.ajouterUnite(unityData).subscribe({\n      next: (response: any) => {\n        console.log('Unité ajouté avec succès : ', response);\n        if (response && response.id) {\n          // Réinitialiser le formulaire\n          this.ajouteUniteForm.get('unityName')!.setValue('');\n          this.closePopupUnit();\n          // Créer la nouvelle unité\n          const newUnity: UniteMesure = { \n            id: response.id, \n            nom: unityData.nom \n          };\n          this.showUniteCreation = false;\n          // Ajouter à la liste\n          this.optionsUnite.push(newUnity);\n          // Force la mise à jour du filtre\n          this.uniteControl.updateValueAndValidity();\n          // 1. Mettre à jour l'input d'autocomplete\n          this.uniteControl.setValue(newUnity);\n          // 2. Mettre à jour le formulaire principal\n          this.ajouteProduitForm.get('uniteId')?.setValue(newUnity.id);\n          // 3. Mettre à jour les options filtrées\n          // Corriger la structure du pipe RxJS\n          // Corriger la structure du pipe RxJS\n          this.filteredNomUnite = this.uniteControl.valueChanges.pipe(\n            startWith(newUnity),\n            map(value => typeof value === 'string' ? value : value?.nom),\n            map((name: string) => name ? this._filterUnite(name) : this.optionsUnite.slice())\n          );\n          // Afficher message\n          this.apiMessageType = 'success';\n          this.messageAPI = response.message || \"L'unité a été créée avec succès.\";\n        }\n      },\n      error: (error) => {\n        console.log(\"Erreur complète :\", error);\n        console.log(\"Réponse API :\", error.error);\n        let message = \"Une erreur est survenue lors de la création de l'unité.\";\n  \n        if (error.error) {\n          if (typeof error.error === \"object\" && error.error.error) {\n            message = error.error.error;\n          } else if (typeof error.error === \"string\") {\n            message = error.error;\n          }\n        }\n  \n        this.apiMessageType = 'error';\n        this.messageAPI = message;\n      }\n    });\n  }\n\n  async onSubmit() {\n\n    this.formSubmitted = true; // Active le mode \"soumis\"\n    this.showBoutiqueError = false; \n\n    // Vérifiez d'abord les boutiques avant le formulaire\n    if (this.boutiqueIdSelected.length === 0) {\n      this.showBoutiqueError = true;\n      this.errorMessage = \"Veuillez sélectionner au moins une boutique.\";\n      return;\n    }\n\n    if (this.ajouteProduitForm.invalid) {\n      this.errorMessage = \"Veuillez vérifier les informations saisies.\";\n      return;\n    }\n    this.isLoading = true;\n    const produit = this.ajouteProduitForm.value;\n    let date = this.ajouteProduitForm.get('datePreemption')?.value;\n\n   if (date) {\n    let dateISO: string;\n    if (date instanceof Date) {\n      const day = String(date.getDate()).padStart(2, '0');\n      const month = String(date.getMonth() + 1).padStart(2, '0');\n      const year = date.getFullYear();\n      dateISO = `${year}-${month}-${day}`;\n    } else {\n      const parts = date.split('-');\n      if (parts[0].length === 4) {\n        dateISO = date;\n      } else {\n        dateISO = `${parts[2]}-${parts[1]}-${parts[0]}`;\n      }\n    }\n    produit.datePreemption = dateISO;\n  }\n\n\n    // Si le prix d'achat n'est pas fourni, mettez-le à null ou 0\n    if (produit.prixAchat === '' || produit.prixAchat === null) {\n      produit.prixAchat = null; // ou 0 selon vos besoins\n    }\n\n    console.log('Produit soumis:', produit);\n    const tokenStored = localStorage.getItem('accessToken');\n    if (!tokenStored) {\n      this.showPopupMessage({ \n        title: 'Erreur',\n        message: 'Aucun token trouvé !',\n        image: 'assets/img/error.png',\n        type: 'error'\n      });\n      this.isLoading = false;\n      return;\n    }\n    // const token = `Bearer ${tokenStored}`;\n    const addToStock = this.isChecked;\n    try {\n      let finalImage: File;\n      // Si une image a été sélectionnée\n      if (this.imageFile && this.imageFile.name !== 'default.svg') {\n        console.log('Compression de l\\'image en cours...');\n        // Options de compression\n        const options = {\n          maxSizeMB: 1,\n          maxWidthOrHeight: 1000,\n          useWebWorker: true,\n        };\n        const compressedFile = await imageCompression(this.imageFile, options);\n        console.log('Taille après compression:', compressedFile.size / 1024, 'Ko');\n        // Vérification du type MIME du fichier compressé\n        if (compressedFile.type !== 'image/png' && compressedFile.type !== 'image/jpeg') {\n          this.errorMessage = 'Le fichier compressé n\\'est pas un format valide (PNG ou JPEG).';\n          this.isLoading = false;\n          return;\n        }\n        // Changer le nom du fichier en fonction du type MIME\n        const extension = compressedFile.type === 'image/png' ? '.png' : '.jpeg';\n        finalImage = new File([compressedFile], this.imageFile.name.replace(/\\..+$/, extension), {\n          type: compressedFile.type, // Forcer le type MIME à PNG ou JPEG\n          lastModified: Date.now()\n        });\n        console.log('Final Image:', finalImage);\n      } else {\n        // Si aucune image n'a été sélectionnée, utiliser l'image SVG générée\n        const productName = produit.nom.trim()[0]; // Récupérer la première lettre du nom du produit\n        finalImage = this.dataURLtoFile(this.generateImageFromLetter(productName), 'default.svg');\n        console.log('Image par défaut utilisée:', finalImage);\n      }\n      const quantitesSelected = this.boutiqueIdSelected.map(id => Number(this.quantitesMap[id]) || 0);\n      const seuilsSelected = this.boutiqueIdSelected.map(id => Number(this.seuilsMap[id]) || 0);\n      this.produitService\n        .ajouterProduit(\n            this.boutiqueIdSelected, \n            quantitesSelected, \n            seuilsSelected,\n            produit, \n            finalImage, \n            addToStock,\n            produit.datePreemption,\n        ).subscribe({\n          next: data => {\n            this.showPopupMessage({\n              title: 'Succès',\n              message: 'Produit créé avec succès',\n              image: 'assets/img/succcccc.png',\n              type: 'success',\n            });\n            this.ajouteProduitForm.reset();\n            this.myControl.reset();\n            this.uniteControl.reset();\n            this.imageFile = null;\n            this.selectedFile = null;\n            this.newPhotoUrl = null;\n            this.isLoading = false;\n            this.router.navigate(['/produit']);\n          },\n          error: error => {\n            let errorMessage = 'Erreur lors de la création du produit';\n            if (error.error) {\n              if (typeof error.error === 'object' && error.error.error) {\n                errorMessage = error.error.error;\n              } else if (typeof error.error === 'string') {\n                errorMessage = error.error;\n              }\n            }\n            errorMessage = errorMessage.replace('Une erreur est survenue : ', '');\n            this.showPopupMessage({\n              title: 'Erreur',\n              message: errorMessage,\n              image: 'assets/img/error.png',\n              type: 'error'\n            });\n            this.isLoading = false;\n          }\n        });\n    } catch (error) {\n      console.error('Erreur lors de la compression:', error);\n      this.errorMessage = 'Erreur lors de la compression de l\\'image';\n      this.isLoading = false;\n    }\n  }\n  // Options de configuration pour le code barre\n  showBarcode = false;\n  // Modifiez onCodeBarChange() :\n  onCodeBarChange(): void {\n    const codeBareValue = this.ajouteProduitForm.get('codeBare')?.value || '';\n    this.showBarcode = codeBareValue.length >= 1;\n  }\n\n  validateNumericInput(event: KeyboardEvent): void {\n    const charCode = event.which ? event.which : event.keyCode;\n    if (charCode < 48 || charCode > 57) {\n      event.preventDefault(); \n    }\n  }\n\n  getFilteredStreetsBoutique() {\n    this.filteredStreetsBoutique = this.controlBoutique.valueChanges.pipe(\n      startWith(''),\n      debounceTime(200),\n      distinctUntilChanged(),\n      map(value => {\n        // value peut être une string ou un objet (si tu veux gérer object dans le futur)\n        if (!value) return '';\n        if (typeof value === 'string') return value;\n        // si jamais tu passes un objet boutique ici, on essaie d'en extraire le nom\n        return (value as any).nomBoutique || (value as any).nom || '';\n      }),\n      map((v: string) => this._filterBoutique(v || ''))\n    );\n  }\n\n  private _filterBoutique(value: string): string[] {\n    const filterValue = this._normalizeValue(value);\n    return this.boutiquesList\n        .filter(b => this._normalizeValue(b.nomBoutique).includes(filterValue))\n        .map(b => b.nomBoutique);\n  }\n\n  private _normalizeValue(value: string): string {\n    return value.toLowerCase().replace(/\\s/g, '');\n  }\n  \n  onFocusBoutiqueInput(): void {\n    this.controlBoutique.setValue(''); // Réinitialise la valeur pour afficher toutes les options\n  }\n\n  initForm() {\n  this.boutiqueForm = this.fb.group({\n    nomBoutique: ['', Validators.required],\n    email: ['', [Validators.email, Validators.pattern(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/)]],\n    adresse: [''],\n    telephone: ['', [Validators.required, Validators.pattern(/^\\d{8,15}$/)]],\n    type: ['BOUTIQUE', Validators.required]  // Ajout du champ type\n  });\n}\n  \n  updatePhoneValidator(longueur: number): void {\n    this.boutiqueForm.controls['phone'].setValidators([\n      Validators.required,\n      Validators.pattern(`^\\\\+\\\\d{1,3}\\\\s?\\\\d{${longueur}}$`)\n    ]);\n    this.boutiqueForm.controls['phone'].updateValueAndValidity();\n  }\n   \n  openPopupBoutique() { this.showPopupBoutique = true; }\n\n  closePopupBoutique() { this.showPopupBoutique = false; this.resetForm(); }\n\n  private resetForm() {\n    this.boutiqueForm.patchValue({\n      nomBoutique: '',\n      emailBoutique: '',\n      adresseBoutique: '',\n      telephoneBoutique: '',\n      type: 'BOUTIQUE' \n    });\n    this.boutiqueForm.markAsPristine();\n    this.boutiqueForm.markAsUntouched();\n    this.boutiqueForm.updateValueAndValidity();\n  }\n\n  onBoutiqueSelected(event: any): void {\n    const selectedName = event.option.value;\n    const selectedBoutique = this.boutiquesList.find(b => b.nomBoutique === selectedName);\n    // Ajouter au tableau au lieu d'assigner une valeur unique\n    if (selectedBoutique) {\n        this.boutiqueIdSelected = [selectedBoutique.id]; // Tableau avec un seul élément\n    } else {\n        this.boutiqueIdSelected = []; // Tableau vide\n    }\n  }\n\n  onSubmitBoutique(): void {\n    // Marquer les champs comme touchés pour afficher les erreurs\n    Object.keys(this.boutiqueForm.controls).forEach(field => {\n      const control = this.boutiqueForm.get(field);\n      control?.markAsTouched({ onlySelf: true });\n    });\n\n    if (this.boutiqueForm.invalid) {\n      return;\n    }\n\n    const formData = this.boutiqueForm.value;\n    \n    this.usersService.addBoutique(formData).subscribe({\n      next: (response) => {\n        // Essayer de récupérer l'objet boutique créé dans différentes formes possibles\n        const created = response?.data || response?.boutique || response || null;\n\n        // Construire un objet boutique minimal si nécessaire\n        const newBoutique = {\n          id: created?.id ?? created?.ID ?? Date.now(), // fallback if id missing\n          nomBoutique: created?.nomBoutique ?? created?.nom ?? formData.nomBoutique ?? 'Nouvelle boutique',\n          // preserve other fields if present\n          email: created?.email ?? formData.email,\n          adresse: created?.adresse ?? formData.adresse ?? '',\n          telephone: created?.telephone ?? formData.telephone ?? ''\n        };\n\n        // Ajouter dans la liste locale (éviter les doublons)\n        const exists = this.boutiquesList.some(b => b.id === newBoutique.id);\n        if (!exists) {\n          // marquer sélectionnée pour que l'utilisateur la voie tout de suite\n          (newBoutique as any).selected = true;\n          this.boutiquesList.push(newBoutique);\n        } else {\n          // mettre à jour éventuellement l'objet existant\n          this.boutiquesList = this.boutiquesList.map(b => b.id === newBoutique.id ? { ...b, ...newBoutique } : b);\n          (this.boutiquesList.find(b => b.id === newBoutique.id) as any).selected = true;\n        }\n\n        // Mettre à jour selectedBoutiques et boutiqueIdSelected\n        this.selectedBoutiques = this.boutiquesList.filter(b => b.selected);\n        this.boutiqueIdSelected = this.selectedBoutiques.map(b => b.id);\n\n        // Mettre le nom directement dans l'input (comme tu le fais pour categorie/unite)\n        this.controlBoutique.setValue(newBoutique.nomBoutique, { emitEvent: true });\n\n        // Recréer le filtre (pour être sûr que l'autocomplete a les dernières options)\n        this.getFilteredStreetsBoutique();\n\n        // Feedback à l'utilisateur\n        this.showPopupMessage({\n          title: 'Succès',\n          message: 'Boutique créée avec succès',\n          image: 'assets/img/succcccc.png',\n          type: 'success'\n        });\n\n        // Fermer le popup et réinitialiser le formulaire\n        this.closePopupBoutique();\n        this.boutiqueForm.reset({ type: 'BOUTIQUE' });\n      },\n      error: (error) => {\n        let errorMessage = 'Erreur lors de la création de la boutique';\n        if (error.error) {\n          errorMessage = typeof error.error === 'string' ? error.error : error.error.message;\n        }\n        this.showPopupMessage({\n          title: 'Erreur',\n          message: errorMessage,\n          image: 'assets/img/error.png',\n          type: 'error'\n        });\n      }\n    });\n  }\n\n  displayFnBoutique(boutique?: string): string {\n    return boutique ? boutique : '';\n  }\n\n  toggleBoutiqueSelectionPanel(): void {\n    this.showBoutiqueSelectionPanel = !this.showBoutiqueSelectionPanel;\n  }\n\n  updateSelectedBoutiques(): void {\n    this.selectedBoutiques = this.boutiquesList.filter(b => b.selected);\n  }\n\n  confirmBoutiqueSelection(): void {\n    this.selectedBoutiques = this.boutiquesList.filter(b => b.selected);\n    this.boutiqueIdSelected = this.selectedBoutiques.map(b => b.id);\n    const selectedNames = this.selectedBoutiques.map(b => b.nomBoutique);\n    this.controlBoutique.setValue(selectedNames.join(', '));\n    this.toggleBoutiqueSelectionPanel();\n    \n    // Réinitialisez l'erreur boutique\n    if (this.boutiqueIdSelected.length > 0) {\n      this.showBoutiqueError = false;\n      if (this.errorMessage === \"Veuillez sélectionner au moins une boutique.\") {\n        this.errorMessage = '';\n      }\n    }\n  }\n\n  // Vérifie si toutes les boutiques sont sélectionnées\n  areAllBoutiquesSelected(): boolean {\n    return this.boutiquesList.length > 0 && \n          this.boutiquesList.every(b => b.selected);\n  }\n\n  // Sélectionne ou désélectionne toutes les boutiques\n  toggleSelectAllBoutiques(event: Event): void {\n    const isChecked = (event.target as HTMLInputElement).checked;\n    this.boutiquesList.forEach(b => b.selected = isChecked);\n    this.updateSelectedBoutiques();\n  }\n\n  // Ajouter cette méthode\n  formatPrixVente() {\n    const rawValue = this.ajouteProduitForm.get('prixVente')?.value;\n    if (rawValue !== null && rawValue !== undefined && !isNaN(rawValue)) {\n        const formattedValue = new Intl.NumberFormat('fr-FR').format(rawValue);\n        this.formattedPrixVente = `${formattedValue} FCFA`;\n    } else {\n        this.formattedPrixVente = '';\n    }\n  }\n\n  formatCoutProduit() {\n      const rawValue = this.ajouteProduitForm.get('prixAchat')?.value; // <-- Correction ici\n      if (rawValue !== null && rawValue !== undefined && !isNaN(rawValue)) {\n          const formattedValue = new Intl.NumberFormat('fr-FR').format(rawValue);\n          this.formattedCoutProduit = `${formattedValue} FCFA`;\n      } else {\n          this.formattedCoutProduit = '';\n      }\n  }\n  \n\n}\n","<div class=\"container_global\">\n  <div *ngIf=\"isLoading\" class=\"loading-overlay\">\n    <div class=\"loading-content\">\n      <div class=\"spinner\"></div>\n      <p>Connexion en cours...</p>\n    </div>\n  </div>\n  \n\n  <div class=\"content_formulaire\">\n\n    <div class=\"modal-body\">\n\n      <form class=\"container_formulaire\" [formGroup]=\"ajouteProduitForm\">\n\n        <!-- Icon return  -->\n        <p class=\"retour_icon_text\" (click)=\"navigateBack()\" style=\"cursor: pointer; color: #0672E4; margin-bottom: 15px;\" title=\"Retour sur la page produit\">\n            <i class=\"ri-arrow-left-s-line\"></i> <span style=\"margin-left: 8px; font-size: 12px;\">Produit</span>\n        </p>\n\n        <!-- Titre d'ajout de produits  -->\n        <div class=\"Title\">\n          <h3>Ajouter des produits</h3>\n        </div>\n\n        <div class=\"form_left_right\">\n\n          <!-- Formular ajouter produit  -->\n          <div class=\"formulaire\">\n            \n           \n            \n            <!-- Les information des produit  -->\n            <div class=\"information_cadre\">\n              <div class=\"info_titre_input\"> \n                <h4>Information des produits</h4>\n                  <div class=\"triple\">\n                    <div class=\"radio-group\">\n                      <div class=\"radio-option\">\n                        <input type=\"radio\" \n                              id=\"typePhysique\" \n                              formControlName=\"typeProduit\" \n                              value=\"PHYSIQUE\"\n                              class=\"radio-input\">\n                        <label for=\"typePhysique\" class=\"radio-label\">\n                          <span class=\"radio-custom\"></span>\n                          Produit\n                        </label>\n                      </div>\n                      \n                      <div class=\"radio-option\">\n                        <input type=\"radio\" \n                              id=\"typeService\" \n                              formControlName=\"typeProduit\" \n                              value=\"SERVICE\"\n                              class=\"radio-input\">\n                        <label for=\"typeService\" class=\"radio-label\">\n                          <span class=\"radio-custom\"></span>\n                          Service\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n\n                  \n                  <!-- Input de nom produits  -->\n                  <div  class=\"champ_input\" [class.invalid-field]=\"f['nom'].invalid && (f['nom'].touched || formSubmitted)\">\n                    <input autocomplete=\"off\" formControlName=\"nom\" type=\"text\" class=\"input_focus \" required id=\"nom\" name=\"nom\" placeholder=\"Saisis le nom de produit\">\n                    <label for=\"nom\" class=\"label\">Nom produit</label>\n                    <div *ngIf=\"f['nom'].touched && f['nom'].invalid\" class=\"error-message\">\n                      <span *ngIf=\"f['nom'].errors?.['required']\">Le nom produit est vide.</span>\n                      <span *ngIf=\"f['nom'].errors?.['minlength']\">Le nom doit avoir au moins 2 caractères.</span>\n                    </div>\n                  </div>\n\n                <div class=\"double_input_grid\">\n\n                  <!-- Type  -->\n                  <!-- Remplacement du select par des boutons radio -->\n\n                  <div class=\"double_input2\">\n                    <div class=\"champ_input\">\n                      <input autocomplete=\"off\" type=\"text\" placeholder=\"Saisis le nom de catégorie\"\n                             class=\"input_focus\" matInput [formControl]=\"myControl\" \n                             [matAutocomplete]=\"auto\" style=\"cursor: pointer;\">\n                      <label for=\"categorieId\" class=\"label\">Catégorie</label>\n                      <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"onCategorySelected($event)\" [displayWith]=\"displayFn\">\n\n                        <mat-option class=\"select-option\" (click)=\"$event.stopPropagation(); onCreateCategoryClick()\">\n                          <div style=\"display: flex; align-items: center; color: #0672E4;\">\n                            <i class=\"ri-add-circle-fill\" style=\"font-size: 20px;\"></i>\n                            <span style=\"margin-left: 8px;\">Créer une catégorie</span>\n                          </div>\n                        </mat-option>\n\n                        <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n                          <div class=\"option-content\">\n                            {{ option.nom }}\n                          </div>\n                        </mat-option>\n                      </mat-autocomplete>\n                      \n                    </div>\n\n                    <!-- <div class=\"btn_add_categoryDiv2\">\n                      <button class=\"btn_add_category2\" (click)=\"onCreateCategoryClick()\">Créer une catégorie</button>\n                    </div> -->\n                    <div class=\"arrow_bas\" style=\"position: absolute; right: 5px; top: 20px;\">\n                      <i class=\"ri-arrow-down-s-line\" style=\"font-size: 20px;\"></i>\n                    </div>\n                  </div>\n\n                  <!-- // -->\n                   <div class=\"double_input2\">\n                    <div class=\"champ_input champ_input2\">\n                      <input autocomplete=\"off\" type=\"text\" placeholder=\"Saisis l'unité de mesure\" \n                            matInput [formControl]=\"uniteControl\" class=\"input_focus\"\n                            [matAutocomplete]=\"autoUnite\" style=\"cursor: pointer;\">\n                      <label for=\"uniteId\" class=\"label\">Unité de mesure</label>\n                      <mat-autocomplete #autoUnite=\"matAutocomplete\" (optionSelected)=\"onUniteSelected($event)\" [displayWith]=\"displayFnUnite\">\n\n                        <mat-option class=\"select-option\" (click)=\"onCreateUniteClick()\">\n                          <div style=\"display: flex; align-items: center; color: #0672E4;\">\n                            <i class=\"ri-add-circle-fill\" style=\"font-size: 20px;\"></i>\n                            <span style=\"margin-left: 8px;\">Créer une unité</span>\n                          </div>\n                        </mat-option>\n\n                        <mat-option *ngFor=\"let option of filteredNomUnite | async\" [value]=\"option\">\n                          <div class=\"option-content\">\n                            {{ option.nom }}\n                          </div>\n                        </mat-option>\n                      \n                      </mat-autocomplete>\n                      \n                    </div>\n                    <!-- <div class=\"btn_add_categoryDiv2\">\n                      <button class=\"btn_add_category2\" type=\"button\" (click)=\"onCreateUniteClick()\">Créer une unité</button>\n                    </div> -->\n                    <div class=\"arrow_bas\" style=\"position: absolute; right: 5px; top: 20px;\">\n                      <i class=\"ri-arrow-down-s-line\" style=\"font-size: 20px;\"></i>\n                    </div>\n                  </div>\n\n                </div>\n\n                <div class=\"double_input_grid\">\n                  <!-- Input de nom produits  -->\n                  <div class=\"champ_input\" [class.invalid-field]=\"f['prixVente'].invalid && (f['prixVente'].touched || formSubmitted)\">\n                    <input autocomplete=\"off\" formControlName=\"prixVente\" type=\"number\" class=\"input_focus \" required id=\"prixVente\" name=\"prixVente\" placeholder=\"Saisis le nom de magasin\" (input)=\"formatPrixVente()\">\n                    <label for=\"prixVente\" class=\"label\">Prix de vente</label>\n                    <div class=\"nombreDevise\" *ngIf=\"formattedPrixVente\">\n                      <p>{{ formattedPrixVente }}</p>\n                    </div>\n                    <div *ngIf=\"f['prixVente'].touched && f['prixVente'].invalid\" class=\"error-message\">\n                      Ce champ est obligatoire.\n                    </div>\n                  </div>\n                  \n                                  <!-- Input de prixAchat  -->\n                <div class=\"champ_input\">\n                  <input autocomplete=\"off\" \n                        formControlName=\"prixAchat\" \n                        type=\"number\" \n                        class=\"input_focus\" \n                        id=\"prixAchat\" \n                        name=\"prixAchat\" \n                        placeholder=\"Saisis le prix d'achat\" \n                        (input)=\"formatCoutProduit()\">\n                  <label for=\"prixAchat\" class=\"label\">Coût du produit (Facultatif)</label>\n                  <div class=\"nombreDevise\" *ngIf=\"formattedCoutProduit\">\n                    <p>{{ formattedCoutProduit }}</p>\n                  </div>\n                  <!-- Modifier le message d'erreur pour refléter que ce n'est plus obligatoire -->\n                  <div *ngIf=\"f['prixAchat'].touched && f['prixAchat'].invalid\" class=\"error-message divError\">\n                    <span *ngIf=\"f['prixAchat'].errors?.['min']\">Le coût ne peut pas être négatif.</span>\n                  </div>\n                </div>\n\n                </div>\n\n                \n              </div>\n            </div>\n            \n            <!-- Les information des produit identite  -->\n            <div class=\"information_cadre\">\n              <div class=\"info_titre_input\">\n                <h4>Identité de produit</h4>\n\n                <!--  -->\n\n                <!-- Input de produits  -->\n                <div class=\"champs_code_bare_double\">\n                  <div class=\"champ_input\">\n                    <input \n                        type=\"text\" \n                        formControlName=\"codeBare\"\n                        autocomplete=\"off\"\n                        class=\"input_focus\"\n                        id=\"codeBar\"\n                        name=\"codeBar\"\n                        placeholder=\"Numéro code barre\"\n                        inputmode=\"numeric\"\n                        pattern=\"[0-9]*\"\n                        (keypress)=\"validateNumericInput($event)\" maxlength=\"20\"> \n                    <label for=\"codeBare\" class=\"label labelColor\">Numéro code barre (Facultatif)</label>\n                    <div *ngIf=\"f['codeBare'].touched && f['codeBare'].invalid\" class=\"error-message\">\n                      <span *ngIf=\"f['codeBare'].errors?.['minlength']\">Le code barre doit avoir au moins 8 caractères.</span>\n                      <span *ngIf=\"f['codeBare'].errors?.['maxlength']\">Le code barre ne doit pas dépasser 20 caractères.</span>\n                    </div>\n                  </div>\n                \n                  <div style=\"margin-left: 15px;\" *ngIf=\"showBarcode\">\n                    <ngx-barcode6\n                      [bc-value]=\"f['codeBare'].value\"\n                      bc-format=\"CODE128\"\n                      [bc-line-color]=\"'#000000'\"\n                      [bc-width]=\"1\"\n                      [bc-height]=\"40\"\n                      [bc-font-size]=\"12\"\n                      [bc-display-value]=\"true\">\n                    </ngx-barcode6>\n                  </div>\n                </div>\n\n                <div class=\"champ_input\">\n                  <textarea formControlName=\"description\" class=\"input_focus2\" id=\"description\" name=\"description\" maxlength=\"150\" placeholder=\"Saisis Une description pour ce produit\"></textarea>\n                  <label for=\"description\" class=\"label labelColor\">Description (Facultatif)</label>\n                </div>\n                \n              </div>\n            </div>\n\n              <!-- Les information des magasin  -->\n            <div class=\"information_cadre\">\n              <div class=\"info_titre_input\">\n                <h4>Boutique</h4>\n                <!-- Input de nom magasin  -->\n                <!-- <div class=\"champ_input\">\n                  <input type=\"text\" class=\"input_focus input_focus_petit\" [value]=\"boutiqueName\" disabled required id=\"nomMagasin\" name=\"nomMagasin\" placeholder=\"Saisis le nom de magasin\">\n                  <label for=\"nomMagasin\" class=\"label labelColor\">Nom magasin</label>\n                </div> -->\n                <div class=\"double_input2\">\n                  <div class=\"champ_input\" [class.invalid-field]=\"showBoutiqueError\">\n                    <input autocomplete=\"off\" \n                           type=\"text\" \n                           placeholder=\"Sélectionner vos boutiques\"\n                           class=\"input_focus\" \n                           matInput \n                           [formControl]=\"controlBoutique\" \n                           (click)=\"toggleBoutiqueSelectionPanel()\"\n                           style=\"cursor: pointer;\">\n                    <label for=\"boutiqueId\" class=\"label\">Sélectionner vos boutiques</label>\n                  \n                    <!-- Commenté pour désactiver l'autocomplete -->\n                    <!--\n                    <mat-autocomplete #autoBoutique=\"matAutocomplete\" \n                                     (optionSelected)=\"onBoutiqueSelected($event)\" \n                                     [displayWith]=\"displayFnBoutique\">\n                      <mat-option (click)=\"toggleBoutiqueSelectionPanel()\" class=\"select-option\">\n                        <div style=\"display: flex; align-items: center; color: #0672E4;\">\n                          <i class=\"ri-checkbox-multiple-line\"></i>\n                          <span style=\"margin-left: 8px;\">Sélectionner des boutiques</span>\n                        </div>\n                      </mat-option>\n                      \n                      <mat-option *ngFor=\"let street of filteredStreetsBoutique | async\" [value]=\"street\">\n                        {{ street }}\n                      </mat-option>\n                    </mat-autocomplete>\n                    -->\n                  \n                    <!-- Panel de sélection des boutiques -->\n                    <!-- <div class=\"boutique-selection-panel\" *ngIf=\"showBoutiqueSelectionPanel\">\n                      <div class=\"panel-header\">\n                        <h4>Sélectionner des boutiques</h4>\n                        <button class=\"close-btn\" (click)=\"toggleBoutiqueSelectionPanel()\">&times;</button>\n                      </div>\n                      <div class=\"panel-body\">\n                        <div *ngFor=\"let boutique of boutiquesList\" class=\"boutique-item\">\n                          <label>\n                            <input type=\"checkbox\" \n                                   [(ngModel)]=\"boutique.selected\"\n                                   (change)=\"updateSelectedBoutiques()\"\n                                   [ngModelOptions]=\"{standalone: true}\">\n                            {{ boutique.nomBoutique }}\n                          </label>\n                        </div>\n                      </div>\n                      <div class=\"panel-footer\">\n                        <button class=\"btn-confirm\" (click)=\"confirmBoutiqueSelection()\">Confirmer</button>\n                      </div>\n                    </div> -->\n                    <div class=\"boutique-selection-panel\" *ngIf=\"showBoutiqueSelectionPanel\">\n                      <div class=\"panel-header\">\n                        <h4>Sélectionner des boutiques</h4>\n                        <button class=\"close-btn\" (click)=\"toggleBoutiqueSelectionPanel()\">&times;</button>\n                      </div>\n                      <div class=\"panel-body\">\n                        <!-- Ajout de la case \"Tout sélectionner\" -->\n                        <div class=\"boutique-item select-all\">\n                          <label>\n                            <input type=\"checkbox\" \n                                  [checked]=\"areAllBoutiquesSelected()\"\n                                  (change)=\"toggleSelectAllBoutiques($event)\">\n                            Sélectionner toutes les boutiques\n                          </label>\n                        </div>\n                        \n                        <div *ngFor=\"let boutique of boutiquesList\" class=\"boutique-item\">\n                          <label>\n                            <input type=\"checkbox\" \n                                  [(ngModel)]=\"boutique.selected\"\n                                  (change)=\"updateSelectedBoutiques()\"\n                                  [ngModelOptions]=\"{standalone: true}\">\n                            {{ boutique.nomBoutique }}\n                          </label>\n                        </div>\n                      </div>\n                      <div class=\"panel-footer\">\n                        <button class=\"btn-confirm\" (click)=\"confirmBoutiqueSelection()\">Confirmer</button>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"btn_add_categoryDiv2\">\n                    <button class=\"btn_add_category2\" (click)=\"openPopupBoutique()\">Créer une boutique</button>\n                  </div>\n                </div>\n                \n              </div>\n            </div>\n            \n            <!-- Les information des produit Inventaire  -->\n            <div class=\"information_cadre\" *ngIf=\"ajouteProduitForm.get('typeProduit')?.value === 'PHYSIQUE'\">\n              <div class=\"info_titre_input\">\n                <h4>Inventaire</h4>\n            \n                <div class=\"champ_input_inventaire\">\n                  <p>Ajouter dans les stocks</p>\n            \n                  <label class=\"switch\">\n                    <input type=\"checkbox\" [(ngModel)]=\"isChecked\" (change)=\"onToggleChange($event)\" [ngModelOptions]=\"{standalone: true}\"/>\n                    <span class=\"slider round\"></span>\n                  </label>\n                </div>\n\n            \n                <div *ngIf=\"isChecked\">\n                  <ng-container *ngFor=\"let boutique of boutiquesList\">\n                    <div *ngIf=\"boutique.selected\" class=\"double_input_grid_true\">\n                      <div class=\"champ_input\">\n                        <!-- Quantité -->\n                        <input  [ngModel]=\"quantitesMap[boutique.id] || 0\" \n                          (ngModelChange)=\"quantitesMap[boutique.id] = $event\"  \n                          [ngModelOptions]=\"{standalone: true}\" type=\"number\" class=\"input_focus\" \n                          required placeholder=\"Saisis la quantité\">\n                        <label for=\"quantite\" class=\"label labelColor\">Quantité en stock pour {{ boutique.nomBoutique }}</label>\n                      </div>\n                \n                      <!-- Seuil d'alerte -->\n                      <div class=\"champ_input\">\n                        <input \n                          [(ngModel)]=\"seuilsMap[boutique.id]\" \n                          [ngModelOptions]=\"{standalone: true}\" \n                          type=\"number\" \n                          class=\"input_focus\" \n                          placeholder=\"Seuil d'alerte pour {{ boutique.nomBoutique }}\">\n                        <label for=\"seuilAlert\" class=\"label labelColor\">Seuil d'alerte pour {{ boutique.nomBoutique }}</label>\n                      </div>\n                \n                      <!-- date de preemption -->\n                     <div class=\"champ_input\">\n                        <input \n                          type=\"date\" \n                          class=\"input_focus\" \n                          formControlName=\"datePreemption\"\n                          id=\"datePreemption\"\n                          name=\"datePreemption\">\n                        <label for=\"datePreemption\" class=\"label labelColor\">Date de préemption (Facultatif)</label>\n                      </div>\n                    </div>\n                  </ng-container>\n                </div>\n                \n              </div>\n            </div>\n\n           \n            \n            \n            <!-- Les information des produit Photo  -->\n            <div class=\"information_cadre\">\n              <div class=\"info_titre_input\">\n                <h4>Ajouter une image</h4>\n\n\n                <!-- <p *ngIf=\"!errorMessage\" style=\"font-size: 12px; float: right;\">Taille : 2 Mo max</p>\n                <p *ngIf=\"errorMessage\" style=\"font-size: 12px; float: right; color: red;\">{{ errorMessage }}</p> -->\n\n                <!-- Input de produits photo -->\n                <div class=\"container_file\"> \n                  <div class=\"header_file\"> \n                    <!-- <img class=\"roudel\" [src]=\"newPhotoUrl || urllink\" alt=\"Aperçu de l'image\" style=\"max-width:200px;\"> -->\n                    <img class=\"roudel\" [src]=\"newPhotoUrl || urllink\" alt=\"Aperçu de l'image\" style=\"max-width:200px;\">\n                  </div> \n                  <button *ngIf=\"newPhotoUrl && newPhotoUrl !== urllink\" (click)=\"clearImage()\" class=\"clear-image-btn\">\n                    <i class=\"ri-delete-bin-5-line\"></i>\n                  </button>\n                  \n                  <div>\n                    <label for=\"file\" class=\"footer_file\"> \n                      <i class=\"ri-file-3-fill\"></i>\n                      <p>Choisir un fichier</p>\n                    </label> \n                    <input type=\"file\" accept=\"image/*\" id=\"file\" (change)=\"onFileSelected($event)\" hidden>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <!-- Buttom ajouter et annuler  -->\n            <div class=\"information_cadre information_cadre_save\">\n\n              <!-- Message d'erreur global -->\n              <div class=\"container_error_message\">\n                <div *ngIf=\"errorMessage\" class=\"error-message\">\n                  {{ errorMessage }}\n                </div>\n              </div>\n\n              <div class=\"info_titre_input info_titre_input_btn\">\n\n                <!-- Input de produits  -->\n                <div class=\"btn_annuler\">\n                  <button class=\"btn_cancel\" (click)=\"goToProduit()\">Annuler</button>\n                </div>\n\n                <div class=\"btn_ajouter\">\n                  <button class=\"btn_save\" (click)=\"onSubmit()\">Sauvegarder</button>\n                </div>\n                \n              </div>\n            </div>\n\n            <!-- Popup de confirmation / d'erreur -->\n            <div class=\"modal-overlay\" *ngIf=\"showPopup\">\n              <div class=\"modal-content\" [ngClass]=\"{'error': popupData.type === 'error'}\">\n                <div class=\"popup-header\">\n                  <div class=\"popup-img\">\n                      <img [src]=\"popupData.image\" alt=\"Icone\" class=\"popup-icon2\">\n                  </div>\n                  <h2>{{ popupData.title }}</h2>\n                </div>\n                <p>{{ popupData.message }}</p>\n                <button (click)=\"closePopup()\">OK</button>\n              </div>\n            </div>\n\n          </div>\n\n        </div>\n        \n      </form>\n\n    </div>\n\n    <!-- Cadre ou on cree  -->\n    \n\n</div>\n</div>\n\n <!-- Popup overlay -->\n<div class=\"popup-overlay\" *ngIf=\"showPopupBoutique\">\n  <div class=\"popup-content\">\n      <div class=\"popup-headerBoutique\">\n          <h4>Ajouter une boutique</h4>\n          <button class=\"close-btn\" (click)=\"closePopupBoutique()\">&times;</button>\n      </div>\n      <form [formGroup]=\"boutiqueForm\">\n        <div class=\"triple\">\n          <div class=\"radio-group\">\n              <div class=\"radio-option\">\n                <input type=\"radio\"\n                      id=\"typeBoutique\"\n                      formControlName=\"type\"\n                      name=\"type\"\n                      value=\"BOUTIQUE\"\n                      class=\"radio-input\">\n                <label for=\"typeBoutique\" class=\"radio-label\">\n                  <span class=\"radio-custom\"></span> Boutique\n                </label>\n              </div>\n\n              <div class=\"radio-option\">\n                <input type=\"radio\"\n                      id=\"typeEntrepot\"\n                      formControlName=\"type\"\n                      name=\"type\"\n                      value=\"ENTREPOT\"\n                      class=\"radio-input\">\n                <label for=\"typeEntrepot\" class=\"radio-label\">\n                  <span class=\"radio-custom\"></span> Entrepôt\n                </label>\n              </div>\n          </div>\n        </div>\n        \n        <div class=\"popup-body\">\n          \n          <div class=\"champ_grid\">\n            <!-- Input de nom de boutique  -->\n            <div class=\"champ_input\">\n              <input class=\"input_focus\" style=\"min-width: 150px;\" type=\"text\" formControlName=\"nomBoutique\" placeholder=\"Saisis le nom de la boutique\">\n              <label class=\"label\">Nom de la boutique</label>\n              <div *ngIf=\"boutiqueForm.get('nomBoutique')?.invalid && boutiqueForm.get('nomBoutique')?.touched\">\n                <small class=\"error\">Ce champ est obligatoire.</small>\n              </div>\n            </div>\n\n            <!-- Input d'email'  -->\n            <div class=\"champ_input\">\n              <input class=\"input_focus\" style=\"min-width: 150px;\" type=\"email\" formControlName=\"email\" placeholder=\"Saisis l'email\">\n              <label class=\"label\">Email</label>\n              <div *ngIf=\"boutiqueForm.get('email')?.invalid && boutiqueForm.get('email')?.touched\">\n                <small class=\"error\">Email invalide.</small>\n              </div>\n            </div>\n\n          </div>\n\n          <!-- Input pour pays et phone  -->\n          <div class=\"champ_grid\">\n            <!-- // Input de telephone Boutique  -->\n            <div class=\"champ_input\">\n              <input class=\"input_focus\" style=\"min-width: 150px;\" type=\"number\" formControlName=\"telephone\" placeholder=\"00 00 00 00\">\n              <label class=\"label\">Téléphone</label>\n              <div *ngIf=\"boutiqueForm.get('telephone')?.invalid && boutiqueForm.get('telephone')?.touched\">\n                <small class=\"error\">Ce champ est obligatoire.</small>\n              </div>\n            </div>\n\n            <!-- Input Numero de téléphone  -->\n            <div class=\"champ_input\">\n                <input class=\"input_focus\" style=\"min-width: 150px;\" type=\"text\" formControlName=\"adresse\" placeholder=\"Saisis l'adresse\">\n                <label class=\"label\">Adresse boutique</label>\n            </div>\n          </div>\n\n          <div class=\"errorAPI\" *ngIf=\"messageAPI\">\n            <img [src]=\"apiMessageType === 'success' ? 'assets/img/succcccc.png' : 'assets/img/error.png'\" alt=\"Message API\">\n            <span>{{ messageAPI }}</span>\n          </div>\n\n          \n        </div>\n        <div class=\"popup-footer\">\n            <button class=\"btn-cancel\" (click)=\"closePopupBoutique()\">Annuler</button>\n            <button class=\"btn-submit\" \n                    [disabled]=\"boutiqueForm.invalid\" \n                    [style.backgroundColor]=\"boutiqueForm.valid ? '#0672E4' : '#0671e434'\"\n                    [style.color]=\"boutiqueForm.valid ? '#ffffff' : '#00000073'\"\n                    [style.cursor]=\"boutiqueForm.valid ? 'pointer' : 'no-drop'\"\n                    (click)=\"onSubmitBoutique()\">\n              Ajouter\n            </button>\n        </div>\n      </form>\n  </div>\n</div>\n\n<!-- Popup pour créer une catégorie -->\n<div class=\"popup-overlay\" *ngIf=\"showPopupCategory\">\n  <div class=\"popup-content\" style=\"max-width: 350px;\">\n    <div class=\"popup-headerBoutique\">\n      <h4>Créer une catégorie</h4>\n      <button class=\"close-btn\" (click)=\"closePopupCategory()\">&times;</button>\n    </div>\n    <form [formGroup]=\"ajouteCategoryForm\">\n      <div class=\"popup-body\">\n        <div class=\"champ_input\" style=\"margin-top: 15px;\">\n          <input autocomplete=\"off\" formControlName=\"categoryName\" type=\"text\" \n                 class=\"input_focus input_focus_cree_cate\" required id=\"categoryName\" \n                 name=\"categoryName\" placeholder=\"Saisis le nom de catégorie\">\n          <label for=\"categoryName\" class=\"label labelColor\">Nom catégorie</label>\n          <div *ngIf=\"c['categoryName'].touched && c['categoryName'].invalid\" class=\"error-message\">\n            <span *ngIf=\"c['categoryName'].errors?.['minlength']\">Le nom doit avoir au moins 3 caractères.</span>\n            <span *ngIf=\"c['categoryName'].errors?.['maxlength']\">Le nom ne doit pas dépasser 20 caractères.</span>\n          </div>\n        </div>\n\n        <div *ngIf=\"errorMessageCategory\" class=\"error-message-category\">\n          {{ errorMessageCategory }}\n        </div>\n\n        <div class=\"errorAPI\" *ngIf=\"messageAPI\">\n          <img [src]=\"apiMessageType === 'success' ? 'assets/img/succcccc.png' : 'assets/img/error.png'\" alt=\"Message API\">\n          <span>{{ messageAPI }}</span>\n        </div>\n      </div>\n      <div class=\"popup-footer\">\n        <button class=\"btn-cancel\" (click)=\"closePopupCategory()\">Annuler</button>\n        <button class=\"btn-submit\" \n                [disabled]=\"ajouteCategoryForm.invalid\" \n                [style.backgroundColor]=\"ajouteCategoryForm.valid ? '#0672E4' : '#0671e434'\"\n                (click)=\"submitFormCategory()\">\n          Ajouter\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n\n<!-- Popup pour créer une unité -->\n<div class=\"popup-overlay\" *ngIf=\"showPopupUnit\">\n  <div class=\"popup-content\" style=\"max-width: 350px;\">\n    <div class=\"popup-headerBoutique\">\n      <h4>Créer une unité</h4>\n      <button class=\"close-btn\" (click)=\"closePopupUnit()\">&times;</button>\n    </div>\n    <form [formGroup]=\"ajouteUniteForm\">\n      <div class=\"popup-body\">\n        <div class=\"champ_input\" style=\"margin-top: 15px;\">\n          <input autocomplete=\"off\" formControlName=\"unityName\" type=\"text\" \n                 class=\"input_focus input_focus_cree_cate\" required id=\"unityName\" \n                 name=\"unityName\" placeholder=\"Saisis le nom de unité\">\n          <label for=\"unityName\" class=\"label labelColor\">Nom unité</label>\n          <div *ngIf=\"u['unityName'].touched && u['unityName'].invalid\" class=\"error-message\">\n            <span *ngIf=\"u['unityName'].errors?.['minlength']\">Le nom doit avoir au moins 2 caractères.</span>\n            <span *ngIf=\"u['unityName'].errors?.['maxlength']\">Le nom ne doit pas dépasser 20 caractères.</span>\n          </div>\n        </div>\n\n        <div *ngIf=\"errorMessageUnity\" class=\"error-message-category\">\n          {{ errorMessageUnity }}\n        </div>\n\n        <div class=\"errorAPI\" *ngIf=\"messageAPI\">\n          <img [src]=\"apiMessageType === 'success' ? 'assets/img/succcccc.png' : 'assets/img/error.png'\" alt=\"Message API\">\n          <span>{{ messageAPI }}</span>\n        </div>\n      </div>\n      <div class=\"popup-footer\">\n        <button class=\"btn-cancel\" (click)=\"closePopupUnit()\">Annuler</button>\n        <button class=\"btn-submit\" \n                [disabled]=\"ajouteUniteForm.invalid\" \n                [style.backgroundColor]=\"ajouteUniteForm.valid ? '#0672E4' : '#0671e434'\"\n                (click)=\"submitFormUnity()\">\n          Ajouter\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n"],"names":["CommonModule","FormControl","FormsModule","ReactiveFormsModule","Validators","MatAutocompleteModule","debounceTime","distinctUntilChanged","map","of","startWith","imageCompression","NgxBarcode6Module","MatIconModule","MatSelectModule","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","AddProduitComponent_div_34_span_1_Template","AddProduitComponent_div_34_span_2_Template","ɵɵadvance","ɵɵproperty","ctx_r1","f","errors","option_r3","ɵɵtextInterpolate1","nom","option_r4","ɵɵtextInterpolate","formattedPrixVente","formattedCoutProduit","AddProduitComponent_div_80_span_1_Template","AddProduitComponent_div_90_span_1_Template","AddProduitComponent_div_90_span_2_Template","value","ɵɵtwoWayListener","AddProduitComponent_div_105_div_11_Template_input_ngModelChange_2_listener","$event","boutique_r7","ɵɵrestoreView","_r6","$implicit","ɵɵtwoWayBindingSet","selected","ɵɵresetView","ɵɵlistener","AddProduitComponent_div_105_div_11_Template_input_change_2_listener","ɵɵnextContext","updateSelectedBoutiques","ɵɵtwoWayProperty","ɵɵpureFunction0","_c0","nomBoutique","AddProduitComponent_div_105_Template_button_click_4_listener","_r5","toggleBoutiqueSelectionPanel","AddProduitComponent_div_105_Template_input_change_9_listener","toggleSelectAllBoutiques","AddProduitComponent_div_105_div_11_Template","AddProduitComponent_div_105_Template_button_click_13_listener","confirmBoutiqueSelection","areAllBoutiquesSelected","boutiquesList","AddProduitComponent_div_109_div_10_ng_container_1_div_1_Template_input_ngModelChange_2_listener","_r9","boutique_r10","quantitesMap","id","AddProduitComponent_div_109_div_10_ng_container_1_div_1_Template_input_ngModelChange_6_listener","seuilsMap","ɵɵpropertyInterpolate1","ɵɵelementContainerStart","AddProduitComponent_div_109_div_10_ng_container_1_div_1_Template","AddProduitComponent_div_109_div_10_ng_container_1_Template","AddProduitComponent_div_109_Template_input_ngModelChange_8_listener","_r8","isChecked","AddProduitComponent_div_109_Template_input_change_8_listener","onToggleChange","AddProduitComponent_div_109_div_10_Template","AddProduitComponent_button_117_Template_button_click_0_listener","_r11","clearImage","errorMessage","AddProduitComponent_div_134_Template_button_click_9_listener","_r12","closePopup","ɵɵpureFunction1","_c1","popupData","type","image","ɵɵsanitizeUrl","title","message","apiMessageType","messageAPI","AddProduitComponent_div_135_Template_button_click_5_listener","_r13","closePopupBoutique","AddProduitComponent_div_135_div_26_Template","AddProduitComponent_div_135_div_31_Template","AddProduitComponent_div_135_div_37_Template","AddProduitComponent_div_135_div_42_Template","AddProduitComponent_div_135_Template_button_click_44_listener","AddProduitComponent_div_135_Template_button_click_46_listener","onSubmitBoutique","boutiqueForm","tmp_4_0","get","invalid","touched","tmp_5_0","tmp_6_0","ɵɵstyleProp","valid","AddProduitComponent_div_136_div_13_span_1_Template","AddProduitComponent_div_136_div_13_span_2_Template","c","errorMessageCategory","AddProduitComponent_div_136_Template_button_click_5_listener","_r14","closePopupCategory","AddProduitComponent_div_136_div_13_Template","AddProduitComponent_div_136_div_14_Template","AddProduitComponent_div_136_div_15_Template","AddProduitComponent_div_136_Template_button_click_17_listener","AddProduitComponent_div_136_Template_button_click_19_listener","submitFormCategory","ajouteCategoryForm","AddProduitComponent_div_137_div_13_span_1_Template","AddProduitComponent_div_137_div_13_span_2_Template","u","errorMessageUnity","AddProduitComponent_div_137_Template_button_click_5_listener","_r15","closePopupUnit","AddProduitComponent_div_137_div_13_Template","AddProduitComponent_div_137_div_14_Template","AddProduitComponent_div_137_div_15_Template","AddProduitComponent_div_137_Template_button_click_17_listener","AddProduitComponent_div_137_Template_button_click_19_listener","submitFormUnity","ajouteUniteForm","AddProduitComponent","controls","ajouteProduitForm","newPhotoUrl","imageFile","testImageCompression","file","_this","_asyncToGenerator","console","log","size","options","maxSizeMB","maxWidthOrHeight","useWebWorker","compressedFile","error","reader","FileReader","onload","e","target","result","readAsDataURL","goToProduit","router","navigate","onResponseFromBackend","response","defaultImage","showPopupMessage","data","showPopup","constructor","categorieService","uniteMesureService","produitService","fb","usersService","boutiqueName","boutiqueId","showPopupCategory","showPopupUnit","popupTitle","popupMessage","popupImage","popupType","imagePopup","nomEntreprise","adresseEntreprise","logoEntreprise","isLoading","boutiqueIdSelected","successMessage","UniterControl","showCategoryCreation","showUniteCreation","filteredUsers","indicatif","maxPhoneLength","isAscending","searchTerm","urllink","selectedFile","myControl","uniteControl","optionsUnite","filteredOptions","filteredNomUnite","controlBoutique","streetsBoutique","showPopupBoutique","showBoutiqueSelectionPanel","selectedBoutiques","formSubmitted","showBoutiqueError","preemptionDatesMap","showBarcode","openPopupCategory","reset","openPopupUnit","event","checkbox","newValue","checked","length","setTimeout","onFileSelected","input","files","allowedFormats","includes","navigateBack","setupFormSubscriptions","getCategories","subscribe","next","categories","valueChanges","pipe","name","_filter","slice","getUniteMesure","uniteMesures","_filterUnite","undefined","setValue","loadInitialData","group","required","minLength","prixVente","prixAchat","min","quantite","seuilAlert","description","codeBare","maxLength","categorieId","uniteId","datePreemption","typeProduit","categoryName","unityName","trim","generateImageFromLetter","dataURLtoFile","setupAutocompleteFilters","ngOnInit","initForm","getBoutiqueName","getFilteredStreetsBoutique","letter","svg","toUpperCase","btoa","dataurl","filename","arr","split","mimeMatch","match","Error","mime","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","getUserInfo","userInfo","boutiques","b","onCategorySelected","option","onUniteSelected","filterValue","toLowerCase","filter","displayFn","category","optionNomUnite","displayFnUnite","unityMesure","onCreateCategoryClick","onCreateUniteClick","cancelCategoryCreation","cancelUniteCreation","categoryData","ajouterCategorie","newCategory","push","emitEvent","unityData","ajouterUnite","newUnity","updateValueAndValidity","onSubmit","_this2","produit","date","dateISO","Date","day","String","getDate","padStart","month","getMonth","year","getFullYear","parts","tokenStored","localStorage","getItem","addToStock","finalImage","extension","replace","lastModified","now","productName","quantitesSelected","Number","seuilsSelected","ajouterProduit","onCodeBarChange","codeBareValue","validateNumericInput","charCode","which","keyCode","preventDefault","filteredStreetsBoutique","v","_filterBoutique","_normalizeValue","onFocusBoutiqueInput","email","pattern","adresse","telephone","updatePhoneValidator","longueur","setValidators","openPopupBoutique","resetForm","patchValue","emailBoutique","adresseBoutique","telephoneBoutique","markAsPristine","markAsUntouched","onBoutiqueSelected","selectedName","selectedBoutique","find","Object","keys","forEach","field","control","markAsTouched","onlySelf","formData","addBoutique","created","boutique","newBoutique","ID","exists","some","displayFnBoutique","selectedNames","join","every","formatPrixVente","rawValue","isNaN","formattedValue","Intl","NumberFormat","format","formatCoutProduit","ɵɵdirectiveInject","i1","CategorieService","i2","UniteMesureService","i3","ProduitService","i4","FormBuilder","i5","Router","i6","UsersService","selectors","decls","vars","consts","template","AddProduitComponent_Template","rf","ctx","AddProduitComponent_div_1_Template","AddProduitComponent_Template_p_click_5_listener","_r1","AddProduitComponent_div_34_Template","AddProduitComponent_Template_mat_autocomplete_optionSelected_41_listener","AddProduitComponent_Template_mat_option_click_43_listener","stopPropagation","AddProduitComponent_mat_option_48_Template","AddProduitComponent_Template_mat_autocomplete_optionSelected_57_listener","AddProduitComponent_Template_mat_option_click_59_listener","AddProduitComponent_mat_option_64_Template","AddProduitComponent_Template_input_input_70_listener","AddProduitComponent_div_73_Template","AddProduitComponent_div_74_Template","AddProduitComponent_Template_input_input_76_listener","AddProduitComponent_div_79_Template","AddProduitComponent_div_80_Template","AddProduitComponent_Template_input_keypress_87_listener","AddProduitComponent_div_90_Template","AddProduitComponent_div_91_Template","AddProduitComponent_Template_input_click_102_listener","AddProduitComponent_div_105_Template","AddProduitComponent_Template_button_click_107_listener","AddProduitComponent_div_109_Template","AddProduitComponent_button_117_Template","AddProduitComponent_Template_input_change_123_listener","AddProduitComponent_div_126_Template","AddProduitComponent_Template_button_click_129_listener","AddProduitComponent_Template_button_click_132_listener","AddProduitComponent_div_134_Template","AddProduitComponent_div_135_Template","AddProduitComponent_div_136_Template","AddProduitComponent_div_137_Template","ɵɵclassProp","auto_r16","ɵɵpipeBind1","autoUnite_r17","tmp_24_0","ɵNgNoValidate","DefaultValueAccessor","NumberValueAccessor","CheckboxControlValueAccessor","RadioControlValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","MaxLengthValidator","PatternValidator","NgModel","i7","NgClass","NgForOf","NgIf","AsyncPipe","FormControlDirective","FormGroupDirective","FormControlName","i8","MatAutocomplete","MatOption","MatAutocompleteTrigger","i9","NgxBarcode6Component","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}
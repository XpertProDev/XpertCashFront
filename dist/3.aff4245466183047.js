"use strict";(self.webpackChunkskeleton=self.webpackChunkskeleton||[]).push([[3],{3:(v,f,d)=>{d.d(f,{WX:()=>y,aw:()=>E});var u=d(54438),c=d(7356);const _=/^\d{4}-\d{2}-\d{2}(?:T\d{2}:\d{2}:\d{2}(?:\.\d+)?(?:Z|(?:(?:\+|-)\d{2}:\d{2}))?)?$/,M=/^(\d?\d)[:.](\d?\d)(?:[:.](\d?\d))?\s*(AM|PM)?$/i;function g(i,D){const e=Array(i);for(let t=0;t<i;t++)e[t]=D(t);return e}let n=(()=>{class i extends c.D{useUtcForDisplay=!1;_matDateLocale=(0,u.WQX)(c.M,{optional:!0});constructor(){super();const e=(0,u.WQX)(c.M,{optional:!0});void 0!==e&&(this._matDateLocale=e),super.setLocale(this._matDateLocale)}getYear(e){return e.getFullYear()}getMonth(e){return e.getMonth()}getDate(e){return e.getDate()}getDayOfWeek(e){return e.getDay()}getMonthNames(e){const t=new Intl.DateTimeFormat(this.locale,{month:e,timeZone:"utc"});return g(12,r=>this._format(t,new Date(2017,r,1)))}getDateNames(){const e=new Intl.DateTimeFormat(this.locale,{day:"numeric",timeZone:"utc"});return g(31,t=>this._format(e,new Date(2017,0,t+1)))}getDayOfWeekNames(e){const t=new Intl.DateTimeFormat(this.locale,{weekday:e,timeZone:"utc"});return g(7,r=>this._format(t,new Date(2017,0,r+1)))}getYearName(e){const t=new Intl.DateTimeFormat(this.locale,{year:"numeric",timeZone:"utc"});return this._format(t,e)}getFirstDayOfWeek(){if(typeof Intl<"u"&&Intl.Locale){const e=new Intl.Locale(this.locale),t=(e.getWeekInfo?.()||e.weekInfo)?.firstDay??0;return 7===t?0:t}return 0}getNumDaysInMonth(e){return this.getDate(this._createDateWithOverflow(this.getYear(e),this.getMonth(e)+1,0))}clone(e){return new Date(e.getTime())}createDate(e,t,r){let s=this._createDateWithOverflow(e,t,r);return s.getMonth(),s}today(){return new Date}parse(e,t){return"number"==typeof e?new Date(e):e?new Date(Date.parse(e)):null}format(e,t){if(!this.isValid(e))throw Error("NativeDateAdapter: Cannot format invalid date.");const r=new Intl.DateTimeFormat(this.locale,{...t,timeZone:"utc"});return this._format(r,e)}addCalendarYears(e,t){return this.addCalendarMonths(e,12*t)}addCalendarMonths(e,t){let r=this._createDateWithOverflow(this.getYear(e),this.getMonth(e)+t,this.getDate(e));return this.getMonth(r)!=((this.getMonth(e)+t)%12+12)%12&&(r=this._createDateWithOverflow(this.getYear(r),this.getMonth(r),0)),r}addCalendarDays(e,t){return this._createDateWithOverflow(this.getYear(e),this.getMonth(e),this.getDate(e)+t)}toIso8601(e){return[e.getUTCFullYear(),this._2digit(e.getUTCMonth()+1),this._2digit(e.getUTCDate())].join("-")}deserialize(e){if("string"==typeof e){if(!e)return null;if(_.test(e)){let t=new Date(e);if(this.isValid(t))return t}}return super.deserialize(e)}isDateInstance(e){return e instanceof Date}isValid(e){return!isNaN(e.getTime())}invalid(){return new Date(NaN)}setTime(e,t,r,s){const l=this.clone(e);return l.setHours(t,r,s,0),l}getHours(e){return e.getHours()}getMinutes(e){return e.getMinutes()}getSeconds(e){return e.getSeconds()}parseTime(e,t){if("string"!=typeof e)return e instanceof Date?new Date(e.getTime()):null;const r=e.trim();if(0===r.length)return null;let s=this._parseTimeString(r);if(null===s){const l=r.replace(/[^0-9:(AM|PM)]/gi,"").trim();l.length>0&&(s=this._parseTimeString(l))}return s||this.invalid()}addSeconds(e,t){return new Date(e.getTime()+1e3*t)}_createDateWithOverflow(e,t,r){const s=new Date;return s.setFullYear(e,t,r),s.setHours(0,0,0,0),s}_2digit(e){return("00"+e).slice(-2)}_format(e,t){const r=new Date;return r.setUTCFullYear(t.getFullYear(),t.getMonth(),t.getDate()),r.setUTCHours(t.getHours(),t.getMinutes(),t.getSeconds(),t.getMilliseconds()),e.format(r)}_parseTimeString(e){const t=e.toUpperCase().match(M);if(t){let r=parseInt(t[1]);const s=parseInt(t[2]);let l=null==t[3]?void 0:parseInt(t[3]);const T=t[4];if(12===r?r="AM"===T?0:r:"PM"===T&&(r+=12),a(r,0,23)&&a(s,0,59)&&(null==l||a(l,0,59)))return this.setTime(this.today(),r,s,l||0)}return null}static \u0275fac=function(t){return new(t||i)};static \u0275prov=u.jDH({token:i,factory:i.\u0275fac})}return i})();function a(i,D,e){return!isNaN(i)&&i>=D&&i<=e}const o={parse:{dateInput:null,timeInput:null},display:{dateInput:{year:"numeric",month:"numeric",day:"numeric"},timeInput:{hour:"numeric",minute:"numeric"},monthYearLabel:{year:"numeric",month:"short"},dateA11yLabel:{year:"numeric",month:"long",day:"numeric"},monthYearA11yLabel:{year:"numeric",month:"long"},timeOptionLabel:{hour:"numeric",minute:"numeric"}}};let y=(()=>{class i{static \u0275fac=function(t){return new(t||i)};static \u0275mod=u.$C({type:i});static \u0275inj=u.G2t({providers:[E()]})}return i})();function E(i=o){return[{provide:c.D,useClass:n},{provide:c.a,useValue:i}]}},7356:(v,f,d)=>{d.d(f,{D:()=>_,M:()=>p,a:()=>M});var u=d(54438),c=d(21413);const p=new u.nKC("MAT_DATE_LOCALE",{providedIn:"root",factory:function w(){return(0,u.WQX)(u.xe9)}}),h="Method not implemented";class _{locale;_localeChanges=new c.B;localeChanges=this._localeChanges;setTime(n,a,o,m){throw new Error(h)}getHours(n){throw new Error(h)}getMinutes(n){throw new Error(h)}getSeconds(n){throw new Error(h)}parseTime(n,a){throw new Error(h)}addSeconds(n,a){throw new Error(h)}getValidDateOrNull(n){return this.isDateInstance(n)&&this.isValid(n)?n:null}deserialize(n){return null==n||this.isDateInstance(n)&&this.isValid(n)?n:this.invalid()}setLocale(n){this.locale=n,this._localeChanges.next()}compareDate(n,a){return this.getYear(n)-this.getYear(a)||this.getMonth(n)-this.getMonth(a)||this.getDate(n)-this.getDate(a)}compareTime(n,a){return this.getHours(n)-this.getHours(a)||this.getMinutes(n)-this.getMinutes(a)||this.getSeconds(n)-this.getSeconds(a)}sameDate(n,a){if(n&&a){let o=this.isValid(n),m=this.isValid(a);return o&&m?!this.compareDate(n,a):o==m}return n==a}sameTime(n,a){if(n&&a){const o=this.isValid(n),m=this.isValid(a);return o&&m?!this.compareTime(n,a):o==m}return n==a}clampDate(n,a,o){return a&&this.compareDate(n,a)<0?a:o&&this.compareDate(n,o)>0?o:n}}const M=new u.nKC("mat-date-formats")}}]);
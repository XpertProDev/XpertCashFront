{"version":3,"file":"src_app_POS_pos-caisse_pos-caisse_component_ts.js","mappings":"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","sources":["./src/app/POS/pos-caisse/pos-caisse.component.ts","./src/app/POS/pos-caisse/pos-caisse.component.html"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { distinctUntilChanged, Subject, takeUntil } from 'rxjs';\nimport { CaisseResponse, OuvrirCaisseRequest } from 'src/app/admin-page/MODELS/CaisseModel/caisse.model';\nimport { SafeHtmlPipe } from 'src/app/admin-page/MODELS/CaisseModel/safe-html.pipe';\nimport { ClickOutsideDirective } from 'src/app/admin-page/MODELS/click-outside.directive';\nimport { BoutiqueService } from 'src/app/admin-page/SERVICES/boutique-service';\nimport { BoutiqueStateService } from 'src/app/admin-page/SERVICES/CaisseService/boutique-state.service';\nimport { CaisseStateService } from 'src/app/admin-page/SERVICES/CaisseService/caisse-state.service';\nimport { PaginationService } from 'src/app/admin-page/SERVICES/CaisseService/pagination.service';\nimport { PosCaisseService } from 'src/app/admin-page/SERVICES/CaisseService/pos-caisse-service';\n\n@Component({\n  selector: 'app-pos-caisse',\n  imports: [FormsModule, CommonModule, ReactiveFormsModule, SafeHtmlPipe],\n  templateUrl: './pos-caisse.component.html',\n  styleUrl: './pos-caisse.component.scss'\n})\nexport class PosCaisseComponent {\n  private destroy$ = new Subject<void>();\n  currentBoutiqueId: number | null = null;\n  showAllCaissesSection = false;\n  boutiques: any[] = [];\n\n  \n  showModal = false;\n  selectedBoutiqueId: number | null = null;\n  montantOuverture: number = 0;\n  isLoading = false;\n  errorMessage: string | null = null;\n\n  // selectedBoutiqueIdForList: number | null = null;\n  caisses: CaisseResponse[] = [];\n  isLoadingCaisses = false;\n\n  openMenuId: string | number | null = null;\n\n  allCaisses: CaisseResponse[] = [];\n  isLoadingAllCaisses = false;\n  errorMessageAllCaisses: string | null = null;\n\n  // propriétés à ajouter\n  currentPage = 1;\n  itemsPerPage = 10;\n  \n  private currentLoadType: 'last' | 'all' = 'last';\n\n  constructor(\n    private boutiqueService: BoutiqueService,\n    private caisseState: CaisseStateService,\n    private posCaisseService: PosCaisseService,\n    private boutiqueState: BoutiqueStateService,\n    private router: Router,\n    private paginationService: PaginationService,\n  ) {}\n\n  ngOnInit(): void {\n    this.loadBoutiques();\n    this.initStateCaisse();\n    this.initStateBoutique();\n  }\n\n  initStateBoutique() {\n    // Écouter les changements de boutique pour recharger les caisses\n    this.boutiqueState.selectedBoutique$.pipe(\n      takeUntil(this.destroy$),\n      distinctUntilChanged() // Éviter les déclenchements inutiles\n    ).subscribe(boutiqueId => {\n      this.currentBoutiqueId = boutiqueId;\n      if (boutiqueId) {\n        this.loadDerniereCaisseVendeur(boutiqueId);\n        this.loadAllCaisses(boutiqueId);\n      } else {\n        this.caisses = [];\n        this.allCaisses = [];\n      }\n    });\n\n    // Réduire la duplication des abonnements\n    this.boutiqueState.selectedBoutique$.pipe(\n      takeUntil(this.destroy$),\n      distinctUntilChanged()\n    ).subscribe(bId => {\n      this.currentBoutiqueId = bId;\n      this.paginationService.setPage(1);\n      if (bId) {\n        this.loadDerniereCaisseVendeur(bId);\n        this.loadAllCaisses(bId);\n      }\n    });\n  }\n\n  initStateCaisse() {\n    // Écouter les nouvelles caisses créées\n    this.caisseState.caisseCreated$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(newCaisse => {\n      if (newCaisse && this.currentBoutiqueId === newCaisse.boutiqueId) {\n        this.caisses = [newCaisse];\n        this.errorMessage = null;\n      }\n    });\n\n    // Écouter les demandes de rafraîchissement\n    this.caisseState.refreshCaisses$.pipe(\n        takeUntil(this.destroy$)\n      ).subscribe(() => {\n        if (this.currentBoutiqueId) {\n          this.loadDerniereCaisseVendeur(this.currentBoutiqueId);\n        }\n      });\n\n\n    // abonnement\n    this.caisseState.showAllCaisses$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(show => {\n        console.log('[PosCaisse] showAllCaisses$ ->', show);\n        this.showAllCaissesSection = !!show;\n\n        if (this.showAllCaissesSection) {\n          const bId = this.currentBoutiqueId || (this.boutiques?.length ? this.boutiques[0].id : null);\n          if (bId) {\n            this.loadAllCaisses(bId);\n          } else {\n            this.allCaisses = [];\n            this.errorMessageAllCaisses = 'Aucune boutique sélectionnée';\n          }\n        }\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  loadBoutiques(): void {\n    this.boutiqueService.getBoutiquesByEntreprise().subscribe({\n      next: (boutiques) => {\n        this.boutiques = boutiques;\n      },\n      error: (error) => {\n        console.error('Erreur lors du chargement des boutiques', error);\n        this.errorMessage = 'Erreur lors du chargement des boutiques';\n      }\n    });\n  }\n\n  // Ajoutez cette méthode dans la classe PosCaisseComponent\n  loadDerniereCaisseVendeur(boutiqueId: number): void {\n    this.currentLoadType = 'last';\n    this.isLoadingCaisses = true;\n    this.caisses = [];\n    this.errorMessage = null;\n\n    this.posCaisseService.getDerniereCaisseVendeur(boutiqueId).subscribe({\n      next: (response) => {\n        // S'assurer qu'on traite toujours un tableau avec un seul élément\n        this.caisses = [response];\n        this.isLoadingCaisses = false;\n      },\n      error: (error) => {\n        this.isLoadingCaisses = false;\n        console.error('Erreur lors du chargement de la dernière caisse', error);\n\n        // Si le service throwError renvoie une string -> error sera une string\n        const rawMsg = typeof error === 'string' ? error\n                    : (error?.message ?? (error?.toString ? error.toString() : 'Erreur inconnue'));\n\n        // Normalise le message visible -> si le serveur dit \"Aucune caisse...\" on affiche exactement le texte voulu\n        if (rawMsg.includes('Aucune caisse trouvée') || rawMsg.includes('Aucune caisse disponible')) {\n          this.errorMessage = 'Aucune caisse disponible pour cette boutique';\n        } else {\n          this.errorMessage = rawMsg;\n        }\n\n        this.caisses = []; // s'assurer qu'on affiche l'état vide\n      }\n    });\n  }\n\n  openModal() {\n    this.showModal = true;\n  }\n\n  closeModal() {\n    this.showModal = false;\n    this.selectedBoutiqueId = null;\n    this.montantOuverture = 0;\n    this.errorMessage = null;\n  }\n\n  // Nouvelle méthode pour charger les caisses\n  // loadCaisses(boutiqueId: number): void {\n  //   this.isLoadingCaisses = true;\n  //   this.caisses = [];\n    \n  //   this.posCaisseService.getCaissesByBoutique(boutiqueId).subscribe({\n  //     next: (caisses) => {\n  //       this.caisses = caisses;\n  //       this.isLoadingCaisses = false;\n  //     },\n  //     error: (error) => {\n  //       console.error('Erreur lors du chargement des caisses', error);\n  //       this.isLoadingCaisses = false;\n  //       this.errorMessage = 'Erreur lors du chargement des caisses';\n  //     }\n  //   });\n  // }\n\n  // ---------- CHANGEMENT: appel unique et traitement de différentes formes de réponse ----------\n  loadCaisses(boutiqueId: number, page: number = 1, size: number = 10): void {\n    this.isLoadingCaisses = true;\n    this.caisses = [];\n    this.errorMessage = null;\n\n    this.posCaisseService.getCaissesByBoutique(boutiqueId).subscribe({\n      next: (resp: any) => {\n        // 1) API paginée classique { items: CaisseResponse[], totalItems: number }\n        if (resp && Array.isArray(resp.items) && typeof resp.totalItems === 'number') {\n          // On suppose que resp.items contient déjà la page demandée.\n          this.paginationService.setTotalItems(resp.totalItems);\n          this.caisses = resp.items;\n        }\n        // 2) API qui retourne directement un tableau complet -> découpage côté client\n        else if (Array.isArray(resp)) {\n          const items = resp as CaisseResponse[];\n          this.paginationService.setTotalItems(items.length);\n          const start = (page - 1) * size;\n          this.caisses = items.slice(start, start + size);\n        }\n        // 3) autre forme courante { data: [...], total: n }\n        else if (resp && Array.isArray(resp.data)) {\n          const items = resp.data as CaisseResponse[];\n          this.paginationService.setTotalItems(resp.total || items.length);\n          const start = (page - 1) * size;\n          this.caisses = items.slice(start, start + size);\n        }\n        // 4) réponse inconnue -> essayer d'extraire ce qu'on peut\n        else if (resp && Array.isArray(resp.items)) {\n          const items = resp.items as CaisseResponse[];\n          this.paginationService.setTotalItems(resp.totalItems || items.length);\n          this.caisses = items;\n        } else {\n          // Rien de connu -> afficher vide\n          this.caisses = [];\n          this.paginationService.setTotalItems(0);\n        }\n\n        this.isLoadingCaisses = false;\n      },\n      error: (err) => {\n        console.error('Erreur loadCaisses', err);\n        this.isLoadingCaisses = false;\n        this.errorMessage = 'Erreur lors du chargement des caisses';\n      }\n    });\n  }\n\n  onCaisseButtonClick(caisse: CaisseResponse): void {\n    if (caisse.statut === 'OUVERTE') {\n        // Mettre à jour la boutique sélectionnée globalement\n        this.boutiqueState.setSelectedBoutique(caisse.boutiqueId);\n\n        // Puis naviguer vers l'accueil POS en passant la caisse (si tu veux)\n        this.router.navigate(['/pos-accueil'], {\n            state: { caisse: caisse }\n        });\n    } else if (caisse.statut === 'FERMEE') {\n        this.openModalWithBoutique(caisse.boutiqueId);\n        // Optionnel : définir la boutique aussi quand on ouvre le modal\n        this.boutiqueState.setSelectedBoutique(caisse.boutiqueId);\n    }\n  }\n\n  getBoutiqueName(boutiqueId: number | null): string {\n    if (!boutiqueId) return 'Boutique non spécifiée';\n    const boutique = this.boutiques.find(b => b.id === boutiqueId);\n    return boutique ? boutique.nomBoutique : 'Boutique inconnue';\n  }\n\n  openModalWithBoutique(boutiqueId: number | null): void {\n    this.showModal = true;\n    this.selectedBoutiqueId = boutiqueId;\n    this.montantOuverture = 0;\n    this.errorMessage = null;\n  }\n\n  // toggleMenu(caisseId: number): void {\n  //   // si on reclique sur la même, on referme\n  //   this.openMenuId = this.openMenuId === caisseId ? null : caisseId;\n  // }\n\n  toggleMenu(menuId: string | number): void {\n    this.openMenuId = this.openMenuId === menuId ? null : menuId;\n  }\n\n  allCaisseClose(caisse: CaisseResponse) {\n    console.log('Btn 1 clicked pour', caisse);\n    // … votre logique\n  }\n\n  goToPosJournalCaisse() {\n    this.router.navigate(['/pos-journal-caisse'])\n  }\n\n  getButtonText(caisse: CaisseResponse): string {\n    if (caisse.statut === 'OUVERTE') {\n        return 'Continuer la vente';\n    } else if (caisse.statut === 'FERMEE') {\n        return 'Ouvrir la caisse';\n    }\n    return 'Action inconnue';\n  }\n\n  getButtonTextFerme(caisse: CaisseResponse): string {\n    if (caisse.statut === 'OUVERTE') {\n        return 'La caisse est ouverte';\n    } else if (caisse.statut === 'FERMEE') {\n        return 'La caisse est fermer';\n    }\n    return 'Action inconnue';\n  }\n\n  getNomBoutique(caisse: CaisseResponse): string {\n    const boutique = this.boutiques.find(b => b.id === caisse.boutiqueId);\n    return boutique ? boutique.nomBoutique : 'Boutique inconnue';\n  }\n  \n  getStatusText(caisse: CaisseResponse): string {\n    if (caisse.statut === 'OUVERTE') {\n        // Vérifiez si la date d'ouverture est présente\n        if (caisse.dateOuverture) {\n            const ouvertureDate = new Date(caisse.dateOuverture);\n            const options: Intl.DateTimeFormatOptions = { \n                day: '2-digit',\n                month: '2-digit',\n                year: 'numeric',\n                hour: '2-digit',\n                minute: '2-digit'\n            };\n            const formattedDate = ouvertureDate.toLocaleString('fr-FR', options);\n            return `Ouverte le ${formattedDate}`;\n        }\n        return 'Ouverte';\n    } else if (caisse.statut === 'FERMEE') {\n        // Vérifiez si la date de fermeture est présente\n        if (caisse.dateFermeture) {\n            const fermetureDate = new Date(caisse.dateFermeture);\n            const options: Intl.DateTimeFormatOptions = { \n                day: '2-digit', \n                month: '2-digit', \n                year: 'numeric',\n                hour: '2-digit',\n                minute: '2-digit'\n            };\n            const formattedDate = fermetureDate.toLocaleString('fr-FR', options);\n            return `Fermée le ${formattedDate}`;\n        } else {\n            return 'Fermée';\n        }\n    }\n    return 'Statut inconnu';\n  }\n\n  submitForm() {\n    // Vérification du montant\n    if (this.montantOuverture < 0) {\n        this.errorMessage = 'Le montant ne peut pas être négatif';\n        return;\n    }\n\n    if (!this.selectedBoutiqueId) {\n        this.errorMessage = 'Veuillez sélectionner une boutique';\n        return;\n    }\n\n    this.isLoading = true;\n    this.errorMessage = null;\n\n    const request: OuvrirCaisseRequest = {\n        boutiqueId: this.selectedBoutiqueId,\n        montantInitial: this.montantOuverture\n    };\n\n    this.posCaisseService.ouvrirCaisse(request).subscribe({\n        next: (response) => {\n          // Notifier la création de la caisse\n          this.caisseState.notifyCaisseCreated(response);\n          // Demander un rafraîchissement des données\n          this.caisseState.triggerRefresh();\n        \n            console.log('Caisse ouverte avec succès', response);\n            this.isLoading = false;\n            this.closeModal();\n\n            this.loadDerniereCaisseVendeur(request.boutiqueId);\n\n            // Si vous préférez charger toutes les caisses (pas seulement la dernière), appelez plutôt :\n            // this.loadCaisses(request.boutiqueId);\n        },\n        error: (error) => {\n            console.error('Erreur lors de l\\'ouverture de la caisse', error);\n            this.isLoading = false;\n            \n            let rawError = '';\n            if (error.error?.error) rawError = error.error.error;\n            else if (error.error?.message) rawError = error.error.message;\n            else if (error.message) rawError = error.message;\n            else rawError = 'Erreur inconnue lors de l\\'ouverture de la caisse';\n            \n            const prefixIndex = rawError.indexOf(': ');\n            this.errorMessage = prefixIndex > 0 \n                ? rawError.substring(prefixIndex + 2) \n                : rawError;\n        }\n    });\n  }\n\n    formatDate(dateInput: Date | string): string {\n    const date = typeof dateInput === 'string' ? new Date(dateInput) : dateInput;\n    \n    return date.toLocaleDateString('fr-FR', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  }\n\n  // Ajoutez cette méthode pour charger toutes les caisses\nloadAllCaisses(boutiqueId: number): void {\n    if (!boutiqueId) {\n      this.errorMessageAllCaisses = 'Veuillez sélectionner une boutique';\n      return;\n    }\n\n    this.currentLoadType = 'all';\n    this.isLoadingAllCaisses = true;\n    this.errorMessageAllCaisses = null;\n\n    this.posCaisseService.getCaissesByBoutique(boutiqueId).subscribe({\n      next: (caisses) => {\n        this.allCaisses = caisses;\n        this.isLoadingAllCaisses = false;\n      },\n      error: (error) => {\n        console.error('Erreur lors du chargement de toutes les caisses', error);\n        this.isLoadingAllCaisses = false;\n        this.errorMessageAllCaisses = error.message || 'Erreur lors du chargement des caisses';\n        this.allCaisses = []; // S'assurer que le tableau est vide en cas d'erreur\n      }\n    });\n  }\n\n  private formatErrorForUI(err: any): string {\n    if (!err) return 'Erreur inconnue';\n    if (err instanceof Error) return err.message;\n    if (typeof err === 'string') return err;\n    if (err?.message) return err.message;\n    if (err?.error) return this.formatErrorForUI(err.error);\n    try { return JSON.stringify(err); } catch { return String(err); }\n  }\n\n}","<div class=\"container_pos_caisse\">\n    <div class=\"content_pos_caisse\">\n\n        <div class=\"titre_all_caisse\" style=\"padding: 20px 20px 0; \">\n            <h6>Ma caisse</h6>\n        </div>\n\n        <div class=\"caisse-container\">\n            <!-- Loading State -->\n            <div *ngIf=\"isLoadingCaisses\" class=\"loading-indicator\">\n                <i class=\"ri-loader-4-line spin\"></i> Chargement des caisses...\n            </div>\n\n            <!-- Empty State -->\n            <div *ngIf=\"!isLoadingCaisses && caisses.length === 0\" class=\"no-caisses\">\n                <i class=\"ri-information-line\"></i>\n                <!-- <p>{{ errorMessage || 'Aucune caisse disponible pour cette boutique' }}</p> -->\n                <p *ngIf=\"errorMessage\">{{ errorMessage }}</p>\n            </div>\n\n            <!-- Liste des caisses -->\n            <div *ngFor=\"let caisse of caisses\" class=\"caisse-card\">\n                <div class=\"block\">\n                    <div class=\"double\" style=\"align-items: baseline;\">\n                        <div class=\"profil\">\n                            <span>{{ caisse.nomVendeur ? caisse.nomVendeur[0] : '?' }}</span>\n                        </div>\n                        <div class=\"caisse-info\">\n                            <div class=\"caisse-nom\">{{ caisse.nomVendeur || 'Non assigné' }}</div>\n                            <div class=\"caisse-status\" \n                                [class.open]=\"caisse.statut === 'OUVERTE'\"\n                                [class.closed]=\"caisse.statut === 'FERMEE'\">\n                                {{ getStatusText(caisse) }}\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- zone \"more\" cliquable -->\n                    <div class=\"icon_more\" (click)=\"toggleMenu(caisse.id)\">\n                        <i class=\"ri-more-2-fill\"></i>\n                        <!-- dropdown -->\n                        <div \n                            class=\"dropdown-menu\" \n                            *ngIf=\"openMenuId === caisse.id\"\n                            (click)=\"$event.stopPropagation()\">\n                           <button (click)=\"goToPosJournalCaisse()\">Journal des caisses</button>\n                            <!-- <button (click)=\"allCaisseClose(caisse)\">Autres</button> -->\n                        </div>\n                    </div>\n                </div>\n                \n               <div class=\"caisse-container-bottom\">\n                    <button class=\"caisse-btn\" (click)=\"onCaisseButtonClick(caisse)\">\n                        {{ getButtonText(caisse) }}\n                    </button>\n\n                    <div class=\"boutique-name\" style=\"display: flex; align-items: center; gap: 5px;\">\n                        <div><i class=\"ri-store-2-line\"></i></div>\n                        <span>{{ getNomBoutique(caisse) }}</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- // All caisse  -->\n        <div class=\"all_caisse_container\" *ngIf=\"showAllCaissesSection\">\n            <div class=\"titre_all_caisse\" style=\"padding: 0 20px;\">\n                <h6>Toutes les caisses</h6>\n            </div>\n\n            <!-- Loading State pour toutes les caisses -->\n            <div *ngIf=\"isLoadingAllCaisses\" class=\"loading-indicator\">\n                <i class=\"ri-loader-4-line spin\"></i> Chargement des caisses...\n            </div>\n\n            <!-- Empty State pour toutes les caisses -->\n            <div *ngIf=\"!isLoadingAllCaisses && allCaisses.length === 0\" class=\"no-caisses\">\n                <i class=\"ri-information-line\"></i>\n                <p>{{ errorMessageAllCaisses || 'Aucune caisse disponible' }}</p>\n            </div>\n\n            <div class=\"all-caisse-container-bottom\"  *ngIf=\"showAllCaissesSection\">\n                <!-- Boucle sur allCaisses -->\n                <div *ngFor=\"let caisse of allCaisses\" class=\"caisse-card\">\n                    <div class=\"block\">\n                        <div class=\"double\" style=\"align-items: baseline;\">\n                            <div class=\"profil\">\n                                <span>{{ caisse.nomVendeur ? caisse.nomVendeur[0] : '?' }}</span>\n                            </div>\n                            <div class=\"caisse-info\">\n                                <div class=\"caisse-nom\">{{ caisse.nomVendeur || 'Non assigné' }}</div>\n                                <div class=\"caisse-status\" \n                                    [class.open]=\"caisse.statut === 'OUVERTE'\"\n                                    [class.closed]=\"caisse.statut === 'FERMEE'\">\n                                    {{ getStatusText(caisse) }}\n                                </div>\n                            </div>\n                        </div>\n\n                        <!-- zone \"more\" cliquable -->\n                        <div class=\"icon_more\" (click)=\"toggleMenu('last_' + caisse.id)\">\n                            <i class=\"ri-more-2-fill\"></i>\n                            <div \n                                class=\"dropdown-menu\" \n                                *ngIf=\"openMenuId === 'last_' + caisse.id\"\n                                (click)=\"$event.stopPropagation()\">\n                                <button (click)=\"goToPosJournalCaisse()\">Journal des caisses</button>\n                            </div>\n                        </div>\n                    </div>\n                    \n                    <div class=\"caisse-container-bottom\">\n                        <!-- <button class=\"caisse-btn\" (click)=\"onCaisseButtonClick(caisse)\" style=\"cursor: no-drop;\">\n                            {{ getButtonTextFerme(caisse) }}\n                        </button> -->\n\n                        <button class=\"caisse-btn\"\n                            [disabled]=\"caisse.statut === 'FERMEE' || caisse.statut === 'OUVERTE'\"\n                            [ngClass]=\"{ 'disabled-like': caisse.statut === 'FERMEE' || caisse.statut === 'OUVERTE' }\"\n                            [attr.aria-disabled]=\"(caisse.statut === 'FERMEE' || caisse.statut === 'OUVERTE')\"\n                            title=\"{{ (caisse.statut === 'FERMEE' || caisse.statut === 'OUVERTE') ? 'Action non disponible' : '' }}\"\n                            >\n                            {{ getButtonTextFerme(caisse) }}\n                        </button>\n\n\n\n                        <div class=\"boutique-name\" style=\"display: flex; align-items: center; gap: 5px;\">\n                            <div><i class=\"ri-store-2-line\"></i></div>\n                            <span>{{ getNomBoutique(caisse) }}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!-- Modal -->\n<div class=\"modal-backdrop\" *ngIf=\"showModal\">\n    <div class=\"modal-container\">\n        <div class=\"modal-header\">\n            <h3>Ouvrir une nouvelle caisse</h3>\n            <button (click)=\"closeModal()\" class=\"close-button\">\n                <i class=\"ri-close-line\"></i>\n            </button>\n        </div>\n        \n        <div class=\"modal-body\">\n            <form (ngSubmit)=\"submitForm()\">\n                <div class=\"form-group\">\n                    <label>Boutique assignée</label>\n                    \n                    <!-- Affichage différent selon si une boutique est présélectionnée -->\n                    <div *ngIf=\"selectedBoutiqueId\" class=\"selected-boutique\">\n                        {{ getBoutiqueName(selectedBoutiqueId) }}\n                    </div>\n                    \n                    <select *ngIf=\"!selectedBoutiqueId\" \n                            [(ngModel)]=\"selectedBoutiqueId\" \n                            name=\"boutique\" \n                            [disabled]=\"isLoading\">\n                        <option [value]=\"null\">Sélectionnez une boutique</option>\n                        <option *ngFor=\"let boutique of boutiques\" [value]=\"boutique.id\">\n                            {{ boutique.nomBoutique }}\n                        </option>\n                    </select>\n                </div>\n\n                <div class=\"form-group\">\n                    <label>Espèces à l'ouverture</label>\n                    <input \n                        type=\"number\" \n                        [(ngModel)]=\"montantOuverture\" \n                        name=\"montant\"\n                        placeholder=\"Entrez le montant\" \n                        required\n                        min=\"0\"\n                        step=\"0.01\"\n                        [disabled]=\"isLoading\"\n                    >\n                </div>\n                \n                <!-- Affichage des erreurs -->\n                <div *ngIf=\"errorMessage\" class=\"error-message\">\n                    <i class=\"ri-error-warning-line\"></i> \n                    <span [innerHTML]=\"errorMessage | safeHtml\"></span>\n                </div>\n            </form>\n        </div>\n        \n        <div class=\"modal-footer\">\n            <button (click)=\"closeModal()\" class=\"btn-cancel\" [disabled]=\"isLoading\">Annuler</button>\n            <button (click)=\"submitForm()\" class=\"btn-submit\" [disabled]=\"isLoading\">\n                <span *ngIf=\"!isLoading\">Ouvrir la caisse</span>\n                <span *ngIf=\"isLoading\" class=\"loading-spinner\"></span>\n            </button>\n        </div>\n    </div>\n</div>"],"names":["CommonModule","FormsModule","ReactiveFormsModule","distinctUntilChanged","Subject","takeUntil","SafeHtmlPipe","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","errorMessage","ɵɵtemplate","PosCaisseComponent_div_7_p_2_Template","ɵɵproperty","ɵɵlistener","PosCaisseComponent_div_8_div_13_Template_div_click_0_listener","$event","ɵɵrestoreView","_r4","ɵɵresetView","stopPropagation","PosCaisseComponent_div_8_div_13_Template_button_click_1_listener","ɵɵnextContext","goToPosJournalCaisse","PosCaisseComponent_div_8_Template_div_click_11_listener","caisse_r3","_r2","$implicit","toggleMenu","id","PosCaisseComponent_div_8_div_13_Template","PosCaisseComponent_div_8_Template_button_click_15_listener","onCaisseButtonClick","nomVendeur","ɵɵclassProp","statut","ɵɵtextInterpolate1","getStatusText","openMenuId","getButtonText","getNomBoutique","errorMessageAllCaisses","PosCaisseComponent_div_9_div_6_div_1_div_13_Template_div_click_0_listener","_r7","PosCaisseComponent_div_9_div_6_div_1_div_13_Template_button_click_1_listener","PosCaisseComponent_div_9_div_6_div_1_Template_div_click_11_listener","caisse_r6","_r5","PosCaisseComponent_div_9_div_6_div_1_div_13_Template","ɵɵpropertyInterpolate","ɵɵpureFunction1","_c0","getButtonTextFerme","PosCaisseComponent_div_9_div_6_div_1_Template","allCaisses","PosCaisseComponent_div_9_div_4_Template","PosCaisseComponent_div_9_div_5_Template","PosCaisseComponent_div_9_div_6_Template","isLoadingAllCaisses","length","showAllCaissesSection","getBoutiqueName","selectedBoutiqueId","boutique_r10","nomBoutique","ɵɵtwoWayListener","PosCaisseComponent_div_10_select_13_Template_select_ngModelChange_0_listener","_r9","ɵɵtwoWayBindingSet","PosCaisseComponent_div_10_select_13_option_3_Template","ɵɵtwoWayProperty","isLoading","boutiques","ɵɵpipeBind1","ɵɵsanitizeHtml","PosCaisseComponent_div_10_Template_button_click_5_listener","_r8","closeModal","PosCaisseComponent_div_10_Template_form_ngSubmit_8_listener","submitForm","PosCaisseComponent_div_10_div_12_Template","PosCaisseComponent_div_10_select_13_Template","PosCaisseComponent_div_10_Template_input_ngModelChange_17_listener","montantOuverture","PosCaisseComponent_div_10_div_18_Template","PosCaisseComponent_div_10_Template_button_click_20_listener","PosCaisseComponent_div_10_Template_button_click_22_listener","PosCaisseComponent_div_10_span_23_Template","PosCaisseComponent_div_10_span_24_Template","PosCaisseComponent","constructor","boutiqueService","caisseState","posCaisseService","boutiqueState","router","paginationService","destroy$","currentBoutiqueId","showModal","caisses","isLoadingCaisses","currentPage","itemsPerPage","currentLoadType","ngOnInit","loadBoutiques","initStateCaisse","initStateBoutique","selectedBoutique$","pipe","subscribe","boutiqueId","loadDerniereCaisseVendeur","loadAllCaisses","bId","setPage","caisseCreated$","newCaisse","refreshCaisses$","showAllCaisses$","show","console","log","ngOnDestroy","next","complete","getBoutiquesByEntreprise","error","getDerniereCaisseVendeur","response","rawMsg","message","toString","includes","openModal","loadCaisses","page","size","getCaissesByBoutique","resp","Array","isArray","items","totalItems","setTotalItems","start","slice","data","total","err","caisse","setSelectedBoutique","navigate","state","openModalWithBoutique","boutique","find","b","menuId","allCaisseClose","dateOuverture","ouvertureDate","Date","options","day","month","year","hour","minute","formattedDate","toLocaleString","dateFermeture","fermetureDate","request","montantInitial","ouvrirCaisse","notifyCaisseCreated","triggerRefresh","rawError","prefixIndex","indexOf","substring","formatDate","dateInput","date","toLocaleDateString","formatErrorForUI","Error","JSON","stringify","String","ɵɵdirectiveInject","i1","BoutiqueService","i2","CaisseStateService","i3","PosCaisseService","i4","BoutiqueStateService","i5","Router","i6","PaginationService","selectors","decls","vars","consts","template","PosCaisseComponent_Template","rf","ctx","PosCaisseComponent_div_6_Template","PosCaisseComponent_div_7_Template","PosCaisseComponent_div_8_Template","PosCaisseComponent_div_9_Template","PosCaisseComponent_div_10_Template","i7","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","NumberValueAccessor","SelectControlValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","MinValidator","NgModel","NgForm","i8","NgClass","NgForOf","NgIf","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}
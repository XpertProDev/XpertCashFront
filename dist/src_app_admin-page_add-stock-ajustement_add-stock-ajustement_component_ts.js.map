{"version":3,"file":"src_app_admin-page_add-stock-ajustement_add-stock-ajustement_component_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;AAG2E;AAED;AACf;;;;AAsCrD,MAAOM,cAAc;EAGzBC,YAAoBC,IAAgB,EAAUC,YAA0B;IAApD,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,YAAY,GAAZA,YAAY;IAFlD,KAAAC,MAAM,GAAGL,qEAAW,CAACM,UAAU;EAEqC;EAE5EC,cAAcA,CACZC,WAAqB,EACrBC,SAAmB,EACnBC,UAAoB,EACpBC,OAAY,EACZC,SAAsB,EACtBC,UAAmB,EACnBC,cAA6B;IAE7B,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACV,MAAM,sBAAsBQ,UAAU,EAAE;IAC5D,MAAMG,QAAQ,GAAa,IAAIC,QAAQ,EAAE;IAEzCD,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEC,IAAI,CAACC,SAAS,CAACZ,WAAW,CAAC,CAAC;IAC3DQ,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAACX,SAAS,CAAC,CAAC;IACvDO,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEC,IAAI,CAACC,SAAS,CAACT,OAAO,CAAC,CAAC;IACnDK,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEC,IAAI,CAACC,SAAS,CAACV,UAAU,CAAC,CAAC;IAEzD,IAAIE,SAAS,EAAE;MACbI,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEN,SAAS,EAAEA,SAAS,CAACS,IAAI,CAAC;IACrD;IAEA;IACA,IAAIP,cAAc,EAAE;MAClBE,QAAQ,CAACE,MAAM,CAAC,gBAAgB,EAAEJ,cAAc,CAAC;IACnD;IAEA,OAAO,IAAI,CAACV,YAAY,CAACkB,mBAAmB,EAAE,CAACC,IAAI,CACjDzB,+CAAS,CAAE0B,KAAa,IAAI;MAC1B,MAAMC,OAAO,GAAG,IAAI9B,6DAAW,CAAC;QAC9B,eAAe,EAAE,UAAU6B,KAAK;OACjC,CAAC;MACF,OAAO,IAAI,CAACrB,IAAI,CAACuB,IAAI,CAAYX,GAAG,EAAEC,QAAQ,EAAE;QAAES;MAAO,CAAE,CAAC;IAC9D,CAAC,CAAC,CACH;EACH;EAEAE,eAAeA,CAAChB,OAAgB,EAAEiB,IAAW;IAC3C,MAAMZ,QAAQ,GAAa,IAAIC,QAAQ,EAAE;IAEzC;IACA,MAAM;MAAEY,EAAE;MAAE,GAAGC;IAAW,CAAE,GAAGnB,OAAO;IACtCK,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEC,IAAI,CAACC,SAAS,CAACU,WAAW,CAAC,CAAC;IAEvDd,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEP,OAAO,CAACoB,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;IAEjE,IAAIH,IAAI,EAAE;MACRZ,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEU,IAAI,EAAEA,IAAI,CAACP,IAAI,CAAC;IAC3C;IAEA,OAAO,IAAI,CAACjB,YAAY,CAACkB,mBAAmB,EAAE,CAACC,IAAI,CACjDzB,+CAAS,CAAE0B,KAAa,IAAI;MAC1B,MAAMC,OAAO,GAAG,IAAI9B,6DAAW,CAAC;QAC9B,eAAe,EAAE,UAAU6B,KAAK;OACjC,CAAC;MACF,OAAO,IAAI,CAACrB,IAAI,CAAC6B,KAAK,CAAU,GAAG,IAAI,CAAC3B,MAAM,kBAAkBM,OAAO,CAACkB,EAAE,EAAE,EAAEb,QAAQ,EAAE;QAAES;MAAO,CAAE,CAAC;IACtG,CAAC,CAAC,CACH;EACH;EAEA;EACAQ,cAAcA,CAACC,SAAiB;IAC9B,OAAO,IAAI,CAAC9B,YAAY,CAACkB,mBAAmB,EAAE,CAACC,IAAI,CACjDzB,+CAAS,CAAE0B,KAAa,IAAI;MAC1B,MAAMC,OAAO,GAAG,IAAI9B,6DAAW,CAAC;QAAE,eAAe,EAAE,UAAU6B,KAAK;MAAE,CAAE,CAAC;MACvE,OAAO,IAAI,CAACrB,IAAI,CAACgC,GAAG,CAAU,GAAG,IAAI,CAAC9B,MAAM,aAAa6B,SAAS,EAAE,EAAE;QAAET;MAAO,CAAE,CAAC;IACpF,CAAC,CAAC,CACH;EACH;EAEA;EACAW,qBAAqBA,CAACC,UAAkB;IACtC,OAAO,IAAI,CAACjC,YAAY,CAACkB,mBAAmB,EAAE,CAACC,IAAI,CACjDzB,+CAAS,CAAE0B,KAAa,IAAI;MAC1B,MAAMC,OAAO,GAAG,IAAI9B,6DAAW,CAAC;QAAE2C,aAAa,EAAE,UAAUd,KAAK;MAAE,CAAE,CAAC;MACrE,OAAO,IAAI,CAACrB,IAAI,CAACgC,GAAG,CAAY,GAAG,IAAI,CAAC9B,MAAM,aAAagC,UAAU,QAAQ,EAAE;QAAEZ;MAAO,CAAE,CAAC,CAACF,IAAI,CAC9F1B,gDAAU,CAAC0C,KAAK,IAAG;QACjB,IAAIA,KAAK,CAACC,MAAM,KAAK,GAAG,IAAID,KAAK,CAACA,KAAK,EAAEA,KAAK,KAAK,uEAAuE,EAAE;UAC1H,OAAOxC,gDAAU,CAAC,MAAM,IAAI0C,KAAK,CAAC,qBAAqB,CAAC,CAAC;QAC3D;QACA,OAAO1C,gDAAU,CAAC,MAAMwC,KAAK,CAAC;MAChC,CAAC,CAAC,CACH;IACH,CAAC,CAAC,CACH;EACH;EAEA;EACAG,kBAAkBA,CAACL,UAAkB;IACnC,OAAO,IAAI,CAACjC,YAAY,CAACkB,mBAAmB,EAAE,CAACC,IAAI,CACjDzB,+CAAS,CAAE0B,KAAa,IAAI;MAC1B,MAAMC,OAAO,GAAG,IAAI9B,6DAAW,CAAC;QAAE2C,aAAa,EAAE,UAAUd,KAAK;MAAE,CAAE,CAAC;MACrE,OAAO,IAAI,CAACrB,IAAI,CAACgC,GAAG,CAAsB,GAAG,IAAI,CAAC9B,MAAM,aAAagC,UAAU,eAAe,EAAE;QAAEZ;MAAO,CAAE,CAAC;IAC9G,CAAC,CAAC,CACH;EACH;EAEA;EACAkB,yBAAyBA,CAACC,YAAoB;IAC5C,OAAO,IAAI,CAACxC,YAAY,CAACkB,mBAAmB,EAAE,CAACC,IAAI,CACjDzB,+CAAS,CAAE0B,KAAa,IAAI;MAC1B,MAAMC,OAAO,GAAG,IAAI9B,6DAAW,CAAC;QAAE2C,aAAa,EAAE,UAAUd,KAAK;MAAE,CAAE,CAAC;MACrE,OAAO,IAAI,CAACrB,IAAI,CAACgC,GAAG,CAAY,GAAG,IAAI,CAAC9B,MAAM,wBAAwBuC,YAAY,EAAE,EAAE;QAAEnB;MAAO,CAAE,CAAC;IACpG,CAAC,CAAC,CACH;EACH;EAEAoB,wBAAwBA,CAACD,YAAoB;IAC3C,OAAO,IAAI,CAACxC,YAAY,CAACkB,mBAAmB,EAAE,CAACC,IAAI,CACjDzB,+CAAS,CAAC0B,KAAK,IAAG;MAChB,MAAMC,OAAO,GAAG,IAAI9B,6DAAW,CAAC;QAAE2C,aAAa,EAAE,UAAUd,KAAK;MAAE,CAAE,CAAC;MACrE,OAAO,IAAI,CAACrB,IAAI,CAACgC,GAAG,CAAQ,GAAG,IAAI,CAAC9B,MAAM,wBAAwBuC,YAAY,EAAE,EAAE;QAAEnB;MAAO,CAAE,CAAC;IAChG,CAAC,CAAC,CACH;EACH;EAEA;EACAqB,eAAeA,CAAA;IACb,OAAO,IAAI,CAAC1C,YAAY,CAACkB,mBAAmB,EAAE,CAACC,IAAI,CACjDzB,+CAAS,CAAC0B,KAAK,IAAG;MAChB,MAAMC,OAAO,GAAG,IAAI9B,6DAAW,CAAC;QAC9B2C,aAAa,EAAE,UAAUd,KAAK;OAC/B,CAAC;MACF,OAAO,IAAI,CAACrB,IAAI,CAACgC,GAAG,CAAQ,GAAG,IAAI,CAAC9B,MAAM,mBAAmB,EAAE;QAAEoB;MAAO,CAAE,CAAC;IAC7E,CAAC,CAAC,CACH;EACH;EAEA;EACAsB,uBAAuBA,CAAC/B,QAAkB,EAAER,WAAqB;IAC/D,OAAO,IAAI,CAACJ,YAAY,CAACkB,mBAAmB,EAAE,CAACC,IAAI,CACjDzB,+CAAS,CAAE0B,KAAa,IAAI;MAC1B,MAAMC,OAAO,GAAG,IAAI9B,6DAAW,CAAC;QAC9B,eAAe,EAAE,UAAU6B,KAAK;OACjC,CAAC;MAEF;MACAR,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEC,IAAI,CAACC,SAAS,CAACZ,WAAW,CAAC,CAAC;MAE3D,OAAO,IAAI,CAACL,IAAI,CAACuB,IAAI,CAAC,GAAG,IAAI,CAACrB,MAAM,wBAAwB,EAAEW,QAAQ,EAAE;QAAES;MAAO,CAAE,CAAC;IACtF,CAAC,CAAC,CACH;EACH;EAEA;EACAuB,kCAAkCA,CAACJ,YAAoB,EAAEK,IAAA,GAAe,CAAC,EAAEC,IAAA,GAAe,EAAE;IAC5F,OAAO,IAAI,CAAC9C,YAAY,CAACkB,mBAAmB,EAAE,CAACC,IAAI,CACjDzB,+CAAS,CAAE0B,KAAa,IAAI;MAC1B,MAAMC,OAAO,GAAG,IAAI9B,6DAAW,CAAC;QAAE2C,aAAa,EAAE,UAAUd,KAAK;MAAE,CAAE,CAAC;MACrE,MAAM2B,MAAM,GAAG,IAAIvD,4DAAU,EAAE,CAC5BwD,GAAG,CAAC,MAAM,EAAEH,IAAI,CAACI,QAAQ,EAAE,CAAC,CAC5BD,GAAG,CAAC,MAAM,EAAEF,IAAI,CAACG,QAAQ,EAAE,CAAC;MAE/B,OAAO,IAAI,CAAClD,IAAI,CAACgC,GAAG,CAClB,GAAG,IAAI,CAAC9B,MAAM,eAAeuC,YAAY,qBAAqB,EAC9D;QAAEnB,OAAO;QAAE0B;MAAM,CAAE,CACpB;IACH,CAAC,CAAC,CACH;EACH;EAEE;EACAG,8BAA8BA,CAACjB,UAAkB,EAAEY,IAAA,GAAe,CAAC,EAAEC,IAAA,GAAe,EAAE;IACpF,OAAO,IAAI,CAAC9C,YAAY,CAACkB,mBAAmB,EAAE,CAACC,IAAI,CACjDzB,+CAAS,CAAE0B,KAAa,IAAI;MAC1B,MAAMC,OAAO,GAAG,IAAI9B,6DAAW,CAAC;QAAE2C,aAAa,EAAE,UAAUd,KAAK;MAAE,CAAE,CAAC;MACrE,MAAM2B,MAAM,GAAG,IAAIvD,4DAAU,EAAE,CAC5BwD,GAAG,CAAC,MAAM,EAAEH,IAAI,CAACI,QAAQ,EAAE,CAAC,CAC5BD,GAAG,CAAC,MAAM,EAAEF,IAAI,CAACG,QAAQ,EAAE,CAAC;MAE/B,OAAO,IAAI,CAAClD,IAAI,CAACgC,GAAG,CAClB,GAAG,IAAI,CAAC9B,MAAM,aAAagC,UAAU,qBAAqB,EAC1D;QAAEZ,OAAO;QAAE0B;MAAM,CAAE,CACpB,CAAC5B,IAAI,CACJ1B,gDAAU,CAAC0C,KAAK,IAAG;QACjB,IAAIA,KAAK,CAACC,MAAM,KAAK,GAAG,IAAID,KAAK,CAACA,KAAK,EAAEA,KAAK,KAAK,uEAAuE,EAAE;UAC1H,OAAOxC,gDAAU,CAAC,MAAM,IAAI0C,KAAK,CAAC,qBAAqB,CAAC,CAAC;QAC3D;QACA,OAAO1C,gDAAU,CAAC,MAAMwC,KAAK,CAAC;MAChC,CAAC,CAAC,CACH;IACH,CAAC,CAAC,CACH;EACH;;;uCA3LWtC,cAAc,EAAAsD,sDAAA,CAAAE,4DAAA,GAAAF,sDAAA,CAAAI,wDAAA;IAAA;EAAA;;;aAAd1D,cAAc;MAAA4D,OAAA,EAAd5D,cAAc,CAAA6D,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxCpB;AAE+C;AAEoE;AAWrD;AACQ;AACC;AAEhB;;;;;;;;;;;;;;ICkCzBR,4DADF,cAAsE,mBACtC;IAAAA,oDAAA,2BAAoB;IACpDA,0DADoD,EAAW,EACzD;;;;;IAPNA,4DAFJ,qBAAoF,cACjD,cACH;IAC1BA,oDAAA,GACF;IAAAA,0DAAA,EAAM;IAGNA,wDAAA,IAAAyB,wDAAA,kBAAsE;IAI1EzB,0DADE,EAAM,EACK;;;;;IAXsDA,wDAAA,UAAA2B,SAAA,CAAgB;IAG7E3B,uDAAA,GACF;IADEA,gEAAA,MAAA2B,SAAA,MACF;IAG8B3B,uDAAA,EAAsC;IAAtCA,wDAAA,SAAA8B,MAAA,CAAAC,eAAA,CAAAC,KAAA,KAAAL,SAAA,CAAsC;;;;;IAoBxE3B,4DAAA,WAA2D;IAAAA,oDAAA,4DAAgD;IAAAA,0DAAA,EAAO;;;;;IAClHA,4DAAA,WAA2D;IAAAA,oDAAA,oEAAmD;IAAAA,0DAAA,EAAO;;;;;IAFvHA,4DAAA,cAAoG;IAElGA,wDADA,IAAAiC,kDAAA,mBAA2D,IAAAC,kDAAA,mBACA;IAC7DlC,0DAAA,EAAM;;;;IAFGA,uDAAA,EAAkD;IAAlDA,wDAAA,SAAA8B,MAAA,CAAAK,CAAA,sBAAAC,MAAA,kBAAAN,MAAA,CAAAK,CAAA,sBAAAC,MAAA,cAAkD;IAClDpC,uDAAA,EAAkD;IAAlDA,wDAAA,SAAA8B,MAAA,CAAAK,CAAA,sBAAAC,MAAA,kBAAAN,MAAA,CAAAK,CAAA,sBAAAC,MAAA,cAAkD;;;;;IAczEpC,4DAAA,iBAAwD;IACtDA,oDAAA,GACF;IAAAA,0DAAA,EAAS;;;;IAF8BA,wDAAA,YAAAqC,IAAA,CAAA/D,EAAA,CAAgB;IACrD0B,uDAAA,EACF;IADEA,gEAAA,MAAAqC,IAAA,CAAAC,UAAA,MACF;;;;;;IAVFtC,4DAFkB,cAA2E,cAC1D,cACT;IAAAA,oDAAA,yBAAkB;IAAAA,0DAAA,EAAM;IAClDA,4DAAA,iBAKC;IAFCA,wDAAA,oBAAAwC,qEAAA;MAAAxC,2DAAA,CAAA0C,GAAA;MAAA,MAAAZ,MAAA,GAAA9B,2DAAA;MAAA,OAAAA,yDAAA,CAAU8B,MAAA,CAAAe,mBAAA,EAAqB;IAAA,EAAC;IAGhC7C,4DAAA,iBAAyB;IAAAA,oDAAA,6CAAiC;IAAAA,0DAAA,EAAS;IACnEA,wDAAA,IAAA8C,oDAAA,qBAAwD;IAK9D9C,0DAFI,EAAS,EACL,EACF;;;;IANQA,uDAAA,GAAgB;IAAhBA,wDAAA,iBAAgB;IACFA,uDAAA,GAAe;IAAfA,wDAAA,YAAA8B,MAAA,CAAAiB,YAAA,CAAe;;;;;IAUrB/C,4DAFH,cAA4E,cACT,cACV;IAAAA,oDAAA,yCAA6B;IAAAA,0DAAA,EAAM;IACzFA,uDAAA,gBAKwB;IAE5BA,0DADE,EAAM,EACF;;;;;;IA+BIA,4DAFN,aAA2H,SACnH,cAC8D;IAC5DA,uDAAA,gBAAgF;IAEtFA,0DADE,EAAM,EACH;IAEHA,4DADF,SAAI,cAC8D;IAC9DA,uDAAA,gBAE8B;IAElCA,0DADE,EAAM,EACH;IAEHA,4DADF,SAAI,cAC8D;IAC5DA,uDAAA,gBAA6G;IAEnHA,0DADE,EAAM,EACH;IAEHA,4DADF,UAAI,eAC8D;IAC9DA,uDAAA,iBAE8B;;IAElCA,0DADE,EAAM,EACH;IAEHA,4DADF,UAAI,eACkC;IAClCA,uDAAA,iBAC4E;IAEhFA,0DADE,EAAM,EACH;IAIHA,4DAFF,UAAI,eAE2D;IAArCA,wDAAA,mBAAAiD,gFAAA;MAAA,MAAAC,IAAA,GAAAlD,2DAAA,CAAAmD,GAAA,EAAAC,KAAA;MAAA,MAAAtB,MAAA,GAAA9B,2DAAA;MAAA,OAAAA,yDAAA,CAAS8B,MAAA,CAAAuB,uBAAA,CAAAH,IAAA,CAA0B;IAAA,EAAC;IAC1DlD,uDAAA,aAAoC;IAG5CA,0DAFM,EAAM,EACH,EACJ;;;;IAnCqDA,uDAAA,GAA+B;IAA/BA,wDAAA,UAAAsD,aAAA,CAAAC,UAAA,CAA+B;IAM/EvD,uDAAA,GAA6H;IAA7HA,wDAAA,UAAAsD,aAAA,CAAAE,cAAA,IAAAF,aAAA,CAAAE,cAAA,OAAAF,aAAA,CAAAE,cAAA,GAAAF,aAAA,CAAAG,eAAA,CAA6H;IAM7EzD,uDAAA,GAAgC;IAAhCA,wDAAA,UAAAsD,aAAA,CAAAI,WAAA,CAAgC;IAMhF1D,uDAAA,GAA6C;IAA7CA,wDAAA,UAAAA,yDAAA,QAAAsD,aAAA,CAAAM,SAAA,EAA6C;IAO/C5D,uDAAA,GAA+B;IAA/BA,wDAAA,UAAAsD,aAAA,CAAAO,UAAA,CAA+B;;;;;IA7B3C7D,4DAAA,YAA8C;IAC1CA,wDAAA,IAAA8D,yDAAA,kBAA2H;IAuC/H9D,0DAAA,EAAQ;;;;IAvCwBA,uDAAA,EAAuB;IAAvBA,wDAAA,YAAA8B,MAAA,CAAAiC,kBAAA,CAAuB;;;;;IA8D3C/D,qEAAA,GAA0C;IACxCA,4DAAA,iBAAiB;IACfA,oDAAA,+CACF;IAAAA,0DAAA,EAAS;;;;;;IAIXA,qEAAA,GAA+D;IAC7DA,4DAAA,iBAAiB;IACfA,oDAAA,qDACF;IAAAA,0DAAA,EAAS;;;;;;IAIXA,4DAAA,iBAA0D;IACxDA,oDAAA,GACF;IAAAA,0DAAA,EAAS;;;;IAF6BA,wDAAA,YAAAiE,WAAA,CAAmB;IACvDjE,uDAAA,EACF;IADEA,gEAAA,MAAAiE,WAAA,CAAAC,GAAA,MACF;;;;;;IAgEVlE,4DAFJ,cAAgD,cACnB,YACK;IAAAA,oDAAA,GAAkB;IAAAA,0DAAA,EAAI;IACpDA,4DAAA,iBAAsE;IAA5BA,wDAAA,mBAAAmE,2EAAA;MAAAnE,2DAAA,CAAAoE,IAAA;MAAA,MAAAtC,MAAA,GAAA9B,2DAAA;MAAA,OAAAA,yDAAA,CAAS8B,MAAA,CAAAuC,eAAA,EAAiB;IAAA,EAAC;IAACrE,oDAAA,SAAE;IAE5EA,0DAF4E,EAAS,EAC7E,EACF;;;;IAH4BA,uDAAA,GAAkB;IAAlBA,+DAAA,CAAA8B,MAAA,CAAAyC,YAAA,CAAkB;;;;;;IA9JlDvE,4DALR,cAAoE,cAEpC,cAEQ,SAC5B;IAAAA,oDAAA,yBAAkB;IAC1BA,0DAD0B,EAAK,EACzB;IAMEA,4DAJR,cAAwD,YAC/C,YACE,aACyB,aACC;IAAAA,oDAAA,oBAAY;IAAAA,0DAAA,EAAK;IAC9CA,4DAAA,cAAwD;IAAAA,oDAAA,oCAAkB;IAAAA,0DAAA,EAAK;IAC/EA,4DAAA,cAAgC;IAAAA,oDAAA,oBAAY;IAAAA,0DAAA,EAAK;IACjDA,4DAAA,cAAgC;IAAAA,oDAAA,0BAAa;IAAAA,0DAAA,EAAK;IAClDA,4DAAA,cAAgC;IAAAA,oDAAA,wBAAW;IAE/CA,0DAF+C,EAAK,EAC7C,EACC;IAERA,wDAAA,KAAAwE,oDAAA,oBAA8C;IA+CpCxE,4DALV,aAAO,cACuD,UACtD,eACuB,qBAWiD;IALpEA,8DAAA,2BAAA0E,6EAAAC,MAAA;MAAA3E,2DAAA,CAAA4E,GAAA;MAAA,MAAA9C,MAAA,GAAA9B,2DAAA;MAAAA,gEAAA,CAAA8B,MAAA,CAAAgD,eAAA,EAAAH,MAAA,MAAA7C,MAAA,CAAAgD,eAAA,GAAAH,MAAA;MAAA,OAAA3E,yDAAA,CAAA2E,MAAA;IAAA,EAA6B;IAE7B3E,wDAAA,2BAAA0E,6EAAA;MAAA1E,2DAAA,CAAA4E,GAAA;MAAA,MAAA9C,MAAA,GAAA9B,2DAAA;MAAA,OAAAA,yDAAA,CAAiB8B,MAAA,CAAAiD,oBAAA,EAAsB;IAAA,EAAC;IAKxC/E,4DAAA,kBAAyB;IACvBA,oDAAA,IACF;IAAAA,0DAAA,EAAS;IAiBTA,wDAdA,KAAAgF,2DAAA,2BAA0C,KAAAC,2DAAA,2BAOqB,KAAAC,qDAAA,qBAOL;IAWlElF,0DARM,EAAS,EAOP,EACH;IAKGA,4DAJR,UAAI,eAEqD,iBASvC;IALRA,8DAAA,2BAAAmF,4EAAAR,MAAA;MAAA3E,2DAAA,CAAA4E,GAAA;MAAA,MAAA9C,MAAA,GAAA9B,2DAAA;MAAAA,gEAAA,CAAA8B,MAAA,CAAA0B,cAAA,EAAAmB,MAAA,MAAA7C,MAAA,CAAA0B,cAAA,GAAAmB,MAAA;MAAA,OAAA3E,yDAAA,CAAA2E,MAAA;IAAA,EAA4B;IAQtC3E,0DAVQ,EAOU,EACR,EAEL;IAGHA,4DAFF,UAAI,eAEmD;IACnDA,uDAAA,iBAEkE;IAEtEA,0DADE,EAAM,EACH;IAGHA,4DAFF,UAAI,eAEmD;IACnDA,uDAAA,iBAEmE;;;IAEvEA,0DADE,EAAM,EACH;IAEHA,4DADF,UAAI,eACuB;IACvBA,uDAAA,iBAKkD;IAEtDA,0DADE,EAAM,EACH;IAGHA,4DAFF,UAAI,eAE2D;IAApCA,wDAAA,mBAAAoF,kEAAA;MAAApF,2DAAA,CAAA4E,GAAA;MAAA,MAAA9C,MAAA,GAAA9B,2DAAA;MAAA,OAAAA,yDAAA,CAAS8B,MAAA,CAAAuD,uBAAA,EAAyB;IAAA,EAAC;IAC1DrF,uDAAA,aAA2B;IAKrCA,0DAJQ,EAAM,EACH,EACF,EACC,EACF;IAGRA,wDAAA,KAAAsF,kDAAA,kBAAgD;IAgBtDtF,0DAFI,EAAM,EACF,EACF;;;;IA7JWA,uDAAA,IAAmC;IAAnCA,wDAAA,SAAA8B,MAAA,CAAAiC,kBAAA,CAAAwB,MAAA,KAAmC;IAwDhCvF,uDAAA,GAAmE;IAAnEA,yDAAA,cAAA8B,MAAA,CAAAyC,YAAA,CAAAkB,QAAA,qCAAmE;IALnEzF,8DAAA,YAAA8B,MAAA,CAAAgD,eAAA,CAA6B;IAG7B9E,wDAFA,cAAA8B,MAAA,CAAA6D,kBAAA,CAAgC,gBAAA7D,MAAA,CAAA8D,eAAA,CAED;IAIvB5F,uDAAA,GAAgB;IAAhBA,wDAAA,iBAAgB;IACtBA,uDAAA,EACF;IADEA,gEAAA,MAAA8B,MAAA,CAAA6D,kBAAA,mFACF;IAGe3F,uDAAA,EAAyB;IAAzBA,wDAAA,UAAA8B,MAAA,CAAA6D,kBAAA,CAAyB;IAOzB3F,uDAAA,EAA8C;IAA9CA,wDAAA,SAAA8B,MAAA,CAAA6D,kBAAA,IAAA7D,MAAA,CAAA+D,KAAA,CAAAN,MAAA,OAA8C;IAOjCvF,uDAAA,EAAQ;IAARA,wDAAA,YAAA8B,MAAA,CAAA+D,KAAA,CAAQ;IAkBlC7F,uDAAA,GAA4B;IAA5BA,8DAAA,YAAA8B,MAAA,CAAA0B,cAAA,CAA4B;IAC5BxD,wDAAA,QAAA8B,MAAA,CAAAgD,eAAA,GAAAhD,MAAA,CAAAgD,eAAA,CAAAgB,QAAA,QAAyD;IAY7D9F,uDAAA,GAAwD;IAAxDA,wDAAA,UAAA8B,MAAA,CAAAgD,eAAA,GAAAhD,MAAA,CAAAgD,eAAA,CAAAgB,QAAA,KAAwD;IAQxD9F,uDAAA,GAA2F;IAA3FA,wDAAA,UAAA8B,MAAA,CAAAgD,eAAA,GAAA9E,yDAAA,SAAA8B,MAAA,CAAAgD,eAAA,CAAAlB,SAAA,IAAA5D,yDAAA,YAA2F;IAStFA,uDAAA,GAAoB;IAApBA,wDAAA,UAAA8B,MAAA,CAAA+B,UAAA,CAAoB;IAgBT7D,uDAAA,GAAkB;IAAlBA,wDAAA,SAAA8B,MAAA,CAAAyC,YAAA,CAAkB;;;;;;IA0ClCvE,4DAFN,aAA2H,SACnH,cAC8D;IAC5DA,uDAAA,gBAAgF;IAEtFA,0DADE,EAAM,EACH;IAEHA,4DADF,SAAI,cAC8D;IAC9DA,uDAAA,gBAE8B;IAElCA,0DADE,EAAM,EACH;IAEHA,4DADF,SAAI,cAC8D;IAC5DA,uDAAA,gBAA6G;IAEnHA,0DADE,EAAM,EACH;IAEHA,4DADF,UAAI,eAC8D;IAC9DA,uDAAA,iBAE8B;;IAElCA,0DADE,EAAM,EACH;IAEHA,4DADF,UAAI,eACkC;IAClCA,uDAAA,iBAC4D;IAEhEA,0DADE,EAAM,EACH;IAIHA,4DAFF,UAAI,eAE2D;IAArCA,wDAAA,mBAAA+F,gFAAA;MAAA,MAAAC,KAAA,GAAAhG,2DAAA,CAAAiG,IAAA,EAAA7C,KAAA;MAAA,MAAAtB,MAAA,GAAA9B,2DAAA;MAAA,OAAAA,yDAAA,CAAS8B,MAAA,CAAAuB,uBAAA,CAAA2C,KAAA,CAA0B;IAAA,EAAC;IAC1DhG,uDAAA,aAAoC;IAG5CA,0DAFM,EAAM,EACH,EACJ;;;;IAnCqDA,uDAAA,GAA+B;IAA/BA,wDAAA,UAAAkG,cAAA,CAAA3C,UAAA,CAA+B;IAM/EvD,uDAAA,GAA+H;IAA/HA,wDAAA,UAAAkG,cAAA,CAAAzC,eAAA,IAAAyC,cAAA,CAAAzC,eAAA,OAAAyC,cAAA,CAAAzC,eAAA,GAAAyC,cAAA,CAAA1C,cAAA,CAA+H;IAM/ExD,uDAAA,GAAgC;IAAhCA,wDAAA,UAAAkG,cAAA,CAAAxC,WAAA,CAAgC;IAMhF1D,uDAAA,GAA6C;IAA7CA,wDAAA,UAAAA,yDAAA,QAAAkG,cAAA,CAAAtC,SAAA,EAA6C;IAO/C5D,uDAAA,GAA+B;IAA/BA,wDAAA,UAAAkG,cAAA,CAAArC,UAAA,CAA+B;;;;;IA7B3C7D,4DAAA,YAA8C;IAC1CA,wDAAA,IAAAmG,yDAAA,kBAA2H;IAuC/HnG,0DAAA,EAAQ;;;;IAvCwBA,uDAAA,EAAuB;IAAvBA,wDAAA,YAAA8B,MAAA,CAAAiC,kBAAA,CAAuB;;;;;IA2E3C/D,qEAAA,GAA0C;IACxCA,4DAAA,iBAAiB;IACfA,oDAAA,+CACF;IAAAA,0DAAA,EAAS;;;;;;IAIXA,qEAAA,GAA+D;IAC7DA,4DAAA,iBAAiB;IACfA,oDAAA,qDACF;IAAAA,0DAAA,EAAS;;;;;;IAIXA,4DAAA,iBAA0D;IACxDA,oDAAA,GACF;IAAAA,0DAAA,EAAS;;;;IAF6BA,wDAAA,YAAAoG,WAAA,CAAmB;IACvDpG,uDAAA,EACF;IADEA,gEAAA,MAAAoG,WAAA,CAAAlC,GAAA,MACF;;;;;;IAwDVlE,4DAFJ,cAAgD,cACnB,YACK;IAAAA,oDAAA,GAAkB;IAAAA,0DAAA,EAAI;IACpDA,4DAAA,iBAAsE;IAA5BA,wDAAA,mBAAAqG,2EAAA;MAAArG,2DAAA,CAAAsG,IAAA;MAAA,MAAAxE,MAAA,GAAA9B,2DAAA;MAAA,OAAAA,yDAAA,CAAS8B,MAAA,CAAAuC,eAAA,EAAiB;IAAA,EAAC;IAACrE,oDAAA,SAAE;IAE5EA,0DAF4E,EAAS,EAC7E,EACF;;;;IAH4BA,uDAAA,GAAkB;IAAlBA,+DAAA,CAAA8B,MAAA,CAAAyC,YAAA,CAAkB;;;;;;IAnKlDvE,4DALR,cAAoE,cAEpC,cAEQ,SAC5B;IAAAA,oDAAA,yBAAkB;IAC1BA,0DAD0B,EAAK,EACzB;IAMEA,4DAJR,cAAwD,YAC/C,YACE,aACyB,aACC;IAAAA,oDAAA,oBAAY;IAAAA,0DAAA,EAAK;IAC9CA,4DAAA,cAAwD;IAAAA,oDAAA,oCAAkB;IAAAA,0DAAA,EAAK;IAC/EA,4DAAA,cAAgC;IAAAA,oDAAA,oBAAY;IAAAA,0DAAA,EAAK;IACjDA,4DAAA,cAAgC;IAAAA,oDAAA,0BAAa;IAAAA,0DAAA,EAAK;IAClDA,4DAAA,cAAgC;IAAAA,oDAAA,wBAAW;IAE/CA,0DAF+C,EAAK,EAC7C,EACC;IAERA,wDAAA,KAAAuG,oDAAA,oBAA8C;IA4DtCvG,4DAlBR,aAAO,cACuD,UACtD,eACuB,qBAwBiD;IALpEA,8DAAA,2BAAAwG,6EAAA7B,MAAA;MAAA3E,2DAAA,CAAAyG,IAAA;MAAA,MAAA3E,MAAA,GAAA9B,2DAAA;MAAAA,gEAAA,CAAA8B,MAAA,CAAAgD,eAAA,EAAAH,MAAA,MAAA7C,MAAA,CAAAgD,eAAA,GAAAH,MAAA;MAAA,OAAA3E,yDAAA,CAAA2E,MAAA;IAAA,EAA6B;IAE7B3E,wDAAA,2BAAAwG,6EAAA;MAAAxG,2DAAA,CAAAyG,IAAA;MAAA,MAAA3E,MAAA,GAAA9B,2DAAA;MAAA,OAAAA,yDAAA,CAAiB8B,MAAA,CAAAiD,oBAAA,EAAsB;IAAA,EAAC;IAKxC/E,4DAAA,kBAAyB;IACvBA,oDAAA,IACF;IAAAA,0DAAA,EAAS;IAiBTA,wDAdA,KAAA0G,2DAAA,2BAA0C,KAAAC,2DAAA,2BAOqB,KAAAC,qDAAA,qBAOL;IAKlE5G,0DAFM,EAAS,EACP,EACH;IAICA,4DAHN,UAAI,YACI,eACiD,iBAOzC;IALRA,8DAAA,2BAAA6G,4EAAAlC,MAAA;MAAA3E,2DAAA,CAAAyG,IAAA;MAAA,MAAA3E,MAAA,GAAA9B,2DAAA;MAAAA,gEAAA,CAAA8B,MAAA,CAAA2B,eAAA,EAAAkB,MAAA,MAAA7C,MAAA,CAAA2B,eAAA,GAAAkB,MAAA;MAAA,OAAA3E,yDAAA,CAAA2E,MAAA;IAAA,EAA6B;IAQrC3E,0DATM,EAMU,EACN,EACD,EACJ;IAGHA,4DAFF,UAAI,eAEmD;IACnDA,uDAAA,iBAEkE;IAEtEA,0DADE,EAAM,EACH;IAGHA,4DAFF,UAAI,eAEmD;IACnDA,uDAAA,iBAEmE;;;IAEvEA,0DADE,EAAM,EACH;IAEHA,4DADF,UAAI,eACuB;IACvBA,uDAAA,iBAKmC;IAEvCA,0DADE,EAAM,EACH;IAGHA,4DAFF,UAAI,eAE+D;IAAxCA,wDAAA,mBAAA8G,kEAAA;MAAA9G,2DAAA,CAAAyG,IAAA;MAAA,MAAA3E,MAAA,GAAA9B,2DAAA;MAAA,OAAAA,yDAAA,CAAS8B,MAAA,CAAAiF,2BAAA,EAA6B;IAAA,EAAC;IAC9D/G,uDAAA,aAA2B;IAKrCA,0DAJQ,EAAM,EACH,EACF,EACC,EACF;IAGRA,wDAAA,KAAAgH,kDAAA,kBAAgD;IAgBtDhH,0DAFI,EAAM,EACF,EACF;;;;IAlKWA,uDAAA,IAAmC;IAAnCA,wDAAA,SAAA8B,MAAA,CAAAiC,kBAAA,CAAAwB,MAAA,KAAmC;IAqEhCvF,uDAAA,GAAmE;IAAnEA,yDAAA,cAAA8B,MAAA,CAAAyC,YAAA,CAAAkB,QAAA,qCAAmE;IALnEzF,8DAAA,YAAA8B,MAAA,CAAAgD,eAAA,CAA6B;IAG7B9E,wDAFA,cAAA8B,MAAA,CAAA6D,kBAAA,CAAgC,gBAAA7D,MAAA,CAAA8D,eAAA,CAED;IAIvB5F,uDAAA,GAAgB;IAAhBA,wDAAA,iBAAgB;IACtBA,uDAAA,EACF;IADEA,gEAAA,MAAA8B,MAAA,CAAA6D,kBAAA,mFACF;IAGe3F,uDAAA,EAAyB;IAAzBA,wDAAA,UAAA8B,MAAA,CAAA6D,kBAAA,CAAyB;IAOzB3F,uDAAA,EAA8C;IAA9CA,wDAAA,SAAA8B,MAAA,CAAA6D,kBAAA,IAAA7D,MAAA,CAAA+D,KAAA,CAAAN,MAAA,OAA8C;IAOjCvF,uDAAA,EAAQ;IAARA,wDAAA,YAAA8B,MAAA,CAAA+D,KAAA,CAAQ;IAUpC7F,uDAAA,GAA6B;IAA7BA,8DAAA,YAAA8B,MAAA,CAAA2B,eAAA,CAA6B;IAC7BzD,wDAAA,QAAA8B,MAAA,CAAAgD,eAAA,GAAAhD,MAAA,CAAAgD,eAAA,CAAAgB,QAAA,QAAyD;IAY3D9F,uDAAA,GAAwD;IAAxDA,wDAAA,UAAA8B,MAAA,CAAAgD,eAAA,GAAAhD,MAAA,CAAAgD,eAAA,CAAAgB,QAAA,KAAwD;IAQxD9F,uDAAA,GAA2F;IAA3FA,wDAAA,UAAA8B,MAAA,CAAAgD,eAAA,GAAA9E,yDAAA,SAAA8B,MAAA,CAAAgD,eAAA,CAAAlB,SAAA,IAAA5D,yDAAA,YAA2F;IAStFA,uDAAA,GAAoB;IAApBA,wDAAA,UAAA8B,MAAA,CAAA+B,UAAA,CAAoB;IAgBT7D,uDAAA,GAAkB;IAAlBA,wDAAA,SAAA8B,MAAA,CAAAyC,YAAA,CAAkB;;;;;;IA0ClCvE,4DAFN,aAA2H,SACnH,cAC8D;IAC5DA,uDAAA,gBAAgF;IAEtFA,0DADE,EAAM,EACH;IAEHA,4DADF,SAAI,cAC8D;IAC9DA,uDAAA,gBAE8B;IAElCA,0DADE,EAAM,EACH;IAEHA,4DADF,SAAI,cAC8D;IAC5DA,uDAAA,gBAA6G;IAEnHA,0DADE,EAAM,EACH;IAEHA,4DADF,UAAI,eAC8D;IAC5DA,uDAAA,iBAEgC;IAExCA,0DADI,EAAM,EACL;IAEDA,4DADF,UAAI,eAC8D;IAE9DA,uDAAA,iBAA6F;IAEjGA,0DADE,EAAM,EACH;IAIHA,4DAFF,UAAI,eAE2D;IAArCA,wDAAA,mBAAAiH,gFAAA;MAAA,MAAAC,KAAA,GAAAlH,2DAAA,CAAAmH,IAAA,EAAA/D,KAAA;MAAA,MAAAtB,MAAA,GAAA9B,2DAAA;MAAA,OAAAA,yDAAA,CAAS8B,MAAA,CAAAuB,uBAAA,CAAA6D,KAAA,CAA0B;IAAA,EAAC;IAC1DlH,uDAAA,aAAoC;IAG5CA,0DAFM,EAAM,EACH,EACJ;;;;IAnCqDA,uDAAA,GAA+B;IAA/BA,wDAAA,UAAAoH,cAAA,CAAA7D,UAAA,CAA+B;IAM/EvD,uDAAA,GAA6B;IAA7BA,wDAAA,UAAAoH,cAAA,CAAAtB,QAAA,CAA6B;IAMmB9F,uDAAA,GAAgC;IAAhCA,wDAAA,UAAAoH,cAAA,CAAA1D,WAAA,CAAgC;IAM5E1D,uDAAA,GAAgC;IAAhCA,wDAAA,UAAAoH,cAAA,CAAA1D,WAAA,CAAgC;IAOU1D,uDAAA,GAA4C;IAA5CA,wDAAA,UAAAoH,cAAA,CAAAC,uBAAA,CAA4C;;;;;IA7BxGrH,4DAAA,YAA6C;IACzCA,wDAAA,IAAAsH,yDAAA,kBAA2H;IAuC/HtH,0DAAA,EAAQ;;;;IAvCwBA,uDAAA,EAAuB;IAAvBA,wDAAA,YAAA8B,MAAA,CAAAiC,kBAAA,CAAuB;;;;;IA6D3C/D,qEAAA,GAA0C;IACxCA,4DAAA,iBAAiB;IACfA,oDAAA,+CACF;IAAAA,0DAAA,EAAS;;;;;;IAIXA,qEAAA,GAA+D;IAC7DA,4DAAA,iBAAiB;IACfA,oDAAA,qDACF;IAAAA,0DAAA,EAAS;;;;;;IAIXA,4DAAA,iBAA0D;IACxDA,oDAAA,GACF;IAAAA,0DAAA,EAAS;;;;IAF6BA,wDAAA,YAAAuH,WAAA,CAAmB;IACvDvH,uDAAA,EACF;IADEA,gEAAA,MAAAuH,WAAA,CAAArD,GAAA,MACF;;;;;IAuDElE,4DAAA,eAAwF;IACtFA,oDAAA,gDACF;IAAAA,0DAAA,EAAO;;;;;IACPA,4DAAA,eAAwE;IACtEA,oDAAA,oBACF;IAAAA,0DAAA,EAAO;;;;;IAVTA,4DAAA,qBAGqE;IACnEA,oDAAA,GACA;IAGAA,wDAHA,IAAAwH,gEAAA,mBAAwF,IAAAC,gEAAA,mBAGhB;IAG1EzH,0DAAA,EAAa;;;;;IARXA,wDADA,UAAA0H,YAAA,CAAkB,aAAAA,YAAA,CAAApJ,EAAA,KAAAwD,MAAA,CAAA6D,kBAAA,KAAA+B,YAAA,CAAAC,KAAA,CACgD;IAClE3H,uDAAA,EACA;IADAA,gEAAA,MAAA0H,YAAA,CAAA5J,IAAA,MACA;IAAOkC,uDAAA,EAAwC;IAAxCA,wDAAA,SAAA0H,YAAA,CAAApJ,EAAA,KAAAwD,MAAA,CAAA6D,kBAAA,CAAwC;IAGxC3F,uDAAA,EAAqB;IAArBA,wDAAA,UAAA0H,YAAA,CAAAC,KAAA,CAAqB;;;;;;IAoBtC3H,4DAFN,cAAgD,cACnB,YACO;IAAAA,oDAAA,GAAkB;IAAAA,0DAAA,EAAI;IACpDA,4DAAA,iBAAsE;IAA5BA,wDAAA,mBAAA4H,2EAAA;MAAA5H,2DAAA,CAAA6H,IAAA;MAAA,MAAA/F,MAAA,GAAA9B,2DAAA;MAAA,OAAAA,yDAAA,CAAA8B,MAAA,CAAAyC,YAAA,GAAwB,EAAE;IAAA,EAAC;IAACvE,oDAAA,SAAE;IAEhFA,0DAFgF,EAAS,EAC/E,EACJ;;;;IAHgCA,uDAAA,GAAkB;IAAlBA,+DAAA,CAAA8B,MAAA,CAAAyC,YAAA,CAAkB;;;;;;IA3KpDvE,4DALR,cAAsE,cAEtC,cAEQ,SAC5B;IAAAA,oDAAA,6BAAsB;IAC9BA,0DAD8B,EAAK,EAC7B;IAMEA,4DAJR,cAAwD,YAC/C,YACE,aACyB,aACW;IAAAA,oDAAA,oBAAY;IAAAA,0DAAA,EAAK;IACxDA,4DAAA,cAA4E;IAAAA,oDAAA,kCAAqB;IAAAA,0DAAA,EAAK;IACtGA,4DAAA,cAAgC;IAAAA,oDAAA,oBAAY;IAAAA,0DAAA,EAAK;IACjDA,4DAAA,cAAgC;IAAAA,oDAAA,wBAAW;IAAAA,0DAAA,EAAK;IAChDA,4DAAA,cAAgC;IAAAA,oDAAA,0BAAkB;IAEtDA,0DAFsD,EAAK,EACpD,EACC;IAERA,wDAAA,KAAA8H,oDAAA,oBAA6C;IA8CrC9H,4DAJR,aAAO,cACuD,UACtD,eACmD,qBAUqB;IALpEA,8DAAA,2BAAA+H,6EAAApD,MAAA;MAAA3E,2DAAA,CAAAgI,IAAA;MAAA,MAAAlG,MAAA,GAAA9B,2DAAA;MAAAA,gEAAA,CAAA8B,MAAA,CAAAgD,eAAA,EAAAH,MAAA,MAAA7C,MAAA,CAAAgD,eAAA,GAAAH,MAAA;MAAA,OAAA3E,yDAAA,CAAA2E,MAAA;IAAA,EAA6B;IAE7B3E,wDAAA,2BAAA+H,6EAAA;MAAA/H,2DAAA,CAAAgI,IAAA;MAAA,MAAAlG,MAAA,GAAA9B,2DAAA;MAAA,OAAAA,yDAAA,CAAiB8B,MAAA,CAAAiD,oBAAA,EAAsB;IAAA,EAAC;IAKxC/E,4DAAA,kBAAyB;IACvBA,oDAAA,IACF;IAAAA,0DAAA,EAAS;IAiBTA,wDAdA,KAAAiI,2DAAA,2BAA0C,KAAAC,2DAAA,2BAOqB,KAAAC,qDAAA,qBAOL;IAKlEnI,0DAFI,EAAS,EACL,EACH;IAICA,4DAHN,UAAI,YACI,eACiD,iBAOzC;IALRA,8DAAA,2BAAAoI,4EAAAzD,MAAA;MAAA3E,2DAAA,CAAAgI,IAAA;MAAA,MAAAlG,MAAA,GAAA9B,2DAAA;MAAAA,gEAAA,CAAA8B,MAAA,CAAA2B,eAAA,EAAAkB,MAAA,MAAA7C,MAAA,CAAA2B,eAAA,GAAAkB,MAAA;MAAA,OAAA3E,yDAAA,CAAA2E,MAAA;IAAA,EAA6B;IAQrC3E,0DATM,EAMU,EACN,EACD,EACJ;IAGHA,4DAFF,UAAI,eAEmD;IACnDA,uDAAA,iBAEkE;IAEtEA,0DADE,EAAM,EACH;IAEHA,4DADF,UAAI,eACmD;IACnDA,uDAAA,iBAKmC;IAEvCA,0DADE,EAAM,EACH;IAEHA,4DADF,UAAI,eACoC;IACpCA,uDAAA,iBAQG;IACDA,4DAAA,iBAAsC;IAAAA,oDAAA,gBAAQ;IAAAA,0DAAA,EAAQ;IACtDA,4DAAA,+BAE2D;IAD3CA,wDAAA,4BAAAqI,wFAAA1D,MAAA;MAAA3E,2DAAA,CAAAgI,IAAA;MAAA,MAAAlG,MAAA,GAAA9B,2DAAA;MAAA,OAAAA,yDAAA,CAAkB8B,MAAA,CAAAwG,2BAAA,CAAA3D,MAAA,CAAmC;IAAA,EAAC;IAEpE3E,wDAAA,KAAAuI,yDAAA,yBAGqE;;IAW7EvI,0DAFM,EAAmB,EACjB,EACH;IAGHA,4DAFF,UAAI,eAEiE;IAA1CA,wDAAA,mBAAAwI,kEAAA;MAAAxI,2DAAA,CAAAgI,IAAA;MAAA,MAAAlG,MAAA,GAAA9B,2DAAA;MAAA,OAAAA,yDAAA,CAAS8B,MAAA,CAAA2G,6BAAA,EAA+B;IAAA,EAAC;IAChEzI,uDAAA,aAA2B;IAKrCA,0DAJQ,EAAM,EACH,EACF,EACC,EACF;IAGRA,wDAAA,KAAA0I,kDAAA,kBAAgD;IASxD1I,0DAFM,EAAM,EACF,EACJ;;;;;IAnKYA,uDAAA,IAAmC;IAAnCA,wDAAA,SAAA8B,MAAA,CAAAiC,kBAAA,CAAAwB,MAAA,KAAmC;IAuD/BvF,uDAAA,GAAmE;IAAnEA,yDAAA,cAAA8B,MAAA,CAAAyC,YAAA,CAAAkB,QAAA,qCAAmE;IALnEzF,8DAAA,YAAA8B,MAAA,CAAAgD,eAAA,CAA6B;IAG7B9E,wDAFA,cAAA8B,MAAA,CAAA6D,kBAAA,CAAgC,gBAAA7D,MAAA,CAAA8D,eAAA,CAED;IAIvB5F,uDAAA,GAAgB;IAAhBA,wDAAA,iBAAgB;IACtBA,uDAAA,EACF;IADEA,gEAAA,MAAA8B,MAAA,CAAA6D,kBAAA,0EACF;IAGe3F,uDAAA,EAAyB;IAAzBA,wDAAA,UAAA8B,MAAA,CAAA6D,kBAAA,CAAyB;IAOzB3F,uDAAA,EAA8C;IAA9CA,wDAAA,SAAA8B,MAAA,CAAA6D,kBAAA,IAAA7D,MAAA,CAAA+D,KAAA,CAAAN,MAAA,OAA8C;IAOjCvF,uDAAA,EAAQ;IAARA,wDAAA,YAAA8B,MAAA,CAAA+D,KAAA,CAAQ;IAUpC7F,uDAAA,GAA6B;IAA7BA,8DAAA,YAAA8B,MAAA,CAAA2B,eAAA,CAA6B;IAC7BzD,wDAAA,QAAA8B,MAAA,CAAAgD,eAAA,GAAAhD,MAAA,CAAAgD,eAAA,CAAAgB,QAAA,QAAyD;IAY3D9F,uDAAA,GAAwD;IAAxDA,wDAAA,UAAA8B,MAAA,CAAAgD,eAAA,GAAAhD,MAAA,CAAAgD,eAAA,CAAAgB,QAAA,KAAwD;IASnD9F,uDAAA,GAAoB;IAApBA,wDAAA,UAAA8B,MAAA,CAAA+B,UAAA,CAAoB;IAavB7D,uDAAA,GAAwC;IACxCA,wDADA,gBAAA8B,MAAA,CAAA6G,wBAAA,CAAwC,oBAAAC,yBAAA,CACC;IAK3B5I,uDAAA,GAA0C;IAA1CA,wDAAA,gBAAA8B,MAAA,CAAA+G,0BAAA,CAA0C;IAEjC7I,uDAAA,GAA2C;IAA3CA,wDAAA,YAAAA,yDAAA,SAAA8B,MAAA,CAAAgH,gCAAA,EAA2C;IAyBpD9I,uDAAA,GAAkB;IAAlBA,wDAAA,SAAA8B,MAAA,CAAAyC,YAAA,CAAkB;;;;;;IAe9CvE,4DAHN,cAAoE,cACf,cACxB,iBAC0B;IAAtBA,wDAAA,mBAAA+I,oEAAA;MAAA/I,2DAAA,CAAAgJ,IAAA;MAAA,MAAAlH,MAAA,GAAA9B,2DAAA;MAAA,OAAAA,yDAAA,CAAS8B,MAAA,CAAAmH,SAAA,EAAW;IAAA,EAAC;IAACjJ,oDAAA,cAAO;IAC1DA,0DAD0D,EAAS,EAC7D;IAEJA,4DADF,cAAyB,iBAC6B;IAA3BA,wDAAA,mBAAAkJ,oEAAA;MAAAlJ,2DAAA,CAAAgJ,IAAA;MAAA,MAAAlH,MAAA,GAAA9B,2DAAA;MAAA,OAAAA,yDAAA,CAAS8B,MAAA,CAAAqH,cAAA,EAAgB;IAAA,EAAC;IAACnJ,oDAAA,cAAO;IAGjEA,0DAHiE,EAAS,EAChE,EACF,EACF;;;;;;IAMAA,4DAHN,cAAoE,cACf,cACxB,iBAC0B;IAAtBA,wDAAA,mBAAAoJ,oEAAA;MAAApJ,2DAAA,CAAAqJ,IAAA;MAAA,MAAAvH,MAAA,GAAA9B,2DAAA;MAAA,OAAAA,yDAAA,CAAS8B,MAAA,CAAAmH,SAAA,EAAW;IAAA,EAAC;IAACjJ,oDAAA,cAAO;IAC1DA,0DAD0D,EAAS,EAC7D;IAEJA,4DADF,cAAyB,iBAC6B;IAA3BA,wDAAA,mBAAAsJ,oEAAA;MAAAtJ,2DAAA,CAAAqJ,IAAA;MAAA,MAAAvH,MAAA,GAAA9B,2DAAA;MAAA,OAAAA,yDAAA,CAAS8B,MAAA,CAAAyH,cAAA,EAAgB;IAAA,EAAC;IAACvJ,oDAAA,cAAO;IAGjEA,0DAHiE,EAAS,EAChE,EACF,EACF;;;;;;IAMAA,4DAHN,cAAsE,cACjB,cACxB,iBAC0B;IAAtBA,wDAAA,mBAAAwJ,oEAAA;MAAAxJ,2DAAA,CAAAyJ,IAAA;MAAA,MAAA3H,MAAA,GAAA9B,2DAAA;MAAA,OAAAA,yDAAA,CAAS8B,MAAA,CAAAmH,SAAA,EAAW;IAAA,EAAC;IAACjJ,oDAAA,cAAO;IAC1DA,0DAD0D,EAAS,EAC7D;IAEJA,4DADF,cAAyB,iBACiC;IAA/BA,wDAAA,mBAAA0J,oEAAA;MAAA1J,2DAAA,CAAAyJ,IAAA;MAAA,MAAA3H,MAAA,GAAA9B,2DAAA;MAAA,OAAAA,yDAAA,CAAS8B,MAAA,CAAA6H,kBAAA,EAAoB;IAAA,EAAC;IAAC3J,oDAAA,sBAAU;IAGxEA,0DAHwE,EAAS,EACvE,EACF,EACF;;;;;;IAMFA,4DAFJ,cAAkD,cACrB,YACK;IAAAA,oDAAA,GAAoB;IAAAA,0DAAA,EAAI;IACtDA,4DAAA,iBAAwE;IAA9BA,wDAAA,mBAAA4J,oEAAA;MAAA5J,2DAAA,CAAA6J,IAAA;MAAA,MAAA/H,MAAA,GAAA9B,2DAAA;MAAA,OAAAA,yDAAA,CAAA8B,MAAA,CAAAgI,cAAA,GAA0B,EAAE;IAAA,EAAC;IAAC9J,oDAAA,SAAE;IAE9EA,0DAF8E,EAAS,EAC/E,EACF;;;;IAH4BA,uDAAA,GAAoB;IAApBA,+DAAA,CAAA8B,MAAA,CAAAgI,cAAA,CAAoB;;;;;IAQlD9J,4DAFJ,cAAqD,cACxB,YACK;IAAAA,oDAAA,GAAuB;IAGzDA,0DAHyD,EAAI,EAErD,EACF;;;;IAH4BA,uDAAA,GAAuB;IAAvBA,+DAAA,CAAA8B,MAAA,CAAAiI,iBAAA,CAAuB;;;ADpqB/D,MAAOC,2BAA2B;EA6CtC;EACArN;EACI;EACQsN,cAA8B,EAC9BC,EAAe,EACfC,MAAc,EACdtN,YAA0B,EAC1BuN,YAA0B,EAC1BC,KAAwB,EACxBC,gBAAkC;IANlC,KAAAL,cAAc,GAAdA,cAAc;IACd,KAAAC,EAAE,GAAFA,EAAE;IACF,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAtN,YAAY,GAAZA,YAAY;IACZ,KAAAuN,YAAY,GAAZA,YAAY;IACZ,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,gBAAgB,GAAhBA,gBAAgB;IAjDpB,KAAAC,QAAQ,GAAG,IAAItJ,yCAAO,EAAQ;IAItC,KAAAsD,YAAY,GAAW,EAAE;IACzB,KAAAwF,iBAAiB,GAAW,EAAE;IAE9B;IACA,KAAAS,2BAA2B,GAAQ,IAAI;IAEvC;IACA,KAAAC,YAAY,GAAW,EAAE;IACzB,KAAAC,cAAc,GAAW,SAAS;IAElC;IACA,KAAAC,aAAa,GAAY,KAAK;IAE9B;IACA,KAAA5G,kBAAkB,GAAU,EAAE;IAE9B;IACA,KAAA+F,cAAc,GAAW,EAAE;IAE3B;IACA,KAAAc,iBAAiB,GAAW,EAAE;IAC9B,KAAAC,qBAAqB,GAAW,EAAE;IAClC,KAAAlF,kBAAkB,GAAkB,IAAI;IAExC,KAAA5D,eAAe,GAAG,IAAIrB,uDAAW,CAAC,EAAE,CAAC;IACrC,KAAAiI,wBAAwB,GAAG,IAAIjI,uDAAW,CAAC,EAAE,CAAC;IAC9C,KAAAoK,eAAe,GAAmD,EAAE;IACpE,KAAAC,wBAAwB,GAAmD,EAAE;IAK7E,KAAAC,iBAAiB,GAAG,KAAK;IA2FzB;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA,KAAAlG,eAAe,GAAmB,IAAI;IACtC,KAAAe,KAAK,GAAc,EAAE;IAEpB,KAAAoF,mBAAmB,GAAwB,IAAI;IAEhD,KAAAlI,YAAY,GAAmB,EAAE;IAiCjC;IACA,KAAAS,cAAc,GAAkB,IAAI;IACpC,KAAAC,eAAe,GAAkB,IAAI;IACrC,KAAAyH,gBAAgB,GAAW,EAAE;IAC7B,KAAAC,iBAAiB,GAAW,EAAE;IAC9B,KAAAC,eAAe,GAAW,EAAE;IAwC5B;IACA,KAAAC,cAAc,GAAY,EAAE;EA1KzB;EAEHpC,SAASA,CAAA;IACP,IAAI,CAACkB,MAAM,CAACmB,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;EACnC;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACC,eAAe,EAAE;IACtB;IACA;IACA;IACA,IAAI,CAACC,aAAa,EAAE;IACpB,IAAI,CAACC,mBAAmB,EAAE;IAC1B,IAAI,CAACC,gBAAgB,EAAE;EACzB;EAEAD,mBAAmBA,CAAA;IACjB,IAAI,CAAC3J,eAAe,CAAC6J,YAAY,CAChC5N,IAAI,CAACkD,+CAAS,CAAC,IAAI,CAACqJ,QAAQ,CAAC,CAAC,CAC9BsB,SAAS,CAAC7J,KAAK,IAAG;MACjB,IAAI,CAACA,KAAK,EAAE;QACV,IAAI,CAAC8J,yBAAyB,EAAE;MAClC;IACF,CAAC,CAAC;EACJ;EAEA;EACQA,yBAAyBA,CAAA;IAC/B,IAAI,CAACnG,kBAAkB,GAAG,IAAI;IAC9B,IAAI,CAACE,KAAK,GAAG,EAAE;IACf,IAAI,CAAC9B,kBAAkB,GAAG,EAAE;IAC5B,IAAI,CAACe,eAAe,GAAG,IAAI;IAC3B,IAAI,CAACuF,KAAK,CAAC0B,aAAa,EAAE;EAC5B;EAEA;EACAC,WAAWA,CAAA;IACT,IAAI,CAACzB,QAAQ,CAAC0B,IAAI,EAAE;IACpB,IAAI,CAAC1B,QAAQ,CAAC2B,QAAQ,EAAE;EAC1B;EAEAC,sBAAsBA,CAAA;IACpB,IAAI,CAAC,IAAI,CAACpK,eAAe,CAACC,KAAK,EAAE;MAC/B,IAAI,CAAC8J,yBAAyB,EAAE;IAClC;EACF;EAEAN,eAAeA,CAAA;IACb,IAAI,CAAC3O,YAAY,CAACuP,WAAW,EAAE,CAACP,SAAS,CACtCQ,QAAQ,IAAI;MACX,IAAIA,QAAQ,IAAIA,QAAQ,CAACC,SAAS,EAAE;QAClC;QACA,IAAI,CAACxB,eAAe,GAAGuB,QAAQ,CAACC,SAAS,CACtCC,MAAM,CAAEC,QAAa,IAAKA,QAAQ,CAAC7E,KAAK,CAAC,CAAC;QAAA,CAC1C5G,GAAG,CAAEyL,QAAa,KAAM;UACvBlO,EAAE,EAAEkO,QAAQ,CAAClO,EAAE;UACfR,IAAI,EAAE0O,QAAQ,CAACC,WAAW;UAC1B9E,KAAK,EAAE6E,QAAQ,CAAC7E,KAAK,CAAC;SACvB,CAAC,CAAC;QAEL;QACA;QACA;QACA;QACA;QAEA,IAAI,CAACoD,wBAAwB,GAAG,CAAC,GAAG,IAAI,CAACD,eAAe,CAAC;QACzD,IAAI,CAAC4B,0BAA0B,EAAE;QACjC,IAAI,CAACC,mCAAmC,EAAE;MAC5C;IACF,CAAC,EACA3N,KAAK,IAAI;MACR4N,OAAO,CAAC5N,KAAK,CAAC,6DAA6D,EAAEA,KAAK,CAAC;IACrF,CAAC,CACF;EACH;EAkBA;EACA6N,YAAYA,CAAC/N,UAAkB;IAC7B,IAAI,CAACA,UAAU,EAAE;MACf,IAAI,CAAC+G,KAAK,GAAG,EAAE,CAAC,CAAC;MACjB;IACF;IAEA,IAAI,CAACoE,cAAc,CAACpL,qBAAqB,CAACC,UAAU,CAAC,CAAC+M,SAAS,CAAC;MAC9DI,IAAI,EAAGa,QAAmB,IAAI;QAC5B,IAAI,CAACjH,KAAK,GAAGiH,QAAQ,CAClBP,MAAM,CAACQ,IAAI,IAAIA,IAAI,CAACvO,OAAO,CAAC,CAC5BuC,GAAG,CAACgM,IAAI,KAAK;UAAE,GAAGA;QAAI,CAAE,CAAC,CAAC,CAAC;QAAA,CAC3BC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAI;UACb,MAAMC,SAAS,GAAIC,OAA2B,IAAY;YACxD,IAAI;cACF,OAAOA,OAAO,GAAG,IAAIC,IAAI,CAACD,OAAO,CAAC,CAACE,OAAO,EAAE,GAAG,CAAC;YAClD,CAAC,CAAC,MAAM;cACN,OAAO,CAAC;YACV;UACF,CAAC;UAED,OAAOH,SAAS,CAACD,CAAC,CAACK,SAAS,CAAC,GAAGJ,SAAS,CAACF,CAAC,CAACM,SAAS,CAAC;QACxD,CAAC,CAAC;MACN,CAAC;MACDvO,KAAK,EAAGwO,GAAG,IAAI;QACbZ,OAAO,CAAC5N,KAAK,CAAC,6CAA6C,EAAEwO,GAAG,CAAC;QACjE,IAAI,CAAC3H,KAAK,GAAG,EAAE;MACjB;KACD,CAAC;EACJ;EASA;EACA;EAEA;EAEA,IAAI1D,CAACA,CAAA;IACH,OAAO,IAAI,CAACsL,UAAU,CAACC,QAAQ;EACjC;EACA,IAAIC,CAACA,CAAA;IAAK,OAAO,IAAI,CAACC,iBAAiB,CAACF,QAAQ;EAAE;EAElD;EACA/B,gBAAgBA,CAAA;IACd,IAAI,CAAC1B,cAAc,CAAC1K,eAAe,EAAE,CAACsM,SAAS,CAAC;MAC9CI,IAAI,EAAGlJ,YAA4B,IAAI;QACrC,IAAI,CAACA,YAAY,GAAGA,YAAY;QAChC6J,OAAO,CAACiB,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC9K,YAAY,CAAC;MACjD,CAAC;MACD/D,KAAK,EAAGwO,GAAG,IAAI;QACbZ,OAAO,CAAC5N,KAAK,CAAC,iDAAiD,EAAEwO,GAAG,CAAC;QACrE,IAAI,CAACzK,YAAY,GAAG,EAAE;MACxB;KACD,CAAC;EACJ;EAGA,IAAIc,UAAUA,CAAA;IACZ,IAAI,CAAC,IAAI,CAACiB,eAAe,EAAE,OAAO,EAAE;IACpC,MAAMpB,WAAW,GAAGoK,MAAM,CAAC,IAAI,CAAChJ,eAAe,CAACgB,QAAQ,CAAC;IACzD,IAAI,IAAI,CAAC4E,cAAc,KAAK,SAAS,IAAI,IAAI,CAAClH,cAAc,EAAE;MAC5D,OAAOE,WAAW,GAAGoK,MAAM,CAAC,IAAI,CAACtK,cAAc,CAAC;IAClD,CAAC,MAAM,IAAI,IAAI,CAACkH,cAAc,KAAK,SAAS,IAAI,IAAI,CAACjH,eAAe,EAAE;MACpE,OAAOC,WAAW,GAAGoK,MAAM,CAAC,IAAI,CAACrK,eAAe,CAAC;IACnD,CAAC,MAAM,IAAI,IAAI,CAACiH,cAAc,KAAK,WAAW,IAAI,IAAI,CAACjH,eAAe,EAAE;MACtE,OAAOC,WAAW,GAAG,IAAI,CAACD,eAAe;IAC3C;IACA,OAAO,EAAE;EACX;EAKA;EACAsK,kBAAkBA,CAAA;IAChB;IACA,MAAM9P,KAAK,GAAG,IAAI,CAACpB,YAAY,CAACmR,QAAQ,EAAE;IAC1C,IAAI,CAAC/P,KAAK,EAAE;MACV2O,OAAO,CAAC5N,KAAK,CAAC,mBAAmB,CAAC;MAClC,OAAO,CAAC;IACV;IACA,IAAI,CAACoL,YAAY,CAAC6D,YAAY,EAAE,CAACpC,SAAS,CAAC;MACzCI,IAAI,EAAGiC,MAAe,IAAI;QACxB;QACA,IAAI,CAAC7C,cAAc,GAAG6C,MAAM,CAAC3B,MAAM,CAAC4B,KAAK,IACtCA,KAAK,CAAC3K,cAAc,IAAI2K,KAAK,CAAC3K,cAAc,GAAG,CAAC,IAChD2K,KAAK,CAAC1K,eAAe,IAAI0K,KAAK,CAAC1K,eAAe,GAAG,CAAE,CACrD;MACH,CAAC;MACDzE,KAAK,EAAGA,KAAK,IAAI;QACf4N,OAAO,CAAC5N,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;MACtE;KACD,CAAC;EACJ;EAEA;EACAoP,cAAcA,CAACD,KAAY;IACzB,IAAIA,KAAK,CAACE,SAAS,EAAE;MACnBzB,OAAO,CAACiB,GAAG,CAAC,uBAAuB,EAAEM,KAAK,CAACE,SAAS,CAAC;MACrD,MAAMjR,OAAO,GAAG,IAAI,CAACyI,KAAK,CAACyI,IAAI,CAACvB,IAAI,IAAIA,IAAI,CAACzO,EAAE,KAAK6P,KAAK,CAACE,SAAS,CAAC;MACpE,IAAIjR,OAAO,EAAE;QACXwP,OAAO,CAACiB,GAAG,CAAC,iBAAiB,EAAEzQ,OAAO,CAAC;QACvC,OAAOA,OAAO,CAAC8G,GAAG;QAClB;MACF,CAAC,MAAM;QACL0I,OAAO,CAAC2B,IAAI,CAAC,2CAA2C,EAAEJ,KAAK,CAACE,SAAS,CAAC;QAC1E,OAAO,iBAAiB;MAC1B;IACF;IACAzB,OAAO,CAAC2B,IAAI,CAAC,wCAAwC,EAAEJ,KAAK,CAAC;IAC7D,OAAO,iBAAiB;EAC1B;EAEA;EACAK,mBAAmBA,CAACL,KAAY;IAC9B,IAAIA,KAAK,CAACE,SAAS,EAAE;MACnBzB,OAAO,CAACiB,GAAG,CAAC,uBAAuB,EAAEM,KAAK,CAACE,SAAS,CAAC;MACrD,MAAMjR,OAAO,GAAG,IAAI,CAACyI,KAAK,CAACyI,IAAI,CAACvB,IAAI,IAAIA,IAAI,CAACzO,EAAE,KAAK6P,KAAK,CAACE,SAAS,CAAC;MACpE,IAAIjR,OAAO,EAAE;QACXwP,OAAO,CAACiB,GAAG,CAAC,iBAAiB,EAAEzQ,OAAO,CAAC;QACvC;QACA,OAAO,GAAGA,OAAO,CAACwG,SAAS,EAAE;MAC/B,CAAC,MAAM;QACLgJ,OAAO,CAAC2B,IAAI,CAAC,2CAA2C,EAAEJ,KAAK,CAACE,SAAS,CAAC;QAC1E,OAAO,iBAAiB;MAC1B;IACF;IACAzB,OAAO,CAAC2B,IAAI,CAAC,wCAAwC,EAAEJ,KAAK,CAAC;IAC7D,OAAO,iBAAiB;EAC1B;EAEA;EACAM,qBAAqBA,CAAA;IACnB,MAAMC,gBAAgB,GAAGC,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC;IACjE,IAAIF,gBAAgB,KAAK,MAAM,EAAE;MAC/B,IAAI,CAAC/D,aAAa,GAAG,IAAI;IAC3B,CAAC,MAAM;MACL,IAAI,CAACA,aAAa,GAAG,KAAK;IAC5B;EACF;EAEAc,aAAaA,CAAA;IACX,IAAI,CAACgC,UAAU,GAAG,IAAI,CAACvD,EAAE,CAAC2E,KAAK,CAAC;MAC9B/P,UAAU,EAAE,CAAC,IAAI,EAAE+B,sDAAU,CAACiO,QAAQ,CAAC;MACvClE,iBAAiB,EAAE,CAAC,EAAE,EAAE,CAAC/J,sDAAU,CAACkO,SAAS,CAAC,CAAC,CAAC,EAAElO,sDAAU,CAACmO,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;MAC7E5D,eAAe,EAAE,CAAC,EAAE,EAAE,CAACvK,sDAAU,CAACkO,SAAS,CAAC,CAAC,CAAC,EAAElO,sDAAU,CAACmO,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;MAC5EC,aAAa,EAAE,CAAC,IAAI,EAAEpO,sDAAU,CAACiO,QAAQ;KAEzC,CAAC;EACJ;EAEA;EACA;EACA;EACA;EACA;EAEA;EACAzJ,uBAAuBA,CAAA;IACrB,IAAI,IAAI,CAACd,YAAY,EAAE;IAEvB,IAAI,CAAC,IAAI,CAACO,eAAe,EAAE;MACzB,IAAI,CAACP,YAAY,GAAG,kCAAkC;MACtD;IACF;IAEA,IAAI,CAAC,IAAI,CAACf,cAAc,IAAI,IAAI,CAACA,cAAc,IAAI,CAAC,EAAE;MACpD,IAAI,CAACe,YAAY,GAAG,mBAAmB;MACvC;IACF;IAGA;IACA,IAAI,CAACR,kBAAkB,GAAG,CACxB,GAAG,IAAI,CAACA,kBAAkB,EAC1B;MACEsK,SAAS,EAAE,IAAI,CAACvJ,eAAe,CAACxG,EAAE;MAClCiF,UAAU,EAAE,IAAI,CAACuB,eAAe,CAACZ,GAAG;MACpCV,cAAc,EAAE,IAAI,CAACA,cAAc;MACnCE,WAAW,EAAE,IAAI,CAACoB,eAAe,CAACgB,QAAQ;MAC1CjC,UAAU,EAAE,IAAI,CAACA,UAAU;MAC3BD,SAAS,EAAE,IAAI,CAACkB,eAAe,CAAClB,SAAS;MACzCsH,gBAAgB,EAAE,IAAI,CAACA,gBAAgB;MACvCE,eAAe,EAAE,IAAI,CAACA;KACvB,CACF;IAED;IACA,IAAI,CAACtG,eAAe,GAAG,IAAI;IAC3B,IAAI,CAACtB,cAAc,GAAG,IAAI;IAC1B,IAAI,CAAC0H,gBAAgB,GAAG,EAAE;IAC1B,IAAI,CAACE,eAAe;EACtB;EAEA;EACArE,2BAA2BA,CAAA;IACzB,IAAI,IAAI,CAACxC,YAAY,EAAE;IAEvB,IAAI,CAAC,IAAI,CAACO,eAAe,EAAE;MACzB,IAAI,CAACP,YAAY,GAAG,kCAAkC;MACtD;IACF;IAEA,IAAI,CAAC,IAAI,CAACd,eAAe,IAAI,IAAI,CAACA,eAAe,IAAI,CAAC,EAAE;MACtD,IAAI,CAACc,YAAY,GAAG,mBAAmB;MACvC;IACF;IAEA;IACA,IAAI,CAACR,kBAAkB,GAAG,CACxB,GAAG,IAAI,CAACA,kBAAkB,EAC1B;MACEsK,SAAS,EAAE,IAAI,CAACvJ,eAAe,CAACxG,EAAE;MAClCiF,UAAU,EAAE,IAAI,CAACuB,eAAe,CAACZ,GAAG;MACpCT,eAAe,EAAE,IAAI,CAACA,eAAe;MACrCC,WAAW,EAAE,IAAI,CAACoB,eAAe,CAACgB,QAAQ;MAC1CjC,UAAU,EAAE,IAAI,CAACA,UAAU;MAC3BD,SAAS,EAAE,IAAI,CAACkB,eAAe,CAAClB,SAAS;MACzCsL,iBAAiB,EAAE,IAAI,CAAC/D,iBAAiB,CAAC;KAC3C,CACF;IAED;IACA,IAAI,CAACrG,eAAe,GAAG,IAAI;IAC3B,IAAI,CAACrB,eAAe,GAAG,IAAI;IAC3B,IAAI,CAAC0H,iBAAiB,GAAG,EAAE,CAAC,CAAC;EAC/B;EAEA;EACAgE,sBAAsBA,CAAA;IACpB,MAAMC,KAAK,GAAGT,YAAY,CAACC,OAAO,CAAC,oBAAoB,CAAC;IACxD,IAAI,CAAC7K,kBAAkB,GAAGqL,KAAK,GAAGxR,IAAI,CAACyR,KAAK,CAACD,KAAK,CAAC,GAAG,EAAE;EAC1D;EAEArK,oBAAoBA,CAAA;IAClB,IAAI,CAAC,IAAI,CAACD,eAAe,EAAE;MACzB,IAAI,CAACP,YAAY,GAAG,EAAE;MACtB;IACF;IAEA,MAAM+K,MAAM,GAAG,IAAI,CAACvL,kBAAkB,CAACwL,IAAI,CACzCC,IAAI,IAAIA,IAAI,CAACjM,UAAU,KAAK,IAAI,CAACuB,eAAgB,CAACZ,GAAG,CACtD;IAED,IAAIoL,MAAM,EAAE;MACV,IAAI,CAAC/K,YAAY,GAAG,GAAG,IAAI,CAACO,eAAe,CAACZ,GAAG,2BAA2B;MAC1E,IAAI,CAACY,eAAe,GAAG,IAAI,CAAC,CAAC;IAC/B,CAAC,MAAM;MACL,IAAI,CAACP,YAAY,GAAG,EAAE;IACxB;EACF;EAEAF,eAAeA,CAAA;IACb,IAAI,CAACE,YAAY,GAAG,EAAE;IAEtB;IACA,IAAI,CAACO,eAAe,GAAG,IAAI;IAC3B,IAAI,CAACtB,cAAc,GAAG,IAAI;IAE1B;IACAiM,UAAU,CAAC,MAAK;MACd,IAAI,CAACpF,KAAK,CAAC0B,aAAa,EAAE;MAC1B,IAAI,CAAC1B,KAAK,CAACqF,YAAY,EAAE;IAC3B,CAAC,CAAC;IAEF;IACA,IAAI,IAAI,CAACC,aAAa,EAAE;MACtB,IAAI,CAACA,aAAa,CAACC,aAAa,CAACC,aAAa,GAAG,CAAC;IACpD;EACF;EAEAjK,eAAeA,CAACqH,CAAiB,EAAEC,CAAiB;IAClD;IACA,IAAID,CAAC,KAAK,IAAI,IAAIC,CAAC,KAAK,IAAI,EAAE,OAAO,IAAI;IAEzC;IACA,IAAI,CAACD,CAAC,IAAI,CAACC,CAAC,EAAE,OAAO,KAAK;IAE1B;IACA,OAAOD,CAAC,CAAC3O,EAAE,KAAK4O,CAAC,CAAC5O,EAAE;EACtB;EAEA;EACA6K,cAAcA,CAAA;IACZ,IAAI,CAAC5E,YAAY,GAAG,EAAE;IACtB,IAAI,CAACuF,cAAc,GAAG,EAAE;IACxB,MAAMgG,oBAAoB,GAAG,CAAC,GAAG,IAAI,CAAC/L,kBAAkB,CAAC;IAEzD;IACA,IAAI,IAAI,CAACe,eAAe,IAAI,IAAI,CAACtB,cAAc,IAAI,IAAI,CAACA,cAAc,GAAG,CAAC,EAAE;MAC1E,MAAMuM,aAAa,GAAGD,oBAAoB,CAACE,SAAS,CAClDR,IAAI,IAAIA,IAAI,CAACnB,SAAS,KAAK,IAAI,CAACvJ,eAAgB,CAACxG,EAAE,CACpD;MAED,IAAIyR,aAAa,KAAK,CAAC,CAAC,EAAE;QACxBD,oBAAoB,CAACG,IAAI,CAAC;UACxB5B,SAAS,EAAE,IAAI,CAACvJ,eAAe,CAACxG,EAAE;UAClCiF,UAAU,EAAE,IAAI,CAACuB,eAAe,CAACZ,GAAG;UACpCV,cAAc,EAAE,IAAI,CAACA,cAAc;UACnCE,WAAW,EAAE,IAAI,CAACoB,eAAe,CAACgB,QAAQ;UAC1CjC,UAAU,EAAE,IAAI,CAACiB,eAAe,CAACgB,QAAQ,GAAG,IAAI,CAACtC,cAAc;UAC/DI,SAAS,EAAE,IAAI,CAACkB,eAAe,CAAClB;SACjC,CAAC;MACJ;IACF;IAEA,IAAIkM,oBAAoB,CAACvK,MAAM,GAAG,CAAC,EAAE;MACnC,MAAM2K,iBAAiB,GAAGJ,oBAAoB,CAACK,MAAM,CAAC,CAACC,GAAG,EAAEC,UAAU,KAAI;QACxED,GAAG,CAACC,UAAU,CAAChC,SAAS,CAAC,GAAGgC,UAAU,CAAC7M,cAAc;QACrD,OAAO4M,GAAG;MACZ,CAAC,EAAE,EAA+B,CAAC;MAEnC,MAAMxF,iBAAiB,GAAG,IAAI,CAAC6C,UAAU,CAACzL,KAAK,CAAC4I,iBAAiB,IAAI,EAAE;MACvE,MAAMQ,eAAe,GAAG,IAAI,CAACqC,UAAU,CAACzL,KAAK,CAACoJ,eAAe,IAAI,EAAE;MAGnE;MACA,MAAMkF,UAAU,GAAQ;QACtBxR,UAAU,EAAE,IAAI,CAAC6G,kBAAkB;QACnCuK,iBAAiB;QACjBK,WAAW,EAAE3F,iBAAiB;QAC9BQ,eAAe;QACf6D,aAAa,EAAE,IAAI,CAACuB,eAAe,CAACxO;OAErC;MAED4K,OAAO,CAACiB,GAAG,CAAC,iBAAiB,EAAEyC,UAAU,CAAC;MAI1C,IAAI,CAAClG,YAAY,CAACqG,YAAY,CAACH,UAAU,CAAC,CAACzE,SAAS,CAAC;QACnDI,IAAI,EAAGyE,QAAQ,IAAI;UACjB;UACAZ,oBAAoB,CAACa,OAAO,CAACN,UAAU,IAAG;YACxC,MAAMO,OAAO,GAAG,IAAI,CAAC/K,KAAK,CAACyI,IAAI,CAACuC,CAAC,IAAIA,CAAC,CAACvS,EAAE,KAAK+R,UAAU,CAAChC,SAAS,CAAC;YACnE,IAAIuC,OAAO,EAAEA,OAAO,CAAC9K,QAAQ,GAAGuK,UAAU,CAACxM,UAAU;UACvD,CAAC,CAAC;UAEF,IAAI,CAACiN,SAAS,EAAE;UAChB,IAAI,CAACC,gBAAgB,EAAE;QACzB,CAAC;QACD/R,KAAK,EAAGA,KAAK,IAAI;UACf4N,OAAO,CAAC5N,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;UACzC,IAAI,CAACgS,cAAc,CAAC,IAAI,CAACC,eAAe,CAACjS,KAAK,CAAC,CAAC;QAClD;OACD,CAAC;IACJ,CAAC,MAAM;MACL,IAAI,CAACgS,cAAc,CAAC,oEAAoE,CAAC;IAC3F;EACF;EAGA;EACAzH,cAAcA,CAAA;IACZ,IAAI,CAAChF,YAAY,GAAG,EAAE;IACtB,IAAI,CAACuF,cAAc,GAAG,EAAE;IACxB,MAAMgG,oBAAoB,GAAG,CAAC,GAAG,IAAI,CAAC/L,kBAAkB,CAAC;IAEzD;IACA,IAAI,IAAI,CAACe,eAAe,IAAI,IAAI,CAACrB,eAAe,IAAI,IAAI,CAACA,eAAe,GAAG,CAAC,EAAE;MAC5E,MAAMsM,aAAa,GAAGD,oBAAoB,CAACE,SAAS,CAClDR,IAAI,IAAIA,IAAI,CAACnB,SAAS,KAAK,IAAI,CAACvJ,eAAgB,CAACxG,EAAE,CACpD;MAED,IAAIyR,aAAa,KAAK,CAAC,CAAC,EAAE;QACxB;QACA,MAAMmB,QAAQ,GAAG,IAAI,CAACpM,eAAe,CAACgB,QAAQ,GAAG,IAAI,CAACrC,eAAe;QAErE,IAAIyN,QAAQ,GAAG,CAAC,EAAE;UAChB,IAAI,CAACF,cAAc,CAAC,sCAAsC,CAAC;UAC3D;QACF;QAEAlB,oBAAoB,CAACG,IAAI,CAAC;UACxB5B,SAAS,EAAE,IAAI,CAACvJ,eAAe,CAACxG,EAAE;UAClCiF,UAAU,EAAE,IAAI,CAACuB,eAAe,CAACZ,GAAG;UACpCT,eAAe,EAAE,IAAI,CAACA,eAAe;UACrCC,WAAW,EAAE,IAAI,CAACoB,eAAe,CAACgB,QAAQ;UAC1CjC,UAAU,EAAEqN,QAAQ;UACpBtN,SAAS,EAAE,IAAI,CAACkB,eAAe,CAAClB;SACjC,CAAC;MACJ;IACF;IAEA,IAAIkM,oBAAoB,CAACvK,MAAM,GAAG,CAAC,EAAE;MACnC,MAAM2K,iBAAiB,GAAGJ,oBAAoB,CAACK,MAAM,CAAC,CAACC,GAAG,EAAEC,UAAU,KAAI;QACxED,GAAG,CAACC,UAAU,CAAChC,SAAS,CAAC,GAAGgC,UAAU,CAAC5M,eAAe;QACtD,OAAO2M,GAAG;MACZ,CAAC,EAAE,EAA+B,CAAC;MAEnC,MAAMxF,iBAAiB,GAAG,IAAI,CAAC6C,UAAU,CAACzL,KAAK,CAAC4I,iBAAiB,IAAI,EAAE;MAEvE,IAAI,CAACR,YAAY,CAAC+G,YAAY,CAAC;QAC7BrS,UAAU,EAAE,IAAI,CAAC6G,kBAAkB;QACnCuK,iBAAiB,EAAEA,iBAAiB;QACpCK,WAAW,EAAE3F;OAEd,CAAC,CAACiB,SAAS,CAAC;QACXI,IAAI,EAAGyE,QAAQ,IAAI;UACjB;UACAZ,oBAAoB,CAACa,OAAO,CAACN,UAAU,IAAG;YACxC,MAAMO,OAAO,GAAG,IAAI,CAAC/K,KAAK,CAACyI,IAAI,CAACuC,CAAC,IAAIA,CAAC,CAACvS,EAAE,KAAK+R,UAAU,CAAChC,SAAS,CAAC;YACnE,IAAIuC,OAAO,EAAEA,OAAO,CAAC9K,QAAQ,GAAGuK,UAAU,CAACxM,UAAU;UACvD,CAAC,CAAC;UAEF,IAAI,CAACiN,SAAS,EAAE;UAChB,IAAI,CAACC,gBAAgB,EAAE;QACzB,CAAC;QACD/R,KAAK,EAAGA,KAAK,IAAI;UACf4N,OAAO,CAAC5N,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;UACzC,IAAI,CAACgS,cAAc,CAAC,IAAI,CAACC,eAAe,CAACjS,KAAK,CAAC,CAAC;QAClD;OACD,CAAC;IACJ,CAAC,MAAM;MACL,IAAI,CAACgS,cAAc,CAAC,oEAAoE,CAAC;IAC3F;EACF;EAEQF,SAASA,CAAA;IACf,IAAI,CAAC/M,kBAAkB,GAAG,EAAE;IAC5B,IAAI,CAACe,eAAe,GAAG,IAAI;IAC3B,IAAI,CAACtB,cAAc,GAAG,IAAI;IAC1B,IAAI,CAACC,eAAe,GAAG,IAAI;IAC3B,IAAI,CAACgK,UAAU,CAAC2D,KAAK,EAAE;EACzB;EAEQH,eAAeA,CAACjS,KAAU;IAChC,IAAIA,KAAK,CAACC,MAAM,KAAK,GAAG,EAAE;MACxB,OAAOD,KAAK,CAACA,KAAK,CAACqS,OAAO,IAAI,wCAAwC;IACxE;IACA,IAAIrS,KAAK,CAACC,MAAM,KAAK,GAAG,EAAE;MACxB,OAAO,qBAAqB;IAC9B;IACA,OAAO,iDAAiD;EAC1D;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EAEA;EACA8R,gBAAgBA,CAAA;IACd,IAAI,CAACjH,cAAc,GAAG,+CAA+C;IACrE2F,UAAU,CAAC,MAAK;MACd,IAAI,CAAC3F,cAAc,GAAG,EAAE;IAC1B,CAAC,EAAE,IAAI,CAAC;EACV;EAEA;EACAkH,cAAcA,CAACK,OAAe;IAC5B,IAAI,CAACtH,iBAAiB,GAAGsH,OAAO;IAChC5B,UAAU,CAAC,MAAK;MACd,IAAI,CAAC1F,iBAAiB,GAAG,EAAE;IAC7B,CAAC,EAAE,IAAI,CAAC;EACV;EAEA1G,uBAAuBA,CAACD,KAAa;IACnC;IACA,IAAI,CAACW,kBAAkB,CAACuN,MAAM,CAAClO,KAAK,EAAE,CAAC,CAAC;EAC1C;EAEA;EACAmO,kBAAkBA,CAACC,KAAU;IAC3B,MAAMC,gBAAgB,GAAG,IAAI,CAAC3G,eAAe,CAACwD,IAAI,CAACpB,CAAC,IAAIA,CAAC,CAACpP,IAAI,KAAK0T,KAAK,CAACE,MAAM,CAAC1P,KAAK,CAAC;IAEtF,IAAIyP,gBAAgB,EAAE;MACpB,IAAI,CAAC9L,kBAAkB,GAAG8L,gBAAgB,CAACnT,EAAE;MAC7C,IAAI,CAACuO,YAAY,CAAC4E,gBAAgB,CAACnT,EAAE,CAAC;MACtC,IAAI,CAACyF,kBAAkB,GAAG,EAAE;MAC5B,IAAI,CAACe,eAAe,GAAG,IAAI;MAC3B,IAAI,CAAC6M,qBAAqB,EAAE,CAAC,CAAC;IAChC;EACF;EAEAjF,0BAA0BA,CAAA;IACxB,IAAI,CAACkF,uBAAuB,GAAG,IAAI,CAAC7P,eAAe,CAAC6J,YAAY,CAAC5N,IAAI,CACnEgD,gDAAS,CAAC,EAAE,CAAC,EACbD,0CAAG,CAACiB,KAAK,IAAI,IAAI,CAAC6P,eAAe,CAAC7P,KAAK,IAAI,EAAE,CAAC,CAAC,CAChD;EACH;EAEA;;;;;;EAOQ6P,eAAeA,CAAC7P,KAAa;IACnC,MAAM8P,WAAW,GAAG,IAAI,CAACC,eAAe,CAAC/P,KAAK,CAAC;IAC/C,OAAO,IAAI,CAAC8I,eAAe,CACxByB,MAAM,CAACW,CAAC,IAAIA,CAAC,CAACvF,KAAK,CAAC,CAAC;IAAA,CACrB5G,GAAG,CAACmM,CAAC,IAAIA,CAAC,CAACpP,IAAI,CAAC,CAChByO,MAAM,CAACyF,MAAM,IAAI,IAAI,CAACD,eAAe,CAACC,MAAM,CAAC,CAACvM,QAAQ,CAACqM,WAAW,CAAC,CAAC;EACzE;EAEQC,eAAeA,CAAC/P,KAAa;IACnC,OAAOA,KAAK,CAACiQ,WAAW,EAAE,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;EAC/C;EAEAC,oBAAoBA,CAAA;IAClB,IAAI,CAACpQ,eAAe,CAACqQ,QAAQ,CAAC,EAAE,CAAC;EACnC;EAEAC,iBAAiBA,CAAC7F,QAAiB;IACjC,OAAOA,QAAQ,GAAGA,QAAQ,GAAG,EAAE;EACjC;EAEA;EACAlE,2BAA2BA,CAACkJ,KAAU;IACpC,IAAI,CAAChH,2BAA2B,GAAGgH,KAAK,CAACE,MAAM,CAAC1P,KAAK;EACvD;EAEA2K,mCAAmCA,CAAA;IACjC,IAAI,CAAC7D,gCAAgC,GAAG,IAAI,CAACH,wBAAwB,CAACiD,YAAY,CAAC5N,IAAI,CACrFgD,gDAAS,CAAC,EAAE,CAAC,EACbD,0CAAG,CAACiB,KAAK,IAAI,IAAI,CAACsQ,wBAAwB,CAACtQ,KAAK,IAAI,EAAE,CAAC,CAAC,CACzD;EACH;EAEQsQ,wBAAwBA,CAACtQ,KAAmB;IAClD;IACA,MAAMuQ,WAAW,GAAG,OAAOvQ,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAGA,KAAK,EAAElE,IAAI,IAAI,EAAE;IAEzE,MAAMgU,WAAW,GAAG,IAAI,CAACU,wBAAwB,CAACD,WAAW,CAAC;IAE9D,OAAO,IAAI,CAACxH,wBAAwB,CACjCwB,MAAM,CAACW,CAAC,IACP,IAAI,CAACsF,wBAAwB,CAACtF,CAAC,CAACpP,IAAI,CAAC,CAAC2H,QAAQ,CAACqM,WAAW,CAAC,IAC3D5E,CAAC,CAAC5O,EAAE,KAAK,IAAI,CAACqH,kBAAkB,CAAC;KAClC;EACL;EAEA;EACQgM,qBAAqBA,CAAA;IAC3B,MAAMc,YAAY,GAAG,IAAI,CAAC9J,wBAAwB,CAAC3G,KAAK;IACxD,IAAI,CAAC2G,wBAAwB,CAACyJ,QAAQ,CAAC,EAAE,CAAC;IAC1C,IAAI,CAACzJ,wBAAwB,CAACyJ,QAAQ,CAACK,YAAY,CAAC;EACtD;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEQD,wBAAwBA,CAACxQ,KAAa;IAC5C,OAAOA,KAAK,CAACiQ,WAAW,EAAE,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;EAC/C;EAEAQ,6BAA6BA,CAAA;IAC3B,IAAI,CAAC/J,wBAAwB,CAACyJ,QAAQ,CAAC,EAAE,CAAC;EAC5C;EAEAvJ,0BAA0BA,CAAC2D,QAAc;IACvC,OAAOA,QAAQ,EAAE1O,IAAI,IAAI,EAAE;EAC7B;EAEA;EAEA6U,sBAAsBA,CAAA;IACpB,IAAI,CAAC,IAAI,CAAChN,kBAAkB,IAAI,CAAC,IAAI,CAAC6E,2BAA2B,EAAElM,EAAE,EAAE;MACnE,OAAO;QAAEsU,KAAK,EAAE,KAAK;QAAE5T,KAAK,EAAE;MAAqC,CAAE;IACzE;IAEA;IACA,IAAI,IAAI,CAAC2G,kBAAkB,KAAK,IAAI,CAAC6E,2BAA2B,CAAClM,EAAE,EAAE;MACnE,OAAO;QAAEsU,KAAK,EAAE,KAAK;QAAE5T,KAAK,EAAE;MAAsD,CAAE;IACxF;IAEA,IAAI,CAAC,IAAI,CAAC8F,eAAe,EAAE;MACvB,OAAO;QAAE8N,KAAK,EAAE,KAAK;QAAE5T,KAAK,EAAE;MAAkC,CAAE;IACtE;IAEA,MAAM8G,QAAQ,GAAG,IAAI,CAACrC,eAAe,IAAI,CAAC;IAC1C,IAAIqC,QAAQ,IAAI,CAAC,IAAIA,QAAQ,GAAG,IAAI,CAAChB,eAAe,CAACgB,QAAQ,EAAE;MAC3D,OAAO;QAAE8M,KAAK,EAAE,KAAK;QAAE5T,KAAK,EAAE;MAAmB,CAAE;IACvD;IAEA,OAAO;MACH4T,KAAK,EAAE,IAAI;MACXC,SAAS,EAAE;QACPxE,SAAS,EAAE,IAAI,CAACvJ,eAAe,CAACxG,EAAE;QAClCwH,QAAQ,EAAEA,QAAQ;QAClBgN,gBAAgB,EAAE,IAAI,CAACnN,kBAAkB;QACzCoN,qBAAqB,EAAE,IAAI,CAACvI,2BAA2B,CAAClM;;KAE/D;EACH;EAEA;EACMqL,kBAAkBA,CAAA;IAAA,IAAAqJ,KAAA;IAAA,OAAAC,0IAAA;MACpB,IAAIC,kBAAkB,GAAG,CAAC,GAAGF,KAAI,CAACjP,kBAAkB,CAAC;MAErD;MACA,IAAImP,kBAAkB,CAAC3N,MAAM,KAAK,CAAC,EAAE;QACjC,MAAM4N,UAAU,GAAGH,KAAI,CAACL,sBAAsB,EAAE;QAChD,IAAI,CAACQ,UAAU,CAACP,KAAK,EAAE;UACnBI,KAAI,CAACzO,YAAY,GAAG4O,UAAU,CAACnU,KAAK;UACpC;QACJ;QACAkU,kBAAkB,GAAG,CAACC,UAAU,CAACN,SAAS,CAAC;MAC/C;MAEA,IAAI;QACA,MAAM5U,KAAK,GAAG+U,KAAI,CAACnW,YAAY,CAACmR,QAAQ,EAAE;QAC1C,IAAI,CAAC/P,KAAK,EAAE,MAAM,IAAIiB,KAAK,CAAC,iBAAiB,CAAC;QAE9C;QACA,KAAK,MAAM2T,SAAS,IAAIK,kBAAkB,EAAE;UACxC,MAAMF,KAAI,CAAC1I,gBAAgB,CAAC8I,kBAAkB,CAACP,SAAS,CAAC,CAACQ,SAAS,EAAE;UAErE;UACA,MAAMzC,OAAO,GAAGoC,KAAI,CAACnN,KAAK,CAACyI,IAAI,CAACuC,CAAC,IAAIA,CAAC,CAACvS,EAAE,KAAKuU,SAAS,CAACxE,SAAS,CAAC;UAClE,IAAIuC,OAAO,EAAEA,OAAO,CAAC9K,QAAQ,IAAI+M,SAAS,CAAC/M,QAAQ;QACvD;QAEA;QACAkN,KAAI,CAACjP,kBAAkB,GAAG,EAAE;QAC5BiP,KAAI,CAAClO,eAAe,GAAG,IAAI;QAC3BkO,KAAI,CAACvP,eAAe,GAAG,IAAI;QAC3BuP,KAAI,CAACrK,wBAAwB,CAACyI,KAAK,EAAE;QAErC4B,KAAI,CAAClJ,cAAc,GAAG,sCAAsC;QAC5D2F,UAAU,CAAC,MAAMuD,KAAI,CAAClJ,cAAc,GAAG,EAAE,EAAE,IAAI,CAAC;MAEpD,CAAC,CAAC,OAAO9K,KAAU,EAAE;QACjB4N,OAAO,CAAC5N,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;QAC/BgU,KAAI,CAACzO,YAAY,GAAGvF,KAAK,CAACA,KAAK,EAAEqS,OAAO,IAAI,0BAA0B;QACtE5B,UAAU,CAAC,MAAMuD,KAAI,CAACzO,YAAY,GAAG,EAAE,EAAE,IAAI,CAAC;MAClD;IAAC;EACL;EAEAkE,6BAA6BA,CAAA;IAC3B,MAAM0K,UAAU,GAAG,IAAI,CAACR,sBAAsB,EAAE;IAChD,IAAI,CAACQ,UAAU,CAACP,KAAK,EAAE;MACnB,IAAI,CAACrO,YAAY,GAAG4O,UAAU,CAACnU,KAAK;MACpC;IACJ;IAEA;IACA,MAAMsQ,MAAM,GAAG,IAAI,CAACvL,kBAAkB,CAACwL,IAAI,CAAC+D,CAAC,IACzCA,CAAC,CAACjF,SAAS,KAAK8E,UAAU,CAACN,SAAS,CAACxE,SAAS,IAC9CiF,CAAC,CAACP,qBAAqB,KAAKI,UAAU,CAACN,SAAS,CAACE,qBAAqB,CACzE;IAED,IAAIzD,MAAM,EAAE;MACR,IAAI,CAAC/K,YAAY,GAAG,qCAAqC;MACzD;IACJ;IAEA;IACA,MAAM2M,QAAQ,GAAG,IAAI,CAACpM,eAAgB,CAACgB,QAAQ,GAAGqN,UAAU,CAACN,SAAS,CAAC/M,QAAQ;IAC/E,IAAI,CAAC/B,kBAAkB,CAACkM,IAAI,CAAC;MAC7B,GAAGkD,UAAU,CAACN,SAAS;MACvBtP,UAAU,EAAE,IAAI,CAACuB,eAAgB,CAACZ,GAAG;MACrCR,WAAW,EAAE,IAAI,CAACoB,eAAgB,CAACgB,QAAQ;MAC3CjC,UAAU,EAAEqN,QAAQ;MAAE;MACtB7J,uBAAuB,EAAE,IAAI,CAACmD,2BAA2B,CAAC1M;KAC7D,CAAC;IAEE;IACA,IAAI,CAACgH,eAAe,GAAG,IAAI;IAC3B,IAAI,CAACrB,eAAe,GAAG,IAAI;IAC3B,IAAI,CAAC+G,2BAA2B,GAAG,IAAI;IACvC,IAAI,CAAC7B,wBAAwB,CAACyI,KAAK,EAAE;IACrC,IAAI,CAAC7M,YAAY,GAAG,EAAE;EAC1B;EAEA,IAAIiM,eAAeA,CAAA;IACjB,OAAO,IAAI,CAAC/C,UAAU,CAAC7O,GAAG,CAAC,eAAe,CAAE;EAC9C;EAEAiE,mBAAmBA,CAAA;IACjB,MAAMvE,EAAE,GAAG,IAAI,CAACkS,eAAe,CAACxO,KAAe;IAC/C,MAAMG,CAAC,GAAG,IAAI,CAACY,YAAY,CAACuL,IAAI,CAACiF,CAAC,IAAIA,CAAC,CAACjV,EAAE,KAAKA,EAAE,CAAC;IAClD,IAAI,CAAC8M,eAAe,GAAGjJ,CAAC,GAAGA,CAAC,CAACG,UAAU,GAAG,EAAE;IAC5CsK,OAAO,CAACiB,GAAG,CAAC,OAAO,EAAEvP,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC8M,eAAe,CAAC;EACxD;EAEAoI,YAAYA,CAAA;IACV,IAAI,CAACrJ,MAAM,CAACmB,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;EACnC;;;uCAt1BatB,2BAA2B,EAAAhK,+DAAA,CAAAE,qEAAA,GAAAF,+DAAA,CAAAI,uDAAA,GAAAJ,+DAAA,CAAA2T,oDAAA,GAAA3T,+DAAA,CAAA6T,iEAAA,GAAA7T,+DAAA,CAAA8T,kEAAA,GAAA9T,+DAAA,CAAAA,4DAAA,GAAAA,+DAAA,CAAAiU,yEAAA;IAAA;EAAA;;;YAA3BjK,2BAA2B;MAAAmK,SAAA;MAAAC,SAAA,WAAAC,kCAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;;;;;;;;;;;;;;UC/BhCtU,4DANR,aAA8B,aACI,aACN,cACa,WAGmH;UAAxHA,wDAAA,mBAAAwU,wDAAA;YAAAxU,2DAAA,CAAAyU,GAAA;YAAA,OAAAzU,yDAAA,CAASuU,GAAA,CAAAf,YAAA,EAAc;UAAA,EAAC;UAChDxT,uDAAA,WAAoC;UAACA,4DAAA,cAAiD;UAAAA,oDAAA,aAAM;UAChGA,0DADgG,EAAO,EACnG;UAIFA,4DADF,cAAmB,SACb;UAAAA,oDAAA,8BAAsB;UAC5BA,0DAD4B,EAAK,EAC3B;UAUMA,4DARZ,eAA6B,eACH,eAES,eACC,eACF,eAEc,eACX;UAAAA,oDAAA,YAAI;UAAAA,0DAAA,EAAM;UAEnCA,4DAAA,kBAAgF;UAA7BA,8DAAA,2BAAA0U,sEAAA/P,MAAA;YAAA3E,2DAAA,CAAAyU,GAAA;YAAAzU,gEAAA,CAAAuU,GAAA,CAAA7J,cAAA,EAAA/F,MAAA,MAAA4P,GAAA,CAAA7J,cAAA,GAAA/F,MAAA;YAAA,OAAA3E,yDAAA,CAAA2E,MAAA;UAAA,EAA4B;UAE7E3E,4DAAA,kBAAwB;UAAAA,oDAAA,eAAO;UAAAA,0DAAA,EAAS;UACxCA,4DAAA,kBAAwB;UAAAA,oDAAA,eAAO;UAAAA,0DAAA,EAAS;UACxCA,4DAAA,kBAA0B;UAAAA,oDAAA,iBAAS;UAEvCA,0DAFuC,EAAS,EACrC,EACL;UAGJA,4DADF,eAAsC,eACX;UAAAA,oDAAA,gBAAQ;UAAAA,0DAAA,EAAM;UACvCA,4DAAA,iBASG;UADCA,wDAAA,kBAAA2U,4DAAA;YAAA3U,2DAAA,CAAAyU,GAAA;YAAA,OAAAzU,yDAAA,CAAQuU,GAAA,CAAApI,sBAAA,EAAwB;UAAA,EAAC;UARrCnM,0DAAA,EASG;UACDA,4DAAA,iBAA4D;UAAAA,oDAAA,gBAAQ;UAAAA,0DAAA,EAAQ;UAC5EA,4DAAA,+BAAkI;UAAhFA,wDAAA,4BAAA4U,iFAAAjQ,MAAA;YAAA3E,2DAAA,CAAAyU,GAAA;YAAA,OAAAzU,yDAAA,CAAkBuU,GAAA,CAAAhD,kBAAA,CAAA5M,MAAA,CAA0B;UAAA,EAAC;UAC7F3E,wDAAA,KAAA6U,kDAAA,yBAAoF;;UAc5F7U,0DAFM,EAAmB,EACjB,EACF;UAKFA,4DAHJ,gBAA+B,eACH,eAEc;UACpCA,uDAAA,oBAI0E;UAC1EA,4DAAA,iBAAwD;UAAAA,oDAAA,gCAAwB;UAAAA,0DAAA,EAAQ;UACxFA,wDAAA,KAAA8U,2CAAA,kBAAoG;UAItG9U,0DAAA,EAAM;UAoBLA,wDAlBG,KAAA+U,2CAAA,kBAA2E,KAAAC,2CAAA,kBAkBF;UAerFhV,0DAJM,EAAM,EACD,EAEH,EACF;UAulBNA,wDAplBA,KAAAiV,2CAAA,oBAAoE,KAAAC,2CAAA,oBAoLA,KAAAC,2CAAA,oBAyLE,KAAAC,2CAAA,kBA0LF,KAAAC,2CAAA,kBAYA,KAAAC,2CAAA,kBAYE,KAAAC,2CAAA,kBAapB,KAAAC,2CAAA,kBAQG;UAYjExV,0DALU,EAAM,EACF,EACD,EACH,EACF,EACF;;;;UA1rBiEA,uDAAA,IAA4B;UAA5BA,8DAAA,YAAAuU,GAAA,CAAA7J,cAAA,CAA4B;UAgB3E1K,uDAAA,IAA+B;UAC/BA,wDADA,gBAAAuU,GAAA,CAAAxS,eAAA,CAA+B,oBAAA0T,gBAAA,CACC;UAI8DzV,uDAAA,GAAiC;UAAjCA,wDAAA,gBAAAuU,GAAA,CAAAlC,iBAAA,CAAiC;UAChGrS,uDAAA,GAAkC;UAAlCA,wDAAA,YAAAA,yDAAA,SAAAuU,GAAA,CAAA3C,uBAAA,EAAkC;UAgBnE5R,uDAAA,GAAwB;UAAxBA,wDAAA,cAAAuU,GAAA,CAAA9G,UAAA,CAAwB;UAUlBzN,uDAAA,GAAsE;UAAtEA,wDAAA,SAAAuU,GAAA,CAAApS,CAAA,sBAAAuT,OAAA,IAAAnB,GAAA,CAAApS,CAAA,sBAAAwT,OAAA,CAAsE;UAMpE3V,uDAAA,EAAkC;UAAlCA,wDAAA,SAAAuU,GAAA,CAAA7J,cAAA,eAAkC;UAkBJ1K,uDAAA,EAAkC;UAAlCA,wDAAA,SAAAuU,GAAA,CAAA7J,cAAA,eAAkC;UAkBlD1K,uDAAA,EAAkC;UAAlCA,wDAAA,SAAAuU,GAAA,CAAA7J,cAAA,eAAkC;UAoLlC1K,uDAAA,EAAkC;UAAlCA,wDAAA,SAAAuU,GAAA,CAAA7J,cAAA,eAAkC;UAyLlC1K,uDAAA,EAAoC;UAApCA,wDAAA,SAAAuU,GAAA,CAAA7J,cAAA,iBAAoC;UA0LpC1K,uDAAA,EAAkC;UAAlCA,wDAAA,SAAAuU,GAAA,CAAA7J,cAAA,eAAkC;UAYlC1K,uDAAA,EAAkC;UAAlCA,wDAAA,SAAAuU,GAAA,CAAA7J,cAAA,eAAkC;UAYlC1K,uDAAA,EAAoC;UAApCA,wDAAA,SAAAuU,GAAA,CAAA7J,cAAA,iBAAoC;UAaxC1K,uDAAA,EAAoB;UAApBA,wDAAA,SAAAuU,GAAA,CAAAzK,cAAA,CAAoB;UAQpB9J,uDAAA,EAAuB;UAAvBA,wDAAA,SAAAuU,GAAA,CAAAxK,iBAAA,CAAuB;;;qBD7qB3DtJ,0DAAY,EAAAmV,qDAAA,EAAAA,kDAAA,EAAAA,uDAAA,EACZjV,uDAAW,EAAAP,4DAAA,EAAAA,0DAAA,EAAAA,sEAAA,EAAAA,gEAAA,EAAAA,+DAAA,EAAAA,sEAAA,EAAAA,2DAAA,EAAAA,gEAAA,EAAAA,6DAAA,EAAAA,wDAAA,EAAAA,wDAAA,EAAAA,mDAAA,EAAAA,kDAAA,EACXQ,+DAAmB,EAAAR,gEAAA,EAAAA,8DAAA,EAAAA,2DAAA,EACnBU,sEAAgB,EAEhBK,kFAAqB,EAAA6V,4EAAA,EAAAA,8DAAA,EAAAA,mFAAA,EACrB5V,kEAAa,EAAAgW,4DAAA;MAAAE,MAAA;IAAA;EAAA","sources":["./src/app/admin-page/SERVICES/produit.service.ts","./src/app/admin-page/add-stock-ajustement/add-stock-ajustement.component.ts","./src/app/admin-page/add-stock-ajustement/add-stock-ajustement.component.html"],"sourcesContent":["// produit.service.ts\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Produit } from '../MODELS/produit.model';\nimport { catchError, map, Observable, switchMap, throwError } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { UsersService } from './users.service';\n\n// produit.service.ts\n\nexport interface ProduitEntreprisePaginatedResponse {\n  content: Produit[];\n  pageNumber: number;\n  pageSize: number;\n  totalElements: number;\n  totalPages: number;\n  hasNext: boolean;\n  hasPrevious: boolean;\n  isFirst: boolean;\n  isLast: boolean;\n  totalProduitsUniques: number;\n  totalBoutiques: number;\n}\n\nexport interface ProduitStockPaginatedResponse {\n  content: Produit[];\n  pageNumber: number;\n  pageSize: number;\n  totalElements: number;\n  totalPages: number;\n  number: number;\n  hasNext: boolean;\n  hasPrevious: boolean;\n  isFirst: boolean;\n  isLast: boolean;\n  totalProduitsActifs: number;\n  totalProduitsEnStock: number;\n  totalProduitsHorsStock: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProduitService {\n  private apiUrl = environment.apiBaseUrl;\n\n  constructor(private http: HttpClient, private usersService: UsersService) { }\n\n  ajouterProduit(\n    boutiqueIds: number[],\n    quantites: number[],\n    seuilAlert: number[],\n    produit: any,\n    imageFile: File | null,\n    addToStock: boolean,\n    datePreemption: string | null\n  ): Observable<Produit[]> {\n    const url = `${this.apiUrl}/create?addToStock=${addToStock}`;\n    const formData: FormData = new FormData();\n\n    formData.append('boutiqueIds', JSON.stringify(boutiqueIds));\n    formData.append('quantites', JSON.stringify(quantites));\n    formData.append('produit', JSON.stringify(produit));\n    formData.append('seuilAlert', JSON.stringify(seuilAlert));\n\n    if (imageFile) {\n      formData.append('image', imageFile, imageFile.name);\n    }\n\n    // Ajouter dans formData\n    if (datePreemption) {\n      formData.append('datePreemption', datePreemption);\n    }\n\n    return this.usersService.getValidAccessToken().pipe(\n      switchMap((token: string) => {\n        const headers = new HttpHeaders({\n          'Authorization': `Bearer ${token}`\n        });\n        return this.http.post<Produit[]>(url, formData, { headers });\n      })\n    );\n  }\n\n  modifierProduit(produit: Produit, file?: File): Observable<Produit> {\n    const formData: FormData = new FormData();\n\n    // Supprime id du payload si non nécessaire\n    const { id, ...productData } = produit;\n    formData.append('produit', JSON.stringify(productData));\n\n    formData.append('addToStock', produit.enStock ? 'true' : 'false');\n\n    if (file) {\n      formData.append('image', file, file.name);\n    }\n\n    return this.usersService.getValidAccessToken().pipe(\n      switchMap((token: string) => {\n        const headers = new HttpHeaders({\n          'Authorization': `Bearer ${token}`\n        });\n        return this.http.patch<Produit>(`${this.apiUrl}/updateProduit/${produit.id}`, formData, { headers });\n      })\n    );\n  }\n  \n  // Nouvelle méthode pour récupérer les détails d'un produit par son ID\n  getProduitById(productId: number): Observable<Produit> {\n    return this.usersService.getValidAccessToken().pipe(\n      switchMap((token: string) => {\n        const headers = new HttpHeaders({ 'Authorization': `Bearer ${token}` });\n        return this.http.get<Produit>(`${this.apiUrl}/produits/${productId}`, { headers });\n      })\n    );\n  }\n\n  // Méthode pour récupérer la liste des produits d'une boutique\n  getProduitsEntreprise(boutiqueId: number): Observable<Produit[]> {\n    return this.usersService.getValidAccessToken().pipe(\n      switchMap((token: string) => {\n        const headers = new HttpHeaders({ Authorization: `Bearer ${token}` });\n        return this.http.get<Produit[]>(`${this.apiUrl}/produits/${boutiqueId}/stock`, { headers }).pipe(\n          catchError(error => {\n            if (error.status === 400 && error.error?.error === 'Cette boutique est désactivée, ses produits ne sont pas accessibles !') {\n              return throwError(() => new Error('BOUTIQUE_DESACTIVEE'));\n            }\n            return throwError(() => error);\n          })\n        );\n      })\n    );\n  }\n\n  // Méthode pour récupérer les totaux des produits en stock (déjà existante)\n  getProduitBoutique(boutiqueId: number): Observable<Map<string, number>> {\n    return this.usersService.getValidAccessToken().pipe(\n      switchMap((token: string) => {\n        const headers = new HttpHeaders({ Authorization: `Bearer ${token}` });\n        return this.http.get<Map<string, number>>(`${this.apiUrl}/produits/${boutiqueId}/totaux-stock`, { headers });\n      })\n    );\n  }\n\n  // Nouvelle méthode pour récupérer tous les produits de l'entreprise\n  getProduitsByEntrepriseId(entrepriseId: number): Observable<Produit[]> {\n    return this.usersService.getValidAccessToken().pipe(\n      switchMap((token: string) => {\n        const headers = new HttpHeaders({ Authorization: `Bearer ${token}` });\n        return this.http.get<Produit[]>(`${this.apiUrl}/produits/entreprise/${entrepriseId}`, { headers });\n      })\n    );\n  }\n\n  getProduitsParEntreprise(entrepriseId: number): Observable<any[]> {\n    return this.usersService.getValidAccessToken().pipe(\n      switchMap(token => {\n        const headers = new HttpHeaders({ Authorization: `Bearer ${token}` });\n        return this.http.get<any[]>(`${this.apiUrl}/produits/entreprise/${entrepriseId}`, { headers });\n      })\n    );\n  }\n\n  // Méthode pour recuperer les fournisseur de lutilisateur connecter\n  getFournisseurs(): Observable<any[]> {\n    return this.usersService.getValidAccessToken().pipe(\n      switchMap(token => {\n        const headers = new HttpHeaders({\n          Authorization: `Bearer ${token}`\n        });\n        return this.http.get<any[]>(`${this.apiUrl}/get-fournisseurs`, { headers });\n      })\n    );\n  }\n\n  // Ajoutez un paramètre pour les IDs de boutiques\n  importProduitsFromExcel(formData: FormData, boutiqueIds: number[]): Observable<any> {\n    return this.usersService.getValidAccessToken().pipe(\n      switchMap((token: string) => {\n        const headers = new HttpHeaders({\n          'Authorization': `Bearer ${token}` \n        });\n        \n        // Ajoutez les IDs de boutique dans le FormData\n        formData.append('boutiqueIds', JSON.stringify(boutiqueIds));\n        \n        return this.http.post(`${this.apiUrl}/import-produits-excel`, formData, { headers });\n      })\n    );\n  }\n\n  // Pour les produits d'entreprise (toutes les boutiques) :\n  getProduitsByEntrepriseIdPaginated(entrepriseId: number, page: number = 0, size: number = 20): Observable<ProduitEntreprisePaginatedResponse> {\n  return this.usersService.getValidAccessToken().pipe(\n    switchMap((token: string) => {\n      const headers = new HttpHeaders({ Authorization: `Bearer ${token}` });\n      const params = new HttpParams()\n        .set('page', page.toString())\n        .set('size', size.toString());\n      \n      return this.http.get<ProduitEntreprisePaginatedResponse>(\n        `${this.apiUrl}/entreprise/${entrepriseId}/produits/paginated`, \n        { headers, params }\n      );\n    })\n  );\n}\n\n  // Pour les produits d'une boutique :\n  getProduitsEntreprisePaginated(boutiqueId: number, page: number = 0, size: number = 20): Observable<ProduitStockPaginatedResponse> {\n    return this.usersService.getValidAccessToken().pipe(\n      switchMap((token: string) => {\n        const headers = new HttpHeaders({ Authorization: `Bearer ${token}` });\n        const params = new HttpParams()\n          .set('page', page.toString())\n          .set('size', size.toString());\n        \n        return this.http.get<ProduitStockPaginatedResponse>(\n          `${this.apiUrl}/boutique/${boutiqueId}/produits/paginated`, \n          { headers, params }\n        ).pipe(\n          catchError(error => {\n            if (error.status === 400 && error.error?.error === 'Cette boutique est désactivée, ses produits ne sont pas accessibles !') {\n              return throwError(() => new Error('BOUTIQUE_DESACTIVEE'));\n            }\n            return throwError(() => error);\n          })\n        );\n      })\n    );\n  }\n\n  \n  \n  \n}\n","\n\n// et aussi la partie frontend \n \nimport { CommonModule } from '@angular/common';\nimport { ChangeDetectorRef, Component, ElementRef, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ProduitService } from '../SERVICES/produit.service';\n// import { SharedDataService } from '../SERVICES/shared-data.service';\nimport { UsersService } from '../SERVICES/users.service';\nimport { Produit } from '../MODELS/produit.model';\nimport { Fournisseurs } from '../MODELS/fournisseurs-model';\n\n\nimport { StockService } from '../SERVICES/stocks.service';\nimport { Stock } from '../MODELS/stock.model';\nimport { CustomNumberPipe } from '../MODELS/customNumberPipe';\nimport { map, Observable, startWith, Subject, takeUntil } from 'rxjs';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { TransfertService } from '../SERVICES/transfert-service';\nimport { MatIconModule } from '@angular/material/icon';\n\n@Component({\n  selector: 'app-add-stock-ajustement',\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CustomNumberPipe,\n    ReactiveFormsModule,\n    MatAutocompleteModule,\n    MatIconModule,\n  ],\n  templateUrl: './add-stock-ajustement.component.html',\n  styleUrl: './add-stock-ajustement.component.scss'\n})\nexport class AddStockAjustementComponent {\n\n  // Dans la classe du composant\n  @ViewChild('productSelect') productSelect!: ElementRef;\n\n  private destroy$ = new Subject<void>();\n\n  ajusteForm!: FormGroup;\n  ajusteRetirerForm!: FormGroup;\n  errorMessage: string = '';\n  errorMessageError: string = '';\n\n  // Selectionner des boutique \n  selectedDestinationBoutique: any = null;\n\n  // Nom boutique \n  boutiqueName: string = '';\n  selectedAction: string = 'ajouter';\n\n  // Variable pour contrôler l'affichage des stocks ajustés après un rafraîchissement\n  stocksVisible: boolean = false;\n\n  // Nouvelle variable pour stocker les ajustements locaux\n  pendingAdjustments: any[] = [];\n\n  // Pop up de message\n  successMessage: string = '';\n\n  // Description Global\n  descriptionGlobal: string = '';\n  codeFournisseurGlobal: string = '';\n  boutiqueIdSelected: number | null = null; \n\n  controlBoutique = new FormControl('');\n  controlBoutiqueTransfert = new FormControl('');\n  streetsBoutique: { id: number, name: string, actif: boolean }[] = [];\n  streetsBoutiqueTransfert: { id: number, name: string, actif: boolean }[] = [];\n  // streetsBoutiqueTransfert: { id: number, name: string }[] = []; \n  filteredStreetsBoutique!: Observable<string[]>;\n  filteredStreetsBoutiqueTransfert!: Observable<any[]>;\n\n  showPopupBoutique = false;\n\n  \n\n  // Contructor\n  constructor(\n      // private sharedDataService: SharedDataService,\n      private produitService: ProduitService,\n      private fb: FormBuilder,\n      private router: Router,\n      private usersService: UsersService,\n      private stockService: StockService,\n      private cdRef: ChangeDetectorRef,\n      private transfertService: TransfertService,\n  ) {}\n\n  goToStock() {\n    this.router.navigate(['/stocks']);\n  }\n\n  ngOnInit(): void  {\n    this.getBoutiqueName();\n    // this.getPartageInfoUser();\n    // Convertir explicitement null en undefined avec l'opérateur de coalescence nulle\n    // this.loadProduits(this.usersService.getUserBoutiqueId() ?? undefined);\n    this.getAjusteForm();\n    this.getControleBoutique();\n    this.loadFournisseurs();\n  }\n\n  getControleBoutique() : void {\n    this.controlBoutique.valueChanges\n    .pipe(takeUntil(this.destroy$))\n    .subscribe(value => {\n      if (!value) {\n        this.handleBoutiqueDeselection();\n      }\n    });\n  }\n\n  // Nouvelle méthode pour gérer la désélection\n  private handleBoutiqueDeselection(): void {\n    this.boutiqueIdSelected = null;\n    this.tasks = [];\n    this.pendingAdjustments = [];\n    this.selectedProduct = null;\n    this.cdRef.detectChanges();\n  }\n\n  // Ajouter ngOnDestroy\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  checkBoutiqueSelection(): void {\n    if (!this.controlBoutique.value) {\n      this.handleBoutiqueDeselection();\n    }\n  }\n\n  getBoutiqueName(): void {\n    this.usersService.getUserInfo().subscribe(\n      (userInfo) => {\n        if (userInfo && userInfo.boutiques) {\n          // Modification ici : ajout de la propriété actif\n          this.streetsBoutique = userInfo.boutiques\n            .filter((boutique: any) => boutique.actif) // Filtre les boutiques actives\n            .map((boutique: any) => ({\n              id: boutique.id,\n              name: boutique.nomBoutique,\n              actif: boutique.actif // Ajout de la propriété manquante\n            }));\n\n          // Ancien code gardé en commentaire :\n          // this.streetsBoutique = userInfo.boutiques.map((boutique: any) => ({\n          //   id: boutique.id,\n          //   name: boutique.nomBoutique\n          // }));\n\n          this.streetsBoutiqueTransfert = [...this.streetsBoutique];\n          this.getFilteredStreetsBoutique();\n          this.getFilteredStreetsBoutiqueTransfert();\n        }\n      },\n      (error) => {\n        console.error('Erreur lors de la récupération des informations utilisateur', error);\n      }\n    );\n  }\n\n  // getPartageInfoUser() {\n  //    // Partage de donner de user\n  //    this.sharedDataService.boutiqueName$.subscribe(name => {\n  //     console.log(\"AddProduitComponent - Nom boutique récupéré :\", name);\n  //     this.boutiqueName = name;\n  //   });\n  // }\n\n  // select de produit\n  selectedProduct: Produit | null = null;\n  tasks: Produit[] = [];\n\n   selectedFournisseur: Fournisseurs | null = null;\n\n  fournisseurs: Fournisseurs[] = [];\n\n  // Charge les produits depuis le backend et effectue le mapping pour l'affichage\n  loadProduits(boutiqueId: number): void {\n    if (!boutiqueId) {\n      this.tasks = []; // Réinitialiser la liste si aucun ID\n      return;\n    }\n  \n    this.produitService.getProduitsEntreprise(boutiqueId).subscribe({\n      next: (produits: Produit[]) => {\n        this.tasks = produits\n          .filter(prod => prod.enStock)\n          .map(prod => ({ ...prod })) // Simplifié le mapping\n          .sort((a, b) => {\n            const parseDate = (dateStr: string | undefined): number => {\n              try {\n                return dateStr ? new Date(dateStr).getTime() : 0;\n              } catch {\n                return 0;\n              }\n            };\n          \n            return parseDate(b.createdAt) - parseDate(a.createdAt);\n          });\n      },\n      error: (err) => {\n        console.error(\"Erreur lors de la récupération des produits\", err);\n        this.tasks = [];\n      }\n    });\n  } \n  \n  // quantiteAjoute: number = 0;\n  quantiteAjoute: number | null = null; \n  quantiteRetirer: number | null = null; \n  descriptionAjout: string = '';\n  descriptionRetire: string = '';\n  codeFournisseur: string = '';\n  \n  // Ajoutez une variable pour contrôler la visibilité\n  // isProductAdded: boolean = false;\n\n  // Méthode pour ajouter le stock (ne modifie pas showAdjustedStocks)\n\n  get f() {\n    return this.ajusteForm.controls;\n  }\n  get r() { return this.ajusteRetirerForm.controls; }\n\n  // Charge les fournisseur depuis le backend et effectue le mapping pour l'affichage\n  loadFournisseurs(): void {\n    this.produitService.getFournisseurs().subscribe({\n      next: (fournisseurs: Fournisseurs[]) => {\n        this.fournisseurs = fournisseurs;\n        console.log('Fournisseurs:', this.fournisseurs);\n      },\n      error: (err) => {\n        console.error(\"Erreur lors de la récupération des fournisseurs\", err);\n        this.fournisseurs = [];\n      }\n    });\n  }\n\n\n  get stockApres(): number | string {\n    if (!this.selectedProduct) return '';\n    const stockActuel = Number(this.selectedProduct.quantite);\n    if (this.selectedAction === 'ajouter' && this.quantiteAjoute) {\n      return stockActuel + Number(this.quantiteAjoute);\n    } else if (this.selectedAction === 'reduire' && this.quantiteRetirer) {\n      return stockActuel - Number(this.quantiteRetirer);\n    } else if (this.selectedAction === 'transfert' && this.quantiteRetirer) {\n      return stockActuel - this.quantiteRetirer;\n    }\n    return '';\n  }\n\n  // Liste filtrée des stocks ajustés\n  adjustedStocks: Stock[] = [];\n\n  // Méthode pour charger tous les stocks et ne conserver que ceux ajustés\n  loadAdjustedStocks(): void {\n    // Récupérer le token (ou tout autre mécanisme d'authentification que vous utilisez)\n    const token = this.usersService.getToken(); \n    if (!token) {\n      console.error('Token introuvable');\n      return; // Vous pouvez également rediriger l'utilisateur ou afficher un message d'erreur\n    }\n    this.stockService.getAllStocks().subscribe({\n      next: (stocks: Stock[]) => {\n        // Filtrer pour garder uniquement les stocks ayant une quantité ajoutée ou retirée supérieure à 0\n        this.adjustedStocks = stocks.filter(stock =>\n          (stock.quantiteAjoute && stock.quantiteAjoute > 0) ||\n          (stock.quantiteRetirer && stock.quantiteRetirer > 0)\n        );\n      },\n      error: (error) => {\n        console.error(\"Erreur lors du chargement des stocks ajustés\", error);\n      }\n    });\n  }\n\n  // qui contient les produits chargés pour retrouver le nom.\n  getProductName(stock: Stock): string {\n    if (stock.produitId) {\n      console.log('ProduitId dans stock:', stock.produitId);\n      const produit = this.tasks.find(prod => prod.id === stock.produitId);\n      if (produit) {\n        console.log('Produit trouvé:', produit);\n        return produit.nom;\n        // return `${produit.nom} - ${produit.prixVente}`;\n      } else {\n        console.warn('Produit non trouvé dans tasks pour l\\'id:', stock.produitId);\n        return 'Produit inconnu';\n      }\n    }\n    console.warn('Aucun produitId présent dans le stock:', stock);\n    return 'Produit inconnu';\n  }\n\n  // qui contient les produits chargés pour retrouver le nom.\n  getProductPrixVente(stock: Stock): string {\n    if (stock.produitId) {\n      console.log('ProduitId dans stock:', stock.produitId);\n      const produit = this.tasks.find(prod => prod.id === stock.produitId);\n      if (produit) {\n        console.log('Produit trouvé:', produit);\n        // return produit.nom && produit.prixVente;\n        return `${produit.prixVente}`;\n      } else {\n        console.warn('Produit non trouvé dans tasks pour l\\'id:', stock.produitId);\n        return 'Produit inconnu';\n      }\n    }\n    console.warn('Aucun produitId présent dans le stock:', stock);\n    return 'Produit inconnu';\n  }\n\n  // Vérifier si les stocks doivent être visibles\n  checkStocksVisibility(): void {\n    const stocksVisibility = localStorage.getItem('stocksVisibility');\n    if (stocksVisibility === 'true') {\n      this.stocksVisible = true;\n    } else {\n      this.stocksVisible = false;\n    }\n  }\n\n  getAjusteForm() {\n    this.ajusteForm = this.fb.group({\n      boutiqueId: [null, Validators.required],\n      descriptionGlobal: ['', [Validators.minLength(2), Validators.maxLength(100)]],\n      codeFournisseur: ['', [Validators.minLength(4), Validators.maxLength(100)]],\n     fournisseurId: [null, Validators.required],\n\n    });\n  }\n\n  // getAjusteRetirerForm() {\n  //   this.ajusteRetirerForm = this.fb.group({\n  //     descriptionRetire: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(100)]]\n  //   })\n  // }\n\n  // Méthode pour ajouter un ajustement à la liste\n  addToPendingAdjustments() {\n    if (this.errorMessage) return;\n  \n    if (!this.selectedProduct) {\n      this.errorMessage = 'Veuillez sélectionner un produit';\n      return;\n    }\n  \n    if (!this.quantiteAjoute || this.quantiteAjoute <= 0) {\n      this.errorMessage = 'Quantité invalide';\n      return;\n    }\n\n  \n    // Ajout dans la liste avec descriptionAjout incluse\n    this.pendingAdjustments = [\n      ...this.pendingAdjustments,\n      {\n        produitId: this.selectedProduct.id,\n        produitNom: this.selectedProduct.nom,\n        quantiteAjoute: this.quantiteAjoute,\n        stockActuel: this.selectedProduct.quantite,\n        stockApres: this.stockApres,\n        prixVente: this.selectedProduct.prixVente,\n        descriptionAjout: this.descriptionAjout ,\n        codeFournisseur: this.codeFournisseur,\n      }\n    ];\n\n    // Réinitialisation\n    this.selectedProduct = null;\n    this.quantiteAjoute = null;\n    this.descriptionAjout = '';\n    this.codeFournisseur\n  }\n\n  // Méthode pour ajouter un ajustement à la liste\n  reduireToPendingAdjustments() {\n    if (this.errorMessage) return;\n  \n    if (!this.selectedProduct) {\n      this.errorMessage = 'Veuillez sélectionner un produit';\n      return;\n    }\n  \n    if (!this.quantiteRetirer || this.quantiteRetirer <= 0) {\n      this.errorMessage = 'Quantité invalide';\n      return;\n    }\n  \n    // Ajout dans la liste avec descriptionAjout incluse\n    this.pendingAdjustments = [\n      ...this.pendingAdjustments,\n      {\n        produitId: this.selectedProduct.id,\n        produitNom: this.selectedProduct.nom,\n        quantiteRetirer: this.quantiteRetirer,\n        stockActuel: this.selectedProduct.quantite,\n        stockApres: this.stockApres,\n        prixVente: this.selectedProduct.prixVente,\n        descriptionretire: this.descriptionRetire // Ajout de la description ici\n      }\n    ];\n  \n    // Réinitialisation\n    this.selectedProduct = null;\n    this.quantiteRetirer = null;\n    this.descriptionRetire = ''; // Réinitialiser le champ de description si besoin\n  } \n\n  // Méthode pour charger depuis localStorage\n  loadPendingAdjustments() {\n    const saved = localStorage.getItem('pendingAdjustments');\n    this.pendingAdjustments = saved ? JSON.parse(saved) : [];\n  }\n\n  checkExistingProduct() {\n    if (!this.selectedProduct) {\n      this.errorMessage = '';\n      return;\n    }\n  \n    const exists = this.pendingAdjustments.some(\n      item => item.produitNom === this.selectedProduct!.nom\n    );\n  \n    if (exists) {\n      this.errorMessage = `${this.selectedProduct.nom} est déjà dans la liste !`;\n      this.selectedProduct = null; // Désélectionne le produit\n    } else {\n      this.errorMessage = '';\n    }\n  }\n\n  clearSelections() {\n    this.errorMessage = '';\n    \n    // Réinitialisation avec nouvel objet\n    this.selectedProduct = null;\n    this.quantiteAjoute = null;\n  \n    // Force la mise à jour du cycle de changement\n    setTimeout(() => {\n      this.cdRef.detectChanges();\n      this.cdRef.markForCheck();\n    });\n\n    // Réinitialisation manuelle du DOM\n    if (this.productSelect) {\n      this.productSelect.nativeElement.selectedIndex = 0;\n    }\n  }\n\n  compareProducts(a: Produit | null, b: Produit | null): boolean {\n    // Cas où les deux valeurs sont null\n    if (a === null && b === null) return true;\n    \n    // Cas où l'une des valeurs est null\n    if (!a || !b) return false;\n    \n    // Comparaison normale par ID\n    return a.id === b.id;\n  }\n\n  /* Méthode pour ajouter du stock en regroupant les ajustements */\n  AjouterDesQuan(): void {\n    this.errorMessage = '';\n    this.successMessage = '';\n    const adjustmentsToProcess = [...this.pendingAdjustments];\n  \n    // Ajouter le produit sélectionné s'il est valide\n    if (this.selectedProduct && this.quantiteAjoute && this.quantiteAjoute > 0) {\n      const existingIndex = adjustmentsToProcess.findIndex(\n        item => item.produitId === this.selectedProduct!.id\n      );\n  \n      if (existingIndex === -1) {\n        adjustmentsToProcess.push({\n          produitId: this.selectedProduct.id,\n          produitNom: this.selectedProduct.nom,\n          quantiteAjoute: this.quantiteAjoute,\n          stockActuel: this.selectedProduct.quantite,\n          stockApres: this.selectedProduct.quantite + this.quantiteAjoute,\n          prixVente: this.selectedProduct.prixVente,\n        });\n      }\n    }\n  \n    if (adjustmentsToProcess.length > 0) {\n      const produitsQuantites = adjustmentsToProcess.reduce((acc, adjustment) => {\n        acc[adjustment.produitId] = adjustment.quantiteAjoute;\n        return acc;\n      }, {} as { [key: string]: number });\n  \n      const descriptionGlobal = this.ajusteForm.value.descriptionGlobal || '';\n      const codeFournisseur = this.ajusteForm.value.codeFournisseur || '';\n      \n  \n      // ✅ construire dynamiquement l'objet à envoyer\n      const dataToSend: any = {\n        boutiqueId: this.boutiqueIdSelected,\n        produitsQuantites,\n        description: descriptionGlobal,\n        codeFournisseur,\n        fournisseurId: this.fournisseurCtrl.value\n        \n      };\n\n      console.log('Data à envoyer:', dataToSend);\n      \n      \n  \n      this.stockService.ajouterStock(dataToSend).subscribe({\n        next: (response) => {\n          // Mise à jour locale\n          adjustmentsToProcess.forEach(adjustment => {\n            const product = this.tasks.find(p => p.id === adjustment.produitId);\n            if (product) product.quantite = adjustment.stockApres;\n          });\n  \n          this.clearForm();\n          this.showSuccessModal();\n        },\n        error: (error) => {\n          console.error('Erreur détaillée:', error);\n          this.showErrorModal(this.getErrorMessage(error));\n        }\n      });\n    } else {\n      this.showErrorModal('Veuillez sélectionner au moins un produit avec une quantité valide');\n    }\n  }\n  \n\n  /* Méthode pour retirer du stock en regroupant les ajustements */\n  RetirerDesQuan(): void {\n    this.errorMessage = '';\n    this.successMessage = '';\n    const adjustmentsToProcess = [...this.pendingAdjustments];\n  \n    // Ajouter le produit sélectionné actuel s'il est valide\n    if (this.selectedProduct && this.quantiteRetirer && this.quantiteRetirer > 0) {\n      const existingIndex = adjustmentsToProcess.findIndex(\n        item => item.produitId === this.selectedProduct!.id\n      );\n  \n      if (existingIndex === -1) {\n        // Vérifier que le stock ne devient pas négatif\n        const newStock = this.selectedProduct.quantite - this.quantiteRetirer;\n        \n        if (newStock < 0) {\n          this.showErrorModal('Le stock ne peut pas devenir négatif');\n          return;\n        }\n  \n        adjustmentsToProcess.push({\n          produitId: this.selectedProduct.id,\n          produitNom: this.selectedProduct.nom,\n          quantiteRetirer: this.quantiteRetirer,\n          stockActuel: this.selectedProduct.quantite,\n          stockApres: newStock,\n          prixVente: this.selectedProduct.prixVente\n        });\n      }\n    }\n  \n    if (adjustmentsToProcess.length > 0) {\n      const produitsQuantites = adjustmentsToProcess.reduce((acc, adjustment) => {\n        acc[adjustment.produitId] = adjustment.quantiteRetirer;\n        return acc;\n      }, {} as { [key: string]: number });\n  \n      const descriptionGlobal = this.ajusteForm.value.descriptionGlobal || '';\n  \n      this.stockService.retirerStock({\n        boutiqueId: this.boutiqueIdSelected,\n        produitsQuantites: produitsQuantites,\n        description: descriptionGlobal\n        \n      }).subscribe({\n        next: (response) => {\n          // Mise à jour locale\n          adjustmentsToProcess.forEach(adjustment => {\n            const product = this.tasks.find(p => p.id === adjustment.produitId);\n            if (product) product.quantite = adjustment.stockApres;\n          });\n  \n          this.clearForm();\n          this.showSuccessModal();\n        },\n        error: (error) => {\n          console.error('Erreur détaillée:', error);\n          this.showErrorModal(this.getErrorMessage(error));\n        }\n      });\n    } else {\n      this.showErrorModal('Veuillez sélectionner au moins un produit avec une quantité valide');\n    }\n  }\n\n  private clearForm() {\n    this.pendingAdjustments = [];\n    this.selectedProduct = null;\n    this.quantiteAjoute = null;\n    this.quantiteRetirer = null;\n    this.ajusteForm.reset();\n  }\n  \n  private getErrorMessage(error: any): string {\n    if (error.status === 400) {\n      return error.error.message || 'Quantité invalide ou stock insuffisant'; \n    }\n    if (error.status === 404) {\n      return 'Produit non trouvée';\n    }\n    return 'Erreur technique - Veuillez réessayer plus tard';\n  }\n\n  // private validateCurrentSelection(): boolean {\n  //   if (!this.selectedProduct) return false;\n  \n  //   if (this.selectedAction === 'ajouter') {\n  //     return this.quantiteAjoute !== null \n  //       && this.quantiteAjoute > 0 \n  //       && this.selectedProduct.quantite + this.quantiteAjoute >= 0;\n  //   }\n  \n  //   if (this.selectedAction === 'reduire') {\n  //     return this.quantiteRetirer !== null \n  //       && this.quantiteRetirer > 0 \n  //       && this.selectedProduct.quantite - this.quantiteRetirer >= 0;\n  //   }\n  \n  //   return false;\n  // }\n  \n  // Méthode pour afficher une pop-up de succès\n  showSuccessModal(): void {\n    this.successMessage = 'Les produits ont été ajustés avec réussite ! ';\n    setTimeout(() => {\n      this.successMessage = '';\n    }, 5000);\n  }\n  \n  // Méthode pour afficher une pop-up d'erreur\n  showErrorModal(message: string): void {\n    this.errorMessageError = message;\n    setTimeout(() => {\n      this.errorMessageError = '';\n    }, 3000);\n  }\n  \n  removePendingAdjustment(index: number): void {\n    // Supprime l'élément de la liste à l'index fourni\n    this.pendingAdjustments.splice(index, 1);\n  }  \n  \n  // Modifiez onBoutiqueSelected\n  onBoutiqueSelected(event: any): void {\n    const selectedBoutique = this.streetsBoutique.find(b => b.name === event.option.value);\n    \n    if (selectedBoutique) {\n      this.boutiqueIdSelected = selectedBoutique.id;\n      this.loadProduits(selectedBoutique.id);\n      this.pendingAdjustments = [];\n      this.selectedProduct = null;\n      this.updateTransfertFilter(); // Force le recalcul du filtre\n    }\n  }\n\n  getFilteredStreetsBoutique() {\n    this.filteredStreetsBoutique = this.controlBoutique.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filterBoutique(value || ''))\n    );\n  }\n\n  /*\n  private _filterBoutique(value: string): string[] {\n    const filterValue = this._normalizeValue(value);\n    return this.streetsBoutique.map(b => b.name).filter(street => this._normalizeValue(street).includes(filterValue));\n  }\n  */\n\n  private _filterBoutique(value: string): string[] {\n    const filterValue = this._normalizeValue(value);\n    return this.streetsBoutique\n      .filter(b => b.actif) // Ne garder que les boutiques actives\n      .map(b => b.name)\n      .filter(street => this._normalizeValue(street).includes(filterValue));\n  }\n\n  private _normalizeValue(value: string): string {\n    return value.toLowerCase().replace(/\\s/g, '');\n  }\n  \n  onFocusBoutiqueInput(): void {\n    this.controlBoutique.setValue(''); \n  }\n\n  displayFnBoutique(boutique?: string): string {\n    return boutique ? boutique : '';\n  }\n\n  // OnBoutiqueSelected Transfert\n  onBoutiqueSelectedTransfert(event: any): void {\n    this.selectedDestinationBoutique = event.option.value;\n  }\n\n  getFilteredStreetsBoutiqueTransfert() {\n    this.filteredStreetsBoutiqueTransfert = this.controlBoutiqueTransfert.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filterBoutiqueTransfert(value || ''))\n    );\n  }\n\n  private _filterBoutiqueTransfert(value: string | any): any[] {\n    // Gérer le cas où value est un objet boutique\n    const searchValue = typeof value === 'string' ? value : value?.name || '';\n    \n    const filterValue = this._normalizeValueTransfert(searchValue);\n    \n    return this.streetsBoutiqueTransfert\n      .filter(b => \n        this._normalizeValueTransfert(b.name).includes(filterValue) &&\n        b.id !== this.boutiqueIdSelected // Exclure la boutique source\n      );\n  }\n\n  // Cette méthode pour forcer le rafraîchissement\n  private updateTransfertFilter() {\n    const currentValue = this.controlBoutiqueTransfert.value;\n    this.controlBoutiqueTransfert.setValue('');\n    this.controlBoutiqueTransfert.setValue(currentValue);\n  }\n\n  // private _filterBoutiqueTransfert(value: string): any[] {\n  //   if (typeof value === 'string') {\n  //     const filterValue = this._normalizeValueTransfert(value);\n  //     return this.streetsBoutiqueTransfert.filter(b => \n  //       this._normalizeValueTransfert(b.name).includes(filterValue)\n  //     );\n  //   }\n  //   return this.streetsBoutiqueTransfert;\n  // }\n\n  private _normalizeValueTransfert(value: string): string {\n    return value.toLowerCase().replace(/\\s/g, '');\n  }\n  \n  onFocusBoutiqueInputTransfert(): void {\n    this.controlBoutiqueTransfert.setValue(''); \n  }\n\n  displayFnBoutiqueTransfert(boutique?: any): string {\n    return boutique?.name || '';\n  }\n\n  // Nouvelle méthode pour valider un transfert unique\n\n  validateSingleTransfer(): any {\n    if (!this.boutiqueIdSelected || !this.selectedDestinationBoutique?.id) {\n        return { valid: false, error: 'Veuillez sélectionner les boutiques' };\n    }\n\n    // Ajout de la vérification des boutiques identiques\n    if (this.boutiqueIdSelected === this.selectedDestinationBoutique.id) {\n      return { valid: false, error: 'La source et la destination doivent être différentes' };\n    }\n    \n    if (!this.selectedProduct) {\n        return { valid: false, error: 'Veuillez sélectionner un produit' };\n    }\n\n    const quantite = this.quantiteRetirer || 0;\n    if (quantite <= 0 || quantite > this.selectedProduct.quantite) {\n        return { valid: false, error: 'Quantité invalide' };\n    }\n\n    return { \n        valid: true,\n        transfert: {\n            produitId: this.selectedProduct.id,\n            quantite: quantite,\n            boutiqueSourceId: this.boutiqueIdSelected,\n            boutiqueDestinationId: this.selectedDestinationBoutique.id\n        }\n    };\n  }\n\n  // Méthode de transfert principale\n  async transfererProduits() {\n      let transfersToProcess = [...this.pendingAdjustments];\n\n      // Si liste vide, vérifier le transfert unique\n      if (transfersToProcess.length === 0) {\n          const validation = this.validateSingleTransfer();\n          if (!validation.valid) {\n              this.errorMessage = validation.error;\n              return;\n          }\n          transfersToProcess = [validation.transfert];\n      }\n\n      try {\n          const token = this.usersService.getToken();\n          if (!token) throw new Error('Non authentifié');\n\n          // Envoi des transferts\n          for (const transfert of transfersToProcess) {\n              await this.transfertService.effectuerTransfert(transfert).toPromise();\n              \n              // Mise à jour locale\n              const product = this.tasks.find(p => p.id === transfert.produitId);\n              if (product) product.quantite -= transfert.quantite;\n          }\n\n          // Réinitialisation\n          this.pendingAdjustments = [];\n          this.selectedProduct = null;\n          this.quantiteRetirer = null;\n          this.controlBoutiqueTransfert.reset();\n\n          this.successMessage = 'Transfert(s) effectué(s) avec succès';\n          setTimeout(() => this.successMessage = '', 3000);\n\n      } catch (error: any) {\n          console.error('Erreur:', error);\n          this.errorMessage = error.error?.message || 'Erreur lors du transfert';\n          setTimeout(() => this.errorMessage = '', 5000);\n      }\n  }\n\n  transfertToPendingAdjustments() {\n    const validation = this.validateSingleTransfer();\n    if (!validation.valid) {\n        this.errorMessage = validation.error;\n        return;\n    }\n\n    // Vérification doublon\n    const exists = this.pendingAdjustments.some(t => \n        t.produitId === validation.transfert.produitId &&\n        t.boutiqueDestinationId === validation.transfert.boutiqueDestinationId\n    );\n\n    if (exists) {\n        this.errorMessage = 'Ce transfert est déjà dans la liste';\n        return;\n    }\n\n    // Ajout avec les informations complètes\n    const newStock = this.selectedProduct!.quantite - validation.transfert.quantite;\n    this.pendingAdjustments.push({\n    ...validation.transfert,\n    produitNom: this.selectedProduct!.nom,\n    stockActuel: this.selectedProduct!.quantite,\n    stockApres: newStock, // Calcul dynamique\n    boutiqueDestinationName: this.selectedDestinationBoutique.name\n});\n\n    // Réinitialisation des champs (sans vider la liste)\n    this.selectedProduct = null;\n    this.quantiteRetirer = null;\n    this.selectedDestinationBoutique = null;\n    this.controlBoutiqueTransfert.reset();\n    this.errorMessage = '';\n}\n\nget fournisseurCtrl() {\n  return this.ajusteForm.get('fournisseurId')!;\n}\n\nonFournisseurChange() {\n  const id = this.fournisseurCtrl.value as number;\n  const f = this.fournisseurs.find(x => x.id === id);\n  this.codeFournisseur = f ? f.nomComplet : '';\n  console.log('✅ ID:', id, 'Nom:', this.codeFournisseur);\n}\n\nnavigateBack() {\n  this.router.navigate(['/stocks'])\n}\n\n\n  \n}\n","<div class=\"container_global\">\n  <div class=\"content_formulaire\">\n    <div class=\"modal-body\">\n      <form class=\"container_formulaire\">\n\n        <!-- Icon return  -->\n        <p class=\"retour_icon_text\" (click)=\"navigateBack()\" style=\"cursor: pointer; color: #0672E4; margin-bottom: 15px;\" title=\"Retour sur la page stock\">\n            <i class=\"ri-arrow-left-s-line\"></i> <span style=\"margin-left: 8px; font-size: 12px;\">Stocks</span>\n        </p>\n\n        <!-- Titre d'ajout de produits -->\n        <div class=\"Title\">\n          <h3>Ajustements des stocks</h3>\n        </div>\n\n        <div class=\"form_left_right\">\n          <div class=\"formulaire\">\n            <!-- Cadre contenant le select et la description -->\n            <div class=\"information_cadre\">\n              <div class=\"info_titre_input\">\n                <div class=\"double_input\">\n                  <!-- // Type ajouter et reduire  -->\n                  <div class=\"champ_input champ_input2\">\n                    <div class=\"title_input\">Type</div>\n                    <!-- On lie le select à \"selectedAction\" -->\n                    <select required name=\"action\" class=\"input_focus\" [(ngModel)]=\"selectedAction\">\n                      <!-- <option value=\"\">Choisissez-en un</option> -->\n                      <option value=\"ajouter\">Ajouter</option>\n                      <option value=\"reduire\">Reduire</option>\n                      <option value=\"transfert\">Transfert</option>\n                    </select>\n                  </div>\n                  <!-- // Boutique  -->\n                  <div class=\"champ_input champ_input2\">\n                    <div class=\"title_input\">Boutique</div>\n                    <input \n                        autocomplete=\"off\" \n                        type=\"text\" \n                        placeholder=\"Saisis le nom de boutique\"\n                        class=\"input_focus\" \n                        matInput \n                        [formControl]=\"controlBoutique\"\n                        [matAutocomplete]=\"autoBoutique\"\n                        (blur)=\"checkBoutiqueSelection()\"\n                      >\n                      <label for=\"boutiqueId\" class=\"label\" style=\"opacity: 0.8;\">Boutique</label>\n                      <mat-autocomplete #autoBoutique=\"matAutocomplete\" (optionSelected)=\"onBoutiqueSelected($event)\" [displayWith]=\"displayFnBoutique\">\n                        <mat-option *ngFor=\"let street of filteredStreetsBoutique | async\" [value]=\"street\">\n                          <div class=\"container_name_icon\">\n                            <div class=\"option-content\">\n                              {{ street }}\n                            </div>\n                        \n                            <!-- Icône de flèche permanente -->\n                            <div class=\"option_icon_div\" *ngIf=\"controlBoutique.value !== street\">\n                              <mat-icon class=\"option-icon\">keyboard_arrow_right</mat-icon>\n                            </div>\n                          </div>\n                        </mat-option>\n                      </mat-autocomplete>\n                  </div>\n                </div>\n                \n                <form [formGroup]=\"ajusteForm\">\n                  <div class=\"double_input\">\n                    <!-- Description Global -->\n                    <div class=\"champ_input champ_input2\">\n                      <textarea class=\"input_focus2\"\n                                formControlName=\"descriptionGlobal\"\n                                id=\"descriptionGlobal\"\n                                name=\"descriptionGlobal\"\n                                placeholder=\"Saisis Une description pour ce produit\"></textarea>\n                      <label for=\"descriptionGlobal\" class=\"label labelColor\">Description (Facultatif)</label>\n                      <div *ngIf=\"f['descriptionGlobal'].touched && f['descriptionGlobal'].invalid\" class=\"error-message\">\n                        <span *ngIf=\"f['descriptionGlobal'].errors?.['minlength']\">La description doit avoir au moins 2 caractères.</span>\n                        <span *ngIf=\"f['descriptionGlobal'].errors?.['maxlength']\">La description ne doit pas dépasser 100 caractères.</span>\n                      </div>\n                    </div>\n                    <!-- Fournisseur -->\n                        <div *ngIf=\"selectedAction === 'ajouter'\" class=\"champ_input champ_input2\">\n    <div class=\"champ_input_list_stocke\">\n      <div class=\"title_input2\">Nom du fournisseur</div>\n      <select\n        class=\"input_table2\"\n        formControlName=\"fournisseurId\"\n        (change)=\"onFournisseurChange()\"\n        required\n      >\n        <option [ngValue]=\"null\">-- Sélectionnez un fournisseur --</option>\n        <option *ngFor=\"let f of fournisseurs\" [ngValue]=\"f.id\">\n          {{ f.nomComplet }}\n        </option>\n      </select>\n    </div>\n  </div>\n\n                     <!-- Code Fournisseur (Affiché uniquement si \"Ajouter\" est sélectionné) -->\n                     <div class=\"champ_input champ_input2\" *ngIf=\"selectedAction === 'ajouter'\" >\n                      <div class=\"champ_input_list_stocke\" style=\"margin-right: 15px; \">\n                        <div class=\"title_input2\" style=\"text-align: center;\">Numéro du facture fournisseur</div>\n                        <input type=\"text\" class=\"input_table2\" \n                        formControlName=\"codeFournisseur\" \n                                id=\"codeFournisseur\"\n                                name=\"codeFournisseur\"\n                                style=\"text-align: center; margin-bottom: 3px!important;\"\n                                placeholder=\"0\">\n                      </div>\n                    </div>\n                  </div>\n                </form>\n                \n              </div>\n            </div>\n\n            <!-- Cadre pour \"Ajouter\" -->\n            <div class=\"information_cadre\" *ngIf=\"selectedAction === 'ajouter'\">\n\n              <div class=\"info_titre_input\">\n\n                <div class=\"add_new_quantite_stock\">\n                    <h4>Gestion des stocks</h4>\n                </div>\n\n                <div class=\"containerTable\" style=\"position: relative;\">\n                  <table>\n                    <thead>\n                      <tr class=\"titleTableProduit\">\n                        <th class=\"title_table_name\">Mes produits</th>\n                        <th class=\"title_table_contenu\" style=\"color: #0672E4;\">Quantité à ajouter</th>\n                        <th class=\"title_table_contenu\">Stock actuel</th>\n                        <th class=\"title_table_contenu\">Coût unitaire</th>\n                        <th class=\"title_table_contenu\">Stock après</th>\n                      </tr>\n                    </thead>\n\n                    <tbody  *ngIf=\"pendingAdjustments.length > 0\">\n                        <tr  *ngFor=\"let adjustment of pendingAdjustments; let i = index\"  class=\"tr_stock\" style=\"border-top: 1px solid #f0f2f5;\">\n                            <td>\n                              <div class=\"champ_input_list_stock\" style=\"margin-right: 10px;\">\n                                  <input type=\"text\" readonly class=\"input_table\" [value]=\"adjustment.produitNom\">\n                              </div>\n                            </td>\n                            <td>\n                              <div class=\"champ_input_list_stock\" style=\"margin-right: 15px;\">\n                                <input type=\"text\" readonly class=\"input_table\" \n                                  [value]=\"adjustment.quantiteAjoute && adjustment.quantiteAjoute > 0 ? adjustment.quantiteAjoute : adjustment.quantiteRetirer\" \n                                  style=\"text-align: center;\">\n                              </div>\n                            </td>\n                            <td>\n                              <div class=\"champ_input_list_stock\" style=\"margin-right: 15px;\">\n                                  <input type=\"text\" readonly class=\"input_table\" [value]=\"adjustment.stockActuel\" style=\"text-align: center;\">\n                              </div>\n                            </td>\n                            <td>\n                              <div class=\"champ_input_list_stock\" style=\"margin-right: 15px;\">\n                                <input type=\"text\" readonly class=\"input_table\" \n                                  [value]=\"adjustment.prixVente | customNumber\" \n                                  style=\"text-align: center;\">\n                              </div>\n                            </td>\n                            <td>\n                              <div class=\"champ_input_list_stock\">\n                                <input type=\"text\" readonly class=\"input_table\" \n                                [value]=\"adjustment.stockApres\" style=\"text-align: center; cursor: no-drop\">\n                              </div>\n                            </td>\n\n                            <td>\n                              <!-- // Button de ajouter  -->\n                              <div class=\"btn_delete\" (click)=\"removePendingAdjustment(i)\">\n                                <i class=\"ri-delete-bin-5-fill\"></i>\n                              </div>\n                            </td>\n                        </tr>\n                    </tbody>\n\n                    <tbody>\n                      <tr class=\"tr_stock\" style=\"border-top: 1px solid #f0f2f5;\">\n                        <td>\n                          <div class=\"champ_input\">\n                            <!-- Dans le select des produits -->\n                              <select \n                                required \n                                name=\"selectedProduct\" \n                                class=\"input_focus_type input_focus_type_select\" \n                                [(ngModel)]=\"selectedProduct\"\n                                [disabled]=\"!boutiqueIdSelected\"\n                                (ngModelChange)=\"checkExistingProduct()\"\n                                [compareWith]=\"compareProducts\"\n                                #productSelect\n                                [class.duplicate]=\"errorMessage.includes('est déjà dans la liste')\">\n\n                                <option [ngValue]=\"null\">\n                                  {{ boutiqueIdSelected ? 'Sélectionner un produit' : 'Veuillez sélectionner une boutique' }}\n                                </option>\n\n                                <!-- Message quand aucune boutique sélectionnée -->\n                                <ng-container *ngIf=\"!boutiqueIdSelected\">\n                                  <option disabled>\n                                    Aucune boutique sélectionnée\n                                  </option>\n                                </ng-container>\n\n                                <!-- Message quand pas de produits -->\n                                <ng-container *ngIf=\"boutiqueIdSelected && tasks.length === 0\">\n                                  <option disabled>\n                                    Aucun produit disponible dans cette boutique\n                                  </option>\n                                </ng-container>\n\n                                <!-- Liste des produits -->\n                                <option *ngFor=\"let produit of tasks\" [ngValue]=\"produit\">\n                                  {{ produit.nom }}\n                                </option>\n                              </select>\n\n                              <!-- Ajoutez ce message sous le select de boutique -->\n                              <!-- <div *ngIf=\"!controlBoutique.value\" class=\"info-message\">\n                              <i class=\"ri-information-line\"></i>\n                              Sélectionnez une boutique pour voir ses produits\n                              </div> -->\n                          </div>\n                        </td>\n                        <td>\n                          <!-- <form> -->\n                            <div class=\"champ_input\" style=\"margin-right: 15px;\">\n                              <!-- Modifiez les inputs de quantité pour qu'ils réagissent au changement -->\n                                <input type=\"number\" \n                                  id=\"addQuantite\" class=\"input_focus_type\"\n                                  [(ngModel)]=\"quantiteAjoute\"\n                                  [max]=\"selectedProduct ? selectedProduct.quantite : null\"\n                                  placeholder=\"0\"\n                                  name=\"addQuantite\"\n                                  style=\"text-align: center;\"\n                                  min=\"0\">\n                            </div>\n                          <!-- </form> -->\n                        </td>               \n                        <td>\n                          <!-- // Quantité  -->\n                          <div class=\"champ_input\" style=\"margin-right: 15px;\">\n                            <input type=\"text\" disabled class=\"input_focus_type\" id=\"stockActuel\" \n                              [value]=\"selectedProduct ? selectedProduct.quantite : 0\" \n                              name=\"stockActuel\" style=\"cursor: no-drop; text-align: center;\">\n                          </div>                         \n                        </td>\n                        <td>\n                          <!-- // prix Vente  -->\n                          <div class=\"champ_input\" style=\"margin-right: 15px;\">\n                            <input type=\"text\" disabled class=\"input_focus_type\" id=\"CoutUnitaire\" \n                              [value]=\"selectedProduct ? (selectedProduct.prixVente | customNumber) : (0 | customNumber)\" \n                              name=\"CoutUnitaire\" style=\"cursor: no-drop; text-align: center;\">\n                          </div>\n                        </td>                        \n                        <td>\n                          <div class=\"champ_input\">\n                            <input type=\"text\" disabled \n                                   class=\"input_focus_type\" \n                                   id=\"stockApres\" \n                                   [value]=\"stockApres\" \n                                   name=\"stockApres\" \n                                   style=\"text-align: center;cursor: no-drop\">\n                          </div>\n                        </td>  \n                        <td>\n                          <!-- // Button de ajouter  -->\n                          <div class=\"btn_ajouter\" (click)=\"addToPendingAdjustments()\">\n                            <i class=\"ri-add-fill\"></i>\n                          </div>\n                        </td>                                                             \n                      </tr>\n                    </tbody>\n                  </table>\n\n                  <!-- Popup d'erreur (affichée uniquement en cas d'erreur) -->\n                  <div class=\"modal-overlay\" *ngIf=\"errorMessage\">\n                    <div class=\"modal-content\">\n                      <p class=\"modal-content-text\">{{ errorMessage }}</p>\n                      <button class=\"modal-content-text-button\" (click)=\"clearSelections()\">OK</button>\n                    </div>\n                  </div>\n\n                  <!-- <div *ngIf=\"errorMessage\" class=\"error-message\">\n                    {{ errorMessage }}\n                  </div>\n                  <div *ngIf=\"errorMessage\" class=\"error-popup\">\n                    {{ errorMessage }}\n                    <button (click)=\"errorMessage = ''\">×</button>\n                  </div> -->\n                </div>\n              </div>\n            </div>\n\n            <!-- Cadre pour \"Reduire\" -->\n            <div class=\"information_cadre\" *ngIf=\"selectedAction === 'reduire'\">\n\n              <div class=\"info_titre_input\">\n\n                <div class=\"add_new_quantite_stock\">\n                    <h4>Gestion des stocks</h4>\n                </div>\n\n                <div class=\"containerTable\" style=\"position: relative;\">\n                  <table>\n                    <thead>\n                      <tr class=\"titleTableProduit\">\n                        <th class=\"title_table_name\">Mes produits</th>\n                        <th class=\"title_table_contenu\" style=\"color: #ff0000;\">Quantité à reduire</th>\n                        <th class=\"title_table_contenu\">Stock actuel</th>\n                        <th class=\"title_table_contenu\">Coût unitaire</th>\n                        <th class=\"title_table_contenu\">Stock après</th>\n                      </tr>\n                    </thead>\n\n                    <tbody  *ngIf=\"pendingAdjustments.length > 0\">\n                        <tr  *ngFor=\"let adjustment of pendingAdjustments; let i = index\"  class=\"tr_stock\" style=\"border-top: 1px solid #f0f2f5;\">\n                            <td>\n                              <div class=\"champ_input_list_stock\" style=\"margin-right: 10px;\">\n                                  <input type=\"text\" readonly class=\"input_table\" [value]=\"adjustment.produitNom\">\n                              </div>\n                            </td>\n                            <td>\n                              <div class=\"champ_input_list_stock\" style=\"margin-right: 15px;\">\n                                <input type=\"text\" readonly class=\"input_table\" \n                                  [value]=\"adjustment.quantiteRetirer && adjustment.quantiteRetirer > 0 ? adjustment.quantiteRetirer : adjustment.quantiteAjoute\" \n                                  style=\"text-align: center;\">\n                              </div>\n                            </td>\n                            <td>\n                              <div class=\"champ_input_list_stock\" style=\"margin-right: 15px;\">\n                                  <input type=\"text\" readonly class=\"input_table\" [value]=\"adjustment.stockActuel\" style=\"text-align: center;\">\n                              </div>\n                            </td>\n                            <td>\n                              <div class=\"champ_input_list_stock\" style=\"margin-right: 15px;\">\n                                <input type=\"text\" readonly class=\"input_table\" \n                                  [value]=\"adjustment.prixVente | customNumber\" \n                                  style=\"text-align: center;\">\n                              </div>\n                            </td>\n                            <td>\n                              <div class=\"champ_input_list_stock\">\n                                <input type=\"text\" readonly class=\"input_table\" \n                                [value]=\"adjustment.stockApres\" style=\"text-align: center;\">\n                              </div>\n                            </td>\n\n                            <td>\n                              <!-- // Button de delele  -->\n                              <div class=\"btn_delete\" (click)=\"removePendingAdjustment(i)\">\n                                <i class=\"ri-delete-bin-5-fill\"></i>\n                              </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                    \n                    <tbody>\n                      <tr class=\"tr_stock\" style=\"border-top: 1px solid #f0f2f5;\">\n                        <td>\n                          <div class=\"champ_input\">\n                            <!-- <select \n                              required \n                              name=\"selectedProduct\" \n                              class=\"input_focus_type input_focus_type_select\" \n                              [(ngModel)]=\"selectedProduct\"\n                              (ngModelChange)=\"checkExistingProduct()\"\n                              [compareWith]=\"compareProducts\"\n                              #productSelect\n                              [class.duplicate]=\"errorMessage.includes('est déjà dans la liste')\" >\n                              <option [ngValue]=\"null\">Sélectionner un produit</option>\n                              <option *ngFor=\"let produit of tasks\" [ngValue]=\"produit\">\n                                {{ produit.nom }}\n                              </option>\n                            </select> -->\n                            <select \n                                required \n                                name=\"selectedProduct\" \n                                class=\"input_focus_type input_focus_type_select\" \n                                [(ngModel)]=\"selectedProduct\"\n                                [disabled]=\"!boutiqueIdSelected\"\n                                (ngModelChange)=\"checkExistingProduct()\"\n                                [compareWith]=\"compareProducts\"\n                                #productSelect\n                                [class.duplicate]=\"errorMessage.includes('est déjà dans la liste')\">\n\n                                <option [ngValue]=\"null\">\n                                  {{ boutiqueIdSelected ? 'Sélectionner un produit' : 'Veuillez sélectionner une boutique' }}\n                                </option>\n\n                                <!-- Message quand aucune boutique sélectionnée -->\n                                <ng-container *ngIf=\"!boutiqueIdSelected\">\n                                  <option disabled>\n                                    Aucune boutique sélectionnée\n                                  </option>\n                                </ng-container>\n\n                                <!-- Message quand pas de produits -->\n                                <ng-container *ngIf=\"boutiqueIdSelected && tasks.length === 0\">\n                                  <option disabled>\n                                    Aucun produit disponible dans cette boutique\n                                  </option>\n                                </ng-container>\n\n                                <!-- Liste des produits -->\n                                <option *ngFor=\"let produit of tasks\" [ngValue]=\"produit\">\n                                  {{ produit.nom }}\n                                </option>\n                              </select>\n                          </div>\n                        </td>\n                        <td>\n                          <form>\n                            <div class=\"champ_input\" style=\"margin-right: 15px;\">\n                              <input type=\"number\" class=\"input_focus_type\"\n                                [(ngModel)]=\"quantiteRetirer\"\n                                [max]=\"selectedProduct ? selectedProduct.quantite : null\"\n                                placeholder=\"0\"\n                                name=\"quantiteRetirer\"\n                                style=\"text-align: center;\"\n                                min=\"0\">\n                            </div>\n                          </form>\n                        </td>                     \n                        <td>\n                          <!-- // Quantité  -->\n                          <div class=\"champ_input\" style=\"margin-right: 15px;\">\n                            <input type=\"text\" disabled class=\"input_focus_type\" id=\"stockActuel\" \n                              [value]=\"selectedProduct ? selectedProduct.quantite : 0\" \n                              name=\"stockActuel\" style=\"cursor: no-drop; text-align: center;\">\n                          </div>                         \n                        </td>\n                        <td>\n                          <!-- // prix Vente  -->\n                          <div class=\"champ_input\" style=\"margin-right: 15px;\">\n                            <input type=\"text\" disabled class=\"input_focus_type\" id=\"CoutUnitaire\" \n                              [value]=\"selectedProduct ? (selectedProduct.prixVente | customNumber) : (0 | customNumber)\"\n                              name=\"CoutUnitaire\" style=\"cursor: no-drop; text-align: center;\">\n                          </div>\n                        </td>                        \n                        <td>\n                          <div class=\"champ_input\">\n                            <input type=\"text\" disabled \n                                   class=\"input_focus_type\" \n                                   id=\"stockApres\" \n                                   [value]=\"stockApres\" \n                                   name=\"stockApres\" \n                                   style=\"text-align: center;\">\n                          </div>\n                        </td>  \n                        <td>\n                          <!-- // Button de ajouter  -->\n                          <div class=\"btn_ajouter\" (click)=\"reduireToPendingAdjustments()\">\n                            <i class=\"ri-add-fill\"></i>\n                          </div>\n                        </td>                                                             \n                      </tr>\n                    </tbody>\n                  </table>\n\n                  <!-- Popup d'erreur (affichée uniquement en cas d'erreur) -->\n                  <div class=\"modal-overlay\" *ngIf=\"errorMessage\">\n                    <div class=\"modal-content\">\n                      <p class=\"modal-content-text\">{{ errorMessage }}</p>\n                      <button class=\"modal-content-text-button\" (click)=\"clearSelections()\">OK</button>\n                    </div>\n                  </div>\n\n                  <!-- <div *ngIf=\"errorMessage\" class=\"error-message\">\n                    {{ errorMessage }}\n                  </div>\n                  <div *ngIf=\"errorMessage\" class=\"error-popup\">\n                    {{ errorMessage }}\n                    <button (click)=\"errorMessage = ''\">×</button>\n                  </div> -->\n                </div>\n              </div>\n            </div>\n\n            <!-- Cadre pour \"Transfert\" -->\n            <div class=\"information_cadre\" *ngIf=\"selectedAction === 'transfert'\">\n\n              <div class=\"info_titre_input\">\n          \n                <div class=\"add_new_quantite_stock\">\n                    <h4>Gestion des transferts</h4>\n                </div>\n          \n                <div class=\"containerTable\" style=\"position: relative;\">\n                  <table>\n                    <thead>\n                      <tr class=\"titleTableProduit\">\n                        <th class=\"title_table_name_transfert\">Mes produits</th>\n                        <th class=\"title_table_contenu\" style=\"color: #0672E4; margin-right: 15px;\">Quantité de transfert</th>\n                        <th class=\"title_table_contenu\">Stock actuel</th>\n                        <th class=\"title_table_contenu\">Stock après</th>\n                        <th class=\"title_table_contenu\">Boutique d'arriver</th>\n                      </tr>\n                    </thead>\n          \n                    <tbody *ngIf=\"pendingAdjustments.length > 0\">\n                        <tr  *ngFor=\"let adjustment of pendingAdjustments; let i = index\"  class=\"tr_stock\" style=\"border-top: 1px solid #f0f2f5;\">\n                            <td>\n                              <div class=\"champ_input_list_stock\" style=\"margin-right: 10px;\">\n                                  <input type=\"text\" readonly class=\"input_table\" [value]=\"adjustment.produitNom\">\n                              </div>\n                            </td>\n                            <td>\n                              <div class=\"champ_input_list_stock\" style=\"margin-right: 15px;\">\n                                <input type=\"text\" readonly class=\"input_table\" \n                                  [value]=\"adjustment.quantite\" \n                                  style=\"text-align: center;\">\n                              </div>\n                            </td>\n                            <td>\n                              <div class=\"champ_input_list_stock\" style=\"margin-right: 15px;\">\n                                  <input type=\"text\" readonly class=\"input_table\" [value]=\"adjustment.stockActuel\" style=\"text-align: center;\">\n                              </div>\n                            </td>\n                            <td>\n                              <div class=\"champ_input_list_stock\" style=\"margin-right: 15px;\">\n                                  <input type=\"text\" readonly class=\"input_table\" \n                                      [value]=\"adjustment.stockActuel\" \n                                      style=\"text-align: center;\">\n                              </div>\n                          </td>\n                            <td>\n                              <div class=\"champ_input_list_stock\" style=\"margin-right: 10px;\">\n                                <!-- Utiliser adjustment.boutique au lieu de boutique -->\n                                <input type=\"text\" readonly class=\"input_table\" [value]=\"adjustment.boutiqueDestinationName\"> \n                              </div>\n                            </td>\n          \n                            <td>\n                              <!-- // Button de ajouter  -->\n                              <div class=\"btn_delete\" (click)=\"removePendingAdjustment(i)\">\n                                <i class=\"ri-delete-bin-5-fill\"></i>\n                              </div>\n                            </td>\n                        </tr>\n                    </tbody>\n                    \n                    <tbody>\n                      <tr class=\"tr_stock\" style=\"border-top: 1px solid #f0f2f5;\">\n                        <td>\n                          <div class=\"champ_input\" style=\"margin-right: 15px;\">\n                            <select \n                                required \n                                name=\"selectedProduct\" \n                                class=\"input_focus_type input_focus_type_select\" \n                                [(ngModel)]=\"selectedProduct\"\n                                [disabled]=\"!boutiqueIdSelected\"\n                                (ngModelChange)=\"checkExistingProduct()\"\n                                [compareWith]=\"compareProducts\"\n                                #productSelect\n                                [class.duplicate]=\"errorMessage.includes('est déjà dans la liste')\">\n          \n                                <option [ngValue]=\"null\">\n                                  {{ boutiqueIdSelected ? 'Sélectionner un produit' : 'Sélectionner une boutique' }}\n                                </option>\n          \n                                <!-- Message quand aucune boutique sélectionnée -->\n                                <ng-container *ngIf=\"!boutiqueIdSelected\">\n                                  <option disabled>\n                                    Aucune boutique sélectionnée\n                                  </option>\n                                </ng-container>\n          \n                                <!-- Message quand pas de produits -->\n                                <ng-container *ngIf=\"boutiqueIdSelected && tasks.length === 0\">\n                                  <option disabled>\n                                    Aucun produit disponible dans cette boutique\n                                  </option>\n                                </ng-container>\n          \n                                <!-- Liste des produits -->\n                                <option *ngFor=\"let produit of tasks\" [ngValue]=\"produit\">\n                                  {{ produit.nom }}\n                                </option>\n                            </select>\n                          </div>\n                        </td>\n                        <td>\n                          <form>\n                            <div class=\"champ_input\" style=\"margin-right: 15px;\">\n                              <input type=\"number\" class=\"input_focus_type\"\n                                [(ngModel)]=\"quantiteRetirer\"\n                                [max]=\"selectedProduct ? selectedProduct.quantite : null\"\n                                placeholder=\"0\"\n                                name=\"quantiteRetirer\"\n                                style=\"text-align: center;\"\n                                min=\"0\">\n                            </div>\n                          </form>\n                        </td>                     \n                        <td>\n                          <!-- // Quantité  -->\n                          <div class=\"champ_input\" style=\"margin-right: 15px;\">\n                            <input type=\"text\" disabled class=\"input_focus_type\" id=\"stockActuel\" \n                              [value]=\"selectedProduct ? selectedProduct.quantite : 0\" \n                              name=\"stockActuel\" style=\"cursor: no-drop; text-align: center;\">\n                          </div>                         \n                        </td>                     \n                        <td>\n                          <div class=\"champ_input\" style=\"margin-right: 15px;\">\n                            <input type=\"text\" disabled \n                                   class=\"input_focus_type\" \n                                   id=\"stockApres\" \n                                   [value]=\"stockApres\" \n                                   name=\"stockApres\" \n                                   style=\"text-align: center;\">\n                          </div>\n                        </td>\n                        <td>\n                          <div class=\"champ_input champ_input2\">\n                            <input \n                                autocomplete=\"off\" \n                                type=\"text\" \n                                placeholder=\"Saisis le nom de boutique\"\n                                class=\"input_focus\" \n                                matInput \n                                [formControl]=\"controlBoutiqueTransfert\"\n                                [matAutocomplete]=\"autoBoutiqueTransfert\"\n                              >\n                              <label for=\"boutiqueId\" class=\"label\">Boutique</label>\n                              <mat-autocomplete #autoBoutiqueTransfert=\"matAutocomplete\" \n                                              (optionSelected)=\"onBoutiqueSelectedTransfert($event)\"\n                                              [displayWith]=\"displayFnBoutiqueTransfert\">\n                                <mat-option \n                                  *ngFor=\"let boutique of filteredStreetsBoutiqueTransfert | async\" \n                                  [value]=\"boutique\"\n                                  [disabled]=\"boutique.id === boutiqueIdSelected || !boutique.actif\">\n                                  {{ boutique.name }}\n                                  <span *ngIf=\"boutique.id === boutiqueIdSelected\" style=\"color: #666; margin-left: 8px;\">\n                                    (Déjà sélectionnée)\n                                  </span>\n                                  <span *ngIf=\"!boutique.actif\" style=\"color: #ff0000; margin-left: 8px;\">\n                                    (Suspendue)\n                                  </span>\n                                </mat-option>\n                              </mat-autocomplete>\n                          </div>\n                        </td>\n                        <td>\n                          <!-- // Button de ajouter  -->\n                          <div class=\"btn_ajouter\" (click)=\"transfertToPendingAdjustments()\">\n                            <i class=\"ri-add-fill\"></i>\n                          </div>\n                        </td>                                                             \n                      </tr>\n                    </tbody>\n                  </table>\n          \n                  <!-- Popup d'erreur (affichée uniquement en cas d'erreur) -->\n                  <div class=\"modal-overlay\" *ngIf=\"errorMessage\">\n                    <div class=\"modal-content\">\n                        <p class=\"modal-content-text\">{{ errorMessage }}</p>\n                        <button class=\"modal-content-text-button\" (click)=\"errorMessage = ''\">OK</button>\n                    </div>\n                </div>\n          \n                </div>\n              </div>\n          </div>\n\n            <!-- Boutons Ajouter et Sauvegarder -->\n            <div class=\"information_cadre\" *ngIf=\"selectedAction === 'ajouter'\">\n              <div class=\"info_titre_input info_titre_input_btn\">\n                <div class=\"btn_annuler\">\n                  <button class=\"btn_cancel\" (click)=\"goToStock()\">Annuler</button>\n                </div>\n                <div class=\"btn_ajouter\">\n                  <button class=\"btn_save\" (click)=\"AjouterDesQuan()\">Ajuster</button>\n                </div>\n              </div>\n            </div>\n\n            <!-- Boutons Reduire et Sauvegarder -->\n            <div class=\"information_cadre\" *ngIf=\"selectedAction === 'reduire'\">\n              <div class=\"info_titre_input info_titre_input_btn\">\n                <div class=\"btn_annuler\">\n                  <button class=\"btn_cancel\" (click)=\"goToStock()\">Annuler</button>\n                </div>\n                <div class=\"btn_ajouter\">\n                  <button class=\"btn_save\" (click)=\"RetirerDesQuan()\">Ajuster</button>\n                </div>\n              </div>\n            </div>\n\n            <!-- Boutons Transfert et Sauvegarder -->\n            <div class=\"information_cadre\" *ngIf=\"selectedAction === 'transfert'\">\n              <div class=\"info_titre_input info_titre_input_btn\">\n                <div class=\"btn_annuler\">\n                  <button class=\"btn_cancel\" (click)=\"goToStock()\">Annuler</button>\n                </div>\n                <div class=\"btn_ajouter\">\n                  <button class=\"btn_save\" (click)=\"transfererProduits()\">Transférer</button>\n                </div>\n              </div>\n            </div>\n\n            <!-- Pop-up de validation de l'ajustement -->\n            <!-- Pop-up de succès -->\n            <div class=\"modal-overlay\" *ngIf=\"successMessage\">\n              <div class=\"modal-content\">\n                <p class=\"modal-content-text\">{{ successMessage }}</p>\n                <button class=\"modal-content-text-button\" (click)=\"successMessage = ''\">OK</button>\n              </div>\n            </div>\n\n            <!-- Pop-up d'erreur -->\n            <div class=\"modal-overlay\" *ngIf=\"errorMessageError\">\n              <div class=\"modal-content\">\n                <p class=\"modal-content-text\">{{ errorMessageError }}</p>\n                <!-- <button class=\"modal-content-text-button\" (click)=\"errorMessageError = ''\">OK</button> -->\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>"],"names":["HttpHeaders","HttpParams","catchError","switchMap","throwError","environment","ProduitService","constructor","http","usersService","apiUrl","apiBaseUrl","ajouterProduit","boutiqueIds","quantites","seuilAlert","produit","imageFile","addToStock","datePreemption","url","formData","FormData","append","JSON","stringify","name","getValidAccessToken","pipe","token","headers","post","modifierProduit","file","id","productData","enStock","patch","getProduitById","productId","get","getProduitsEntreprise","boutiqueId","Authorization","error","status","Error","getProduitBoutique","getProduitsByEntrepriseId","entrepriseId","getProduitsParEntreprise","getFournisseurs","importProduitsFromExcel","getProduitsByEntrepriseIdPaginated","page","size","params","set","toString","getProduitsEntreprisePaginated","i0","ɵɵinject","i1","HttpClient","i2","UsersService","factory","ɵfac","providedIn","CommonModule","FormControl","FormsModule","ReactiveFormsModule","Validators","CustomNumberPipe","map","startWith","Subject","takeUntil","MatAutocompleteModule","MatIconModule","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","AddStockAjustementComponent_mat_option_34_div_4_Template","ɵɵproperty","street_r2","ɵɵadvance","ɵɵtextInterpolate1","ctx_r2","controlBoutique","value","AddStockAjustementComponent_div_42_span_1_Template","AddStockAjustementComponent_div_42_span_2_Template","f","errors","f_r5","nomComplet","ɵɵlistener","AddStockAjustementComponent_div_43_Template_select_change_4_listener","ɵɵrestoreView","_r4","ɵɵnextContext","ɵɵresetView","onFournisseurChange","AddStockAjustementComponent_div_43_option_7_Template","fournisseurs","ɵɵelement","AddStockAjustementComponent_div_45_tbody_19_tr_1_Template_div_click_18_listener","i_r8","_r7","index","removePendingAdjustment","adjustment_r9","produitNom","quantiteAjoute","quantiteRetirer","stockActuel","ɵɵpipeBind1","prixVente","stockApres","AddStockAjustementComponent_div_45_tbody_19_tr_1_Template","pendingAdjustments","ɵɵelementContainerStart","produit_r10","nom","AddStockAjustementComponent_div_45_div_48_Template_button_click_4_listener","_r11","clearSelections","ɵɵtextInterpolate","errorMessage","AddStockAjustementComponent_div_45_tbody_19_Template","ɵɵtwoWayListener","AddStockAjustementComponent_div_45_Template_select_ngModelChange_24_listener","$event","_r6","ɵɵtwoWayBindingSet","selectedProduct","checkExistingProduct","AddStockAjustementComponent_div_45_ng_container_28_Template","AddStockAjustementComponent_div_45_ng_container_29_Template","AddStockAjustementComponent_div_45_option_30_Template","AddStockAjustementComponent_div_45_Template_input_ngModelChange_33_listener","AddStockAjustementComponent_div_45_Template_div_click_46_listener","addToPendingAdjustments","AddStockAjustementComponent_div_45_div_48_Template","length","ɵɵclassProp","includes","ɵɵtwoWayProperty","boutiqueIdSelected","compareProducts","tasks","quantite","AddStockAjustementComponent_div_46_tbody_19_tr_1_Template_div_click_18_listener","i_r14","_r13","adjustment_r15","AddStockAjustementComponent_div_46_tbody_19_tr_1_Template","produit_r16","AddStockAjustementComponent_div_46_div_49_Template_button_click_4_listener","_r17","AddStockAjustementComponent_div_46_tbody_19_Template","AddStockAjustementComponent_div_46_Template_select_ngModelChange_24_listener","_r12","AddStockAjustementComponent_div_46_ng_container_28_Template","AddStockAjustementComponent_div_46_ng_container_29_Template","AddStockAjustementComponent_div_46_option_30_Template","AddStockAjustementComponent_div_46_Template_input_ngModelChange_34_listener","AddStockAjustementComponent_div_46_Template_div_click_47_listener","reduireToPendingAdjustments","AddStockAjustementComponent_div_46_div_49_Template","AddStockAjustementComponent_div_47_tbody_19_tr_1_Template_div_click_17_listener","i_r20","_r19","adjustment_r21","boutiqueDestinationName","AddStockAjustementComponent_div_47_tbody_19_tr_1_Template","produit_r22","AddStockAjustementComponent_div_47_mat_option_48_span_2_Template","AddStockAjustementComponent_div_47_mat_option_48_span_3_Template","boutique_r23","actif","AddStockAjustementComponent_div_47_div_53_Template_button_click_4_listener","_r24","AddStockAjustementComponent_div_47_tbody_19_Template","AddStockAjustementComponent_div_47_Template_select_ngModelChange_24_listener","_r18","AddStockAjustementComponent_div_47_ng_container_28_Template","AddStockAjustementComponent_div_47_ng_container_29_Template","AddStockAjustementComponent_div_47_option_30_Template","AddStockAjustementComponent_div_47_Template_input_ngModelChange_34_listener","AddStockAjustementComponent_div_47_Template_mat_autocomplete_optionSelected_46_listener","onBoutiqueSelectedTransfert","AddStockAjustementComponent_div_47_mat_option_48_Template","AddStockAjustementComponent_div_47_Template_div_click_51_listener","transfertToPendingAdjustments","AddStockAjustementComponent_div_47_div_53_Template","controlBoutiqueTransfert","autoBoutiqueTransfert_r25","displayFnBoutiqueTransfert","filteredStreetsBoutiqueTransfert","AddStockAjustementComponent_div_48_Template_button_click_3_listener","_r26","goToStock","AddStockAjustementComponent_div_48_Template_button_click_6_listener","AjouterDesQuan","AddStockAjustementComponent_div_49_Template_button_click_3_listener","_r27","AddStockAjustementComponent_div_49_Template_button_click_6_listener","RetirerDesQuan","AddStockAjustementComponent_div_50_Template_button_click_3_listener","_r28","AddStockAjustementComponent_div_50_Template_button_click_6_listener","transfererProduits","AddStockAjustementComponent_div_51_Template_button_click_4_listener","_r29","successMessage","errorMessageError","AddStockAjustementComponent","produitService","fb","router","stockService","cdRef","transfertService","destroy$","selectedDestinationBoutique","boutiqueName","selectedAction","stocksVisible","descriptionGlobal","codeFournisseurGlobal","streetsBoutique","streetsBoutiqueTransfert","showPopupBoutique","selectedFournisseur","descriptionAjout","descriptionRetire","codeFournisseur","adjustedStocks","navigate","ngOnInit","getBoutiqueName","getAjusteForm","getControleBoutique","loadFournisseurs","valueChanges","subscribe","handleBoutiqueDeselection","detectChanges","ngOnDestroy","next","complete","checkBoutiqueSelection","getUserInfo","userInfo","boutiques","filter","boutique","nomBoutique","getFilteredStreetsBoutique","getFilteredStreetsBoutiqueTransfert","console","loadProduits","produits","prod","sort","a","b","parseDate","dateStr","Date","getTime","createdAt","err","ajusteForm","controls","r","ajusteRetirerForm","log","Number","loadAdjustedStocks","getToken","getAllStocks","stocks","stock","getProductName","produitId","find","warn","getProductPrixVente","checkStocksVisibility","stocksVisibility","localStorage","getItem","group","required","minLength","maxLength","fournisseurId","descriptionretire","loadPendingAdjustments","saved","parse","exists","some","item","setTimeout","markForCheck","productSelect","nativeElement","selectedIndex","adjustmentsToProcess","existingIndex","findIndex","push","produitsQuantites","reduce","acc","adjustment","dataToSend","description","fournisseurCtrl","ajouterStock","response","forEach","product","p","clearForm","showSuccessModal","showErrorModal","getErrorMessage","newStock","retirerStock","reset","message","splice","onBoutiqueSelected","event","selectedBoutique","option","updateTransfertFilter","filteredStreetsBoutique","_filterBoutique","filterValue","_normalizeValue","street","toLowerCase","replace","onFocusBoutiqueInput","setValue","displayFnBoutique","_filterBoutiqueTransfert","searchValue","_normalizeValueTransfert","currentValue","onFocusBoutiqueInputTransfert","validateSingleTransfer","valid","transfert","boutiqueSourceId","boutiqueDestinationId","_this","_asyncToGenerator","transfersToProcess","validation","effectuerTransfert","toPromise","t","x","navigateBack","ɵɵdirectiveInject","FormBuilder","i3","Router","i4","i5","StockService","ChangeDetectorRef","i6","TransfertService","selectors","viewQuery","AddStockAjustementComponent_Query","rf","ctx","AddStockAjustementComponent_Template_p_click_4_listener","_r1","AddStockAjustementComponent_Template_select_ngModelChange_19_listener","AddStockAjustementComponent_Template_input_blur_29_listener","AddStockAjustementComponent_Template_mat_autocomplete_optionSelected_32_listener","AddStockAjustementComponent_mat_option_34_Template","AddStockAjustementComponent_div_42_Template","AddStockAjustementComponent_div_43_Template","AddStockAjustementComponent_div_44_Template","AddStockAjustementComponent_div_45_Template","AddStockAjustementComponent_div_46_Template","AddStockAjustementComponent_div_47_Template","AddStockAjustementComponent_div_48_Template","AddStockAjustementComponent_div_49_Template","AddStockAjustementComponent_div_50_Template","AddStockAjustementComponent_div_51_Template","AddStockAjustementComponent_div_52_Template","autoBoutique_r30","touched","invalid","i7","NgForOf","NgIf","AsyncPipe","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","NumberValueAccessor","SelectControlValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","MinValidator","MaxValidator","NgModel","NgForm","FormControlDirective","FormGroupDirective","FormControlName","i8","MatAutocomplete","MatOption","MatAutocompleteTrigger","i9","MatIcon","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}
{"version":3,"file":"src_app_admin-page_fournisseurs_add-fournisseur_add-fournisseur_component_ts.js","mappings":"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","sources":["./src/app/admin-page/fournisseurs/add-fournisseur/add-fournisseur.component.ts","./src/app/admin-page/fournisseurs/add-fournisseur/add-fournisseur.component.html"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { ChangeDetectorRef, Component, ElementRef, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { FactureService } from '../../SERVICES/facture.service';\nimport { FournisseurService } from '../../SERVICES/fournisseur-service';\nimport imageCompression from 'browser-image-compression';\n\n@Component({\n  selector: 'app-add-fournisseur',\n  standalone: true,\n  imports: [\n    FormsModule,\n    CommonModule,\n    ReactiveFormsModule,\n  ],\n  templateUrl: './add-fournisseur.component.html',\n  styleUrl: './add-fournisseur.component.scss'\n})\nexport class AddFournisseurComponent {\n  fournisseurForm!: FormGroup;\n  isLoading = false;\n  errorMessage = '';\n  successMessage = '';\n  errorMessageApi = '';\n  indicatif: string = '';\n  maxPhoneLength: number = 0;\n  image: string | null = null; \n  selectedLogoFile?: File;\n  isPreviewVisible = false;\n  previewImage: string | null = null;\n\n  @ViewChild('fileInput') fileInput!: ElementRef;\n\n  paysIndicatifs: { [key: string]: { indicatif: string, longueur: number } } = {\n    'Mali': { indicatif: '+223 ', longueur: 8 },\n    'Sénégal': { indicatif: '+221 ', longueur: 9 },\n    'Côte d\\'Ivoire': { indicatif: '+225 ', longueur: 10 }\n  };\n\n  constructor(\n    private fb: FormBuilder,\n    private fournisseurService: FournisseurService,\n    private router: Router,\n     private cdRef: ChangeDetectorRef,\n  ) {}\n\n  ngOnInit() {\n    this.getInitForm();\n  }\n\n  getInitForm() {\n    this.fournisseurForm = this.fb.group({\n      nomComplet: ['', [Validators.required, Validators.minLength(2)]],\n      email: ['', [Validators.email]],\n      adresse: [''],\n      pays: [''],\n      telephone: [''],\n      description: [''],\n      ville: [''],\n      nomSociete: [''],\n      photo: [null],\n    });\n  }\n\n  onPaysChange(event: Event) {\n    const select = event.target as HTMLSelectElement;\n    const pays = select.value;\n    const paysInfo = this.paysIndicatifs[pays];\n  \n    if (paysInfo) {\n      this.indicatif = paysInfo.indicatif;\n      this.maxPhoneLength = paysInfo.longueur;\n  \n      const ctrl = this.fournisseurForm.get('telephone')!;\n      // préfixe si nécessaire\n      if (!ctrl.value?.startsWith(this.indicatif)) {\n        ctrl.setValue(this.indicatif);\n      }\n      this.updatePhoneValidator(paysInfo.longueur);\n    }\n  }\n\n  private updatePhoneValidator(longueur: number): void {\n    const ctrl = this.fournisseurForm.get('telephone')!;\n    // on impose exactement {longueur} chiffres après l’indicatif\n    const regex = new RegExp(`^\\\\${this.indicatif}\\\\d{${longueur}}$`);\n    ctrl.setValidators([\n      Validators.required,\n      Validators.pattern(regex)\n    ]);\n    ctrl.updateValueAndValidity();\n  }  \n\n  formatPhoneNumber() {\n    const ctrl = this.fournisseurForm.get('telephone')!;\n    let raw = ctrl.value as string;\n    const pays = this.fournisseurForm.get('pays')?.value as string; \n    const paysInfo = this.paysIndicatifs[pays];\n  \n    // 1) Retirer l’indicatif s’il est déjà présent\n    if (paysInfo && raw.startsWith(paysInfo.indicatif)) {\n      raw = raw.substring(paysInfo.indicatif.length);\n    }\n    // 2) Conserver que les chiffres\n    const cleaned = raw.replace(/\\D/g, '');\n  \n    // 3) Remonter l’indicatif + espace + chiffres\n    const formatted = paysInfo\n      ? `${paysInfo.indicatif}${cleaned}`.slice(0, paysInfo.indicatif.length + paysInfo.longueur)\n      : cleaned;\n  \n    // 4) Mettre à jour sans retrigger\n    ctrl.setValue(formatted, { emitEvent: false });\n  }\n  \n  // ajouterFournisseur() {\n  //   if (this.fournisseurForm.invalid) {\n  //     this.fournisseurForm.markAllAsTouched();\n  //     return;\n  //   }\n\n  //   this.isLoading = true;\n  //   this.errorMessage = '';\n  //   this.successMessage = '';\n\n  //   const fournisseurData = {\n  //     ...this.fournisseurForm.value,\n  //     telephone: this.fournisseurForm.value.telephone.replace(/\\s/g, '')\n  //   };\n\n  //   // Passe aussi this.selectedLogoFile au service\n  //   this.fournisseurService.addFournisseur(fournisseurData, this.selectedLogoFile).subscribe({\n  //     next: (response) => {\n  //       this.isLoading = false;\n  //       this.successMessage = 'Fournisseur ajouté avec succès!';\n  //       setTimeout(() => this.router.navigate(['/fournisseurs']), 2000);\n  //     },\n  //     error: (error) => {\n  //       this.isLoading = false;\n  //       this.errorMessage = error.error?.error || 'Une erreur est survenue';\n  //     }\n  //   });\n  // }\n\n  ajouterFournisseur() {\n    if (this.fournisseurForm.invalid) {\n      this.fournisseurForm.markAllAsTouched();\n      return;\n    }\n\n    this.isLoading = true;\n    this.errorMessage = '';\n    this.successMessage = '';\n\n    // Délai de 3 secondes avant la création\n    setTimeout(() => {\n      const fournisseurData = {\n        ...this.fournisseurForm.value,\n        telephone: this.fournisseurForm.value.telephone.replace(/\\s/g, '')\n      };\n\n      this.fournisseurService.addFournisseur(fournisseurData, this.selectedLogoFile).subscribe({\n        next: (response) => {\n          this.isLoading = false;\n          this.successMessage = 'Fournisseur ajouté avec succès!';\n          setTimeout(() => this.router.navigate(['/fournisseurs']), 2000);\n        },\n        error: (error) => {\n          this.isLoading = false;\n          this.errorMessage = error.error?.error || 'Une erreur est survenue';\n        }\n      });\n    }, 3000); // 3000 ms = 3 secondes\n  }\n\n  goToFournisseur() {\n    this.router.navigate(['/fournisseurs']);\n  }\n\n  showImagePreview() {\n    if (this.image) {\n        this.previewImage = this.image;\n        this.isPreviewVisible = true;\n    }\n}\n\n  closePreview() {\n      this.isPreviewVisible = false;\n  }\n\n  removeImage() {\n      this.image = null;\n      this.selectedLogoFile = undefined;\n      this.previewImage = null;\n      this.isPreviewVisible = false;\n      \n      // Réinitialiser l'input file\n      if (this.fileInput && this.fileInput.nativeElement) {\n          this.fileInput.nativeElement.value = '';\n      }\n  }\n\n  async onFileSelected(event: Event): Promise<void> {\n    const input = event.target as HTMLInputElement;\n\n    if (input.files && input.files[0]) {\n      const file = input.files[0];\n\n      try {\n        const compressedFile = await this.testImageCompression(file);\n\n        if (!compressedFile) {\n          console.error(\"Compression échouée ou image invalide.\");\n          return;\n        }\n\n      this.selectedLogoFile = compressedFile; // Stocke le fichier compressé à envoyer\n\n      // Affichage preview en base64\n      const reader = new FileReader();\n      reader.onload = (e: any) => {\n        this.image = e.target.result; // Base64 pour afficher l'image dans l'interface\n        this.cdRef.markForCheck();\n      };\n      reader.readAsDataURL(compressedFile);\n\n      } catch (error) {\n        console.error(\"Erreur lors de la compression ou du traitement :\", error);\n      }\n    }\n  }\n\n  async testImageCompression(file: File): Promise<File | null> {\n  if (!file) {\n    console.log('Aucun fichier sélectionné.');\n    return null;\n  }\n\n  console.log('Taille originale:', file.size / 1024, 'Ko');\n\n  const options = {\n    maxSizeMB: 1,\n    maxWidthOrHeight: 1000,\n    useWebWorker: true,\n  };\n\n  try {\n    const compressedBlob = await imageCompression(file, options);\n    console.log('Taille après compression:', compressedBlob.size / 1024, 'Ko');\n\n    if (!compressedBlob.type.startsWith('image/')) {\n      console.error('Le fichier compressé n\\'est pas un format d\\'image valide.');\n      this.errorMessage = 'Erreur de compression : Le fichier n\\'est pas une image.';\n      return null;\n    }\n\n    // Extraire le nom de base sans extension\n    const originalName = file.name.split('.').slice(0, -1).join('.') || 'image';\n\n    // Déterminer la bonne extension selon le type MIME\n    let extension = 'png';\n    if (compressedBlob.type === 'image/jpeg') extension = 'jpg';\n    else if (compressedBlob.type === 'image/png') extension = 'png';\n    else if (compressedBlob.type === 'image/webp') extension = 'webp';\n\n    const finalFileName = `${originalName}.${extension}`;\n\n    // Recréer un fichier avec le bon nom et la bonne extension\n    const compressedFile = new File([compressedBlob], finalFileName, {\n      type: compressedBlob.type,\n      lastModified: Date.now(),\n    });\n\n    return compressedFile;\n\n  } catch (error) {\n    console.error('Erreur lors de la compression:', error);\n    return null;\n  }\n}\n\n  navigateBack() {\n    this.router.navigate(['/fournisseurs'])\n  }\n\n\n\n}\n\n\n","<!-- Icon return  -->\n<p class=\"retour_icon_text\" (click)=\"navigateBack()\" style=\"cursor: pointer; color: #0672E4; margin-bottom: 15px;\" title=\"Retour sur la page fournisseur\">\n    <i class=\"ri-arrow-left-s-line\"></i> <span style=\"margin-left: 8px; font-size: 12px;\">Fournisseur</span>\n</p>\n\n<div class=\"container_global\">\n    <div *ngIf=\"isLoading\" class=\"loading-overlay\">\n      <div class=\"loading-content\">\n        <div class=\"spinner\"></div>\n        <p>Creation en cours...</p>\n      </div>\n    </div>\n  \n      <div class=\"content_formulaire\">\n        <div class=\"modal-body\">\n          <form [formGroup]=\"fournisseurForm\" class=\"container_formulaire\">\n            <!-- Titre d'ajout de produits -->\n            <div class=\"Title\">\n              <h3>Ajouter un fournisseur</h3>\n            </div>\n    \n            <div class=\"form_left_right\">\n              <div class=\"formulaire\">\n                <!-- Cadre contenant le select et la description -->\n                <div class=\"information_cadre\">\n                  <div class=\"info_titre_input\">\n\n                    <div class=\"grid_colonne_double\">\n\n                      <!-- Nom et prenom -->\n                      <div class=\"champ_input\">\n                        <input type=\"text\" class=\"input_focus\"\n                                  id=\"nomComplet\" formControlName=\"nomComplet\"\n                                  name=\"nomComplet\"\n                                  placeholder=\"Saisis le nom et prénom\">\n                        <label for=\"nomComplet\" class=\"label\">Nom et prénom</label>\n                        <div *ngIf=\"fournisseurForm.get('nomComplet')?.touched && fournisseurForm.get('nomComplet')?.invalid\" class=\"error\">\n                          <small *ngIf=\"fournisseurForm.get('nomComplet')?.errors?.['required']\">Champ requis.</small>\n                          <small *ngIf=\"fournisseurForm.get('nomComplet')?.errors?.['minlength']\">Au moins 2 caractères.</small>\n                        </div>\n                      </div>\n\n                      <!-- Entreprise -->\n                      <div class=\"champ_input\">\n                        <input type=\"text\" class=\"input_focus\"\n                                  id=\"nomSociete\" formControlName=\"nomSociete\"\n                                  name=\"nomSociete\"\n                                  placeholder=\"Saisis l'entreprise\">\n                        <label for=\"nomSociete\" class=\"label\">L'entreprise</label>\n                      </div>\n\n                    </div>\n\n                    <!-- // Description  -->\n                    <div class=\"champ_input\">\n                      <textarea type=\"text\" formControlName=\"description\" class=\"input_focus2\" id=\"description\" name=\"description\" placeholder=\"Saisis le description\"></textarea>\n                      <label for=\"description\" class=\"label\">Description</label>\n                    </div>\n                    \n                    <div class=\"grid_colonne\">\n                      <!-- Pays -->\n                      <div class=\"champ_input\">\n                        <select class=\"input_focus\" formControlName=\"pays\" (change)=\"onPaysChange($event)\">\n                          <option value=\"\" disabled selected>Pays</option>\n                          <option value=\"Mali\">Mali</option>\n                          <option value=\"Sénégal\">Sénégal</option>\n                          <option value=\"Côte d'Ivoire\">Côte d'Ivoire</option>\n                        </select>\n                        <label for=\"pays\" class=\"label\">Pays</label>\n                        <div *ngIf=\"fournisseurForm.get('pays')?.invalid && fournisseurForm.get('pays')?.touched\" class=\"error\">\n                          <small>Ce champ est requis</small>\n                        </div>\n                      </div>\n  \n                      <!-- Téléphone -->\n                      <div class=\"champ_input\">\n                        <input type=\"tel\" class=\"input_focus\"\n                               id=\"telephone\" formControlName=\"telephone\"\n                               name=\"telephone\"\n                               placeholder=\"Saisis le numéro de téléphone\"\n                               (input)=\"formatPhoneNumber()\">\n                        <label for=\"telephone\" class=\"label\">Téléphone</label>\n                      \n                        <!-- Erreur si pattern invalide -->\n                        <div \n                          *ngIf=\"\n                            fournisseurForm.get('telephone')?.touched &&\n                            fournisseurForm.get('telephone')?.errors?.['pattern'] &&\n                            fournisseurForm.get('pays')?.value as pays\n                          \" \n                          class=\"error\" >\n                          <small>\n                            Le numéro doit contenir\n                            {{ paysIndicatifs[pays].longueur }}\n                            chiffres après l’indicatif\n                            {{ paysIndicatifs[pays].indicatif.trim() }}.\n                          </small>\n                        </div>\n                      \n                        <!-- Erreur si le champ est vide -->\n                        <div *ngIf=\"\n                              fournisseurForm.get('telephone')?.touched &&\n                              fournisseurForm.get('telephone')?.errors?.['required']\n                            \" class=\"error\">\n                          <small>Le téléphone est requis.</small>\n                        </div>\n                      </div>\n\n                      <!-- Email -->\n                      <div class=\"champ_input\">\n                          <input type=\"email\" class=\"input_focus\"\n                                  id=\"email\" formControlName=\"email\"\n                                  name=\"email\"\n                                  placeholder=\"Saisis l'email\">\n                          <label for=\"email\" class=\"label\">Email</label>\n                          <div *ngIf=\"fournisseurForm.get('email')?.touched && fournisseurForm.get('email')?.invalid\" class=\"error\">\n                          <small *ngIf=\"fournisseurForm.get('email')?.errors?.['email']\">Format invalide.</small>\n                          </div>\n                      </div>\n                    </div>\n  \n                    <!-- Modifiez le sélecteur de pays et le champ téléphone -->\n                    <div class=\"grid_colonne_double\">\n                      <!-- Ville -->\n                      <div class=\"champ_input\">\n                        <input class=\"input_focus\"\n                                  id=\"ville\" formControlName=\"ville\"\n                                  name=\"ville\"\n                                  placeholder=\"Saisis la ville\">\n                        <label for=\"ville\" class=\"label\">Ville</label>\n                      </div>\n\n                      <!-- Adresse -->\n                      <div class=\"champ_input\">\n                          <input class=\"input_focus\"\n                                      id=\"adresse\" formControlName=\"adresse\"\n                                      name=\"adresse\"\n                                      placeholder=\"Saisis l'adresse\">\n                          <label for=\"adresse\" class=\"label\">Adresse</label>\n                      </div>\n                    </div>\n\n                    <input type=\"file\" \n                            accept=\"image/*\" \n                            #fileInput \n                            (change)=\"onFileSelected($event)\"\n                            style=\"display: none;\"\n                            id=\"uniqueFileInputId\">\n\n                    <div class=\"champ_grid\" style=\"margin: 10px 0 15px; display: flex; align-items: center; justify-content: space-between;\">\n                        <p style=\"margin: 0; font-size: 12px; display: flex; align-items: center;\">\n                            Changer votre logo ici 👉\n                            <a href=\"javascript:void(0)\"\n                              (click)=\"fileInput.click()\"\n                              title=\"Changer le logo\"\n                              style=\"padding-left: 8px; cursor: pointer; display: inline-flex; align-items: center;\">\n                                <img src=\"assets/img/appareil.png\" alt=\"Changer logo\" style=\"width: 25px; height: 25px;\"/>\n                            </a>\n                        </p>\n\n                        <!-- Afficher l'image sélectionnée ou l'image par défaut -->\n                        <div class=\"imgClient2\" (click)=\"showImagePreview()\" style=\"position: relative; cursor: pointer;\">\n                            <img [src]=\"image || 'assets/img/profil.png'\" alt=\"Logo fournisseur\">\n                        </div>\n                    </div>\n\n                    <!-- Overlay de prévisualisation -->\n                    <div *ngIf=\"isPreviewVisible\" class=\"image-preview-overlay\" (click)=\"closePreview()\">\n                        <div class=\"image-preview-container\" (click)=\"$event.stopPropagation()\">\n                            <img [src]=\"previewImage\" alt=\"Preview\">\n                            <button class=\"close-btn\" (click)=\"removeImage(); $event.stopPropagation()\">\n                                <i class=\"fas fa-times\"></i> <!-- Utilisez votre propre icône -->\n                            </button>\n                        </div>\n                    </div>\n                                      \n                  </div>\n                </div>\n                <!-- Boutons Ajouter et Sauvegarder -->\n                <div class=\"information_cadre information_cadre_save\">\n                   <!-- Message d'erreur global -->\n                  <div class=\"container_error_message\">\n                      <!-- Messages API -->\n                      <div *ngIf=\"errorMessage\" class=\"error-messageApi2\">{{ errorMessage }}</div>\n                      <div *ngIf=\"successMessage\" class=\"success-messageApi2\">{{ successMessage }}</div>\n                  </div>\n  \n                  <div class=\"info_titre_input info_titre_input_btn\">\n                    <div class=\"btn_annuler\">\n                      <button class=\"btn_cancel\" (click)=\"goToFournisseur()\">Annuler</button>\n                    </div>\n                    <div class=\"btn_ajouter\">\n                      <button class=\"btn_save\" (click)=\"ajouterFournisseur()\"\n                            [disabled]=\"fournisseurForm.invalid || isLoading\"\n                            [style.backgroundColor]=\"(fournisseurForm.valid && !isLoading) ? '#0672E4' : '#0671e434'\"\n                            [style.color]=\"(fournisseurForm.valid && !isLoading) ? '#ffffff' : '#00000073'\"\n                            [style.cursor]=\"(fournisseurForm.valid && !isLoading) ? 'pointer' : 'no-drop'\">\n                        Ajouter\n                      </button>\n                    </div>\n                  </div>\n                </div>\n    \n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n  </div>"],"names":["CommonModule","FormsModule","ReactiveFormsModule","Validators","imageCompression","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","AddFournisseurComponent_div_21_small_1_Template","AddFournisseurComponent_div_21_small_2_Template","ɵɵadvance","ɵɵproperty","tmp_2_0","ctx_r1","fournisseurForm","get","errors","tmp_3_0","ɵɵtextInterpolate2","paysIndicatifs","pays_r3","longueur","indicatif","trim","AddFournisseurComponent_div_54_small_1_Template","ɵɵlistener","AddFournisseurComponent_div_73_Template_div_click_0_listener","ɵɵrestoreView","_r5","ɵɵnextContext","ɵɵresetView","closePreview","AddFournisseurComponent_div_73_Template_div_click_1_listener","$event","stopPropagation","AddFournisseurComponent_div_73_Template_button_click_3_listener","removeImage","previewImage","ɵɵsanitizeUrl","ɵɵtextInterpolate","errorMessage","successMessage","AddFournisseurComponent","constructor","fb","fournisseurService","router","cdRef","isLoading","errorMessageApi","maxPhoneLength","image","isPreviewVisible","ngOnInit","getInitForm","group","nomComplet","required","minLength","email","adresse","pays","telephone","description","ville","nomSociete","photo","onPaysChange","event","select","target","value","paysInfo","ctrl","startsWith","setValue","updatePhoneValidator","regex","RegExp","setValidators","pattern","updateValueAndValidity","formatPhoneNumber","raw","substring","length","cleaned","replace","formatted","slice","emitEvent","ajouterFournisseur","invalid","markAllAsTouched","setTimeout","fournisseurData","addFournisseur","selectedLogoFile","subscribe","next","response","navigate","error","goToFournisseur","showImagePreview","undefined","fileInput","nativeElement","onFileSelected","_this","_asyncToGenerator","input","files","file","compressedFile","testImageCompression","console","reader","FileReader","onload","e","result","markForCheck","readAsDataURL","_this2","log","size","options","maxSizeMB","maxWidthOrHeight","useWebWorker","compressedBlob","type","originalName","name","split","join","extension","finalFileName","File","lastModified","Date","now","navigateBack","ɵɵdirectiveInject","i1","FormBuilder","i2","FournisseurService","i3","Router","ChangeDetectorRef","selectors","viewQuery","AddFournisseurComponent_Query","rf","ctx","AddFournisseurComponent_Template_p_click_0_listener","_r1","AddFournisseurComponent_div_5_Template","AddFournisseurComponent_div_21_Template","AddFournisseurComponent_Template_select_change_32_listener","AddFournisseurComponent_div_43_Template","AddFournisseurComponent_Template_input_input_45_listener","AddFournisseurComponent_div_48_Template","AddFournisseurComponent_div_49_Template","AddFournisseurComponent_div_54_Template","AddFournisseurComponent_Template_input_change_64_listener","AddFournisseurComponent_Template_a_click_69_listener","fileInput_r4","ɵɵreference","click","AddFournisseurComponent_Template_div_click_71_listener","AddFournisseurComponent_div_73_Template","AddFournisseurComponent_div_76_Template","AddFournisseurComponent_div_77_Template","AddFournisseurComponent_Template_button_click_80_listener","AddFournisseurComponent_Template_button_click_83_listener","touched","tmp_4_0","tmp_5_0","tmp_6_0","tmp_7_0","ɵɵstyleProp","valid","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","SelectControlValueAccessor","NgControlStatus","NgControlStatusGroup","i4","NgIf","FormGroupDirective","FormControlName","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}
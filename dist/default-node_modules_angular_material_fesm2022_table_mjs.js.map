{"version":3,"file":"default-node_modules_angular_material_fesm2022_table_mjs.js","mappings":"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","sources":["./node_modules/@angular/cdk/fesm2022/dispose-view-repeater-strategy-D_JReLI1.mjs","./node_modules/@angular/cdk/fesm2022/table.mjs","./node_modules/@angular/material/fesm2022/table.mjs"],"sourcesContent":["import { a as _ViewRepeaterOperation } from './recycle-view-repeater-strategy-DoWdPqVw.mjs';\n\n/**\n * A repeater that destroys views when they are removed from a\n * {@link ViewContainerRef}. When new items are inserted into the container,\n * the repeater will always construct a new embedded view for each item.\n *\n * @template T The type for the embedded view's $implicit property.\n * @template R The type for the item in each IterableDiffer change record.\n * @template C The type for the context passed to each embedded view.\n */\nclass _DisposeViewRepeaterStrategy {\n    applyChanges(changes, viewContainerRef, itemContextFactory, itemValueResolver, itemViewChanged) {\n        changes.forEachOperation((record, adjustedPreviousIndex, currentIndex) => {\n            let view;\n            let operation;\n            if (record.previousIndex == null) {\n                const insertContext = itemContextFactory(record, adjustedPreviousIndex, currentIndex);\n                view = viewContainerRef.createEmbeddedView(insertContext.templateRef, insertContext.context, insertContext.index);\n                operation = _ViewRepeaterOperation.INSERTED;\n            }\n            else if (currentIndex == null) {\n                viewContainerRef.remove(adjustedPreviousIndex);\n                operation = _ViewRepeaterOperation.REMOVED;\n            }\n            else {\n                view = viewContainerRef.get(adjustedPreviousIndex);\n                viewContainerRef.move(view, currentIndex);\n                operation = _ViewRepeaterOperation.MOVED;\n            }\n            if (itemViewChanged) {\n                itemViewChanged({\n                    context: view?.context,\n                    operation,\n                    record,\n                });\n            }\n        });\n    }\n    detach() { }\n}\n\nexport { _DisposeViewRepeaterStrategy as _ };\n","import { i as isDataSource } from './data-source-D34wiQZj.mjs';\nexport { D as DataSource } from './data-source-D34wiQZj.mjs';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, TemplateRef, Directive, booleanAttribute, Input, ContentChild, ElementRef, NgZone, Injectable, IterableDiffers, ViewContainerRef, Component, ChangeDetectionStrategy, ViewEncapsulation, afterNextRender, ChangeDetectorRef, EventEmitter, Injector, HostAttributeToken, Output, ContentChildren, ViewChild, NgModule } from '@angular/core';\nimport { Subject, BehaviorSubject, isObservable, of } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { b as _VIEW_REPEATER_STRATEGY, _ as _RecycleViewRepeaterStrategy, a as _ViewRepeaterOperation } from './recycle-view-repeater-strategy-DoWdPqVw.mjs';\nimport { _ as _DisposeViewRepeaterStrategy } from './dispose-view-repeater-strategy-D_JReLI1.mjs';\nimport { D as Directionality } from './directionality-CBXD4hga.mjs';\nimport { P as Platform } from './platform-DmdVEw_C.mjs';\nimport { ViewportRuler, ScrollingModule } from './scrolling.mjs';\nimport { c as coerceBooleanProperty } from './boolean-property-DaaVhX5A.mjs';\nimport './element-x4z00URv.mjs';\nimport './scrolling-BkvA05C8.mjs';\nimport './bidi.mjs';\n\n/**\n * Used to provide a table to some of the sub-components without causing a circular dependency.\n * @docs-private\n */\nconst CDK_TABLE = new InjectionToken('CDK_TABLE');\n/** Injection token that can be used to specify the text column options. */\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass CdkCellDef {\n    /** @docs-private */\n    template = inject(TemplateRef);\n    constructor() { }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: CdkCellDef, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"19.2.6\", type: CdkCellDef, isStandalone: true, selector: \"[cdkCellDef]\", ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: CdkCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkCellDef]',\n                }]\n        }], ctorParameters: () => [] });\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass CdkHeaderCellDef {\n    /** @docs-private */\n    template = inject(TemplateRef);\n    constructor() { }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: CdkHeaderCellDef, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"19.2.6\", type: CdkHeaderCellDef, isStandalone: true, selector: \"[cdkHeaderCellDef]\", ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: CdkHeaderCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkHeaderCellDef]',\n                }]\n        }], ctorParameters: () => [] });\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass CdkFooterCellDef {\n    /** @docs-private */\n    template = inject(TemplateRef);\n    constructor() { }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: CdkFooterCellDef, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"19.2.6\", type: CdkFooterCellDef, isStandalone: true, selector: \"[cdkFooterCellDef]\", ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: CdkFooterCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkFooterCellDef]',\n                }]\n        }], ctorParameters: () => [] });\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nclass CdkColumnDef {\n    _table = inject(CDK_TABLE, { optional: true });\n    _hasStickyChanged = false;\n    /** Unique name for this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._setNameInput(name);\n    }\n    _name;\n    /** Whether the cell is sticky. */\n    get sticky() {\n        return this._sticky;\n    }\n    set sticky(value) {\n        if (value !== this._sticky) {\n            this._sticky = value;\n            this._hasStickyChanged = true;\n        }\n    }\n    _sticky = false;\n    /**\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n     * has been changed.\n     */\n    get stickyEnd() {\n        return this._stickyEnd;\n    }\n    set stickyEnd(value) {\n        if (value !== this._stickyEnd) {\n            this._stickyEnd = value;\n            this._hasStickyChanged = true;\n        }\n    }\n    _stickyEnd = false;\n    /** @docs-private */\n    cell;\n    /** @docs-private */\n    headerCell;\n    /** @docs-private */\n    footerCell;\n    /**\n     * Transformed version of the column name that can be used as part of a CSS classname. Excludes\n     * all non-alphanumeric characters and the special characters '-' and '_'. Any characters that\n     * do not match are replaced by the '-' character.\n     */\n    cssClassFriendlyName;\n    /**\n     * Class name for cells in this column.\n     * @docs-private\n     */\n    _columnCssClassName;\n    constructor() { }\n    /** Whether the sticky state has changed. */\n    hasStickyChanged() {\n        const hasStickyChanged = this._hasStickyChanged;\n        this.resetStickyChanged();\n        return hasStickyChanged;\n    }\n    /** Resets the sticky changed state. */\n    resetStickyChanged() {\n        this._hasStickyChanged = false;\n    }\n    /**\n     * Overridable method that sets the css classes that will be added to every cell in this\n     * column.\n     * In the future, columnCssClassName will change from type string[] to string and this\n     * will set a single string value.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n        this._columnCssClassName = [`cdk-column-${this.cssClassFriendlyName}`];\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setNameInput(value) {\n        // If the directive is set without a name (updated programmatically), then this setter will\n        // trigger with an empty string and should not overwrite the programmatically set value.\n        if (value) {\n            this._name = value;\n            this.cssClassFriendlyName = value.replace(/[^a-z0-9_-]/gi, '-');\n            this._updateColumnCssClassName();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: CdkColumnDef, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"19.2.6\", type: CdkColumnDef, isStandalone: true, selector: \"[cdkColumnDef]\", inputs: { name: [\"cdkColumnDef\", \"name\"], sticky: [\"sticky\", \"sticky\", booleanAttribute], stickyEnd: [\"stickyEnd\", \"stickyEnd\", booleanAttribute] }, providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }], queries: [{ propertyName: \"cell\", first: true, predicate: CdkCellDef, descendants: true }, { propertyName: \"headerCell\", first: true, predicate: CdkHeaderCellDef, descendants: true }, { propertyName: \"footerCell\", first: true, predicate: CdkFooterCellDef, descendants: true }], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: CdkColumnDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkColumnDef]',\n                    providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }],\n                }]\n        }], ctorParameters: () => [], propDecorators: { name: [{\n                type: Input,\n                args: ['cdkColumnDef']\n            }], sticky: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], stickyEnd: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], cell: [{\n                type: ContentChild,\n                args: [CdkCellDef]\n            }], headerCell: [{\n                type: ContentChild,\n                args: [CdkHeaderCellDef]\n            }], footerCell: [{\n                type: ContentChild,\n                args: [CdkFooterCellDef]\n            }] } });\n/** Base class for the cells. Adds a CSS classname that identifies the column it renders in. */\nclass BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        elementRef.nativeElement.classList.add(...columnDef._columnCssClassName);\n    }\n}\n/** Header cell template container that adds the right classes and role. */\nclass CdkHeaderCell extends BaseCdkCell {\n    constructor() {\n        super(inject(CdkColumnDef), inject(ElementRef));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: CdkHeaderCell, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"19.2.6\", type: CdkHeaderCell, isStandalone: true, selector: \"cdk-header-cell, th[cdk-header-cell]\", host: { attributes: { \"role\": \"columnheader\" }, classAttribute: \"cdk-header-cell\" }, usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: CdkHeaderCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-header-cell, th[cdk-header-cell]',\n                    host: {\n                        'class': 'cdk-header-cell',\n                        'role': 'columnheader',\n                    },\n                }]\n        }], ctorParameters: () => [] });\n/** Footer cell template container that adds the right classes and role. */\nclass CdkFooterCell extends BaseCdkCell {\n    constructor() {\n        const columnDef = inject(CdkColumnDef);\n        const elementRef = inject(ElementRef);\n        super(columnDef, elementRef);\n        const role = columnDef._table?._getCellRole();\n        if (role) {\n            elementRef.nativeElement.setAttribute('role', role);\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: CdkFooterCell, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"19.2.6\", type: CdkFooterCell, isStandalone: true, selector: \"cdk-footer-cell, td[cdk-footer-cell]\", host: { classAttribute: \"cdk-footer-cell\" }, usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: CdkFooterCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n                    host: {\n                        'class': 'cdk-footer-cell',\n                    },\n                }]\n        }], ctorParameters: () => [] });\n/** Cell template container that adds the right classes and role. */\nclass CdkCell extends BaseCdkCell {\n    constructor() {\n        const columnDef = inject(CdkColumnDef);\n        const elementRef = inject(ElementRef);\n        super(columnDef, elementRef);\n        const role = columnDef._table?._getCellRole();\n        if (role) {\n            elementRef.nativeElement.setAttribute('role', role);\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: CdkCell, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"19.2.6\", type: CdkCell, isStandalone: true, selector: \"cdk-cell, td[cdk-cell]\", host: { classAttribute: \"cdk-cell\" }, usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: CdkCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-cell, td[cdk-cell]',\n                    host: {\n                        'class': 'cdk-cell',\n                    },\n                }]\n        }], ctorParameters: () => [] });\n\n/**\n * @docs-private\n */\nclass _Schedule {\n    tasks = [];\n    endTasks = [];\n}\n/** Injection token used to provide a coalesced style scheduler. */\nconst _COALESCED_STYLE_SCHEDULER = new InjectionToken('_COALESCED_STYLE_SCHEDULER');\n/**\n * Allows grouping up CSSDom mutations after the current execution context.\n * This can significantly improve performance when separate consecutive functions are\n * reading from the CSSDom and then mutating it.\n *\n * @docs-private\n */\nclass _CoalescedStyleScheduler {\n    _currentSchedule = null;\n    _ngZone = inject(NgZone);\n    constructor() { }\n    /**\n     * Schedules the specified task to run at the end of the current VM turn.\n     */\n    schedule(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.tasks.push(task);\n    }\n    /**\n     * Schedules the specified task to run after other scheduled tasks at the end of the current\n     * VM turn.\n     */\n    scheduleEnd(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.endTasks.push(task);\n    }\n    _createScheduleIfNeeded() {\n        if (this._currentSchedule) {\n            return;\n        }\n        this._currentSchedule = new _Schedule();\n        this._ngZone.runOutsideAngular(() => \n        // TODO(mmalerba): Scheduling this using something that runs less frequently\n        //  (e.g. requestAnimationFrame, setTimeout, etc.) causes noticeable jank with the column\n        //  resizer. We should audit the usages of schedule / scheduleEnd in that component and see\n        //  if we can refactor it so that we don't need to flush the tasks quite so frequently.\n        queueMicrotask(() => {\n            while (this._currentSchedule.tasks.length || this._currentSchedule.endTasks.length) {\n                const schedule = this._currentSchedule;\n                // Capture new tasks scheduled by the current set of tasks.\n                this._currentSchedule = new _Schedule();\n                for (const task of schedule.tasks) {\n                    task();\n                }\n                for (const task of schedule.endTasks) {\n                    task();\n                }\n            }\n            this._currentSchedule = null;\n        }));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: _CoalescedStyleScheduler, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: _CoalescedStyleScheduler });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: _CoalescedStyleScheduler, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [] });\n\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n */\nclass BaseRowDef {\n    template = inject(TemplateRef);\n    _differs = inject(IterableDiffers);\n    /** The columns to be displayed on this row. */\n    columns;\n    /** Differ used to check if any changes were made to the columns. */\n    _columnsDiffer;\n    constructor() { }\n    ngOnChanges(changes) {\n        // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n        // of the columns property or an empty array if none is provided.\n        if (!this._columnsDiffer) {\n            const columns = (changes['columns'] && changes['columns'].currentValue) || [];\n            this._columnsDiffer = this._differs.find(columns).create();\n            this._columnsDiffer.diff(columns);\n        }\n    }\n    /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     */\n    getColumnsDiff() {\n        return this._columnsDiffer.diff(this.columns);\n    }\n    /** Gets this row def's relevant cell template from the provided column def. */\n    extractCellTemplate(column) {\n        if (this instanceof CdkHeaderRowDef) {\n            return column.headerCell.template;\n        }\n        if (this instanceof CdkFooterRowDef) {\n            return column.footerCell.template;\n        }\n        else {\n            return column.cell.template;\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: BaseRowDef, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"19.2.6\", type: BaseRowDef, isStandalone: true, usesOnChanges: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: BaseRowDef, decorators: [{\n            type: Directive\n        }], ctorParameters: () => [] });\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass CdkHeaderRowDef extends BaseRowDef {\n    _table = inject(CDK_TABLE, { optional: true });\n    _hasStickyChanged = false;\n    /** Whether the row is sticky. */\n    get sticky() {\n        return this._sticky;\n    }\n    set sticky(value) {\n        if (value !== this._sticky) {\n            this._sticky = value;\n            this._hasStickyChanged = true;\n        }\n    }\n    _sticky = false;\n    constructor() {\n        super(inject(TemplateRef), inject(IterableDiffers));\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n    /** Whether the sticky state has changed. */\n    hasStickyChanged() {\n        const hasStickyChanged = this._hasStickyChanged;\n        this.resetStickyChanged();\n        return hasStickyChanged;\n    }\n    /** Resets the sticky changed state. */\n    resetStickyChanged() {\n        this._hasStickyChanged = false;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: CdkHeaderRowDef, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"19.2.6\", type: CdkHeaderRowDef, isStandalone: true, selector: \"[cdkHeaderRowDef]\", inputs: { columns: [\"cdkHeaderRowDef\", \"columns\"], sticky: [\"cdkHeaderRowDefSticky\", \"sticky\", booleanAttribute] }, usesInheritance: true, usesOnChanges: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: CdkHeaderRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkHeaderRowDef]',\n                    inputs: [{ name: 'columns', alias: 'cdkHeaderRowDef' }],\n                }]\n        }], ctorParameters: () => [], propDecorators: { sticky: [{\n                type: Input,\n                args: [{ alias: 'cdkHeaderRowDefSticky', transform: booleanAttribute }]\n            }] } });\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass CdkFooterRowDef extends BaseRowDef {\n    _table = inject(CDK_TABLE, { optional: true });\n    _hasStickyChanged = false;\n    /** Whether the row is sticky. */\n    get sticky() {\n        return this._sticky;\n    }\n    set sticky(value) {\n        if (value !== this._sticky) {\n            this._sticky = value;\n            this._hasStickyChanged = true;\n        }\n    }\n    _sticky = false;\n    constructor() {\n        super(inject(TemplateRef), inject(IterableDiffers));\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n    /** Whether the sticky state has changed. */\n    hasStickyChanged() {\n        const hasStickyChanged = this._hasStickyChanged;\n        this.resetStickyChanged();\n        return hasStickyChanged;\n    }\n    /** Resets the sticky changed state. */\n    resetStickyChanged() {\n        this._hasStickyChanged = false;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: CdkFooterRowDef, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"19.2.6\", type: CdkFooterRowDef, isStandalone: true, selector: \"[cdkFooterRowDef]\", inputs: { columns: [\"cdkFooterRowDef\", \"columns\"], sticky: [\"cdkFooterRowDefSticky\", \"sticky\", booleanAttribute] }, usesInheritance: true, usesOnChanges: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: CdkFooterRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkFooterRowDef]',\n                    inputs: [{ name: 'columns', alias: 'cdkFooterRowDef' }],\n                }]\n        }], ctorParameters: () => [], propDecorators: { sticky: [{\n                type: Input,\n                args: [{ alias: 'cdkFooterRowDefSticky', transform: booleanAttribute }]\n            }] } });\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass CdkRowDef extends BaseRowDef {\n    _table = inject(CDK_TABLE, { optional: true });\n    /**\n     * Function that should return true if this row template should be used for the provided index\n     * and row data. If left undefined, this row will be considered the default row template to use\n     * when no other when functions return true for the data.\n     * For every row, there must be at least one when function that passes or an undefined to default.\n     */\n    when;\n    constructor() {\n        // TODO(andrewseguin): Add an input for providing a switch function to determine\n        //   if this template should be used.\n        super(inject(TemplateRef), inject(IterableDiffers));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: CdkRowDef, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"19.2.6\", type: CdkRowDef, isStandalone: true, selector: \"[cdkRowDef]\", inputs: { columns: [\"cdkRowDefColumns\", \"columns\"], when: [\"cdkRowDefWhen\", \"when\"] }, usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: CdkRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkRowDef]',\n                    inputs: [\n                        { name: 'columns', alias: 'cdkRowDefColumns' },\n                        { name: 'when', alias: 'cdkRowDefWhen' },\n                    ],\n                }]\n        }], ctorParameters: () => [] });\n/**\n * Outlet for rendering cells inside of a row or header row.\n * @docs-private\n */\nclass CdkCellOutlet {\n    _viewContainer = inject(ViewContainerRef);\n    /** The ordered list of cells to render within this outlet's view container */\n    cells;\n    /** The data context to be provided to each cell */\n    context;\n    /**\n     * Static property containing the latest constructed instance of this class.\n     * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n     * createEmbeddedView. After one of these components are created, this property will provide\n     * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n     * construct the cells with the provided context.\n     */\n    static mostRecentCellOutlet = null;\n    constructor() {\n        CdkCellOutlet.mostRecentCellOutlet = this;\n    }\n    ngOnDestroy() {\n        // If this was the last outlet being rendered in the view, remove the reference\n        // from the static property after it has been destroyed to avoid leaking memory.\n        if (CdkCellOutlet.mostRecentCellOutlet === this) {\n            CdkCellOutlet.mostRecentCellOutlet = null;\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: CdkCellOutlet, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"19.2.6\", type: CdkCellOutlet, isStandalone: true, selector: \"[cdkCellOutlet]\", ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: CdkCellOutlet, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkCellOutlet]',\n                }]\n        }], ctorParameters: () => [] });\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass CdkHeaderRow {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: CdkHeaderRow, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"19.2.6\", type: CdkHeaderRow, isStandalone: true, selector: \"cdk-header-row, tr[cdk-header-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"cdk-header-row\" }, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: CdkHeaderRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-header-row, tr[cdk-header-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-header-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    imports: [CdkCellOutlet],\n                }]\n        }] });\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass CdkFooterRow {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: CdkFooterRow, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"19.2.6\", type: CdkFooterRow, isStandalone: true, selector: \"cdk-footer-row, tr[cdk-footer-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"cdk-footer-row\" }, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: CdkFooterRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-footer-row, tr[cdk-footer-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-footer-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    imports: [CdkCellOutlet],\n                }]\n        }] });\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass CdkRow {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: CdkRow, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"19.2.6\", type: CdkRow, isStandalone: true, selector: \"cdk-row, tr[cdk-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"cdk-row\" }, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: CdkRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-row, tr[cdk-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    imports: [CdkCellOutlet],\n                }]\n        }] });\n/** Row that can be used to display a message when no data is shown in the table. */\nclass CdkNoDataRow {\n    templateRef = inject(TemplateRef);\n    _contentClassName = 'cdk-no-data-row';\n    constructor() { }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: CdkNoDataRow, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"19.2.6\", type: CdkNoDataRow, isStandalone: true, selector: \"ng-template[cdkNoDataRow]\", ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: CdkNoDataRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[cdkNoDataRow]',\n                }]\n        }], ctorParameters: () => [] });\n\n/**\n * Directions that can be used when setting sticky positioning.\n * @docs-private\n */\n/**\n * List of all possible directions that can be used for sticky positioning.\n * @docs-private\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * @docs-private\n */\nclass StickyStyler {\n    _isNativeHtmlTable;\n    _stickCellCss;\n    direction;\n    _coalescedStyleScheduler;\n    _isBrowser;\n    _needsPositionStickyOnElement;\n    _positionListener;\n    _tableInjector;\n    _elemSizeCache = new WeakMap();\n    _resizeObserver = globalThis?.ResizeObserver\n        ? new globalThis.ResizeObserver(entries => this._updateCachedSizes(entries))\n        : null;\n    _updatedStickyColumnsParamsToReplay = [];\n    _stickyColumnsReplayTimeout = null;\n    _cachedCellWidths = [];\n    _borderCellCss;\n    _destroyed = false;\n    /**\n     * @param _isNativeHtmlTable Whether the sticky logic should be based on a table\n     *     that uses the native `<table>` element.\n     * @param _stickCellCss The CSS class that will be applied to every row/cell that has\n     *     sticky positioning applied.\n     * @param direction The directionality context of the table (ltr/rtl); affects column positioning\n     *     by reversing left/right positions.\n     * @param _isBrowser Whether the table is currently being rendered on the server or the client.\n     * @param _needsPositionStickyOnElement Whether we need to specify position: sticky on cells\n     *     using inline styles. If false, it is assumed that position: sticky is included in\n     *     the component stylesheet for _stickCellCss.\n     * @param _positionListener A listener that is notified of changes to sticky rows/columns\n     *     and their dimensions.\n     * @param _tableInjector The table's Injector.\n     */\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, _coalescedStyleScheduler, _isBrowser = true, _needsPositionStickyOnElement = true, _positionListener, _tableInjector) {\n        this._isNativeHtmlTable = _isNativeHtmlTable;\n        this._stickCellCss = _stickCellCss;\n        this.direction = direction;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._isBrowser = _isBrowser;\n        this._needsPositionStickyOnElement = _needsPositionStickyOnElement;\n        this._positionListener = _positionListener;\n        this._tableInjector = _tableInjector;\n        this._borderCellCss = {\n            'top': `${_stickCellCss}-border-elem-top`,\n            'bottom': `${_stickCellCss}-border-elem-bottom`,\n            'left': `${_stickCellCss}-border-elem-left`,\n            'right': `${_stickCellCss}-border-elem-right`,\n        };\n    }\n    /**\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n     * @param rows The list of rows that should be cleared from sticking in the provided directions\n     * @param stickyDirections The directions that should no longer be set as sticky on the rows.\n     */\n    clearStickyPositioning(rows, stickyDirections) {\n        if (stickyDirections.includes('left') || stickyDirections.includes('right')) {\n            this._removeFromStickyColumnReplayQueue(rows);\n        }\n        const elementsToClear = [];\n        for (const row of rows) {\n            // If the row isn't an element (e.g. if it's an `ng-container`),\n            // it won't have inline styles or `children` so we skip it.\n            if (row.nodeType !== row.ELEMENT_NODE) {\n                continue;\n            }\n            elementsToClear.push(row, ...Array.from(row.children));\n        }\n        // Coalesce with sticky row/column updates (and potentially other changes like column resize).\n        this._afterNextRender({\n            write: () => {\n                for (const element of elementsToClear) {\n                    this._removeStickyStyle(element, stickyDirections);\n                }\n            },\n        });\n    }\n    /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     * @param recalculateCellWidths Whether the sticky styler should recalculate the width of each\n     *     column cell. If `false` cached widths will be used instead.\n     * @param replay Whether to enqueue this call for replay after a ResizeObserver update.\n     */\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates, recalculateCellWidths = true, replay = true) {\n        // Don't cache any state if none of the columns are sticky.\n        if (!rows.length ||\n            !this._isBrowser ||\n            !(stickyStartStates.some(state => state) || stickyEndStates.some(state => state))) {\n            this._positionListener?.stickyColumnsUpdated({ sizes: [] });\n            this._positionListener?.stickyEndColumnsUpdated({ sizes: [] });\n            return;\n        }\n        // Coalesce with sticky row updates (and potentially other changes like column resize).\n        const firstRow = rows[0];\n        const numCells = firstRow.children.length;\n        const isRtl = this.direction === 'rtl';\n        const start = isRtl ? 'right' : 'left';\n        const end = isRtl ? 'left' : 'right';\n        const lastStickyStart = stickyStartStates.lastIndexOf(true);\n        const firstStickyEnd = stickyEndStates.indexOf(true);\n        let cellWidths;\n        let startPositions;\n        let endPositions;\n        if (replay) {\n            this._updateStickyColumnReplayQueue({\n                rows: [...rows],\n                stickyStartStates: [...stickyStartStates],\n                stickyEndStates: [...stickyEndStates],\n            });\n        }\n        this._afterNextRender({\n            earlyRead: () => {\n                cellWidths = this._getCellWidths(firstRow, recalculateCellWidths);\n                startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n                endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n            },\n            write: () => {\n                for (const row of rows) {\n                    for (let i = 0; i < numCells; i++) {\n                        const cell = row.children[i];\n                        if (stickyStartStates[i]) {\n                            this._addStickyStyle(cell, start, startPositions[i], i === lastStickyStart);\n                        }\n                        if (stickyEndStates[i]) {\n                            this._addStickyStyle(cell, end, endPositions[i], i === firstStickyEnd);\n                        }\n                    }\n                }\n                if (this._positionListener && cellWidths.some(w => !!w)) {\n                    this._positionListener.stickyColumnsUpdated({\n                        sizes: lastStickyStart === -1\n                            ? []\n                            : cellWidths\n                                .slice(0, lastStickyStart + 1)\n                                .map((width, index) => (stickyStartStates[index] ? width : null)),\n                    });\n                    this._positionListener.stickyEndColumnsUpdated({\n                        sizes: firstStickyEnd === -1\n                            ? []\n                            : cellWidths\n                                .slice(firstStickyEnd)\n                                .map((width, index) => (stickyEndStates[index + firstStickyEnd] ? width : null))\n                                .reverse(),\n                    });\n                }\n            },\n        });\n    }\n    /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     */\n    stickRows(rowsToStick, stickyStates, position) {\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\n        if (!this._isBrowser) {\n            return;\n        }\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n        // position such that the last row stuck will be \"bottom: 0px\" and so on. Note that the\n        // sticky states need to be reversed as well.\n        const rows = position === 'bottom' ? rowsToStick.slice().reverse() : rowsToStick;\n        const states = position === 'bottom' ? stickyStates.slice().reverse() : stickyStates;\n        // Measure row heights all at once before adding sticky styles to reduce layout thrashing.\n        const stickyOffsets = [];\n        const stickyCellHeights = [];\n        const elementsToStick = [];\n        // Coalesce with other sticky row updates (top/bottom), sticky columns updates\n        // (and potentially other changes like column resize).\n        this._afterNextRender({\n            earlyRead: () => {\n                for (let rowIndex = 0, stickyOffset = 0; rowIndex < rows.length; rowIndex++) {\n                    if (!states[rowIndex]) {\n                        continue;\n                    }\n                    stickyOffsets[rowIndex] = stickyOffset;\n                    const row = rows[rowIndex];\n                    elementsToStick[rowIndex] = this._isNativeHtmlTable\n                        ? Array.from(row.children)\n                        : [row];\n                    const height = this._retrieveElementSize(row).height;\n                    stickyOffset += height;\n                    stickyCellHeights[rowIndex] = height;\n                }\n            },\n            write: () => {\n                const borderedRowIndex = states.lastIndexOf(true);\n                for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n                    if (!states[rowIndex]) {\n                        continue;\n                    }\n                    const offset = stickyOffsets[rowIndex];\n                    const isBorderedRowIndex = rowIndex === borderedRowIndex;\n                    for (const element of elementsToStick[rowIndex]) {\n                        this._addStickyStyle(element, position, offset, isBorderedRowIndex);\n                    }\n                }\n                if (position === 'top') {\n                    this._positionListener?.stickyHeaderRowsUpdated({\n                        sizes: stickyCellHeights,\n                        offsets: stickyOffsets,\n                        elements: elementsToStick,\n                    });\n                }\n                else {\n                    this._positionListener?.stickyFooterRowsUpdated({\n                        sizes: stickyCellHeights,\n                        offsets: stickyOffsets,\n                        elements: elementsToStick,\n                    });\n                }\n            },\n        });\n    }\n    /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     */\n    updateStickyFooterContainer(tableElement, stickyStates) {\n        if (!this._isNativeHtmlTable) {\n            return;\n        }\n        // Coalesce with other sticky updates (and potentially other changes like column resize).\n        this._afterNextRender({\n            write: () => {\n                const tfoot = tableElement.querySelector('tfoot');\n                if (tfoot) {\n                    if (stickyStates.some(state => !state)) {\n                        this._removeStickyStyle(tfoot, ['bottom']);\n                    }\n                    else {\n                        this._addStickyStyle(tfoot, 'bottom', 0, false);\n                    }\n                }\n            },\n        });\n    }\n    /** Triggered by the table's OnDestroy hook. */\n    destroy() {\n        if (this._stickyColumnsReplayTimeout) {\n            clearTimeout(this._stickyColumnsReplayTimeout);\n        }\n        this._resizeObserver?.disconnect();\n        this._destroyed = true;\n    }\n    /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     */\n    _removeStickyStyle(element, stickyDirections) {\n        if (!element.classList.contains(this._stickCellCss)) {\n            return;\n        }\n        for (const dir of stickyDirections) {\n            element.style[dir] = '';\n            element.classList.remove(this._borderCellCss[dir]);\n        }\n        // If the element no longer has any more sticky directions, remove sticky positioning and\n        // the sticky CSS class.\n        // Short-circuit checking element.style[dir] for stickyDirections as they\n        // were already removed above.\n        const hasDirection = STICKY_DIRECTIONS.some(dir => stickyDirections.indexOf(dir) === -1 && element.style[dir]);\n        if (hasDirection) {\n            element.style.zIndex = this._getCalculatedZIndex(element);\n        }\n        else {\n            // When not hasDirection, _getCalculatedZIndex will always return ''.\n            element.style.zIndex = '';\n            if (this._needsPositionStickyOnElement) {\n                element.style.position = '';\n            }\n            element.classList.remove(this._stickCellCss);\n        }\n    }\n    /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     */\n    _addStickyStyle(element, dir, dirValue, isBorderElement) {\n        element.classList.add(this._stickCellCss);\n        if (isBorderElement) {\n            element.classList.add(this._borderCellCss[dir]);\n        }\n        element.style[dir] = `${dirValue}px`;\n        element.style.zIndex = this._getCalculatedZIndex(element);\n        if (this._needsPositionStickyOnElement) {\n            element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n        }\n    }\n    /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     */\n    _getCalculatedZIndex(element) {\n        const zIndexIncrements = {\n            top: 100,\n            bottom: 10,\n            left: 1,\n            right: 1,\n        };\n        let zIndex = 0;\n        // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n        // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n        // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n        for (const dir of STICKY_DIRECTIONS) {\n            if (element.style[dir]) {\n                zIndex += zIndexIncrements[dir];\n            }\n        }\n        return zIndex ? `${zIndex}` : '';\n    }\n    /** Gets the widths for each cell in the provided row. */\n    _getCellWidths(row, recalculateCellWidths = true) {\n        if (!recalculateCellWidths && this._cachedCellWidths.length) {\n            return this._cachedCellWidths;\n        }\n        const cellWidths = [];\n        const firstRowCells = row.children;\n        for (let i = 0; i < firstRowCells.length; i++) {\n            const cell = firstRowCells[i];\n            cellWidths.push(this._retrieveElementSize(cell).width);\n        }\n        this._cachedCellWidths = cellWidths;\n        return cellWidths;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyStartColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = 0; i < widths.length; i++) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyEndColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = widths.length; i > 0; i--) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Retreives the most recently observed size of the specified element from the cache, or\n     * meaures it directly if not yet cached.\n     */\n    _retrieveElementSize(element) {\n        const cachedSize = this._elemSizeCache.get(element);\n        if (cachedSize) {\n            return cachedSize;\n        }\n        const clientRect = element.getBoundingClientRect();\n        const size = { width: clientRect.width, height: clientRect.height };\n        if (!this._resizeObserver) {\n            return size;\n        }\n        this._elemSizeCache.set(element, size);\n        this._resizeObserver.observe(element, { box: 'border-box' });\n        return size;\n    }\n    /**\n     * Conditionally enqueue the requested sticky update and clear previously queued updates\n     * for the same rows.\n     */\n    _updateStickyColumnReplayQueue(params) {\n        this._removeFromStickyColumnReplayQueue(params.rows);\n        // No need to replay if a flush is pending.\n        if (!this._stickyColumnsReplayTimeout) {\n            this._updatedStickyColumnsParamsToReplay.push(params);\n        }\n    }\n    /** Remove updates for the specified rows from the queue. */\n    _removeFromStickyColumnReplayQueue(rows) {\n        const rowsSet = new Set(rows);\n        for (const update of this._updatedStickyColumnsParamsToReplay) {\n            update.rows = update.rows.filter(row => !rowsSet.has(row));\n        }\n        this._updatedStickyColumnsParamsToReplay = this._updatedStickyColumnsParamsToReplay.filter(update => !!update.rows.length);\n    }\n    /** Update _elemSizeCache with the observed sizes. */\n    _updateCachedSizes(entries) {\n        let needsColumnUpdate = false;\n        for (const entry of entries) {\n            const newEntry = entry.borderBoxSize?.length\n                ? {\n                    width: entry.borderBoxSize[0].inlineSize,\n                    height: entry.borderBoxSize[0].blockSize,\n                }\n                : {\n                    width: entry.contentRect.width,\n                    height: entry.contentRect.height,\n                };\n            if (newEntry.width !== this._elemSizeCache.get(entry.target)?.width &&\n                isCell(entry.target)) {\n                needsColumnUpdate = true;\n            }\n            this._elemSizeCache.set(entry.target, newEntry);\n        }\n        if (needsColumnUpdate && this._updatedStickyColumnsParamsToReplay.length) {\n            if (this._stickyColumnsReplayTimeout) {\n                clearTimeout(this._stickyColumnsReplayTimeout);\n            }\n            this._stickyColumnsReplayTimeout = setTimeout(() => {\n                if (this._destroyed) {\n                    return;\n                }\n                for (const update of this._updatedStickyColumnsParamsToReplay) {\n                    this.updateStickyColumns(update.rows, update.stickyStartStates, update.stickyEndStates, true, false);\n                }\n                this._updatedStickyColumnsParamsToReplay = [];\n                this._stickyColumnsReplayTimeout = null;\n            }, 0);\n        }\n    }\n    /**\n     * Invoke afterNextRender with the table's injector, falling back to CoalescedStyleScheduler\n     * if the injector was not provided.\n     */\n    _afterNextRender(spec) {\n        if (this._tableInjector) {\n            afterNextRender(spec, { injector: this._tableInjector });\n        }\n        else {\n            this._coalescedStyleScheduler.schedule(() => {\n                spec.earlyRead?.();\n                spec.write();\n            });\n        }\n    }\n}\nfunction isCell(element) {\n    return ['cdk-cell', 'cdk-header-cell', 'cdk-footer-cell'].some(klass => element.classList.contains(klass));\n}\n\n/**\n * Returns an error to be thrown when attempting to find an nonexistent column.\n * @param id Id whose lookup failed.\n * @docs-private\n */\nfunction getTableUnknownColumnError(id) {\n    return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * @docs-private\n */\nfunction getTableDuplicateColumnNameError(name) {\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * @docs-private\n */\nfunction getTableMultipleDefaultRowDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * @docs-private\n */\nfunction getTableMissingMatchingRowDefError(data) {\n    return Error(`Could not find a matching row definition for the` +\n        `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * @docs-private\n */\nfunction getTableMissingRowDefsError() {\n    return Error('Missing definitions for header, footer, and row; ' +\n        'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * @docs-private\n */\nfunction getTableUnknownDataSourceError() {\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * @docs-private\n */\nfunction getTableTextColumnMissingParentTableError() {\n    return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * @docs-private\n */\nfunction getTableTextColumnMissingNameError() {\n    return Error(`Table text column must have a name.`);\n}\n\n/** The injection token used to specify the StickyPositioningListener. */\nconst STICKY_POSITIONING_LISTENER = new InjectionToken('CDK_SPL');\n\n/**\n * Enables the recycle view repeater strategy, which reduces rendering latency. Not compatible with\n * tables that animate rows.\n */\nclass CdkRecycleRows {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: CdkRecycleRows, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"19.2.6\", type: CdkRecycleRows, isStandalone: true, selector: \"cdk-table[recycleRows], table[cdk-table][recycleRows]\", providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: CdkRecycleRows, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-table[recycleRows], table[cdk-table][recycleRows]',\n                    providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }],\n                }]\n        }] });\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * @docs-private\n */\nclass DataRowOutlet {\n    viewContainer = inject(ViewContainerRef);\n    elementRef = inject(ElementRef);\n    constructor() {\n        const table = inject(CDK_TABLE);\n        table._rowOutlet = this;\n        table._outletAssigned();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: DataRowOutlet, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"19.2.6\", type: DataRowOutlet, isStandalone: true, selector: \"[rowOutlet]\", ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: DataRowOutlet, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[rowOutlet]',\n                }]\n        }], ctorParameters: () => [] });\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * @docs-private\n */\nclass HeaderRowOutlet {\n    viewContainer = inject(ViewContainerRef);\n    elementRef = inject(ElementRef);\n    constructor() {\n        const table = inject(CDK_TABLE);\n        table._headerRowOutlet = this;\n        table._outletAssigned();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: HeaderRowOutlet, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"19.2.6\", type: HeaderRowOutlet, isStandalone: true, selector: \"[headerRowOutlet]\", ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: HeaderRowOutlet, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[headerRowOutlet]',\n                }]\n        }], ctorParameters: () => [] });\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * @docs-private\n */\nclass FooterRowOutlet {\n    viewContainer = inject(ViewContainerRef);\n    elementRef = inject(ElementRef);\n    constructor() {\n        const table = inject(CDK_TABLE);\n        table._footerRowOutlet = this;\n        table._outletAssigned();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: FooterRowOutlet, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"19.2.6\", type: FooterRowOutlet, isStandalone: true, selector: \"[footerRowOutlet]\", ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: FooterRowOutlet, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[footerRowOutlet]',\n                }]\n        }], ctorParameters: () => [] });\n/**\n * Provides a handle for the table to grab the view\n * container's ng-container to insert the no data row.\n * @docs-private\n */\nclass NoDataRowOutlet {\n    viewContainer = inject(ViewContainerRef);\n    elementRef = inject(ElementRef);\n    constructor() {\n        const table = inject(CDK_TABLE);\n        table._noDataRowOutlet = this;\n        table._outletAssigned();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: NoDataRowOutlet, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"19.2.6\", type: NoDataRowOutlet, isStandalone: true, selector: \"[noDataRowOutlet]\", ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: NoDataRowOutlet, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[noDataRowOutlet]',\n                }]\n        }], ctorParameters: () => [] });\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @docs-private\n */\nconst CDK_TABLE_TEMPLATE = \n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"/>\n  <ng-content select=\"colgroup, col\"/>\n\n  <!--\n    Unprojected content throws a hydration error so we need this to capture it.\n    It gets removed on the client so it doesn't affect the layout.\n  -->\n  @if (_isServer) {\n    <ng-content/>\n  }\n\n  @if (_isNativeHtmlTable) {\n    <thead role=\"rowgroup\">\n      <ng-container headerRowOutlet/>\n    </thead>\n    <tbody role=\"rowgroup\">\n      <ng-container rowOutlet/>\n      <ng-container noDataRowOutlet/>\n    </tbody>\n    <tfoot role=\"rowgroup\">\n      <ng-container footerRowOutlet/>\n    </tfoot>\n  } @else {\n    <ng-container headerRowOutlet/>\n    <ng-container rowOutlet/>\n    <ng-container noDataRowOutlet/>\n    <ng-container footerRowOutlet/>\n  }\n`;\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n */\nclass CdkTable {\n    _differs = inject(IterableDiffers);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _elementRef = inject(ElementRef);\n    _dir = inject(Directionality, { optional: true });\n    _platform = inject(Platform);\n    _viewRepeater = inject(_VIEW_REPEATER_STRATEGY);\n    _coalescedStyleScheduler = inject(_COALESCED_STYLE_SCHEDULER);\n    _viewportRuler = inject(ViewportRuler);\n    _stickyPositioningListener = inject(STICKY_POSITIONING_LISTENER, { optional: true, skipSelf: true });\n    _document = inject(DOCUMENT);\n    /** Latest data provided by the data source. */\n    _data;\n    /** Subject that emits when the component has been destroyed. */\n    _onDestroy = new Subject();\n    /** List of the rendered rows as identified by their `RenderRow` object. */\n    _renderRows;\n    /** Subscription that listens for the data provided by the data source. */\n    _renderChangeSubscription;\n    /**\n     * Map of all the user's defined columns (header, data, and footer cell template) identified by\n     * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n     * any custom column definitions added to `_customColumnDefs`.\n     */\n    _columnDefsByName = new Map();\n    /**\n     * Set of all row definitions that can be used by this table. Populated by the rows gathered by\n     * using `ContentChildren` as well as any custom row definitions added to `_customRowDefs`.\n     */\n    _rowDefs;\n    /**\n     * Set of all header row definitions that can be used by this table. Populated by the rows\n     * gathered by using `ContentChildren` as well as any custom row definitions added to\n     * `_customHeaderRowDefs`.\n     */\n    _headerRowDefs;\n    /**\n     * Set of all row definitions that can be used by this table. Populated by the rows gathered by\n     * using `ContentChildren` as well as any custom row definitions added to\n     * `_customFooterRowDefs`.\n     */\n    _footerRowDefs;\n    /** Differ used to find the changes in the data provided by the data source. */\n    _dataDiffer;\n    /** Stores the row definition that does not have a when predicate. */\n    _defaultRowDef;\n    /**\n     * Column definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * column definitions as *its* content child.\n     */\n    _customColumnDefs = new Set();\n    /**\n     * Data row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * built-in data rows as *its* content child.\n     */\n    _customRowDefs = new Set();\n    /**\n     * Header row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * built-in header rows as *its* content child.\n     */\n    _customHeaderRowDefs = new Set();\n    /**\n     * Footer row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n     * built-in footer row as *its* content child.\n     */\n    _customFooterRowDefs = new Set();\n    /** No data row that was defined outside of the direct content children of the table. */\n    _customNoDataRow;\n    /**\n     * Whether the header row definition has been changed. Triggers an update to the header row after\n     * content is checked. Initialized as true so that the table renders the initial set of rows.\n     */\n    _headerRowDefChanged = true;\n    /**\n     * Whether the footer row definition has been changed. Triggers an update to the footer row after\n     * content is checked. Initialized as true so that the table renders the initial set of rows.\n     */\n    _footerRowDefChanged = true;\n    /**\n     * Whether the sticky column styles need to be updated. Set to `true` when the visible columns\n     * change.\n     */\n    _stickyColumnStylesNeedReset = true;\n    /**\n     * Whether the sticky styler should recalculate cell widths when applying sticky styles. If\n     * `false`, cached values will be used instead. This is only applicable to tables with\n     * {@link fixedLayout} enabled. For other tables, cell widths will always be recalculated.\n     */\n    _forceRecalculateCellWidths = true;\n    /**\n     * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n     * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n     * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n     * and row template matches, which allows the `IterableDiffer` to check rows by reference\n     * and understand which rows are added/moved/removed.\n     *\n     * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n     * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n     * contains an array of created pairs. The array is necessary to handle cases where the data\n     * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n     * stored.\n     */\n    _cachedRenderRowsMap = new Map();\n    /** Whether the table is applied to a native `<table>`. */\n    _isNativeHtmlTable;\n    /**\n     * Utility class that is responsible for applying the appropriate sticky positioning styles to\n     * the table's rows and cells.\n     */\n    _stickyStyler;\n    /**\n     * CSS class added to any row or cell that has sticky positioning applied. May be overridden by\n     * table subclasses.\n     */\n    stickyCssClass = 'cdk-table-sticky';\n    /**\n     * Whether to manually add position: sticky to all sticky cell elements. Not needed if\n     * the position is set in a selector associated with the value of stickyCssClass. May be\n     * overridden by table subclasses\n     */\n    needsPositionStickyOnElement = true;\n    /** Whether the component is being rendered on the server. */\n    _isServer;\n    /** Whether the no data row is currently showing anything. */\n    _isShowingNoDataRow = false;\n    /** Whether the table has rendered out all the outlets for the first time. */\n    _hasAllOutlets = false;\n    /** Whether the table is done initializing. */\n    _hasInitialized = false;\n    /** Aria role to apply to the table's cells based on the table's own role. */\n    _getCellRole() {\n        // Perform this lazily in case the table's role was updated by a directive after construction.\n        if (this._cellRoleInternal === undefined) {\n            // Note that we set `role=\"cell\"` even on native `td` elements,\n            // because some browsers seem to require it. See #29784.\n            const tableRole = this._elementRef.nativeElement.getAttribute('role');\n            return tableRole === 'grid' || tableRole === 'treegrid' ? 'gridcell' : 'cell';\n        }\n        return this._cellRoleInternal;\n    }\n    _cellRoleInternal = undefined;\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n     * relative to the function to know if a row should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     */\n    get trackBy() {\n        return this._trackByFn;\n    }\n    set trackBy(fn) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && fn != null && typeof fn !== 'function') {\n            console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._trackByFn = fn;\n    }\n    _trackByFn;\n    /**\n     * The table's source of data, which can be provided in three ways (in order of complexity):\n     *   - Simple data array (each object represents one table row)\n     *   - Stream that emits a data array each time the array changes\n     *   - `DataSource` object that implements the connect/disconnect interface.\n     *\n     * If a data array is provided, the table must be notified when the array's objects are\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n     * render the diff since the last table render. If the data array reference is changed, the table\n     * will automatically trigger an update to the rows.\n     *\n     * When providing an Observable stream, the table will trigger an update automatically when the\n     * stream emits a new array of data.\n     *\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\n     * provided by the connect function and trigger updates when that stream emits new data array\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n     * subscriptions registered during the connect process).\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    _dataSource;\n    /**\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\n     * defined in the table, or otherwise the default row which does not have a when predicate.\n     */\n    get multiTemplateDataRows() {\n        return this._multiTemplateDataRows;\n    }\n    set multiTemplateDataRows(value) {\n        this._multiTemplateDataRows = value;\n        // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n        // this setter will be invoked before the row outlet has been defined hence the null check.\n        if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n            this._forceRenderDataRows();\n            this.updateStickyColumnStyles();\n        }\n    }\n    _multiTemplateDataRows = false;\n    /**\n     * Whether to use a fixed table layout. Enabling this option will enforce consistent column widths\n     * and optimize rendering sticky styles for native tables. No-op for flex tables.\n     */\n    get fixedLayout() {\n        return this._fixedLayout;\n    }\n    set fixedLayout(value) {\n        this._fixedLayout = value;\n        // Toggling `fixedLayout` may change column widths. Sticky column styles should be recalculated.\n        this._forceRecalculateCellWidths = true;\n        this._stickyColumnStylesNeedReset = true;\n    }\n    _fixedLayout = false;\n    /**\n     * Emits when the table completes rendering a set of data rows based on the latest data from the\n     * data source, even if the set of rows is empty.\n     */\n    contentChanged = new EventEmitter();\n    // TODO(andrewseguin): Remove max value as the end index\n    //   and instead calculate the view on init and scroll.\n    /**\n     * Stream containing the latest information on what rows are being displayed on screen.\n     * Can be used by the data source to as a heuristic of what data should be provided.\n     *\n     * @docs-private\n     */\n    viewChange = new BehaviorSubject({\n        start: 0,\n        end: Number.MAX_VALUE,\n    });\n    // Outlets in the table's template where the header, data rows, and footer will be inserted.\n    _rowOutlet;\n    _headerRowOutlet;\n    _footerRowOutlet;\n    _noDataRowOutlet;\n    /**\n     * The column definitions provided by the user that contain what the header, data, and footer\n     * cells should render for each column.\n     */\n    _contentColumnDefs;\n    /** Set of data row definitions that were provided to the table as content children. */\n    _contentRowDefs;\n    /** Set of header row definitions that were provided to the table as content children. */\n    _contentHeaderRowDefs;\n    /** Set of footer row definitions that were provided to the table as content children. */\n    _contentFooterRowDefs;\n    /** Row definition that will only be rendered if there's no data in the table. */\n    _noDataRow;\n    _injector = inject(Injector);\n    constructor() {\n        const role = inject(new HostAttributeToken('role'), { optional: true });\n        if (!role) {\n            this._elementRef.nativeElement.setAttribute('role', 'table');\n        }\n        this._isServer = !this._platform.isBrowser;\n        this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n        // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n        // the user has provided a custom trackBy, return the result of that function as evaluated\n        // with the values of the `RenderRow`'s data and index.\n        this._dataDiffer = this._differs.find([]).create((_i, dataRow) => {\n            return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n        });\n    }\n    ngOnInit() {\n        this._setupStickyStyler();\n        this._viewportRuler\n            .change()\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(() => {\n            this._forceRecalculateCellWidths = true;\n        });\n    }\n    ngAfterContentInit() {\n        this._hasInitialized = true;\n    }\n    ngAfterContentChecked() {\n        // Only start re-rendering in `ngAfterContentChecked` after the first render.\n        if (this._canRender()) {\n            this._render();\n        }\n    }\n    ngOnDestroy() {\n        this._stickyStyler?.destroy();\n        [\n            this._rowOutlet?.viewContainer,\n            this._headerRowOutlet?.viewContainer,\n            this._footerRowOutlet?.viewContainer,\n            this._cachedRenderRowsMap,\n            this._customColumnDefs,\n            this._customRowDefs,\n            this._customHeaderRowDefs,\n            this._customFooterRowDefs,\n            this._columnDefsByName,\n        ].forEach((def) => {\n            def?.clear();\n        });\n        this._headerRowDefs = [];\n        this._footerRowDefs = [];\n        this._defaultRowDef = null;\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n    }\n    /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     */\n    renderRows() {\n        this._renderRows = this._getAllRenderRows();\n        const changes = this._dataDiffer.diff(this._renderRows);\n        if (!changes) {\n            this._updateNoDataRow();\n            this.contentChanged.next();\n            return;\n        }\n        const viewContainer = this._rowOutlet.viewContainer;\n        this._viewRepeater.applyChanges(changes, viewContainer, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record.item, currentIndex), record => record.item.data, (change) => {\n            if (change.operation === _ViewRepeaterOperation.INSERTED && change.context) {\n                this._renderCellTemplateForItem(change.record.item.rowDef, change.context);\n            }\n        });\n        // Update the meta context of a row's context data (index, count, first, last, ...)\n        this._updateRowIndexContext();\n        // Update rows that did not get added/removed/moved but may have had their identity changed,\n        // e.g. if trackBy matched data on some property but the actual data reference changed.\n        changes.forEachIdentityChange((record) => {\n            const rowView = viewContainer.get(record.currentIndex);\n            rowView.context.$implicit = record.item.data;\n        });\n        this._updateNoDataRow();\n        this.contentChanged.next();\n        this.updateStickyColumnStyles();\n    }\n    /** Adds a column definition that was not included as part of the content children. */\n    addColumnDef(columnDef) {\n        this._customColumnDefs.add(columnDef);\n    }\n    /** Removes a column definition that was not included as part of the content children. */\n    removeColumnDef(columnDef) {\n        this._customColumnDefs.delete(columnDef);\n    }\n    /** Adds a row definition that was not included as part of the content children. */\n    addRowDef(rowDef) {\n        this._customRowDefs.add(rowDef);\n    }\n    /** Removes a row definition that was not included as part of the content children. */\n    removeRowDef(rowDef) {\n        this._customRowDefs.delete(rowDef);\n    }\n    /** Adds a header row definition that was not included as part of the content children. */\n    addHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.add(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Removes a header row definition that was not included as part of the content children. */\n    removeHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.delete(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Adds a footer row definition that was not included as part of the content children. */\n    addFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.add(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Removes a footer row definition that was not included as part of the content children. */\n    removeFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.delete(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Sets a no data row definition that was not included as a part of the content children. */\n    setNoDataRow(noDataRow) {\n        this._customNoDataRow = noDataRow;\n    }\n    /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyHeaderRowStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        // Hide the thead element if there are no header rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        if (this._isNativeHtmlTable) {\n            const thead = closestTableSection(this._headerRowOutlet, 'thead');\n            if (thead) {\n                thead.style.display = headerRows.length ? '' : 'none';\n            }\n        }\n        const stickyStates = this._headerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n        this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._headerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyFooterRowStyles() {\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        if (this._isNativeHtmlTable) {\n            const tfoot = closestTableSection(this._footerRowOutlet, 'tfoot');\n            if (tfoot) {\n                tfoot.style.display = footerRows.length ? '' : 'none';\n            }\n        }\n        const stickyStates = this._footerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n        this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n        this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._footerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     */\n    updateStickyColumnStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const dataRows = this._getRenderedRows(this._rowOutlet);\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        // For tables not using a fixed layout, the column widths may change when new rows are rendered.\n        // In a table using a fixed layout, row content won't affect column width, so sticky styles\n        // don't need to be cleared unless either the sticky column config changes or one of the row\n        // defs change.\n        if ((this._isNativeHtmlTable && !this._fixedLayout) || this._stickyColumnStylesNeedReset) {\n            // Clear the left and right positioning from all columns in the table across all rows since\n            // sticky columns span across all table sections (header, data, footer)\n            this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n            this._stickyColumnStylesNeedReset = false;\n        }\n        // Update the sticky styles for each header row depending on the def's sticky state\n        headerRows.forEach((headerRow, i) => {\n            this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n        });\n        // Update the sticky styles for each data row depending on its def's sticky state\n        this._rowDefs.forEach(rowDef => {\n            // Collect all the rows rendered with this row definition.\n            const rows = [];\n            for (let i = 0; i < dataRows.length; i++) {\n                if (this._renderRows[i].rowDef === rowDef) {\n                    rows.push(dataRows[i]);\n                }\n            }\n            this._addStickyColumnStyles(rows, rowDef);\n        });\n        // Update the sticky styles for each footer row depending on the def's sticky state\n        footerRows.forEach((footerRow, i) => {\n            this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n        });\n        // Reset the dirty state of the sticky input change since it has been used.\n        Array.from(this._columnDefsByName.values()).forEach(def => def.resetStickyChanged());\n    }\n    /** Invoked whenever an outlet is created and has been assigned to the table. */\n    _outletAssigned() {\n        // Trigger the first render once all outlets have been assigned. We do it this way, as\n        // opposed to waiting for the next `ngAfterContentChecked`, because we don't know when\n        // the next change detection will happen.\n        // Also we can't use queries to resolve the outlets, because they're wrapped in a\n        // conditional, so we have to rely on them being assigned via DI.\n        if (!this._hasAllOutlets &&\n            this._rowOutlet &&\n            this._headerRowOutlet &&\n            this._footerRowOutlet &&\n            this._noDataRowOutlet) {\n            this._hasAllOutlets = true;\n            // In some setups this may fire before `ngAfterContentInit`\n            // so we need a check here. See #28538.\n            if (this._canRender()) {\n                this._render();\n            }\n        }\n    }\n    /** Whether the table has all the information to start rendering. */\n    _canRender() {\n        return this._hasAllOutlets && this._hasInitialized;\n    }\n    /** Renders the table if its state has changed. */\n    _render() {\n        // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n        this._cacheRowDefs();\n        this._cacheColumnDefs();\n        // Make sure that the user has at least added header, footer, or data row def.\n        if (!this._headerRowDefs.length &&\n            !this._footerRowDefs.length &&\n            !this._rowDefs.length &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingRowDefsError();\n        }\n        // Render updates if the list of columns have been changed for the header, row, or footer defs.\n        const columnsChanged = this._renderUpdatedColumns();\n        const rowDefsChanged = columnsChanged || this._headerRowDefChanged || this._footerRowDefChanged;\n        // Ensure sticky column styles are reset if set to `true` elsewhere.\n        this._stickyColumnStylesNeedReset = this._stickyColumnStylesNeedReset || rowDefsChanged;\n        this._forceRecalculateCellWidths = rowDefsChanged;\n        // If the header row definition has been changed, trigger a render to the header row.\n        if (this._headerRowDefChanged) {\n            this._forceRenderHeaderRows();\n            this._headerRowDefChanged = false;\n        }\n        // If the footer row definition has been changed, trigger a render to the footer row.\n        if (this._footerRowDefChanged) {\n            this._forceRenderFooterRows();\n            this._footerRowDefChanged = false;\n        }\n        // If there is a data source and row definitions, connect to the data source unless a\n        // connection has already been made.\n        if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n            this._observeRenderChanges();\n        }\n        else if (this._stickyColumnStylesNeedReset) {\n            // In the above case, _observeRenderChanges will result in updateStickyColumnStyles being\n            // called when it row data arrives. Otherwise, we need to call it proactively.\n            this.updateStickyColumnStyles();\n        }\n        this._checkStickyStates();\n    }\n    /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     */\n    _getAllRenderRows() {\n        const renderRows = [];\n        // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n        // new cache while unused ones can be picked up by garbage collection.\n        const prevCachedRenderRows = this._cachedRenderRowsMap;\n        this._cachedRenderRowsMap = new Map();\n        if (!this._data) {\n            return renderRows;\n        }\n        // For each data object, get the list of rows that should be rendered, represented by the\n        // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n        for (let i = 0; i < this._data.length; i++) {\n            let data = this._data[i];\n            const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n            if (!this._cachedRenderRowsMap.has(data)) {\n                this._cachedRenderRowsMap.set(data, new WeakMap());\n            }\n            for (let j = 0; j < renderRowsForData.length; j++) {\n                let renderRow = renderRowsForData[j];\n                const cache = this._cachedRenderRowsMap.get(renderRow.data);\n                if (cache.has(renderRow.rowDef)) {\n                    cache.get(renderRow.rowDef).push(renderRow);\n                }\n                else {\n                    cache.set(renderRow.rowDef, [renderRow]);\n                }\n                renderRows.push(renderRow);\n            }\n        }\n        return renderRows;\n    }\n    /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     */\n    _getRenderRowsForData(data, dataIndex, cache) {\n        const rowDefs = this._getRowDefs(data, dataIndex);\n        return rowDefs.map(rowDef => {\n            const cachedRenderRows = cache && cache.has(rowDef) ? cache.get(rowDef) : [];\n            if (cachedRenderRows.length) {\n                const dataRow = cachedRenderRows.shift();\n                dataRow.dataIndex = dataIndex;\n                return dataRow;\n            }\n            else {\n                return { data, rowDef, dataIndex };\n            }\n        });\n    }\n    /** Update the map containing the content's column definitions. */\n    _cacheColumnDefs() {\n        this._columnDefsByName.clear();\n        const columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\n        columnDefs.forEach(columnDef => {\n            if (this._columnDefsByName.has(columnDef.name) &&\n                (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableDuplicateColumnNameError(columnDef.name);\n            }\n            this._columnDefsByName.set(columnDef.name, columnDef);\n        });\n    }\n    /** Update the list of all available row definitions that can be used. */\n    _cacheRowDefs() {\n        this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\n        this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\n        this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs);\n        // After all row definitions are determined, find the row definition to be considered default.\n        const defaultRowDefs = this._rowDefs.filter(def => !def.when);\n        if (!this.multiTemplateDataRows &&\n            defaultRowDefs.length > 1 &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMultipleDefaultRowDefsError();\n        }\n        this._defaultRowDef = defaultRowDefs[0];\n    }\n    /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     */\n    _renderUpdatedColumns() {\n        const columnsDiffReducer = (acc, def) => {\n            // The differ should be run for every column, even if `acc` is already\n            // true (see #29922)\n            const diff = !!def.getColumnsDiff();\n            return acc || diff;\n        };\n        // Force re-render data rows if the list of column definitions have changed.\n        const dataColumnsChanged = this._rowDefs.reduce(columnsDiffReducer, false);\n        if (dataColumnsChanged) {\n            this._forceRenderDataRows();\n        }\n        // Force re-render header/footer rows if the list of column definitions have changed.\n        const headerColumnsChanged = this._headerRowDefs.reduce(columnsDiffReducer, false);\n        if (headerColumnsChanged) {\n            this._forceRenderHeaderRows();\n        }\n        const footerColumnsChanged = this._footerRowDefs.reduce(columnsDiffReducer, false);\n        if (footerColumnsChanged) {\n            this._forceRenderFooterRows();\n        }\n        return dataColumnsChanged || headerColumnsChanged || footerColumnsChanged;\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     */\n    _switchDataSource(dataSource) {\n        this._data = [];\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n        // Stop listening for data from the previous data source.\n        if (this._renderChangeSubscription) {\n            this._renderChangeSubscription.unsubscribe();\n            this._renderChangeSubscription = null;\n        }\n        if (!dataSource) {\n            if (this._dataDiffer) {\n                this._dataDiffer.diff([]);\n            }\n            if (this._rowOutlet) {\n                this._rowOutlet.viewContainer.clear();\n            }\n        }\n        this._dataSource = dataSource;\n    }\n    /** Set up a subscription for the data provided by the data source. */\n    _observeRenderChanges() {\n        // If no data source has been set, there is nothing to observe for changes.\n        if (!this.dataSource) {\n            return;\n        }\n        let dataStream;\n        if (isDataSource(this.dataSource)) {\n            dataStream = this.dataSource.connect(this);\n        }\n        else if (isObservable(this.dataSource)) {\n            dataStream = this.dataSource;\n        }\n        else if (Array.isArray(this.dataSource)) {\n            dataStream = of(this.dataSource);\n        }\n        if (dataStream === undefined && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableUnknownDataSourceError();\n        }\n        this._renderChangeSubscription = dataStream\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(data => {\n            this._data = data || [];\n            this.renderRows();\n        });\n    }\n    /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     */\n    _forceRenderHeaderRows() {\n        // Clear the header row outlet if any content exists.\n        if (this._headerRowOutlet.viewContainer.length > 0) {\n            this._headerRowOutlet.viewContainer.clear();\n        }\n        this._headerRowDefs.forEach((def, i) => this._renderRow(this._headerRowOutlet, def, i));\n        this.updateStickyHeaderRowStyles();\n    }\n    /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     */\n    _forceRenderFooterRows() {\n        // Clear the footer row outlet if any content exists.\n        if (this._footerRowOutlet.viewContainer.length > 0) {\n            this._footerRowOutlet.viewContainer.clear();\n        }\n        this._footerRowDefs.forEach((def, i) => this._renderRow(this._footerRowOutlet, def, i));\n        this.updateStickyFooterRowStyles();\n    }\n    /** Adds the sticky column styles for the rows according to the columns' stick states. */\n    _addStickyColumnStyles(rows, rowDef) {\n        const columnDefs = Array.from(rowDef?.columns || []).map(columnName => {\n            const columnDef = this._columnDefsByName.get(columnName);\n            if (!columnDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnName);\n            }\n            return columnDef;\n        });\n        const stickyStartStates = columnDefs.map(columnDef => columnDef.sticky);\n        const stickyEndStates = columnDefs.map(columnDef => columnDef.stickyEnd);\n        this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates, !this._fixedLayout || this._forceRecalculateCellWidths);\n    }\n    /** Gets the list of rows that have been rendered in the row outlet. */\n    _getRenderedRows(rowOutlet) {\n        const renderedRows = [];\n        for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n            const viewRef = rowOutlet.viewContainer.get(i);\n            renderedRows.push(viewRef.rootNodes[0]);\n        }\n        return renderedRows;\n    }\n    /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     */\n    _getRowDefs(data, dataIndex) {\n        if (this._rowDefs.length == 1) {\n            return [this._rowDefs[0]];\n        }\n        let rowDefs = [];\n        if (this.multiTemplateDataRows) {\n            rowDefs = this._rowDefs.filter(def => !def.when || def.when(dataIndex, data));\n        }\n        else {\n            let rowDef = this._rowDefs.find(def => def.when && def.when(dataIndex, data)) || this._defaultRowDef;\n            if (rowDef) {\n                rowDefs.push(rowDef);\n            }\n        }\n        if (!rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingMatchingRowDefError(data);\n        }\n        return rowDefs;\n    }\n    _getEmbeddedViewArgs(renderRow, index) {\n        const rowDef = renderRow.rowDef;\n        const context = { $implicit: renderRow.data };\n        return {\n            templateRef: rowDef.template,\n            context,\n            index,\n        };\n    }\n    /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     */\n    _renderRow(outlet, rowDef, index, context = {}) {\n        // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n        const view = outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n        this._renderCellTemplateForItem(rowDef, context);\n        return view;\n    }\n    _renderCellTemplateForItem(rowDef, context) {\n        for (let cellTemplate of this._getCellTemplates(rowDef)) {\n            if (CdkCellOutlet.mostRecentCellOutlet) {\n                CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     */\n    _updateRowIndexContext() {\n        const viewContainer = this._rowOutlet.viewContainer;\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n            const viewRef = viewContainer.get(renderIndex);\n            const context = viewRef.context;\n            context.count = count;\n            context.first = renderIndex === 0;\n            context.last = renderIndex === count - 1;\n            context.even = renderIndex % 2 === 0;\n            context.odd = !context.even;\n            if (this.multiTemplateDataRows) {\n                context.dataIndex = this._renderRows[renderIndex].dataIndex;\n                context.renderIndex = renderIndex;\n            }\n            else {\n                context.index = this._renderRows[renderIndex].dataIndex;\n            }\n        }\n    }\n    /** Gets the column definitions for the provided row def. */\n    _getCellTemplates(rowDef) {\n        if (!rowDef || !rowDef.columns) {\n            return [];\n        }\n        return Array.from(rowDef.columns, columnId => {\n            const column = this._columnDefsByName.get(columnId);\n            if (!column && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnId);\n            }\n            return rowDef.extractCellTemplate(column);\n        });\n    }\n    /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     */\n    _forceRenderDataRows() {\n        this._dataDiffer.diff([]);\n        this._rowOutlet.viewContainer.clear();\n        this.renderRows();\n    }\n    /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     */\n    _checkStickyStates() {\n        const stickyCheckReducer = (acc, d) => {\n            return acc || d.hasStickyChanged();\n        };\n        // Note that the check needs to occur for every definition since it notifies the definition\n        // that it can reset its dirty state. Using another operator like `some` may short-circuit\n        // remaining definitions and leave them in an unchecked state.\n        if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyHeaderRowStyles();\n        }\n        if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyFooterRowStyles();\n        }\n        if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n            this._stickyColumnStylesNeedReset = true;\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     */\n    _setupStickyStyler() {\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._coalescedStyleScheduler, this._platform.isBrowser, this.needsPositionStickyOnElement, this._stickyPositioningListener, this._injector);\n        (this._dir ? this._dir.change : of())\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(value => {\n            this._stickyStyler.direction = value;\n            this.updateStickyColumnStyles();\n        });\n    }\n    /** Filters definitions that belong to this table from a QueryList. */\n    _getOwnDefs(items) {\n        return items.filter(item => !item._table || item._table === this);\n    }\n    /** Creates or removes the no data row, depending on whether any data is being shown. */\n    _updateNoDataRow() {\n        const noDataRow = this._customNoDataRow || this._noDataRow;\n        if (!noDataRow) {\n            return;\n        }\n        const shouldShow = this._rowOutlet.viewContainer.length === 0;\n        if (shouldShow === this._isShowingNoDataRow) {\n            return;\n        }\n        const container = this._noDataRowOutlet.viewContainer;\n        if (shouldShow) {\n            const view = container.createEmbeddedView(noDataRow.templateRef);\n            const rootNode = view.rootNodes[0];\n            // Only add the attributes if we have a single root node since it's hard\n            // to figure out which one to add it to when there are multiple.\n            if (view.rootNodes.length === 1 && rootNode?.nodeType === this._document.ELEMENT_NODE) {\n                rootNode.setAttribute('role', 'row');\n                rootNode.classList.add(noDataRow._contentClassName);\n            }\n        }\n        else {\n            container.clear();\n        }\n        this._isShowingNoDataRow = shouldShow;\n        this._changeDetectorRef.markForCheck();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: CdkTable, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"19.2.6\", type: CdkTable, isStandalone: true, selector: \"cdk-table, table[cdk-table]\", inputs: { trackBy: \"trackBy\", dataSource: \"dataSource\", multiTemplateDataRows: [\"multiTemplateDataRows\", \"multiTemplateDataRows\", booleanAttribute], fixedLayout: [\"fixedLayout\", \"fixedLayout\", booleanAttribute] }, outputs: { contentChanged: \"contentChanged\" }, host: { properties: { \"class.cdk-table-fixed-layout\": \"fixedLayout\" }, classAttribute: \"cdk-table\" }, providers: [\n            { provide: CDK_TABLE, useExisting: CdkTable },\n            { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n            { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n            // Prevent nested tables from seeing this table's StickyPositioningListener.\n            { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n        ], queries: [{ propertyName: \"_noDataRow\", first: true, predicate: CdkNoDataRow, descendants: true }, { propertyName: \"_contentColumnDefs\", predicate: CdkColumnDef, descendants: true }, { propertyName: \"_contentRowDefs\", predicate: CdkRowDef, descendants: true }, { propertyName: \"_contentHeaderRowDefs\", predicate: CdkHeaderRowDef, descendants: true }, { propertyName: \"_contentFooterRowDefs\", predicate: CdkFooterRowDef, descendants: true }], exportAs: [\"cdkTable\"], ngImport: i0, template: \"\\n  <ng-content select=\\\"caption\\\"/>\\n  <ng-content select=\\\"colgroup, col\\\"/>\\n\\n  <!--\\n    Unprojected content throws a hydration error so we need this to capture it.\\n    It gets removed on the client so it doesn't affect the layout.\\n  -->\\n  @if (_isServer) {\\n    <ng-content/>\\n  }\\n\\n  @if (_isNativeHtmlTable) {\\n    <thead role=\\\"rowgroup\\\">\\n      <ng-container headerRowOutlet/>\\n    </thead>\\n    <tbody role=\\\"rowgroup\\\">\\n      <ng-container rowOutlet/>\\n      <ng-container noDataRowOutlet/>\\n    </tbody>\\n    <tfoot role=\\\"rowgroup\\\">\\n      <ng-container footerRowOutlet/>\\n    </tfoot>\\n  } @else {\\n    <ng-container headerRowOutlet/>\\n    <ng-container rowOutlet/>\\n    <ng-container noDataRowOutlet/>\\n    <ng-container footerRowOutlet/>\\n  }\\n\", isInline: true, styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"], dependencies: [{ kind: \"directive\", type: HeaderRowOutlet, selector: \"[headerRowOutlet]\" }, { kind: \"directive\", type: DataRowOutlet, selector: \"[rowOutlet]\" }, { kind: \"directive\", type: NoDataRowOutlet, selector: \"[noDataRowOutlet]\" }, { kind: \"directive\", type: FooterRowOutlet, selector: \"[footerRowOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: CdkTable, decorators: [{\n            type: Component,\n            args: [{ selector: 'cdk-table, table[cdk-table]', exportAs: 'cdkTable', template: CDK_TABLE_TEMPLATE, host: {\n                        'class': 'cdk-table',\n                        '[class.cdk-table-fixed-layout]': 'fixedLayout',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, providers: [\n                        { provide: CDK_TABLE, useExisting: CdkTable },\n                        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n                        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n                        // Prevent nested tables from seeing this table's StickyPositioningListener.\n                        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n                    ], imports: [HeaderRowOutlet, DataRowOutlet, NoDataRowOutlet, FooterRowOutlet], styles: [\".cdk-table-fixed-layout{table-layout:fixed}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { trackBy: [{\n                type: Input\n            }], dataSource: [{\n                type: Input\n            }], multiTemplateDataRows: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], fixedLayout: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], contentChanged: [{\n                type: Output\n            }], _contentColumnDefs: [{\n                type: ContentChildren,\n                args: [CdkColumnDef, { descendants: true }]\n            }], _contentRowDefs: [{\n                type: ContentChildren,\n                args: [CdkRowDef, { descendants: true }]\n            }], _contentHeaderRowDefs: [{\n                type: ContentChildren,\n                args: [CdkHeaderRowDef, {\n                        descendants: true,\n                    }]\n            }], _contentFooterRowDefs: [{\n                type: ContentChildren,\n                args: [CdkFooterRowDef, {\n                        descendants: true,\n                    }]\n            }], _noDataRow: [{\n                type: ContentChild,\n                args: [CdkNoDataRow]\n            }] } });\n/** Utility function that gets a merged list of the entries in an array and values of a Set. */\nfunction mergeArrayAndSet(array, set) {\n    return array.concat(Array.from(set));\n}\n/**\n * Finds the closest table section to an outlet. We can't use `HTMLElement.closest` for this,\n * because the node representing the outlet is a comment.\n */\nfunction closestTableSection(outlet, section) {\n    const uppercaseSection = section.toUpperCase();\n    let current = outlet.viewContainer.element.nativeElement;\n    while (current) {\n        // 1 is an element node.\n        const nodeName = current.nodeType === 1 ? current.nodeName : null;\n        if (nodeName === uppercaseSection) {\n            return current;\n        }\n        else if (nodeName === 'TABLE') {\n            // Stop traversing past the `table` node.\n            break;\n        }\n        current = current.parentNode;\n    }\n    return null;\n}\n\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass CdkTextColumn {\n    _table = inject(CdkTable, { optional: true });\n    _options = inject(TEXT_COLUMN_OPTIONS, { optional: true });\n    /** Column name that should be used to reference this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._name = name;\n        // With Ivy, inputs can be initialized before static query results are\n        // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n        this._syncColumnDefName();\n    }\n    _name;\n    /**\n     * Text label that should be used for the column header. If this property is not\n     * set, the header text will default to the column name with its first letter capitalized.\n     */\n    headerText;\n    /**\n     * Accessor function to retrieve the data rendered for each cell. If this\n     * property is not set, the data cells will render the value found in the data's property matching\n     * the column's name. For example, if the column is named `id`, then the rendered value will be\n     * value defined by the data's `id` property.\n     */\n    dataAccessor;\n    /** Alignment of the cell values. */\n    justify = 'start';\n    /** @docs-private */\n    columnDef;\n    /**\n     * The column cell is provided to the column during `ngOnInit` with a static query.\n     * Normally, this will be retrieved by the column using `ContentChild`, but that assumes the\n     * column definition was provided in the same view as the table, which is not the case with this\n     * component.\n     * @docs-private\n     */\n    cell;\n    /**\n     * The column headerCell is provided to the column during `ngOnInit` with a static query.\n     * Normally, this will be retrieved by the column using `ContentChild`, but that assumes the\n     * column definition was provided in the same view as the table, which is not the case with this\n     * component.\n     * @docs-private\n     */\n    headerCell;\n    constructor() {\n        this._options = this._options || {};\n    }\n    ngOnInit() {\n        this._syncColumnDefName();\n        if (this.headerText === undefined) {\n            this.headerText = this._createDefaultHeaderText();\n        }\n        if (!this.dataAccessor) {\n            this.dataAccessor =\n                this._options.defaultDataAccessor || ((data, name) => data[name]);\n        }\n        if (this._table) {\n            // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n            // since the columnDef will not pick up its content by the time the table finishes checking\n            // its content and initializing the rows.\n            this.columnDef.cell = this.cell;\n            this.columnDef.headerCell = this.headerCell;\n            this._table.addColumnDef(this.columnDef);\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getTableTextColumnMissingParentTableError();\n        }\n    }\n    ngOnDestroy() {\n        if (this._table) {\n            this._table.removeColumnDef(this.columnDef);\n        }\n    }\n    /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     */\n    _createDefaultHeaderText() {\n        const name = this.name;\n        if (!name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableTextColumnMissingNameError();\n        }\n        if (this._options && this._options.defaultHeaderTextTransform) {\n            return this._options.defaultHeaderTextTransform(name);\n        }\n        return name[0].toUpperCase() + name.slice(1);\n    }\n    /** Synchronizes the column definition name with the text column name. */\n    _syncColumnDefName() {\n        if (this.columnDef) {\n            this.columnDef.name = this.name;\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: CdkTextColumn, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"19.2.6\", type: CdkTextColumn, isStandalone: true, selector: \"cdk-text-column\", inputs: { name: \"name\", headerText: \"headerText\", dataAccessor: \"dataAccessor\", justify: \"justify\" }, viewQueries: [{ propertyName: \"columnDef\", first: true, predicate: CdkColumnDef, descendants: true, static: true }, { propertyName: \"cell\", first: true, predicate: CdkCellDef, descendants: true, static: true }, { propertyName: \"headerCell\", first: true, predicate: CdkHeaderCellDef, descendants: true, static: true }], ngImport: i0, template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: CdkColumnDef, selector: \"[cdkColumnDef]\", inputs: [\"cdkColumnDef\", \"sticky\", \"stickyEnd\"] }, { kind: \"directive\", type: CdkHeaderCellDef, selector: \"[cdkHeaderCellDef]\" }, { kind: \"directive\", type: CdkHeaderCell, selector: \"cdk-header-cell, th[cdk-header-cell]\" }, { kind: \"directive\", type: CdkCellDef, selector: \"[cdkCellDef]\" }, { kind: \"directive\", type: CdkCell, selector: \"cdk-cell, td[cdk-cell]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: CdkTextColumn, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-text-column',\n                    template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                    encapsulation: ViewEncapsulation.None,\n                    // Change detection is intentionally not set to OnPush. This component's template will be provided\n                    // to the table to be inserted into its view. This is problematic when change detection runs since\n                    // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                    // mean's the template in the table's view will not have the updated value (and in fact will cause\n                    // an ExpressionChangedAfterItHasBeenCheckedError).\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    imports: [CdkColumnDef, CdkHeaderCellDef, CdkHeaderCell, CdkCellDef, CdkCell],\n                }]\n        }], ctorParameters: () => [], propDecorators: { name: [{\n                type: Input\n            }], headerText: [{\n                type: Input\n            }], dataAccessor: [{\n                type: Input\n            }], justify: [{\n                type: Input\n            }], columnDef: [{\n                type: ViewChild,\n                args: [CdkColumnDef, { static: true }]\n            }], cell: [{\n                type: ViewChild,\n                args: [CdkCellDef, { static: true }]\n            }], headerCell: [{\n                type: ViewChild,\n                args: [CdkHeaderCellDef, { static: true }]\n            }] } });\n\nconst EXPORTED_DECLARATIONS = [\n    CdkTable,\n    CdkRowDef,\n    CdkCellDef,\n    CdkCellOutlet,\n    CdkHeaderCellDef,\n    CdkFooterCellDef,\n    CdkColumnDef,\n    CdkCell,\n    CdkRow,\n    CdkHeaderCell,\n    CdkFooterCell,\n    CdkHeaderRow,\n    CdkHeaderRowDef,\n    CdkFooterRow,\n    CdkFooterRowDef,\n    DataRowOutlet,\n    HeaderRowOutlet,\n    FooterRowOutlet,\n    CdkTextColumn,\n    CdkNoDataRow,\n    CdkRecycleRows,\n    NoDataRowOutlet,\n];\nclass CdkTableModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: CdkTableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"19.2.6\", ngImport: i0, type: CdkTableModule, imports: [ScrollingModule, CdkTable,\n            CdkRowDef,\n            CdkCellDef,\n            CdkCellOutlet,\n            CdkHeaderCellDef,\n            CdkFooterCellDef,\n            CdkColumnDef,\n            CdkCell,\n            CdkRow,\n            CdkHeaderCell,\n            CdkFooterCell,\n            CdkHeaderRow,\n            CdkHeaderRowDef,\n            CdkFooterRow,\n            CdkFooterRowDef,\n            DataRowOutlet,\n            HeaderRowOutlet,\n            FooterRowOutlet,\n            CdkTextColumn,\n            CdkNoDataRow,\n            CdkRecycleRows,\n            NoDataRowOutlet], exports: [CdkTable,\n            CdkRowDef,\n            CdkCellDef,\n            CdkCellOutlet,\n            CdkHeaderCellDef,\n            CdkFooterCellDef,\n            CdkColumnDef,\n            CdkCell,\n            CdkRow,\n            CdkHeaderCell,\n            CdkFooterCell,\n            CdkHeaderRow,\n            CdkHeaderRowDef,\n            CdkFooterRow,\n            CdkFooterRowDef,\n            DataRowOutlet,\n            HeaderRowOutlet,\n            FooterRowOutlet,\n            CdkTextColumn,\n            CdkNoDataRow,\n            CdkRecycleRows,\n            NoDataRowOutlet] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: CdkTableModule, imports: [ScrollingModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: CdkTableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: EXPORTED_DECLARATIONS,\n                    imports: [ScrollingModule, ...EXPORTED_DECLARATIONS],\n                }]\n        }] });\n\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * @docs-private\n * @deprecated Implement the `CanStick` interface instead.\n * @breaking-change 19.0.0\n */\nfunction mixinHasStickyInput(base) {\n    return class extends base {\n        /** Whether sticky positioning should be applied. */\n        get sticky() {\n            return this._sticky;\n        }\n        set sticky(v) {\n            const prevValue = this._sticky;\n            this._sticky = coerceBooleanProperty(v);\n            this._hasStickyChanged = prevValue !== this._sticky;\n        }\n        _sticky = false;\n        /** Whether the sticky input has changed since it was last checked. */\n        _hasStickyChanged = false;\n        /** Whether the sticky value has changed since this was last called. */\n        hasStickyChanged() {\n            const hasStickyChanged = this._hasStickyChanged;\n            this._hasStickyChanged = false;\n            return hasStickyChanged;\n        }\n        /** Resets the dirty check for cases where the sticky state has been used without checking. */\n        resetStickyChanged() {\n            this._hasStickyChanged = false;\n        }\n        constructor(...args) {\n            super(...args);\n        }\n    };\n}\n\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkNoDataRow, CdkRecycleRows, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, NoDataRowOutlet, STICKY_DIRECTIONS, STICKY_POSITIONING_LISTENER, StickyStyler, TEXT_COLUMN_OPTIONS, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, _Schedule, mixinHasStickyInput };\n","import * as i0 from '@angular/core';\nimport { Directive, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, booleanAttribute, NgModule } from '@angular/core';\nimport { CdkTable, CDK_TABLE, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, STICKY_POSITIONING_LISTENER, HeaderRowOutlet, DataRowOutlet, NoDataRowOutlet, FooterRowOutlet, CdkCellDef, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkHeaderCell, CdkFooterCell, CdkCell, CdkHeaderRowDef, CdkFooterRowDef, CdkRowDef, CdkHeaderRow, CdkCellOutlet, CdkFooterRow, CdkRow, CdkNoDataRow, CdkTextColumn, CdkTableModule } from '@angular/cdk/table';\nimport { _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy, _DisposeViewRepeaterStrategy, DataSource } from '@angular/cdk/collections';\nimport { M as MatCommonModule } from './common-module-WayjW0Pb.mjs';\nimport { BehaviorSubject, Subject, merge, of, combineLatest } from 'rxjs';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { map } from 'rxjs/operators';\nimport '@angular/cdk/a11y';\nimport '@angular/cdk/bidi';\n\n/**\n * Enables the recycle view repeater strategy, which reduces rendering latency. Not compatible with\n * tables that animate rows.\n */\nclass MatRecycleRows {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: MatRecycleRows, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"19.2.6\", type: MatRecycleRows, isStandalone: true, selector: \"mat-table[recycleRows], table[mat-table][recycleRows]\", providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: MatRecycleRows, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-table[recycleRows], table[mat-table][recycleRows]',\n                    providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }],\n                }]\n        }] });\nclass MatTable extends CdkTable {\n    /** Overrides the sticky CSS class set by the `CdkTable`. */\n    stickyCssClass = 'mat-mdc-table-sticky';\n    /** Overrides the need to add position: sticky on every sticky cell element in `CdkTable`. */\n    needsPositionStickyOnElement = false;\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: MatTable, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"19.2.6\", type: MatTable, isStandalone: true, selector: \"mat-table, table[mat-table]\", host: { properties: { \"class.mdc-table-fixed-layout\": \"fixedLayout\" }, classAttribute: \"mat-mdc-table mdc-data-table__table\" }, providers: [\n            { provide: CdkTable, useExisting: MatTable },\n            { provide: CDK_TABLE, useExisting: MatTable },\n            { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n            // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n            //  is only included in the build if used.\n            { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n            // Prevent nested tables from seeing this table's StickyPositioningListener.\n            { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n        ], exportAs: [\"matTable\"], usesInheritance: true, ngImport: i0, template: `\n    <ng-content select=\"caption\"/>\n    <ng-content select=\"colgroup, col\"/>\n\n    <!--\n      Unprojected content throws a hydration error so we need this to capture it.\n      It gets removed on the client so it doesn't affect the layout.\n    -->\n    @if (_isServer) {\n      <ng-content/>\n    }\n\n    @if (_isNativeHtmlTable) {\n      <thead role=\"rowgroup\">\n        <ng-container headerRowOutlet/>\n      </thead>\n      <tbody class=\"mdc-data-table__content\" role=\"rowgroup\">\n        <ng-container rowOutlet/>\n        <ng-container noDataRowOutlet/>\n      </tbody>\n      <tfoot role=\"rowgroup\">\n        <ng-container footerRowOutlet/>\n      </tfoot>\n    } @else {\n      <ng-container headerRowOutlet/>\n      <ng-container rowOutlet/>\n      <ng-container noDataRowOutlet/>\n      <ng-container footerRowOutlet/>\n    }\n  `, isInline: true, styles: [\".mat-mdc-table-sticky{position:sticky !important}mat-table{display:block}mat-header-row{min-height:var(--mat-table-header-container-height, 56px)}mat-row{min-height:var(--mat-table-row-item-container-height, 52px)}mat-footer-row{min-height:var(--mat-table-footer-container-height, 52px)}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}.mat-mdc-table{min-width:100%;border:0;border-spacing:0;table-layout:auto;white-space:normal;background-color:var(--mat-table-background-color, var(--mat-sys-surface))}.mdc-data-table__cell{box-sizing:border-box;overflow:hidden;text-align:left;text-overflow:ellipsis}[dir=rtl] .mdc-data-table__cell{text-align:right}.mdc-data-table__cell,.mdc-data-table__header-cell{padding:0 16px}.mat-mdc-header-row{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;height:var(--mat-table-header-container-height, 56px);color:var(--mat-table-header-headline-color, var(--mat-sys-on-surface, rgba(0, 0, 0, 0.87)));font-family:var(--mat-table-header-headline-font, var(--mat-sys-title-small-font, Roboto, sans-serif));line-height:var(--mat-table-header-headline-line-height, var(--mat-sys-title-small-line-height));font-size:var(--mat-table-header-headline-size, var(--mat-sys-title-small-size, 14px));font-weight:var(--mat-table-header-headline-weight, var(--mat-sys-title-small-weight, 500))}.mat-mdc-row{height:var(--mat-table-row-item-container-height, 52px);color:var(--mat-table-row-item-label-text-color, var(--mat-sys-on-surface, rgba(0, 0, 0, 0.87)))}.mat-mdc-row,.mdc-data-table__content{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-table-row-item-label-text-font, var(--mat-sys-body-medium-font, Roboto, sans-serif));line-height:var(--mat-table-row-item-label-text-line-height, var(--mat-sys-body-medium-line-height));font-size:var(--mat-table-row-item-label-text-size, var(--mat-sys-body-medium-size, 14px));font-weight:var(--mat-table-row-item-label-text-weight, var(--mat-sys-body-medium-weight))}.mat-mdc-footer-row{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;height:var(--mat-table-footer-container-height, 52px);color:var(--mat-table-row-item-label-text-color, var(--mat-sys-on-surface, rgba(0, 0, 0, 0.87)));font-family:var(--mat-table-footer-supporting-text-font, var(--mat-sys-body-medium-font, Roboto, sans-serif));line-height:var(--mat-table-footer-supporting-text-line-height, var(--mat-sys-body-medium-line-height));font-size:var(--mat-table-footer-supporting-text-size, var(--mat-sys-body-medium-size, 14px));font-weight:var(--mat-table-footer-supporting-text-weight, var(--mat-sys-body-medium-weight));letter-spacing:var(--mat-table-footer-supporting-text-tracking, var(--mat-sys-body-medium-tracking))}.mat-mdc-header-cell{border-bottom-color:var(--mat-table-row-item-outline-color, var(--mat-sys-outline, rgba(0, 0, 0, 0.12)));border-bottom-width:var(--mat-table-row-item-outline-width, 1px);border-bottom-style:solid;letter-spacing:var(--mat-table-header-headline-tracking, var(--mat-sys-title-small-tracking));font-weight:inherit;line-height:inherit;box-sizing:border-box;text-overflow:ellipsis;overflow:hidden;outline:none;text-align:left}[dir=rtl] .mat-mdc-header-cell{text-align:right}.mdc-data-table__row:last-child>.mat-mdc-header-cell{border-bottom:none}.mat-mdc-cell{border-bottom-color:var(--mat-table-row-item-outline-color, var(--mat-sys-outline, rgba(0, 0, 0, 0.12)));border-bottom-width:var(--mat-table-row-item-outline-width, 1px);border-bottom-style:solid;letter-spacing:var(--mat-table-row-item-label-text-tracking, var(--mat-sys-body-medium-tracking));line-height:inherit}.mdc-data-table__row:last-child>.mat-mdc-cell{border-bottom:none}.mat-mdc-footer-cell{letter-spacing:var(--mat-table-row-item-label-text-tracking, var(--mat-sys-body-medium-tracking))}mat-row.mat-mdc-row,mat-header-row.mat-mdc-header-row,mat-footer-row.mat-mdc-footer-row{border-bottom:none}.mat-mdc-table tbody,.mat-mdc-table tfoot,.mat-mdc-table thead,.mat-mdc-cell,.mat-mdc-footer-cell,.mat-mdc-header-row,.mat-mdc-row,.mat-mdc-footer-row,.mat-mdc-table .mat-mdc-header-cell{background:inherit}.mat-mdc-table mat-header-row.mat-mdc-header-row,.mat-mdc-table mat-row.mat-mdc-row,.mat-mdc-table mat-footer-row.mat-mdc-footer-cell{height:unset}mat-header-cell.mat-mdc-header-cell,mat-cell.mat-mdc-cell,mat-footer-cell.mat-mdc-footer-cell{align-self:stretch}\\n\"], dependencies: [{ kind: \"directive\", type: HeaderRowOutlet, selector: \"[headerRowOutlet]\" }, { kind: \"directive\", type: DataRowOutlet, selector: \"[rowOutlet]\" }, { kind: \"directive\", type: NoDataRowOutlet, selector: \"[noDataRowOutlet]\" }, { kind: \"directive\", type: FooterRowOutlet, selector: \"[footerRowOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: MatTable, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-table, table[mat-table]', exportAs: 'matTable', template: `\n    <ng-content select=\"caption\"/>\n    <ng-content select=\"colgroup, col\"/>\n\n    <!--\n      Unprojected content throws a hydration error so we need this to capture it.\n      It gets removed on the client so it doesn't affect the layout.\n    -->\n    @if (_isServer) {\n      <ng-content/>\n    }\n\n    @if (_isNativeHtmlTable) {\n      <thead role=\"rowgroup\">\n        <ng-container headerRowOutlet/>\n      </thead>\n      <tbody class=\"mdc-data-table__content\" role=\"rowgroup\">\n        <ng-container rowOutlet/>\n        <ng-container noDataRowOutlet/>\n      </tbody>\n      <tfoot role=\"rowgroup\">\n        <ng-container footerRowOutlet/>\n      </tfoot>\n    } @else {\n      <ng-container headerRowOutlet/>\n      <ng-container rowOutlet/>\n      <ng-container noDataRowOutlet/>\n      <ng-container footerRowOutlet/>\n    }\n  `, host: {\n                        'class': 'mat-mdc-table mdc-data-table__table',\n                        '[class.mdc-table-fixed-layout]': 'fixedLayout',\n                    }, providers: [\n                        { provide: CdkTable, useExisting: MatTable },\n                        { provide: CDK_TABLE, useExisting: MatTable },\n                        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n                        // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n                        //  is only included in the build if used.\n                        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n                        // Prevent nested tables from seeing this table's StickyPositioningListener.\n                        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n                    ], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, imports: [HeaderRowOutlet, DataRowOutlet, NoDataRowOutlet, FooterRowOutlet], styles: [\".mat-mdc-table-sticky{position:sticky !important}mat-table{display:block}mat-header-row{min-height:var(--mat-table-header-container-height, 56px)}mat-row{min-height:var(--mat-table-row-item-container-height, 52px)}mat-footer-row{min-height:var(--mat-table-footer-container-height, 52px)}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}.mat-mdc-table{min-width:100%;border:0;border-spacing:0;table-layout:auto;white-space:normal;background-color:var(--mat-table-background-color, var(--mat-sys-surface))}.mdc-data-table__cell{box-sizing:border-box;overflow:hidden;text-align:left;text-overflow:ellipsis}[dir=rtl] .mdc-data-table__cell{text-align:right}.mdc-data-table__cell,.mdc-data-table__header-cell{padding:0 16px}.mat-mdc-header-row{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;height:var(--mat-table-header-container-height, 56px);color:var(--mat-table-header-headline-color, var(--mat-sys-on-surface, rgba(0, 0, 0, 0.87)));font-family:var(--mat-table-header-headline-font, var(--mat-sys-title-small-font, Roboto, sans-serif));line-height:var(--mat-table-header-headline-line-height, var(--mat-sys-title-small-line-height));font-size:var(--mat-table-header-headline-size, var(--mat-sys-title-small-size, 14px));font-weight:var(--mat-table-header-headline-weight, var(--mat-sys-title-small-weight, 500))}.mat-mdc-row{height:var(--mat-table-row-item-container-height, 52px);color:var(--mat-table-row-item-label-text-color, var(--mat-sys-on-surface, rgba(0, 0, 0, 0.87)))}.mat-mdc-row,.mdc-data-table__content{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-table-row-item-label-text-font, var(--mat-sys-body-medium-font, Roboto, sans-serif));line-height:var(--mat-table-row-item-label-text-line-height, var(--mat-sys-body-medium-line-height));font-size:var(--mat-table-row-item-label-text-size, var(--mat-sys-body-medium-size, 14px));font-weight:var(--mat-table-row-item-label-text-weight, var(--mat-sys-body-medium-weight))}.mat-mdc-footer-row{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;height:var(--mat-table-footer-container-height, 52px);color:var(--mat-table-row-item-label-text-color, var(--mat-sys-on-surface, rgba(0, 0, 0, 0.87)));font-family:var(--mat-table-footer-supporting-text-font, var(--mat-sys-body-medium-font, Roboto, sans-serif));line-height:var(--mat-table-footer-supporting-text-line-height, var(--mat-sys-body-medium-line-height));font-size:var(--mat-table-footer-supporting-text-size, var(--mat-sys-body-medium-size, 14px));font-weight:var(--mat-table-footer-supporting-text-weight, var(--mat-sys-body-medium-weight));letter-spacing:var(--mat-table-footer-supporting-text-tracking, var(--mat-sys-body-medium-tracking))}.mat-mdc-header-cell{border-bottom-color:var(--mat-table-row-item-outline-color, var(--mat-sys-outline, rgba(0, 0, 0, 0.12)));border-bottom-width:var(--mat-table-row-item-outline-width, 1px);border-bottom-style:solid;letter-spacing:var(--mat-table-header-headline-tracking, var(--mat-sys-title-small-tracking));font-weight:inherit;line-height:inherit;box-sizing:border-box;text-overflow:ellipsis;overflow:hidden;outline:none;text-align:left}[dir=rtl] .mat-mdc-header-cell{text-align:right}.mdc-data-table__row:last-child>.mat-mdc-header-cell{border-bottom:none}.mat-mdc-cell{border-bottom-color:var(--mat-table-row-item-outline-color, var(--mat-sys-outline, rgba(0, 0, 0, 0.12)));border-bottom-width:var(--mat-table-row-item-outline-width, 1px);border-bottom-style:solid;letter-spacing:var(--mat-table-row-item-label-text-tracking, var(--mat-sys-body-medium-tracking));line-height:inherit}.mdc-data-table__row:last-child>.mat-mdc-cell{border-bottom:none}.mat-mdc-footer-cell{letter-spacing:var(--mat-table-row-item-label-text-tracking, var(--mat-sys-body-medium-tracking))}mat-row.mat-mdc-row,mat-header-row.mat-mdc-header-row,mat-footer-row.mat-mdc-footer-row{border-bottom:none}.mat-mdc-table tbody,.mat-mdc-table tfoot,.mat-mdc-table thead,.mat-mdc-cell,.mat-mdc-footer-cell,.mat-mdc-header-row,.mat-mdc-row,.mat-mdc-footer-row,.mat-mdc-table .mat-mdc-header-cell{background:inherit}.mat-mdc-table mat-header-row.mat-mdc-header-row,.mat-mdc-table mat-row.mat-mdc-row,.mat-mdc-table mat-footer-row.mat-mdc-footer-cell{height:unset}mat-header-cell.mat-mdc-header-cell,mat-cell.mat-mdc-cell,mat-footer-cell.mat-mdc-footer-cell{align-self:stretch}\\n\"] }]\n        }] });\n\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass MatCellDef extends CdkCellDef {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: MatCellDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"19.2.6\", type: MatCellDef, isStandalone: true, selector: \"[matCellDef]\", providers: [{ provide: CdkCellDef, useExisting: MatCellDef }], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: MatCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matCellDef]',\n                    providers: [{ provide: CdkCellDef, useExisting: MatCellDef }],\n                }]\n        }] });\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass MatHeaderCellDef extends CdkHeaderCellDef {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: MatHeaderCellDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"19.2.6\", type: MatHeaderCellDef, isStandalone: true, selector: \"[matHeaderCellDef]\", providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: MatHeaderCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matHeaderCellDef]',\n                    providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }],\n                }]\n        }] });\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass MatFooterCellDef extends CdkFooterCellDef {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: MatFooterCellDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"19.2.6\", type: MatFooterCellDef, isStandalone: true, selector: \"[matFooterCellDef]\", providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: MatFooterCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matFooterCellDef]',\n                    providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }],\n                }]\n        }] });\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\nclass MatColumnDef extends CdkColumnDef {\n    /** Unique name for this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._setNameInput(name);\n    }\n    /**\n     * Add \"mat-column-\" prefix in addition to \"cdk-column-\" prefix.\n     * In the future, this will only add \"mat-column-\" and columnCssClassName\n     * will change from type string[] to string.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n        super._updateColumnCssClassName();\n        this._columnCssClassName.push(`mat-column-${this.cssClassFriendlyName}`);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: MatColumnDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"19.2.6\", type: MatColumnDef, isStandalone: true, selector: \"[matColumnDef]\", inputs: { name: [\"matColumnDef\", \"name\"] }, providers: [\n            { provide: CdkColumnDef, useExisting: MatColumnDef },\n            { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef },\n        ], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: MatColumnDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matColumnDef]',\n                    providers: [\n                        { provide: CdkColumnDef, useExisting: MatColumnDef },\n                        { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef },\n                    ],\n                }]\n        }], propDecorators: { name: [{\n                type: Input,\n                args: ['matColumnDef']\n            }] } });\n/** Header cell template container that adds the right classes and role. */\nclass MatHeaderCell extends CdkHeaderCell {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: MatHeaderCell, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"19.2.6\", type: MatHeaderCell, isStandalone: true, selector: \"mat-header-cell, th[mat-header-cell]\", host: { attributes: { \"role\": \"columnheader\" }, classAttribute: \"mat-mdc-header-cell mdc-data-table__header-cell\" }, usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: MatHeaderCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-header-cell, th[mat-header-cell]',\n                    host: {\n                        'class': 'mat-mdc-header-cell mdc-data-table__header-cell',\n                        'role': 'columnheader',\n                    },\n                }]\n        }] });\n/** Footer cell template container that adds the right classes and role. */\nclass MatFooterCell extends CdkFooterCell {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: MatFooterCell, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"19.2.6\", type: MatFooterCell, isStandalone: true, selector: \"mat-footer-cell, td[mat-footer-cell]\", host: { classAttribute: \"mat-mdc-footer-cell mdc-data-table__cell\" }, usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: MatFooterCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-footer-cell, td[mat-footer-cell]',\n                    host: {\n                        'class': 'mat-mdc-footer-cell mdc-data-table__cell',\n                    },\n                }]\n        }] });\n/** Cell template container that adds the right classes and role. */\nclass MatCell extends CdkCell {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: MatCell, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"19.2.6\", type: MatCell, isStandalone: true, selector: \"mat-cell, td[mat-cell]\", host: { classAttribute: \"mat-mdc-cell mdc-data-table__cell\" }, usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: MatCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-cell, td[mat-cell]',\n                    host: {\n                        'class': 'mat-mdc-cell mdc-data-table__cell',\n                    },\n                }]\n        }] });\n\n// We can't reuse `CDK_ROW_TEMPLATE` because it's incompatible with local compilation mode.\nconst ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass MatHeaderRowDef extends CdkHeaderRowDef {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: MatHeaderRowDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"19.2.6\", type: MatHeaderRowDef, isStandalone: true, selector: \"[matHeaderRowDef]\", inputs: { columns: [\"matHeaderRowDef\", \"columns\"], sticky: [\"matHeaderRowDefSticky\", \"sticky\", booleanAttribute] }, providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: MatHeaderRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matHeaderRowDef]',\n                    providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }],\n                    inputs: [\n                        { name: 'columns', alias: 'matHeaderRowDef' },\n                        { name: 'sticky', alias: 'matHeaderRowDefSticky', transform: booleanAttribute },\n                    ],\n                }]\n        }] });\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass MatFooterRowDef extends CdkFooterRowDef {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: MatFooterRowDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"19.2.6\", type: MatFooterRowDef, isStandalone: true, selector: \"[matFooterRowDef]\", inputs: { columns: [\"matFooterRowDef\", \"columns\"], sticky: [\"matFooterRowDefSticky\", \"sticky\", booleanAttribute] }, providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: MatFooterRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matFooterRowDef]',\n                    providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }],\n                    inputs: [\n                        { name: 'columns', alias: 'matFooterRowDef' },\n                        { name: 'sticky', alias: 'matFooterRowDefSticky', transform: booleanAttribute },\n                    ],\n                }]\n        }] });\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass MatRowDef extends CdkRowDef {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: MatRowDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"19.2.6\", type: MatRowDef, isStandalone: true, selector: \"[matRowDef]\", inputs: { columns: [\"matRowDefColumns\", \"columns\"], when: [\"matRowDefWhen\", \"when\"] }, providers: [{ provide: CdkRowDef, useExisting: MatRowDef }], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: MatRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matRowDef]',\n                    providers: [{ provide: CdkRowDef, useExisting: MatRowDef }],\n                    inputs: [\n                        { name: 'columns', alias: 'matRowDefColumns' },\n                        { name: 'when', alias: 'matRowDefWhen' },\n                    ],\n                }]\n        }] });\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass MatHeaderRow extends CdkHeaderRow {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: MatHeaderRow, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"19.2.6\", type: MatHeaderRow, isStandalone: true, selector: \"mat-header-row, tr[mat-header-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"mat-mdc-header-row mdc-data-table__header-row\" }, providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }], exportAs: [\"matHeaderRow\"], usesInheritance: true, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: MatHeaderRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-header-row, tr[mat-header-row]',\n                    template: ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-mdc-header-row mdc-data-table__header-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matHeaderRow',\n                    providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }],\n                    imports: [CdkCellOutlet],\n                }]\n        }] });\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass MatFooterRow extends CdkFooterRow {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: MatFooterRow, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"19.2.6\", type: MatFooterRow, isStandalone: true, selector: \"mat-footer-row, tr[mat-footer-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"mat-mdc-footer-row mdc-data-table__row\" }, providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }], exportAs: [\"matFooterRow\"], usesInheritance: true, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: MatFooterRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-footer-row, tr[mat-footer-row]',\n                    template: ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-mdc-footer-row mdc-data-table__row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matFooterRow',\n                    providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }],\n                    imports: [CdkCellOutlet],\n                }]\n        }] });\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass MatRow extends CdkRow {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: MatRow, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"19.2.6\", type: MatRow, isStandalone: true, selector: \"mat-row, tr[mat-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"mat-mdc-row mdc-data-table__row\" }, providers: [{ provide: CdkRow, useExisting: MatRow }], exportAs: [\"matRow\"], usesInheritance: true, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: MatRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-row, tr[mat-row]',\n                    template: ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-mdc-row mdc-data-table__row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matRow',\n                    providers: [{ provide: CdkRow, useExisting: MatRow }],\n                    imports: [CdkCellOutlet],\n                }]\n        }] });\n/** Row that can be used to display a message when no data is shown in the table. */\nclass MatNoDataRow extends CdkNoDataRow {\n    _contentClassName = 'mat-mdc-no-data-row';\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: MatNoDataRow, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"19.2.6\", type: MatNoDataRow, isStandalone: true, selector: \"ng-template[matNoDataRow]\", providers: [{ provide: CdkNoDataRow, useExisting: MatNoDataRow }], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: MatNoDataRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matNoDataRow]',\n                    providers: [{ provide: CdkNoDataRow, useExisting: MatNoDataRow }],\n                }]\n        }] });\n\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass MatTextColumn extends CdkTextColumn {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: MatTextColumn, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"19.2.6\", type: MatTextColumn, isStandalone: true, selector: \"mat-text-column\", usesInheritance: true, ngImport: i0, template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: MatColumnDef, selector: \"[matColumnDef]\", inputs: [\"matColumnDef\"] }, { kind: \"directive\", type: MatHeaderCellDef, selector: \"[matHeaderCellDef]\" }, { kind: \"directive\", type: MatHeaderCell, selector: \"mat-header-cell, th[mat-header-cell]\" }, { kind: \"directive\", type: MatCellDef, selector: \"[matCellDef]\" }, { kind: \"directive\", type: MatCell, selector: \"mat-cell, td[mat-cell]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: MatTextColumn, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-text-column',\n                    template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                    encapsulation: ViewEncapsulation.None,\n                    // Change detection is intentionally not set to OnPush. This component's template will be provided\n                    // to the table to be inserted into its view. This is problematic when change detection runs since\n                    // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                    // mean's the template in the table's view will not have the updated value (and in fact will cause\n                    // an ExpressionChangedAfterItHasBeenCheckedError).\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    imports: [MatColumnDef, MatHeaderCellDef, MatHeaderCell, MatCellDef, MatCell],\n                }]\n        }] });\n\nconst EXPORTED_DECLARATIONS = [\n    // Table\n    MatTable,\n    MatRecycleRows,\n    // Template defs\n    MatHeaderCellDef,\n    MatHeaderRowDef,\n    MatColumnDef,\n    MatCellDef,\n    MatRowDef,\n    MatFooterCellDef,\n    MatFooterRowDef,\n    // Cell directives\n    MatHeaderCell,\n    MatCell,\n    MatFooterCell,\n    // Row directives\n    MatHeaderRow,\n    MatRow,\n    MatFooterRow,\n    MatNoDataRow,\n    MatTextColumn,\n];\nclass MatTableModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: MatTableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"19.2.6\", ngImport: i0, type: MatTableModule, imports: [MatCommonModule, CdkTableModule, \n            // Table\n            MatTable,\n            MatRecycleRows,\n            // Template defs\n            MatHeaderCellDef,\n            MatHeaderRowDef,\n            MatColumnDef,\n            MatCellDef,\n            MatRowDef,\n            MatFooterCellDef,\n            MatFooterRowDef,\n            // Cell directives\n            MatHeaderCell,\n            MatCell,\n            MatFooterCell,\n            // Row directives\n            MatHeaderRow,\n            MatRow,\n            MatFooterRow,\n            MatNoDataRow,\n            MatTextColumn], exports: [MatCommonModule, \n            // Table\n            MatTable,\n            MatRecycleRows,\n            // Template defs\n            MatHeaderCellDef,\n            MatHeaderRowDef,\n            MatColumnDef,\n            MatCellDef,\n            MatRowDef,\n            MatFooterCellDef,\n            MatFooterRowDef,\n            // Cell directives\n            MatHeaderCell,\n            MatCell,\n            MatFooterCell,\n            // Row directives\n            MatHeaderRow,\n            MatRow,\n            MatFooterRow,\n            MatNoDataRow,\n            MatTextColumn] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: MatTableModule, imports: [MatCommonModule, CdkTableModule, MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: MatTableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, CdkTableModule, ...EXPORTED_DECLARATIONS],\n                    exports: [MatCommonModule, EXPORTED_DECLARATIONS],\n                }]\n        }] });\n\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterPredicate,\n * which defines how row data is converted to a string for filter matching.\n *\n * **Note:** This class is meant to be a simple data source to help you get started. As such\n * it isn't equipped to handle some more advanced cases like robust i18n support or server-side\n * interactions. If your app needs to support more advanced use cases, consider implementing your\n * own `DataSource`.\n */\nclass MatTableDataSource extends DataSource {\n    /** Stream that emits when a new data array is set on the data source. */\n    _data;\n    /** Stream emitting render data to the table (depends on ordered data changes). */\n    _renderData = new BehaviorSubject([]);\n    /** Stream that emits when a new filter string is set on the data source. */\n    _filter = new BehaviorSubject('');\n    /** Used to react to internal changes of the paginator that are made by the data source itself. */\n    _internalPageChanges = new Subject();\n    /**\n     * Subscription to the changes that should trigger an update to the table's rendered rows, such\n     * as filtering, sorting, pagination, or base data changes.\n     */\n    _renderChangesSubscription = null;\n    /**\n     * The filtered set of data that has been matched by the filter string, or all the data if there\n     * is no filter. Useful for knowing the set of data the table represents.\n     * For example, a 'selectAll()' function would likely want to select the set of filtered data\n     * shown to the user rather than all the data.\n     */\n    filteredData;\n    /** Array of data that should be rendered by the table, where each object represents one row. */\n    get data() {\n        return this._data.value;\n    }\n    set data(data) {\n        data = Array.isArray(data) ? data : [];\n        this._data.next(data);\n        // Normally the `filteredData` is updated by the re-render\n        // subscription, but that won't happen if it's inactive.\n        if (!this._renderChangesSubscription) {\n            this._filterData(data);\n        }\n    }\n    /**\n     * Filter term that should be used to filter out objects from the data array. To override how\n     * data objects match to this filter string, provide a custom function for filterPredicate.\n     */\n    get filter() {\n        return this._filter.value;\n    }\n    set filter(filter) {\n        this._filter.next(filter);\n        // Normally the `filteredData` is updated by the re-render\n        // subscription, but that won't happen if it's inactive.\n        if (!this._renderChangesSubscription) {\n            this._filterData(this.data);\n        }\n    }\n    /**\n     * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n     * emitted by the MatSort will trigger an update to the table's rendered data.\n     */\n    get sort() {\n        return this._sort;\n    }\n    set sort(sort) {\n        this._sort = sort;\n        this._updateChangeSubscription();\n    }\n    _sort;\n    /**\n     * Instance of the paginator component used by the table to control what page of the data is\n     * displayed. Page changes emitted by the paginator will trigger an update to the\n     * table's rendered data.\n     *\n     * Note that the data source uses the paginator's properties to calculate which page of data\n     * should be displayed. If the paginator receives its properties as template inputs,\n     * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n     * initialized before assigning it to this data source.\n     */\n    get paginator() {\n        return this._paginator;\n    }\n    set paginator(paginator) {\n        this._paginator = paginator;\n        this._updateChangeSubscription();\n    }\n    _paginator;\n    /**\n     * Data accessor function that is used for accessing data properties for sorting through\n     * the default sortData function.\n     * This default function assumes that the sort header IDs (which defaults to the column name)\n     * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n     * May be set to a custom function for different behavior.\n     * @param data Data object that is being accessed.\n     * @param sortHeaderId The name of the column that represents the data.\n     */\n    sortingDataAccessor = (data, sortHeaderId) => {\n        const value = data[sortHeaderId];\n        if (_isNumberValue(value)) {\n            const numberValue = Number(value);\n            // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we leave them as strings.\n            // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER\n            return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n        }\n        return value;\n    };\n    /**\n     * Gets a sorted copy of the data array based on the state of the MatSort. Called\n     * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n     * By default, the function retrieves the active sort and its direction and compares data\n     * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n     * of data ordering.\n     * @param data The array of data that should be sorted.\n     * @param sort The connected MatSort that holds the current sort state.\n     */\n    sortData = (data, sort) => {\n        const active = sort.active;\n        const direction = sort.direction;\n        if (!active || direction == '') {\n            return data;\n        }\n        return data.sort((a, b) => {\n            let valueA = this.sortingDataAccessor(a, active);\n            let valueB = this.sortingDataAccessor(b, active);\n            // If there are data in the column that can be converted to a number,\n            // it must be ensured that the rest of the data\n            // is of the same type so as not to order incorrectly.\n            const valueAType = typeof valueA;\n            const valueBType = typeof valueB;\n            if (valueAType !== valueBType) {\n                if (valueAType === 'number') {\n                    valueA += '';\n                }\n                if (valueBType === 'number') {\n                    valueB += '';\n                }\n            }\n            // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n            // one value exists while the other doesn't. In this case, existing value should come last.\n            // This avoids inconsistent results when comparing values to undefined/null.\n            // If neither value exists, return 0 (equal).\n            let comparatorResult = 0;\n            if (valueA != null && valueB != null) {\n                // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n                if (valueA > valueB) {\n                    comparatorResult = 1;\n                }\n                else if (valueA < valueB) {\n                    comparatorResult = -1;\n                }\n            }\n            else if (valueA != null) {\n                comparatorResult = 1;\n            }\n            else if (valueB != null) {\n                comparatorResult = -1;\n            }\n            return comparatorResult * (direction == 'asc' ? 1 : -1);\n        });\n    };\n    /**\n     * Checks if a data object matches the data source's filter string. By default, each data object\n     * is converted to a string of its properties and returns true if the filter has\n     * at least one occurrence in that string. By default, the filter string has its whitespace\n     * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n     * filter matching.\n     * @param data Data object used to check against the filter.\n     * @param filter Filter string that has been set on the data source.\n     * @returns Whether the filter matches against the data\n     */\n    filterPredicate = (data, filter) => {\n        // Transform the filter by converting it to lowercase and removing whitespace.\n        const transformedFilter = filter.trim().toLowerCase();\n        // Loops over the values in the array and returns true if any of them match the filter string\n        return Object.values(data).some(value => `${value}`.toLowerCase().includes(transformedFilter));\n    };\n    constructor(initialData = []) {\n        super();\n        this._data = new BehaviorSubject(initialData);\n        this._updateChangeSubscription();\n    }\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     */\n    _updateChangeSubscription() {\n        // Sorting and/or pagination should be watched if sort and/or paginator are provided.\n        // The events should emit whenever the component emits a change or initializes, or if no\n        // component is provided, a stream with just a null event should be provided.\n        // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n        // pipeline can progress to the next step. Note that the value from these streams are not used,\n        // they purely act as a signal to progress in the pipeline.\n        const sortChange = this._sort\n            ? merge(this._sort.sortChange, this._sort.initialized)\n            : of(null);\n        const pageChange = this._paginator\n            ? merge(this._paginator.page, this._internalPageChanges, this._paginator.initialized)\n            : of(null);\n        const dataStream = this._data;\n        // Watch for base data or filter changes to provide a filtered set of data.\n        const filteredData = combineLatest([dataStream, this._filter]).pipe(map(([data]) => this._filterData(data)));\n        // Watch for filtered data or sort changes to provide an ordered set of data.\n        const orderedData = combineLatest([filteredData, sortChange]).pipe(map(([data]) => this._orderData(data)));\n        // Watch for ordered data or page changes to provide a paged set of data.\n        const paginatedData = combineLatest([orderedData, pageChange]).pipe(map(([data]) => this._pageData(data)));\n        // Watched for paged data changes and send the result to the table to render.\n        this._renderChangesSubscription?.unsubscribe();\n        this._renderChangesSubscription = paginatedData.subscribe(data => this._renderData.next(data));\n    }\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterPredicate function. If no filter is set, returns the data array\n     * as provided.\n     */\n    _filterData(data) {\n        // If there is a filter string, filter out data that does not contain it.\n        // Each data object is converted to a string using the function defined by filterPredicate.\n        // May be overridden for customization.\n        this.filteredData =\n            this.filter == null || this.filter === ''\n                ? data\n                : data.filter(obj => this.filterPredicate(obj, this.filter));\n        if (this.paginator) {\n            this._updatePaginator(this.filteredData.length);\n        }\n        return this.filteredData;\n    }\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     */\n    _orderData(data) {\n        // If there is no active sort or direction, return the data without trying to sort.\n        if (!this.sort) {\n            return data;\n        }\n        return this.sortData(data.slice(), this.sort);\n    }\n    /**\n     * Returns a paged slice of the provided data array according to the provided paginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     */\n    _pageData(data) {\n        if (!this.paginator) {\n            return data;\n        }\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        return data.slice(startIndex, startIndex + this.paginator.pageSize);\n    }\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     */\n    _updatePaginator(filteredDataLength) {\n        Promise.resolve().then(() => {\n            const paginator = this.paginator;\n            if (!paginator) {\n                return;\n            }\n            paginator.length = filteredDataLength;\n            // If the page index is set beyond the page, reduce it to the last page.\n            if (paginator.pageIndex > 0) {\n                const lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;\n                const newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);\n                if (newPageIndex !== paginator.pageIndex) {\n                    paginator.pageIndex = newPageIndex;\n                    // Since the paginator only emits after user-generated changes,\n                    // we need our own stream so we know to should re-render the data.\n                    this._internalPageChanges.next();\n                }\n            }\n        });\n    }\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * @docs-private\n     */\n    connect() {\n        if (!this._renderChangesSubscription) {\n            this._updateChangeSubscription();\n        }\n        return this._renderData;\n    }\n    /**\n     * Used by the MatTable. Called when it disconnects from the data source.\n     * @docs-private\n     */\n    disconnect() {\n        this._renderChangesSubscription?.unsubscribe();\n        this._renderChangesSubscription = null;\n    }\n}\n\nexport { MatCell, MatCellDef, MatColumnDef, MatFooterCell, MatFooterCellDef, MatFooterRow, MatFooterRowDef, MatHeaderCell, MatHeaderCellDef, MatHeaderRow, MatHeaderRowDef, MatNoDataRow, MatRecycleRows, MatRow, MatRowDef, MatTable, MatTableDataSource, MatTableModule, MatTextColumn };\n"],"names":["a","_ViewRepeaterOperation","_DisposeViewRepeaterStrategy","applyChanges","changes","viewContainerRef","itemContextFactory","itemValueResolver","itemViewChanged","forEachOperation","record","adjustedPreviousIndex","currentIndex","view","operation","previousIndex","insertContext","createEmbeddedView","templateRef","context","index","INSERTED","remove","REMOVED","get","move","MOVED","detach","_","i","isDataSource","_c0","_c1","CdkTable_Conditional_2_Template","rf","ctx","i0","ɵɵprojection","CdkTable_Conditional_3_Template","ɵɵelementStart","ɵɵelementContainer","ɵɵelementEnd","CdkTable_Conditional_4_Template","CdkTextColumn_th_1_Template","ɵɵtext","ctx_r0","ɵɵnextContext","ɵɵstyleProp","justify","ɵɵadvance","ɵɵtextInterpolate1","headerText","CdkTextColumn_td_2_Template","data_r2","$implicit","dataAccessor","name","D","DataSource","DOCUMENT","InjectionToken","inject","TemplateRef","Directive","booleanAttribute","Input","ContentChild","ElementRef","NgZone","Injectable","IterableDiffers","ViewContainerRef","Component","ChangeDetectionStrategy","ViewEncapsulation","afterNextRender","ChangeDetectorRef","EventEmitter","Injector","HostAttributeToken","Output","ContentChildren","ViewChild","NgModule","Subject","BehaviorSubject","isObservable","of","takeUntil","b","_VIEW_REPEATER_STRATEGY","_RecycleViewRepeaterStrategy","Directionality","P","Platform","ViewportRuler","ScrollingModule","c","coerceBooleanProperty","CDK_TABLE","TEXT_COLUMN_OPTIONS","CdkCellDef","template","constructor","ɵfac","CdkCellDef_Factory","__ngFactoryType__","ɵdir","ɵɵdefineDirective","type","selectors","ngDevMode","ɵsetClassMetadata","args","selector","CdkHeaderCellDef","CdkHeaderCellDef_Factory","CdkFooterCellDef","CdkFooterCellDef_Factory","CdkColumnDef","_table","optional","_hasStickyChanged","_name","_setNameInput","sticky","_sticky","value","stickyEnd","_stickyEnd","cell","headerCell","footerCell","cssClassFriendlyName","_columnCssClassName","hasStickyChanged","resetStickyChanged","_updateColumnCssClassName","replace","CdkColumnDef_Factory","contentQueries","CdkColumnDef_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","inputs","features","ɵɵProvidersFeature","provide","useExisting","ɵɵInputTransformsFeature","providers","transform","BaseCdkCell","columnDef","elementRef","nativeElement","classList","add","CdkHeaderCell","CdkHeaderCell_Factory","hostAttrs","ɵɵInheritDefinitionFeature","host","CdkFooterCell","role","_getCellRole","setAttribute","CdkFooterCell_Factory","CdkCell","CdkCell_Factory","_Schedule","tasks","endTasks","_COALESCED_STYLE_SCHEDULER","_CoalescedStyleScheduler","_currentSchedule","_ngZone","schedule","task","_createScheduleIfNeeded","push","scheduleEnd","runOutsideAngular","queueMicrotask","length","_CoalescedStyleScheduler_Factory","ɵprov","ɵɵdefineInjectable","token","factory","CDK_ROW_TEMPLATE","BaseRowDef","_differs","columns","_columnsDiffer","ngOnChanges","currentValue","find","create","diff","getColumnsDiff","extractCellTemplate","column","CdkHeaderRowDef","CdkFooterRowDef","BaseRowDef_Factory","ɵɵNgOnChangesFeature","CdkHeaderRowDef_Factory","alias","CdkFooterRowDef_Factory","CdkRowDef","when","CdkRowDef_Factory","CdkCellOutlet","_viewContainer","cells","mostRecentCellOutlet","ngOnDestroy","CdkCellOutlet_Factory","CdkHeaderRow","CdkHeaderRow_Factory","ɵcmp","ɵɵdefineComponent","decls","vars","consts","CdkHeaderRow_Template","dependencies","encapsulation","changeDetection","Default","None","imports","CdkFooterRow","CdkFooterRow_Factory","CdkFooterRow_Template","CdkRow","CdkRow_Factory","CdkRow_Template","CdkNoDataRow","_contentClassName","CdkNoDataRow_Factory","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","direction","_coalescedStyleScheduler","_isBrowser","_needsPositionStickyOnElement","_positionListener","_tableInjector","_elemSizeCache","WeakMap","_resizeObserver","globalThis","ResizeObserver","entries","_updateCachedSizes","_updatedStickyColumnsParamsToReplay","_stickyColumnsReplayTimeout","_cachedCellWidths","_borderCellCss","_destroyed","clearStickyPositioning","rows","stickyDirections","includes","_removeFromStickyColumnReplayQueue","elementsToClear","row","nodeType","ELEMENT_NODE","Array","from","children","_afterNextRender","write","element","_removeStickyStyle","updateStickyColumns","stickyStartStates","stickyEndStates","recalculateCellWidths","replay","some","state","stickyColumnsUpdated","sizes","stickyEndColumnsUpdated","firstRow","numCells","isRtl","start","end","lastStickyStart","lastIndexOf","firstStickyEnd","indexOf","cellWidths","startPositions","endPositions","_updateStickyColumnReplayQueue","earlyRead","_getCellWidths","_getStickyStartColumnPositions","_getStickyEndColumnPositions","_addStickyStyle","w","slice","map","width","reverse","stickRows","rowsToStick","stickyStates","position","states","stickyOffsets","stickyCellHeights","elementsToStick","rowIndex","stickyOffset","height","_retrieveElementSize","borderedRowIndex","offset","isBorderedRowIndex","stickyHeaderRowsUpdated","offsets","elements","stickyFooterRowsUpdated","updateStickyFooterContainer","tableElement","tfoot","querySelector","destroy","clearTimeout","disconnect","contains","dir","style","hasDirection","zIndex","_getCalculatedZIndex","dirValue","isBorderElement","cssText","zIndexIncrements","top","bottom","left","right","firstRowCells","widths","positions","nextPosition","cachedSize","clientRect","getBoundingClientRect","size","set","observe","box","params","rowsSet","Set","update","filter","has","needsColumnUpdate","entry","newEntry","borderBoxSize","inlineSize","blockSize","contentRect","target","isCell","setTimeout","spec","injector","klass","getTableUnknownColumnError","id","Error","getTableDuplicateColumnNameError","getTableMultipleDefaultRowDefsError","getTableMissingMatchingRowDefError","data","JSON","stringify","getTableMissingRowDefsError","getTableUnknownDataSourceError","getTableTextColumnMissingParentTableError","getTableTextColumnMissingNameError","STICKY_POSITIONING_LISTENER","CdkRecycleRows","CdkRecycleRows_Factory","useClass","DataRowOutlet","viewContainer","table","_rowOutlet","_outletAssigned","DataRowOutlet_Factory","HeaderRowOutlet","_headerRowOutlet","HeaderRowOutlet_Factory","FooterRowOutlet","_footerRowOutlet","FooterRowOutlet_Factory","NoDataRowOutlet","_noDataRowOutlet","NoDataRowOutlet_Factory","CDK_TABLE_TEMPLATE","CdkTable","_changeDetectorRef","_elementRef","_dir","_platform","_viewRepeater","_viewportRuler","_stickyPositioningListener","skipSelf","_document","_data","_onDestroy","_renderRows","_renderChangeSubscription","_columnDefsByName","Map","_rowDefs","_headerRowDefs","_footerRowDefs","_dataDiffer","_defaultRowDef","_customColumnDefs","_customRowDefs","_customHeaderRowDefs","_customFooterRowDefs","_customNoDataRow","_headerRowDefChanged","_footerRowDefChanged","_stickyColumnStylesNeedReset","_forceRecalculateCellWidths","_cachedRenderRowsMap","_stickyStyler","stickyCssClass","needsPositionStickyOnElement","_isServer","_isShowingNoDataRow","_hasAllOutlets","_hasInitialized","_cellRoleInternal","undefined","tableRole","getAttribute","trackBy","_trackByFn","fn","console","warn","dataSource","_dataSource","_switchDataSource","multiTemplateDataRows","_multiTemplateDataRows","_forceRenderDataRows","updateStickyColumnStyles","fixedLayout","_fixedLayout","contentChanged","viewChange","Number","MAX_VALUE","_contentColumnDefs","_contentRowDefs","_contentHeaderRowDefs","_contentFooterRowDefs","_noDataRow","_injector","isBrowser","nodeName","_i","dataRow","dataIndex","ngOnInit","_setupStickyStyler","change","pipe","subscribe","ngAfterContentInit","ngAfterContentChecked","_canRender","_render","forEach","def","clear","next","complete","renderRows","_getAllRenderRows","_updateNoDataRow","_adjustedPreviousIndex","_getEmbeddedViewArgs","item","_renderCellTemplateForItem","rowDef","_updateRowIndexContext","forEachIdentityChange","rowView","addColumnDef","removeColumnDef","delete","addRowDef","removeRowDef","addHeaderRowDef","headerRowDef","removeHeaderRowDef","addFooterRowDef","footerRowDef","removeFooterRowDef","setNoDataRow","noDataRow","updateStickyHeaderRowStyles","headerRows","_getRenderedRows","thead","closestTableSection","display","updateStickyFooterRowStyles","footerRows","dataRows","headerRow","_addStickyColumnStyles","footerRow","values","_cacheRowDefs","_cacheColumnDefs","columnsChanged","_renderUpdatedColumns","rowDefsChanged","_forceRenderHeaderRows","_forceRenderFooterRows","_observeRenderChanges","_checkStickyStates","prevCachedRenderRows","renderRowsForData","_getRenderRowsForData","j","renderRow","cache","rowDefs","_getRowDefs","cachedRenderRows","shift","columnDefs","mergeArrayAndSet","_getOwnDefs","defaultRowDefs","columnsDiffReducer","acc","dataColumnsChanged","reduce","headerColumnsChanged","footerColumnsChanged","unsubscribe","dataStream","connect","isArray","_renderRow","columnName","rowOutlet","renderedRows","viewRef","rootNodes","outlet","cellTemplate","_getCellTemplates","markForCheck","renderIndex","count","last","even","odd","columnId","stickyCheckReducer","d","items","shouldShow","container","rootNode","CdkTable_Factory","CdkTable_ContentQueries","hostVars","hostBindings","CdkTable_HostBindings","ɵɵclassProp","outputs","exportAs","useValue","ngContentSelectors","CdkTable_Template","ɵɵprojectionDef","ɵɵtemplate","ɵɵconditional","styles","descendants","array","concat","section","uppercaseSection","toUpperCase","current","parentNode","CdkTextColumn","_options","_syncColumnDefName","_createDefaultHeaderText","defaultDataAccessor","defaultHeaderTextTransform","CdkTextColumn_Factory","viewQuery","CdkTextColumn_Query","ɵɵviewQuery","CdkTextColumn_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","static","EXPORTED_DECLARATIONS","CdkTableModule","CdkTableModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","exports","mixinHasStickyInput","base","v","prevValue","M","MatCommonModule","merge","combineLatest","_isNumberValue","MatTable_Conditional_2_Template","MatTable_Conditional_3_Template","MatTable_Conditional_4_Template","MatTextColumn_th_1_Template","MatTextColumn_td_2_Template","MatRecycleRows","MatRecycleRows_Factory","MatTable","ɵMatTable_BaseFactory","MatTable_Factory","ɵɵgetInheritedFactory","MatTable_HostBindings","MatTable_Template","MatCellDef","ɵMatCellDef_BaseFactory","MatCellDef_Factory","MatHeaderCellDef","ɵMatHeaderCellDef_BaseFactory","MatHeaderCellDef_Factory","MatFooterCellDef","ɵMatFooterCellDef_BaseFactory","MatFooterCellDef_Factory","MatColumnDef","ɵMatColumnDef_BaseFactory","MatColumnDef_Factory","MatHeaderCell","ɵMatHeaderCell_BaseFactory","MatHeaderCell_Factory","MatFooterCell","ɵMatFooterCell_BaseFactory","MatFooterCell_Factory","MatCell","ɵMatCell_BaseFactory","MatCell_Factory","ROW_TEMPLATE","MatHeaderRowDef","ɵMatHeaderRowDef_BaseFactory","MatHeaderRowDef_Factory","MatFooterRowDef","ɵMatFooterRowDef_BaseFactory","MatFooterRowDef_Factory","MatRowDef","ɵMatRowDef_BaseFactory","MatRowDef_Factory","MatHeaderRow","ɵMatHeaderRow_BaseFactory","MatHeaderRow_Factory","MatHeaderRow_Template","MatFooterRow","ɵMatFooterRow_BaseFactory","MatFooterRow_Factory","MatFooterRow_Template","MatRow","ɵMatRow_BaseFactory","MatRow_Factory","MatRow_Template","MatNoDataRow","ɵMatNoDataRow_BaseFactory","MatNoDataRow_Factory","MatTextColumn","ɵMatTextColumn_BaseFactory","MatTextColumn_Factory","MatTextColumn_Template","MatTableModule","MatTableModule_Factory","MAX_SAFE_INTEGER","MatTableDataSource","_renderData","_filter","_internalPageChanges","_renderChangesSubscription","filteredData","_filterData","sort","_sort","_updateChangeSubscription","paginator","_paginator","sortingDataAccessor","sortHeaderId","numberValue","sortData","active","valueA","valueB","valueAType","valueBType","comparatorResult","filterPredicate","transformedFilter","trim","toLowerCase","Object","initialData","sortChange","initialized","pageChange","page","orderedData","_orderData","paginatedData","_pageData","obj","_updatePaginator","startIndex","pageIndex","pageSize","filteredDataLength","Promise","resolve","then","lastPageIndex","Math","ceil","newPageIndex","min"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2]}
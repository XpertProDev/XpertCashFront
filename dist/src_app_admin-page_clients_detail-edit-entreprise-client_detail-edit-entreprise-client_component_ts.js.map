{"version":3,"file":"src_app_admin-page_clients_detail-edit-entreprise-client_detail-edit-entreprise-client_component_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAGmH;AAC7D;AAEP;AAGsB;;;;;;;;;;ICNnEQ,4DAAA,cAA0E;IACxEA,oDAAA,GACF;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,EACF;IADEA,gEAAA,MAAAM,MAAA,CAAAC,YAAA,MACF;;;;;IAGAP,4DAAA,cAA8E;IAC5EA,oDAAA,GACF;IAAAA,0DAAA,EAAM;;;;IADJA,uDAAA,EACF;IADEA,gEAAA,MAAAM,MAAA,CAAAE,cAAA,MACF;;;;;IAMER,4DADF,cAA+C,cAChB;IAC3BA,uDAAA,cAA2B;IAC3BA,4DAAA,QAAG;IAAAA,oDAAA,2BAAoB;IAE3BA,0DAF2B,EAAI,EACvB,EACF;;;;;;IAyBYA,4DAAA,YAG8B;IAA1BA,wDAAA,mBAAAW,2EAAA;MAAAX,2DAAA,CAAAa,GAAA;MAAA,MAAAP,MAAA,GAAAN,2DAAA;MAAA,OAAAA,yDAAA,CAASM,MAAA,CAAAU,aAAA,EAAe;IAAA,EAAC;IAAChB,0DAAA,EAAI;;;;;;IAElCA,4DAAA,YAG8B;IAA1BA,wDAAA,mBAAAiB,2EAAA;MAAAjB,2DAAA,CAAAkB,GAAA;MAAA,MAAAZ,MAAA,GAAAN,2DAAA;MAAA,OAAAA,yDAAA,CAASM,MAAA,CAAAU,aAAA,EAAe;IAAA,EAAC;IAAChB,0DAAA,EAAI;;;;;IAchCA,4DAAA,YAAqE;IACnEA,oDAAA,iCACF;IAAAA,0DAAA,EAAQ;;;;;IACRA,4DAAA,YAAsE;IACpEA,oDAAA,kCACF;IAAAA,0DAAA,EAAQ;;;;;IAPVA,4DAAA,cACoB;IAIlBA,wDAHA,IAAAoB,kEAAA,oBAAqE,IAAAC,kEAAA,oBAGC;IAGxErB,0DAAA,EAAM;;;;;;IANIA,uDAAA,EAA2D;IAA3DA,wDAAA,UAAAuB,OAAA,GAAAjB,MAAA,CAAAkB,oBAAA,CAAAC,GAAA,0BAAAF,OAAA,CAAAG,MAAA,kBAAAH,OAAA,CAAAG,MAAA,aAA2D;IAG3D1B,uDAAA,EAA4D;IAA5DA,wDAAA,UAAA2B,OAAA,GAAArB,MAAA,CAAAkB,oBAAA,CAAAC,GAAA,0BAAAE,OAAA,CAAAD,MAAA,kBAAAC,OAAA,CAAAD,MAAA,cAA4D;;;;;IAclE1B,4DAAA,YAAoE;IAChEA,oDAAA,gCACJ;IAAAA,0DAAA,EAAQ;;;;;IAJVA,4DAAA,cACkB;IAChBA,wDAAA,IAAA4B,kEAAA,oBAAoE;IAGxE5B,0DAAA,EAAM;;;;;IAHMA,uDAAA,EAA0D;IAA1DA,wDAAA,UAAAuB,OAAA,GAAAjB,MAAA,CAAAkB,oBAAA,CAAAC,GAAA,4BAAAF,OAAA,CAAAG,MAAA,kBAAAH,OAAA,CAAAG,MAAA,UAA0D;;;;;IAoCpE1B,4DAAA,YAAuD;IACrDA,oDAAA,GAEF;IAAAA,0DAAA,EAAQ;;;;;IAFNA,uDAAA,EAEF;IAFEA,gEAAA,4BAAA2B,OAAA,GAAArB,MAAA,CAAAkB,oBAAA,CAAAC,GAAA,2BAAAE,OAAA,CAAAG,KAAA,iBAAAxB,MAAA,CAAAyB,cAAA,EAAAJ,OAAA,GAAArB,MAAA,CAAAkB,oBAAA,CAAAC,GAAA,2BAAAE,OAAA,CAAAG,KAAA,EAAAE,OAAA,MAEF;;;;;IALFhC,4DAAA,cACkB;IAChBA,wDAAA,IAAAiC,kEAAA,oBAAuD;IAIzDjC,0DAAA,EAAM;;;;;IAJIA,uDAAA,EAA6C;IAA7CA,wDAAA,UAAAuB,OAAA,GAAAjB,MAAA,CAAAkB,oBAAA,CAAAC,GAAA,2BAAAF,OAAA,CAAAO,KAAA,CAA6C;;;;;;IA0D/D9B,4DAAA,cAAwE;IAGtEA,uDAAA,cAII;IAIAA,4DAFJ,cAAmD,cACxB,iBAC4B;IAAxBA,wDAAA,mBAAAkC,mFAAA;MAAAlC,2DAAA,CAAAmC,GAAA;MAAA,MAAA7B,MAAA,GAAAN,2DAAA;MAAA,OAAAA,yDAAA,CAASM,MAAA,CAAA8B,WAAA,EAAa;IAAA,EAAC;IAACpC,oDAAA,cAAO;IAC5DA,0DAD4D,EAAS,EAC/D;IAEJA,4DADF,cAAyB,iBAKmD;IAJjDA,wDAAA,mBAAAqC,mFAAA;MAAArC,2DAAA,CAAAmC,GAAA;MAAA,MAAA7B,MAAA,GAAAN,2DAAA;MAAA,OAAAA,yDAAA,CAASM,MAAA,CAAAgC,QAAA,EAAU;IAAA,EAAC;IAS3CtC,oDAAA,iBACF;IAGNA,0DAHM,EAAS,EACL,EACF,EACF;;;;IAXMA,uDAAA,GAA8E;IAE9EA,yDAFA,qBAAAM,MAAA,CAAAkB,oBAAA,CAAAgB,KAAA,2BAA8E,UAAAlC,MAAA,CAAAkB,oBAAA,CAAAgB,KAAA,2BACV,WAAAlC,MAAA,CAAAkB,oBAAA,CAAAgB,KAAA,yBACD;IAHnExC,wDAAA,aAAAM,MAAA,CAAAkB,oBAAA,CAAAiB,OAAA,CAAyC;;;;;;IAtJ/CzC,4DAPV,cAA8D,cACpC,cAES,cACC,cAE4E,SAClG;IAAAA,oDAAA,oCAA6B;IAAAA,0DAAA,EAAK;IACtCA,4DAAA,cAAgD;IAM9CA,wDALA,IAAA0C,uDAAA,gBAG8B,IAAAC,uDAAA,gBAKA;IAElC3C,0DADE,EAAM,EACF;IAIJA,4DAFF,eAA0B,eAEc;IACpCA,uDAAA,iBAGiD;IACjDA,4DAAA,iBAA+B;IAAAA,oDAAA,wBAAgB;IAAAA,0DAAA,EAAQ;IACvDA,wDAAA,KAAA4C,0DAAA,kBACoB;IAQtB5C,0DAAA,EAAM;IAENA,4DAAA,eAAsC;IACpCA,uDAAA,iBAGuC;IACvCA,4DAAA,iBAAiC;IAAAA,oDAAA,aAAK;IAAAA,0DAAA,EAAQ;IAC5CA,wDAAA,KAAA6C,0DAAA,kBACkB;IAOxB7C,0DAFE,EAAM,EAEF;IAKFA,4DAHJ,eAA0B,eAEc,kBAII;IAAhCA,wDAAA,oBAAA8C,8EAAAC,MAAA;MAAA/C,2DAAA,CAAAgD,GAAA;MAAA,MAAA1C,MAAA,GAAAN,2DAAA;MAAA,OAAAA,yDAAA,CAAUM,MAAA,CAAA2C,YAAA,CAAAF,MAAA,CAAoB;IAAA,EAAC;IACrC/C,4DAAA,kBAAmC;IAAAA,oDAAA,gCAAmB;IAAAA,0DAAA,EAAS;IAC/DA,4DAAA,kBAAqB;IAAAA,oDAAA,YAAI;IAAAA,0DAAA,EAAS;IAClCA,4DAAA,kBAAwB;IAAAA,oDAAA,yBAAO;IAAAA,0DAAA,EAAS;IACxCA,4DAAA,kBAA8B;IAAAA,oDAAA,0BAAa;IAC7CA,0DAD6C,EAAS,EAC7C;IACTA,4DAAA,iBAAgC;IAAAA,oDAAA,YAAI;IACtCA,0DADsC,EAAQ,EACxC;IAIJA,4DADF,eAAsC,iBAMA;IAA9BA,wDAAA,mBAAAkD,4EAAA;MAAAlD,2DAAA,CAAAgD,GAAA;MAAA,MAAA1C,MAAA,GAAAN,2DAAA;MAAA,OAAAA,yDAAA,CAASM,MAAA,CAAA6C,iBAAA,EAAmB;IAAA,EAAC;IALnCnD,0DAAA,EAKoC;IACpCA,4DAAA,iBAAqC;IAAAA,oDAAA,2BAAS;IAAAA,0DAAA,EAAQ;IAGtDA,wDAAA,KAAAoD,0DAAA,kBACkB;IAOtBpD,0DADE,EAAM,EACF;IAIJA,4DAFF,eAA0B,eAEc;IACpCA,uDAAA,iBAIwC;IACxCA,4DAAA,iBAAiC;IAAAA,oDAAA,aAAK;IACxCA,0DADwC,EAAQ,EAC1C;IAGRA,4DAAA,eAAsC;IACpCA,uDAAA,iBAI0C;IAC1CA,4DAAA,iBAAmC;IAAAA,oDAAA,eAAO;IAOhDA,0DAPgD,EAAQ,EAC9C,EAGF,EAEA,EACF;IAyBNA,wDAAA,KAAAqD,0DAAA,kBAAwE;IA8B5ErD,0DADE,EAAM,EACF;;;;;;;IAnKUA,uDAAA,GAAgB;IAAhBA,wDAAA,UAAAM,MAAA,CAAAgD,SAAA,CAAgB;IAKhBtD,uDAAA,EAAe;IAAfA,wDAAA,SAAAM,MAAA,CAAAgD,SAAA,CAAe;IAebtD,uDAAA,GAA0F;IAA1FA,wDAAA,WAAA2B,OAAA,GAAArB,MAAA,CAAAkB,oBAAA,CAAAC,GAAA,0BAAAE,OAAA,CAAAc,OAAA,OAAAd,OAAA,GAAArB,MAAA,CAAAkB,oBAAA,CAAAC,GAAA,0BAAAE,OAAA,CAAA4B,OAAA,EAA0F;IAiBxFvD,uDAAA,GAA8F;IAA9FA,wDAAA,WAAAwD,OAAA,GAAAlD,MAAA,CAAAkB,oBAAA,CAAAC,GAAA,4BAAA+B,OAAA,CAAAf,OAAA,OAAAe,OAAA,GAAAlD,MAAA,CAAAkB,oBAAA,CAAAC,GAAA,4BAAA+B,OAAA,CAAAD,OAAA,EAA8F;IAoChGvD,uDAAA,IAAkH;IAAlHA,wDAAA,WAAAyD,OAAA,GAAAnD,MAAA,CAAAkB,oBAAA,CAAAC,GAAA,gCAAAgC,OAAA,CAAAF,OAAA,OAAAE,OAAA,GAAAnD,MAAA,CAAAkB,oBAAA,CAAAC,GAAA,gCAAAgC,OAAA,CAAA/B,MAAA,kBAAA+B,OAAA,CAAA/B,MAAA,aAAkH;IA4DzE1B,uDAAA,IAAe;IAAfA,wDAAA,SAAAM,MAAA,CAAAgD,SAAA,CAAe;;;;;IAyDtEtD,4DAAA,WAA2B;IACzBA,uDAAA,YAA4B;IAACA,oDAAA,GAC/B;;IAAAA,0DAAA,EAAO;;;;IADwBA,uDAAA,GAC/B;IAD+BA,gEAAA,MAAAA,yDAAA,OAAA2D,SAAA,CAAAC,KAAA,OAC/B;;;;;IACA5D,4DAAA,WAA+B;IAC7BA,uDAAA,YAA6B;IAACA,oDAAA,GAChC;IAAAA,0DAAA,EAAO;;;;IADyBA,uDAAA,GAChC;IADgCA,gEAAA,MAAA2D,SAAA,CAAAE,SAAA,MAChC;;;;;;IAZN7D,4DAAA,cAAuJ;IAAvFA,wDAAA,mBAAA8D,+EAAA;MAAA,MAAAH,SAAA,GAAA3D,2DAAA,CAAA+D,GAAA,EAAAC,SAAA;MAAA,MAAA1D,MAAA,GAAAN,2DAAA;MAAA,OAAAA,yDAAA,CAASM,MAAA,CAAA2D,gBAAA,CAAAN,SAAA,CAAAO,EAAA,CAA2B;IAAA,EAAC;IACnGlE,4DAAA,cAAoB;IAClBA,uDAAA,cAAoD;IACtDA,0DAAA,EAAM;IAEJA,4DADF,cAAkB,cACE;IAAAA,oDAAA,GAA+C;IAAAA,0DAAA,EAAM;IACvEA,4DAAA,cAAqB;IAInBA,wDAHA,IAAAmE,gEAAA,mBAA2B,IAAAC,gEAAA,mBAGI;IAKrCpE,0DAFI,EAAM,EACF,EACF;;;;;IAfgGA,yDAAA,aAAA2D,SAAA,CAAAO,EAAA,KAAA5D,MAAA,CAAAgE,eAAA,CAAgD;IAKhItE,uDAAA,GAA+C;IAA/CA,+DAAA,CAAA2D,SAAA,CAAAa,UAAA,yBAA+C;IAExDxE,uDAAA,GAAkB;IAAlBA,wDAAA,SAAA2D,SAAA,CAAAC,KAAA,CAAkB;IAGlB5D,uDAAA,EAAsB;IAAtBA,wDAAA,SAAA2D,SAAA,CAAAE,SAAA,CAAsB;;;;;IAXrC7D,4DAAA,cAAgF;IAC9EA,wDAAA,IAAAyE,yDAAA,kBAAuJ;IAgBzJzE,0DAAA,EAAM;;;;IAhBwCA,uDAAA,EAAkB;IAAlBA,wDAAA,YAAAM,MAAA,CAAAoE,eAAA,CAAkB;;;;;IAmB9D1E,4DAAA,cAA4B;IAC1BA,uDAAA,YAA6B;IAC7BA,4DAAA,QAAG;IAAAA,oDAAA,wDAAuC;IAC5CA,0DAD4C,EAAI,EAC1C;;;ADnON,MAAO2E,mCAAmC;EA+B9CC,YACUC,aAA4B,EAC5BC,MAAc,EACdC,KAAqB,EACrBC,EAAe,EACfC,uBAAgD,EAChDC,YAA2B;IAL3B,KAAAL,aAAa,GAAbA,aAAa;IACb,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,EAAE,GAAFA,EAAE;IACF,KAAAC,uBAAuB,GAAvBA,uBAAuB;IACvB,KAAAC,YAAY,GAAZA,YAAY;IApCtB,KAAAZ,eAAe,GAAkB,IAAI;IAErC,KAAA/D,YAAY,GAAW,EAAE;IACzB,KAAA4E,eAAe,GAAW,EAAE;IAC5B,KAAA3E,cAAc,GAAG,EAAE;IACnB,KAAA4E,UAAU,GAAG,IAAI;IACjB,KAAAC,YAAY,GAAG,KAAK;IACpB,KAAAC,SAAS,GAAG,KAAK;IACjB,KAAAC,OAAO,GAAc,EAAE;IACvB,KAAAC,SAAS,GAAG,YAAY;IACxB,KAAAC,aAAa,GAAmB,KAAK;IACrC,KAAAC,kBAAkB,GAAG,KAAK;IAC1B,KAAAC,eAAe,GAAG,0BAA0B;IAC5C,KAAAC,MAAM,GAAY;MAChBC,gBAAgB,EAAE,EAAE,CAAC;KACX;IACZ,KAAAnB,eAAe,GAAc,EAAE;IAC/B,KAAAoB,SAAS,GAAW,EAAE;IACtB,KAAAC,cAAc,GAAW,CAAC;IAC1B,KAAAC,SAAS,GAAG,KAAK;IACjB,KAAA1C,SAAS,GAAY,KAAK;IAC1B,KAAA2C,SAAS,GAAG,IAAIzG,uDAAW,EAAE;IAE7B;IACA,KAAAuC,cAAc,GAAgF;MAC9F,MAAM,EAAE;QAAE+D,SAAS,EAAE,OAAO;QAAEI,QAAQ,EAAE,CAAC;QAAElE,OAAO,EAAE;MAAe,CAAE;MACrE,SAAS,EAAE;QAAE8D,SAAS,EAAE,OAAO;QAAEI,QAAQ,EAAE,CAAC;QAAElE,OAAO,EAAE;MAAgB,CAAE;MACzE,gBAAgB,EAAE;QAAE8D,SAAS,EAAE,OAAO;QAAEI,QAAQ,EAAE,EAAE;QAAElE,OAAO,EAAE;MAAiB;KACjF;EASI;EAEHmE,QAAQA,CAAA;IACN;IACA,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;IACxD,IAAI,CAAClB,UAAU,GAAGgB,SAAS,KAAK,MAAM;IACtC,IAAI,CAACG,cAAc,EAAE;IACrB,MAAMrC,EAAE,GAAG,CAAC,IAAI,CAACa,KAAK,CAACyB,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;IAC5C,IAAI,CAACnC,eAAe,GAAGJ,EAAE;IACzB,IAAI,CAACwC,SAAS,CAACxC,EAAE,CAAC;IAClB,IAAI,CAACyC,iBAAiB,EAAE;IACxB,IAAI,CAACV,SAAS,CAACW,OAAO,EAAE;EAC1B;EAEA3D,YAAYA,CAAC4D,KAAU;IACvB,MAAMC,eAAe,GAAGD,KAAK,CAACE,MAAM,CAACjF,KAAK;IAC1C,MAAMkF,QAAQ,GAAG,IAAI,CAACjF,cAAc,CAAC+E,eAAe,CAAC;IAErD,IAAIE,QAAQ,EAAE;MACZ,IAAI,CAAClB,SAAS,GAAGkB,QAAQ,CAAClB,SAAS;MAEnC;MACA,IAAI,CAACmB,oBAAoB,CAACD,QAAQ,CAACd,QAAQ,CAAC;MAE5C;MACA,MAAMgB,gBAAgB,GAAG,IAAI,CAAC1F,oBAAoB,CAACC,GAAG,CAAC,WAAW,CAAC;MACnE,IAAI,CAACyF,gBAAgB,EAAEpF,KAAK,CAACqF,UAAU,CAAC,IAAI,CAACrB,SAAS,CAAC,EAAE;QACvDoB,gBAAgB,EAAEE,QAAQ,CAAC,IAAI,CAACtB,SAAS,CAAC;MAC5C;IACF;EACF;EAEA3C,iBAAiBA,CAAA;IACf,MAAM+D,gBAAgB,GAAG,IAAI,CAAC1F,oBAAoB,CAACC,GAAG,CAAC,WAAW,CAAC;IACnE,IAAI4F,MAAM,GAAGH,gBAAgB,EAAEpF,KAAK,IAAI,EAAE;IAE1C,IAAI,IAAI,CAACgE,SAAS,IAAI,CAACuB,MAAM,CAACF,UAAU,CAAC,IAAI,CAACrB,SAAS,CAAC,EAAE;MACxD;MACAoB,gBAAgB,EAAEE,QAAQ,CAAC,IAAI,CAACtB,SAAS,CAAC;MAC1C;IACF;IAEA;IACA,MAAMwB,QAAQ,GAAGD,MAAM,CAACE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;IAE1C;IACAL,gBAAgB,EAAEE,QAAQ,CACxB,IAAI,CAACtB,SAAS,GAAGwB,QAAQ,CAACE,KAAK,CAAC,IAAI,CAAC1B,SAAS,CAACyB,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAACE,MAAM,CAAC,CAC1E;EACH;EAEAR,oBAAoBA,CAACf,QAAgB;IACnC,MAAMwB,KAAK,GAAG,IAAIC,MAAM,CAAC,IAAI,IAAI,CAAC7B,SAAS,CAACyB,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,OAAOrB,QAAQ,IAAI,CAAC;IAEnF,IAAI,CAAC1E,oBAAoB,CAACC,GAAG,CAAC,WAAW,CAAC,EAAEmG,aAAa,CAAC,CACxDjI,sDAAU,CAACkI,OAAO,CAACH,KAAK,CAAC,CAC1B,CAAC;IAEF,IAAI,CAAClG,oBAAoB,CAACC,GAAG,CAAC,WAAW,CAAC,EAAEqG,sBAAsB,EAAE;EACtE;EAEEnB,iBAAiBA,CAAA;IACf,IAAI,CAACnF,oBAAoB,GAAG,IAAI,CAACwD,EAAE,CAAC+C,KAAK,CAAC;MACxCC,GAAG,EAAE,CAAC,EAAE,EAAE,CAACrI,sDAAU,CAACsI,QAAQ,EAAEtI,sDAAU,CAACuI,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MACzDtE,KAAK,EAAE,CAAC,EAAE,EAAE,CAACjE,sDAAU,CAACiE,KAAK,CAAC,CAAC;MAC/BC,SAAS,EAAE,CAAC,EAAE,EAAE,CAAClE,sDAAU,CAACkI,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;MAC9CM,OAAO,EAAE,CAAC,EAAE,CAAC;MACbC,IAAI,EAAE,CAAC,EAAE,CAAC;MACVC,KAAK,EAAE,CAAC,EAAE,CAAC;MACXC,OAAO,EAAE,CAAC,EAAE;KACb,CAAC;EACJ;EAEA;EACA5B,SAASA,CAACxC,EAAU;IAClB,IAAI,CAACW,aAAa,CAAC0D,aAAa,CAACrE,EAAE,CAAC,CAACsE,SAAS,CAAC;MAC7CC,IAAI,EAAG7C,MAAM,IAAI;QACf,IAAI,CAACA,MAAM,GAAGA,MAAM;QACpB,IAAI,CAAC8C,cAAc,EAAE;QAErB;QACA,IAAI,CAACC,kBAAkB,EAAE;MAC3B,CAAC;MACDC,KAAK,EAAGC,GAAG,IAAKC,OAAO,CAACF,KAAK,CAAC,iCAAiC,EAAEC,GAAG;KACrE,CAAC;EACJ;EAEA;EACAF,kBAAkBA,CAAA;IAChB,IAAI,CAAC,IAAI,CAAC/C,MAAM,EAAEC,gBAAgB,EAAE3B,EAAE,EAAE;IAExC,MAAM6E,YAAY,GAAG,IAAI,CAACnD,MAAM,CAACC,gBAAgB,CAAC3B,EAAE;IAEpD,IAAI,CAACW,aAAa,CAACmE,sBAAsB,CAACD,YAAY,CAAC,CAACP,SAAS,CAAC;MAChEC,IAAI,EAAGlD,OAAO,IAAI;QAChB,IAAI,CAACb,eAAe,GAAGa,OAAO;MAChC,CAAC;MACDqD,KAAK,EAAGC,GAAG,IAAI;QACbC,OAAO,CAACF,KAAK,CAAC,sDAAsD,EAAEC,GAAG,CAAC;MAC5E;KACD,CAAC;EACJ;EAEAI,UAAUA,CAACC,QAAyB;IAClC,IAAI,CAAC9D,UAAU,GAAG8D,QAAQ,KAAK,MAAM;IACrC,IAAI,CAAC7D,YAAY,GAAG,IAAI;IAExB;IACAgB,YAAY,CAAC8C,OAAO,CAAC,gBAAgB,EAAED,QAAQ,CAAC;EAClD;EAEAR,cAAcA,CAAA;IACZ,IAAI,IAAI,CAAC9C,MAAM,EAAEC,gBAAgB,EAAE;MACjC,IAAI,CAACrE,oBAAoB,CAAC4H,UAAU,CAAC;QACnCpB,GAAG,EAAE,IAAI,CAACpC,MAAM,CAACC,gBAAgB,CAACmC,GAAG,IAAI,EAAE;QAC3CpE,KAAK,EAAE,IAAI,CAACgC,MAAM,CAACC,gBAAgB,CAACjC,KAAK,IAAI,EAAE;QAC/CC,SAAS,EAAE,IAAI,CAAC+B,MAAM,CAACC,gBAAgB,CAAChC,SAAS,IAAI,EAAE;QACvDsE,OAAO,EAAE,IAAI,CAACvC,MAAM,CAACC,gBAAgB,CAACsC,OAAO,IAAI,EAAE;QACnDC,IAAI,EAAE,IAAI,CAACxC,MAAM,CAACC,gBAAgB,CAACuC,IAAI,IAAI,EAAE;QAC7CC,KAAK,EAAE,IAAI,CAACzC,MAAM,CAACC,gBAAgB,CAACwC,KAAK,IAAI,EAAE;QAC/CC,OAAO,EAAE,IAAI,CAAC1C,MAAM,CAACC,gBAAgB,CAACyC,OAAO,IAAI;OAElD,CAAC;MAEF;MACA,IAAI,IAAI,CAAC1C,MAAM,CAACC,gBAAgB,CAACuC,IAAI,IAAI,IAAI,CAACrG,cAAc,CAAC,IAAI,CAAC6D,MAAM,CAACC,gBAAgB,CAACuC,IAAI,CAAC,EAAE;QAC3F,IAAI,CAACtC,SAAS,GAAG,IAAI,CAAC/D,cAAc,CAAC,IAAI,CAAC6D,MAAM,CAACC,gBAAgB,CAACuC,IAAI,CAAC,CAACtC,SAAS;QACjF,IAAI,CAACmB,oBAAoB,CAAC,IAAI,CAAClF,cAAc,CAAC,IAAI,CAAC6D,MAAM,CAACC,gBAAgB,CAACuC,IAAI,CAAC,CAAClC,QAAQ,CAAC;MAC5F;MAEA;MACA,IAAI,CAAC1E,oBAAoB,CAAC4H,UAAU,CAAC;QACnCvF,SAAS,EAAE,IAAI,CAAC+B,MAAM,CAACC,gBAAgB,CAAChC,SAAS,IAAI,IAAI,CAACiC;OAC3D,CAAC;IACJ;EACN;EAEA;EACDS,cAAcA,CAAA;IACb,IAAI,CAACrB,YAAY,CAACmE,mBAAmB,EAAE,CAACC,IAAI,CAC1C1J,+CAAS,CAAC2J,KAAK,IAAG;MAChB,IAAI,CAACA,KAAK,EAAE;QACVT,OAAO,CAACF,KAAK,CAAC,yBAAyB,CAAC;QACxC,OAAO/I,gDAAU,CAAC,MAAM,IAAI2J,KAAK,CAAC,oBAAoB,CAAC,CAAC;MAC1D;MACA,OAAO,IAAI,CAAC3E,aAAa,CAAC0B,cAAc,EAAE;IAC5C,CAAC,CAAC,CACH,CAACiC,SAAS,CAAC;MACVC,IAAI,EAAGgB,IAAI,IAAI;QACbX,OAAO,CAACY,GAAG,CAAC,iBAAiB,EAAED,IAAI,CAAC;QAEpC,IAAI,CAAClE,OAAO,GAAGkE,IAAI,CAACE,GAAG,CAAC/D,MAAM,KAAK;UACjC,GAAGA,MAAM;UACTC,gBAAgB,EAAED,MAAM,CAACC,gBAAgB,GAAG;YAC1C3B,EAAE,EAAE0B,MAAM,CAACC,gBAAgB,CAAC3B,EAAE;YAC9B8D,GAAG,EAAEpC,MAAM,CAACC,gBAAgB,CAACmC;WAC9B,GAAG;SACL,CAAC,CAAC;QAEH;QACA,IAAI,CAACzC,OAAO,GAAG,IAAI,CAACA,OAAO,CAACqE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,CAACA,CAAC,CAAC5F,EAAE,IAAI,CAAC,KAAK2F,CAAC,CAAC3F,EAAE,IAAI,CAAC,CAAC,CAAC;QAErE,IAAI,IAAI,CAACqB,OAAO,CAACkC,MAAM,GAAG,CAAC,EAAE;UAC3BqB,OAAO,CAACY,GAAG,CAAC,oBAAoB,EAAE,IAAI,CAACnE,OAAO,CAAC,CAAC,CAAC,CAAC;UAClDuD,OAAO,CAACY,GAAG,CAAC,sBAAsB,EAAE,IAAI,CAACnE,OAAO,CAAC,CAAC,CAAC,CAACM,gBAAgB,CAAC;QACvE;QAEAiD,OAAO,CAACY,GAAG,CAAC,+BAA+B,EAAE,IAAI,CAACnE,OAAO,CAAC;MAC5D,CAAC;MACDqD,KAAK,EAAGC,GAAG,IAAI;QACbC,OAAO,CAACF,KAAK,CAAC,8CAA8C,EAAEC,GAAG,CAAC;MACpE;KACD,CAAC;EACJ;EAGE;EACA5E,gBAAgBA,CAAC8F,QAAgB;IAC/B,IAAI,CAACjF,MAAM,CAACkF,QAAQ,CAAC,CAAC,gBAAgB,EAAED,QAAQ,CAAC,CAAC;EACpD;EAEA;EACAE,0BAA0BA,CAACF,QAAgB,EAAElD,KAAiB;IAC5DA,KAAK,CAACqD,eAAe,EAAE;IACvB,IAAI,CAACpF,MAAM,CAACkF,QAAQ,CAAC,CAAC,2BAA2B,EAAED,QAAQ,CAAC,CAAC;EAC/D;EAEC;EACAI,SAASA,CAAA;IAAK,IAAI,CAAC7E,SAAS,GAAG,IAAI;EAAE;EACrC8E,UAAUA,CAAA;IAAK,IAAI,CAAC9E,SAAS,GAAG,KAAK;EAAE;EAExClD,WAAWA,CAAA;IACP,IAAI,CAAC0C,MAAM,CAACkF,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;EACtC;EAEA1H,QAAQA,CAAA;IACN,IAAI,CAAC,IAAI,CAACgB,SAAS,EAAE;IACnB,IAAI,CAAC/C,YAAY,GAAG,EAAE;IACtB,IAAI,CAACC,cAAc,GAAG,EAAE;IAExB;IACA,IAAI,CAACwF,SAAS,GAAG,IAAI;IAErB;IACAqE,UAAU,CAAC,MAAK;MACZ,IAAI,IAAI,CAAC7I,oBAAoB,CAACgB,KAAK,IAAI,IAAI,CAACoD,MAAM,EAAEC,gBAAgB,EAAE3B,EAAE,EAAE;QACtE,MAAMoG,iBAAiB,GAAG,IAAI,CAACC,WAAW,EAAE;QAE5C,IAAI,CAACtF,uBAAuB,CAACuF,sBAAsB,CACnD,IAAI,CAAC5E,MAAM,CAACC,gBAAgB,CAAC3B,EAAE,EAC/BoG,iBAAiB,CAChB,CAAC9B,SAAS,CAAC;UACZC,IAAI,EAAG6B,iBAAiB,IAAI;YACxBxB,OAAO,CAACY,GAAG,CAAC,yBAAyB,EAAEY,iBAAiB,CAAC;YACzD,IAAI,CAAC1E,MAAM,CAACC,gBAAgB,GAAG;cAC/B,GAAG,IAAI,CAACD,MAAM,CAACC,gBAAgB;cAC/B,GAAGyE;aACF;YAED;YACA,IAAI,CAAC9J,cAAc,GAAG,sCAAsC;YAE5D;YACA,IAAI,CAACkG,SAAS,CAAC,IAAI,CAACd,MAAM,CAAC1B,EAAG,CAAC;YAE/B,IAAI,CAACZ,SAAS,GAAG,KAAK;YACtB;YACA,IAAI,CAAC0C,SAAS,GAAG,KAAK;YAEtB;YACAqE,UAAU,CAAC,MAAK;cACZ,IAAI,CAAC7J,cAAc,GAAG,EAAE;YAC5B,CAAC,EAAE,IAAI,CAAC;UACZ,CAAC;UACDoI,KAAK,EAAGC,GAAG,IAAI;YACXC,OAAO,CAACF,KAAK,CAAC,gCAAgC,EAAEC,GAAG,CAAC;YACpD,IAAI,CAACtI,YAAY,GAAGsI,GAAG,CAACD,KAAK,EAAE6B,OAAO,IAAI,gCAAgC;YAC1E,IAAI,CAACzE,SAAS,GAAG,KAAK;UAC1B;SACC,CAAC;MACN,CAAC,MAAM;QACH,IAAI,CAACzF,YAAY,GAAG,kDAAkD;QACtE,IAAI,CAACyF,SAAS,GAAG,KAAK;MAC1B;IACJ,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;EACd;EAEQuE,WAAWA,CAAA;IACjB,OAAO;MACLrG,EAAE,EAAE,IAAI,CAAC0B,MAAM,CAACC,gBAAgB,EAAE3B,EAAE;MACpC8D,GAAG,EAAE,IAAI,CAACxG,oBAAoB,CAACC,GAAG,CAAC,KAAK,CAAC,EAAEK,KAAK;MAChDsG,IAAI,EAAE,IAAI,CAACxC,MAAM,CAACC,gBAAgB,EAAEuC,IAAI;MACxCxE,KAAK,EAAE,IAAI,CAACpC,oBAAoB,CAACC,GAAG,CAAC,OAAO,CAAC,EAAEK,KAAK;MACpD+B,SAAS,EAAE,IAAI,CAACrC,oBAAoB,CAACC,GAAG,CAAC,WAAW,CAAC,EAAEK,KAAK;MAC5DqG,OAAO,EAAE,IAAI,CAAC3G,oBAAoB,CAACC,GAAG,CAAC,SAAS,CAAC,EAAEK,KAAK;MACxDuG,KAAK,EAAE,IAAI,CAACzC,MAAM,CAACC,gBAAgB,EAAEwC,KAAK;MAC1CC,OAAO,EAAE,IAAI,CAAC1C,MAAM,CAACC,gBAAgB,EAAEyC,OAAO;MAC9CoC,IAAI,EAAE,IAAI,CAAC9E,MAAM,CAACC,gBAAgB,EAAE6E,IAAI;MACxCC,GAAG,EAAE,IAAI,CAAC/E,MAAM,CAACC,gBAAgB,EAAE8E,GAAG;MACtCC,IAAI,EAAE,IAAI,CAAChF,MAAM,CAACC,gBAAgB,EAAE+E,IAAI;MACxCC,MAAM,EAAE,IAAI,CAACjF,MAAM,CAACC,gBAAgB,EAAEgF,MAAM;MAC5CC,IAAI,EAAE,IAAI,CAAClF,MAAM,CAACC,gBAAgB,EAAEiF,IAAI;MACxCC,OAAO,EAAE,IAAI,CAACnF,MAAM,CAACC,gBAAgB,EAAEkF,OAAO;MAC9CC,UAAU,EAAE,IAAI,CAACpF,MAAM,CAACC,gBAAgB,EAAEmF,UAAU;MACpDC,aAAa,EAAE,IAAI,CAACrF,MAAM,CAACC,gBAAgB,EAAEoF,aAAa;MAC1DC,OAAO,EAAE,IAAI,CAACtF,MAAM,CAACC,gBAAgB,EAAEqF,OAAO;MAC9CC,OAAO,EAAE,IAAI,CAACvF,MAAM,CAACC,gBAAgB,EAAEsF,OAAO;MAC9CC,OAAO,EAAE,IAAI,CAACxF,MAAM,CAACC,gBAAgB,EAAEuF,OAAO;MAC9CC,WAAW,EAAE,IAAI,CAACzF,MAAM,CAACC,gBAAgB,EAAEwF,WAAW;MACtDC,SAAS,EAAE,IAAI,CAAC1F,MAAM,CAACC,gBAAgB,EAAEyF;KAG1C;EACH;EAEAC,YAAYA,CAAA;IACV,IAAI,CAACzG,MAAM,CAACkF,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;EACpC;EAEAhJ,aAAaA,CAAA;IACX,IAAI,CAACsC,SAAS,GAAG,CAAC,IAAI,CAACA,SAAS;IAEhC,IAAI,IAAI,CAACA,SAAS,EAAE;MAClB;MACA,IAAI,CAAC9B,oBAAoB,CAACgK,MAAM,EAAE;MAClC,IAAI,CAACvF,SAAS,CAACuF,MAAM,EAAE;IACzB,CAAC,MAAM;MACL;MACA,IAAI,CAAChK,oBAAoB,CAACoF,OAAO,EAAE;MACnC,IAAI,CAACX,SAAS,CAACW,OAAO,EAAE;IAE1B;EACF;;;uCA1UWjC,mCAAmC,EAAA3E,+DAAA,CAAA0L,mEAAA,GAAA1L,+DAAA,CAAA4L,mDAAA,GAAA5L,+DAAA,CAAA4L,2DAAA,GAAA5L,+DAAA,CAAA+L,uDAAA,GAAA/L,+DAAA,CAAAiM,yFAAA,GAAAjM,+DAAA,CAAAmM,iEAAA;IAAA;EAAA;;;YAAnCxH,mCAAmC;MAAA0H,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,6CAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;;UCtBhD3M,4DAAA,aAA6B;UAO3BA,wDALA,IAAA6M,kDAAA,iBAA0E,IAAAC,kDAAA,iBAKI;UAGhF9M,0DAAA,EAAM;UAENA,4DAAA,aAA8B;UAE5BA,wDAAA,IAAA+M,kDAAA,iBAA+C;UAYzC/M,4DALN,aAAgC,aACN,cACgD,WAG6D;UAArGA,wDAAA,mBAAAgN,gEAAA;YAAAhN,2DAAA,CAAAiN,GAAA;YAAA,OAAAjN,yDAAA,CAAS4M,GAAA,CAAArB,YAAA,EAAc;UAAA,EAAC;UAChDvL,uDAAA,YAAoC;UAACA,4DAAA,gBAAiD;UAAAA,oDAAA,eAAO;UACjGA,0DADiG,EAAO,EACpG;UAOJA,wDAAA,KAAAkN,mDAAA,mBAA8D;UA+KpElN,0DAFI,EAAO,EACH,EACF;UASFA,4DAPJ,eAA6C,eAMf,cACI;UAC5BA,oDAAA,kDAA+B;UAAAA,uDAAA,UAAI;UACnCA,4DAAA,kBAAwD;UAAAA,oDAAA,IAAuD;UACjHA,0DADiH,EAAS,EACrH;UACLA,4DAAA,eAAmB;UAAAA,oDAAA,IAA4B;UACjDA,0DADiD,EAAM,EACjD;UAqBNA,wDAnBA,KAAAmN,mDAAA,kBAAgF,KAAAC,2DAAA,gCAAApN,oEAAA,CAmBxD;UAO5BA,0DADE,EAAM,EACF;;;;UA1PEA,uDAAA,EAAkB;UAAlBA,wDAAA,SAAA4M,GAAA,CAAArM,YAAA,CAAkB;UAKlBP,uDAAA,EAAoB;UAApBA,wDAAA,SAAA4M,GAAA,CAAApM,cAAA,CAAoB;UAOpBR,uDAAA,GAAe;UAAfA,wDAAA,SAAA4M,GAAA,CAAA5G,SAAA,CAAe;UASXhG,uDAAA,GAAkC;UAAlCA,wDAAA,cAAA4M,GAAA,CAAApL,oBAAA,CAAkC;UAYRxB,uDAAA,GAA8B;UAA9BA,wDAAA,SAAA4M,GAAA,CAAAhH,MAAA,kBAAAgH,GAAA,CAAAhH,MAAA,CAAAC,gBAAA,CAA8B;UA0LJ7F,uDAAA,GAAuD;UAAvDA,+DAAA,CAAA4M,GAAA,CAAAhH,MAAA,CAAAC,gBAAA,CAAAmC,GAAA,uBAAuD;UAE9FhI,uDAAA,GAA4B;UAA5BA,+DAAA,CAAA4M,GAAA,CAAAlI,eAAA,CAAA+C,MAAA,CAA4B;UAGnBzH,uDAAA,EAAkC;UAAAA,wDAAlC,SAAA4M,GAAA,CAAAlI,eAAA,CAAA+C,MAAA,KAAkC,aAAA6F,YAAA,CAAc;;;qBDpN9E7N,uDAAW,EAAAsM,4DAAA,EAAAA,0DAAA,EAAAA,sEAAA,EAAAA,gEAAA,EAAAA,sEAAA,EAAAA,2DAAA,EAAAA,gEAAA,EACXjM,yDAAY,EAAAgO,oDAAA,EAAAA,iDAAA,EACZpO,+DAAmB,EAAAqM,8DAAA,EAAAA,2DAAA,EACnBhM,0EAAiB;MAAAoO,MAAA;IAAA;EAAA","sources":["./src/app/admin-page/clients/detail-edit-entreprise-client/detail-edit-entreprise-client.component.ts","./src/app/admin-page/clients/detail-edit-entreprise-client/detail-edit-entreprise-client.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ClientService } from '../../SERVICES/client-service';\nimport { FormBuilder, FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Subject, switchMap, throwError } from 'rxjs';\nimport { EntrepriseClientService } from '../../SERVICES/entreprise-clients-service';\nimport { CommonModule } from '@angular/common';\nimport { Clients } from '../../MODELS/clients-model';\nimport { Entreprise } from '../../MODELS/entreprise-model';\nimport { TruncateEmailPipe } from '../../MODELS/truncate-email.pipe';\nimport { UsersService } from '../../SERVICES/users.service';\n\n@Component({\n  selector: 'app-detail-edit-entreprise-client',\n  imports: [\n    FormsModule,\n    CommonModule,\n    ReactiveFormsModule,\n    TruncateEmailPipe,\n  ],\n  templateUrl: './detail-edit-entreprise-client.component.html',\n  styleUrl: './detail-edit-entreprise-client.component.scss'\n})\nexport class DetailEditEntrepriseClientComponent {\n  currentClientId: number | null = null;\n  entrepriseClientForm!: FormGroup;\n  errorMessage: string = '';\n  errorMessageApi: string = '';\n  successMessage = '';\n  isListView = true;\n  showDropdown = false;\n  showPopup = false;\n  clients: Clients[] = [];\n  sortField = 'nomComplet';\n  sortDirection: 'asc' | 'desc' = 'asc';\n  noClientsAvailable = false;\n  messageNoClient = 'Aucun client disponible.';\n  client: Clients = {\n    entrepriseClient: {} // Initialisation par défaut\n  } as Clients;\n  clientsAffilies: Clients[] = [];\n  indicatif: string = '';\n  maxPhoneLength: number = 0;\n  isLoading = false;\n  isEditing: boolean = false;\n  myControl = new FormControl();\n  \n  // Définissez les indicatifs par pays\n  paysIndicatifs: { [key: string]: { indicatif: string, longueur: number, exemple: string } } = {\n  'Mali': { indicatif: '+223 ', longueur: 8, exemple: '+223 12345678' },\n  'Sénégal': { indicatif: '+221 ', longueur: 9, exemple: '+221 123456789' },\n  'Côte d\\'Ivoire': { indicatif: '+225 ', longueur: 10, exemple: '+225 0123456789' }\n};\n\n  constructor(\n    private clientService: ClientService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private fb: FormBuilder,\n    private entrepriseClientService: EntrepriseClientService,\n    private usersService : UsersService\n  ) {}\n\n  ngOnInit() {\n    // Récupérer la préférence depuis le localStorage\n    const savedView = localStorage.getItem('viewPreference');\n    this.isListView = savedView !== 'grid'; \n    this.getListClients();\n    const id = +this.route.snapshot.params['id'];\n    this.currentClientId = id;\n    this.getClient(id);\n    this.getFormEntreprise();\n    this.myControl.disable();\n  }\n\n  onPaysChange(event: any): void {\n  const paysSelectionne = event.target.value;\n  const paysInfo = this.paysIndicatifs[paysSelectionne];\n  \n  if (paysInfo) {\n    this.indicatif = paysInfo.indicatif;\n    \n    // Mettre à jour le validateur\n    this.updatePhoneValidator(paysInfo.longueur);\n    \n    // Mettre à jour la valeur du téléphone\n    const telephoneControl = this.entrepriseClientForm.get('telephone');\n    if (!telephoneControl?.value.startsWith(this.indicatif)) {\n      telephoneControl?.setValue(this.indicatif);\n    }\n  }\n}\n\nformatPhoneNumber(): void {\n  const telephoneControl = this.entrepriseClientForm.get('telephone');\n  let valeur = telephoneControl?.value || '';\n  \n  if (this.indicatif && !valeur.startsWith(this.indicatif)) {\n    // Réinitialiser si l'indicatif est modifié manuellement\n    telephoneControl?.setValue(this.indicatif);\n    return;\n  }\n\n  // Nettoyer les caractères non numériques\n  const chiffres = valeur.replace(/\\D/g, '');\n  \n  // Réappliquer l'indicatif + chiffres\n  telephoneControl?.setValue(\n    this.indicatif + chiffres.slice(this.indicatif.replace(/\\D/g, '').length)\n  );\n}\n\nupdatePhoneValidator(longueur: number): void {\n  const regex = new RegExp(`^${this.indicatif.replace('+', '\\\\+')}\\\\d{${longueur}}$`);\n  \n  this.entrepriseClientForm.get('telephone')?.setValidators([\n    Validators.pattern(regex)\n  ]);\n  \n  this.entrepriseClientForm.get('telephone')?.updateValueAndValidity();\n}\n\n  getFormEntreprise() {\n    this.entrepriseClientForm = this.fb.group({\n      nom: ['', [Validators.required, Validators.minLength(2)]],\n      email: ['', [Validators.email]],\n      telephone: ['', [Validators.pattern(/^\\d+$/)]],\n      adresse: [''],\n      pays: [''],\n      siege: [''],\n      secteur: ['']\n    });\n  }\n\n  // Modifier getClient() pour récupérer les clients affiliés\n  getClient(id: number) {\n    this.clientService.getClientById(id).subscribe({\n      next: (client) => {\n        this.client = client;\n        this.initializeForm();\n        \n        // Filtrer les clients affiliés\n        this.getClientsAffilies();\n      },\n      error: (err) => console.error('Erreur lors de la récupération:', err)\n    });\n  }\n\n  // Nouvelle méthode pour récupérer les clients affiliés\n  getClientsAffilies() {\n    if (!this.client?.entrepriseClient?.id) return;\n    \n    const entrepriseId = this.client.entrepriseClient.id;\n    \n    this.clientService.getClientsByEntreprise(entrepriseId).subscribe({\n      next: (clients) => {\n        this.clientsAffilies = clients;\n      },\n      error: (err) => {\n        console.error('Erreur lors de la récupération des clients affiliés:', err);\n      }\n    });\n  }\n\n  toggleView(viewType: 'list' | 'grid') {\n    this.isListView = viewType === 'list';\n    this.showDropdown = true;\n    \n    // Stocker la préférence dans le localStorage\n    localStorage.setItem('viewPreference', viewType);\n  }\n\n  initializeForm() {\n    if (this.client?.entrepriseClient) {\n      this.entrepriseClientForm.patchValue({\n        nom: this.client.entrepriseClient.nom || '',\n        email: this.client.entrepriseClient.email || '',\n        telephone: this.client.entrepriseClient.telephone || '',\n        adresse: this.client.entrepriseClient.adresse || '',\n        pays: this.client.entrepriseClient.pays || '',\n        siege: this.client.entrepriseClient.siege || '',\n        secteur: this.client.entrepriseClient.secteur || '',\n        \n      });\n\n      // Initialiser l'indicatif si pays existant\n      if (this.client.entrepriseClient.pays && this.paysIndicatifs[this.client.entrepriseClient.pays]) {\n            this.indicatif = this.paysIndicatifs[this.client.entrepriseClient.pays].indicatif;\n            this.updatePhoneValidator(this.paysIndicatifs[this.client.entrepriseClient.pays].longueur);\n          }\n\n          // Formater le téléphone\n          this.entrepriseClientForm.patchValue({\n            telephone: this.client.entrepriseClient.telephone || this.indicatif\n          });\n        }\n  }\n\n  // list clients \n getListClients() {\n  this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      if (!token) {\n        console.error('🔐 Aucun token trouvé !');\n        return throwError(() => new Error('Aucun token trouvé'));\n      }\n      return this.clientService.getListClients();\n    })\n  ).subscribe({\n    next: (data) => {\n      console.log('Données brutes:', data);\n\n      this.clients = data.map(client => ({\n        ...client,\n        entrepriseClient: client.entrepriseClient ? { \n          id: client.entrepriseClient.id,\n          nom: client.entrepriseClient.nom\n        } : null\n      }));\n\n      // Trier par id décroissant\n      this.clients = this.clients.sort((a, b) => (b.id ?? 0) - (a.id ?? 0));\n\n      if (this.clients.length > 0) {\n        console.log('Exemple de client:', this.clients[0]);\n        console.log('Entreprise associée:', this.clients[0].entrepriseClient);\n      }\n\n      console.log('Clients récupérées (triées) :', this.clients);\n    },\n    error: (err) => {\n      console.error('Erreur lors de la récupération des clients :', err);\n    }\n  });\n}\n\n\n  // client id routing\n  openClientDetail(clientId: number): void {\n    this.router.navigate(['/detail-client', clientId]);\n  }\n  \n  // entreprise client id routing\n  openEntrepriseClientDetail(clientId: number, event: MouseEvent): void {\n    event.stopPropagation(); \n    this.router.navigate(['/detail-entreprise-client', clientId]);\n  }\n\n   // Ouvre/ferme le popup choix d'ajoute client\n   openPopup() { this.showPopup = true; }\n   closePopup() { this.showPopup = false; }\n\n  goToClients() {\n      this.router.navigate(['/clients']);\n  }\n\n  onSubmit() {\n    if (!this.isEditing) return;\n      this.errorMessage = '';\n      this.successMessage = '';\n      \n      // Activer l'indicateur de chargement\n      this.isLoading = true;\n\n      // Ajouter un délai de 3 secondes avant la modification\n      setTimeout(() => {\n          if (this.entrepriseClientForm.valid && this.client?.entrepriseClient?.id) {\n              const updatedEntreprise = this.getFormData();\n          \n              this.entrepriseClientService.updateEntrepriseClient(\n              this.client.entrepriseClient.id,\n              updatedEntreprise\n              ).subscribe({\n              next: (updatedEntreprise) => {\n                  console.log('Entreprise mise à jour:', updatedEntreprise);\n                  this.client.entrepriseClient = { \n                  ...this.client.entrepriseClient, \n                  ...updatedEntreprise \n                  };\n                  \n                  // Ajout du message de succès\n                  this.successMessage = 'Entreprise mise à jour avec succès !';\n                  \n                  // Option 1 : Recharger les données du client\n                  this.getClient(this.client.id!);\n                  \n                  this.isEditing = false;\n                  // Désactiver l'indicateur de chargement\n                  this.isLoading = false;\n                  \n                  // Effacer le message de succès après 3 secondes\n                  setTimeout(() => {\n                      this.successMessage = '';\n                  }, 3000);\n              },\n              error: (err) => {\n                  console.error('Erreur lors de la mise à jour:', err);\n                  this.errorMessage = err.error?.message || 'Erreur lors de la modification';\n                  this.isLoading = false;\n              }\n              });\n          } else {\n              this.errorMessage = 'Veuillez corriger les erreurs dans le formulaire';\n              this.isLoading = false;\n          }\n      }, 3000); // Délai de 3 secondes\n  }\n\n  private getFormData(): Entreprise {\n    return {\n      id: this.client.entrepriseClient?.id,\n      nom: this.entrepriseClientForm.get('nom')?.value,\n      pays: this.client.entrepriseClient?.pays,\n      email: this.entrepriseClientForm.get('email')?.value,\n      telephone: this.entrepriseClientForm.get('telephone')?.value,\n      adresse: this.entrepriseClientForm.get('adresse')?.value,\n      siege: this.client.entrepriseClient?.siege,\n      secteur: this.client.entrepriseClient?.secteur,\n      logo: this.client.entrepriseClient?.logo,\n      nif: this.client.entrepriseClient?.nif,\n      nina: this.client.entrepriseClient?.nina,\n      banque: this.client.entrepriseClient?.banque,\n      rccm: this.client.entrepriseClient?.rccm,\n      siteWeb: this.client.entrepriseClient?.siteWeb,\n      signataire: this.client.entrepriseClient?.signataire,\n      signataireNom: this.client.entrepriseClient?.signataireNom,\n      prefixe: this.client.entrepriseClient?.prefixe,\n      suffixe: this.client.entrepriseClient?.suffixe,\n      tauxTva: this.client.entrepriseClient?.tauxTva,\n      signaturNum: this.client.entrepriseClient?.signaturNum,\n      cachetNum: this.client.entrepriseClient?.cachetNum\n\n\n    };\n  }\n\n  navigateBack() {\n    this.router.navigate(['/clients']);\n  }\n\n  toggleEditing(): void {\n    this.isEditing = !this.isEditing;\n    \n    if (this.isEditing) {\n      // Activer tous les contrôles\n      this.entrepriseClientForm.enable();\n      this.myControl.enable();\n    } else {\n      // Désactiver et réinitialiser\n      this.entrepriseClientForm.disable();\n      this.myControl.disable();\n      \n    }\n  }\n\n}\n\n","\n<div class=\"toast-container\">\n  <!-- Message d'erreur principal -->\n  <div *ngIf=\"errorMessage\" class=\"alert alert-danger toast-message-danger\">\n    {{ errorMessage }}\n  </div>\n  \n  <!-- Message de succès -->\n  <div *ngIf=\"successMessage\" class=\"alert alert-success toast-message-success\">\n    {{ successMessage }}\n  </div>\n</div>\n\n<div class=\"container_global\">\n\n  <div *ngIf=\"isLoading\" class=\"loading-overlay\">\n    <div class=\"loading-content\">\n      <div class=\"spinner\"></div>\n      <p>Creation en cours...</p>\n    </div>\n  </div>\n\n  <div class=\"content_formulaire\">\n    <div class=\"modal-body\">\n      <form [formGroup]=\"entrepriseClientForm\" class=\"container_formulaire\">\n\n        <!-- Icon return  -->\n        <p class=\"retour_icon_text\" (click)=\"navigateBack()\" style=\"cursor: pointer; color: #0672E4;\" title=\"Retour sur la page produit\">\n            <i class=\"ri-arrow-left-s-line\"></i> <span style=\"margin-left: 8px; font-size: 12px;\">Clients</span>\n        </p>\n\n        <!-- Titre d'ajout de produits -->\n        <!-- <div class=\"Title\">\n          <h3>Modifier un entreprise client</h3>\n        </div> -->\n\n        <div class=\"form_left_right\" *ngIf=\"client?.entrepriseClient\">\n          <div class=\"formulaire\">\n            <!-- Cadre contenant le select et la description -->\n            <div class=\"information_cadre\">\n              <div class=\"info_titre_input\">\n\n                <div class=\"content_return\" style=\"display: flex; align-items: center; justify-content: space-between;\">\n                  <h4>Modifier un entreprise client</h4>\n                  <div class=\"icon_edit\" style=\"cursor: pointer;\">\n                    <i *ngIf=\"!isEditing\" style=\"font-size: 16px;\"\n                        class=\"ri-edit-box-line\" \n                        title=\"Cliquer ici pour modifier\"\n                        (click)=\"toggleEditing()\"></i>\n\n                    <i *ngIf=\"isEditing\" style=\"color: #ff0000; font-size: 16px;\"\n                        class=\"ri-close-line\" \n                        title=\"Fermer l'édition\"\n                        (click)=\"toggleEditing()\"></i>\n                  </div>\n                </div>\n                \n                <div class=\"double_input\">\n                  <!-- Nom et prenom -->\n                  <div class=\"champ_input champ_input2\">\n                    <input type=\"text\" class=\"input_focus\"\n                            id=\"nom\" \n                            formControlName=\"nom\"\n                            placeholder=\"Saisis le nom d'entreprise\">\n                    <label for=\"nom\" class=\"label\">Nom d'entreprise</label>\n                    <div *ngIf=\"entrepriseClientForm.get('nom')?.invalid && entrepriseClientForm.get('nom')?.touched\" \n                          class=\"error\">\n                      <small *ngIf=\"entrepriseClientForm.get('nom')?.errors?.['required']\">\n                        Ce champ est obligatoire\n                      </small>\n                      <small *ngIf=\"entrepriseClientForm.get('nom')?.errors?.['minlength']\">\n                        Minimum 2 caractères\n                      </small>\n                    </div>\n                  </div>\n                  <!-- Email -->\n                  <div class=\"champ_input champ_input2\">\n                    <input type=\"email\" class=\"input_focus\"\n                              id=\"email\" formControlName=\"email\"\n                              name=\"email\"\n                              placeholder=\"Saisis l'email\">\n                    <label for=\"email\" class=\"label\">Email</label>\n                      <div *ngIf=\"entrepriseClientForm.get('email')?.invalid && entrepriseClientForm.get('email')?.touched\" \n                          class=\"error\">\n                        <small *ngIf=\"entrepriseClientForm.get('email')?.errors?.['email']\">\n                            Format d'email invalide\n                        </small>\n                    </div>\n                  </div>\n\n                </div>\n                <!-- Remplacez le bloc actuel du pays et téléphone par ceci -->\n                <div class=\"double_input\">\n                  <!-- Pays (transformé en select) -->\n                  <div class=\"champ_input champ_input2\">\n                    <select class=\"input_focus\" \n                            id=\"pays\" \n                            formControlName=\"pays\"\n                            (change)=\"onPaysChange($event)\">\n                      <option value=\"\" disabled selected>Sélectionne un pays</option>\n                      <option value=\"Mali\">Mali</option>\n                      <option value=\"Sénégal\">Sénégal</option>\n                      <option value=\"Côte d'Ivoire\">Côte d'Ivoire</option>\n                    </select>\n                    <label for=\"pays\" class=\"label\">Pays</label>\n                  </div>\n\n                  <!-- Telephone (avec gestion d'indicatif) -->\n                  <div class=\"champ_input champ_input2\">\n                    <input type=\"tel\" \n                          class=\"input_focus\"\n                          id=\"telephone\" \n                          formControlName=\"telephone\"\n                          placeholder=\"Saisis le numéro de téléphone\"\n                          (input)=\"formatPhoneNumber()\">\n                    <label for=\"telephone\" class=\"label\">Téléphone</label>\n                    \n                    <!-- Messages d'erreur améliorés -->\n                    <div *ngIf=\"entrepriseClientForm.get('telephone')?.touched && entrepriseClientForm.get('telephone')?.errors?.['pattern']\" \n                        class=\"error\">\n                      <small *ngIf=\"entrepriseClientForm.get('pays')?.value\">\n                        Format invalide pour {{ entrepriseClientForm.get('pays')?.value }}.\n                        Exemple: {{ paysIndicatifs[entrepriseClientForm.get('pays')?.value].exemple }}\n                      </small>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"double_input\">\n                  <!-- Siege -->\n                  <div class=\"champ_input champ_input2\">\n                    <input class=\"input_focus\"\n                              autocomplete=\"off\"\n                              id=\"siege\" formControlName=\"siege\"\n                              name=\"siege\"\n                              placeholder=\"Saisis le siege\">\n                    <label for=\"siege\" class=\"label\">Ville</label>\n                  </div>\n\n                <!-- Secteur -->\n                <div class=\"champ_input champ_input2\">\n                  <input class=\"input_focus\"\n                            autocomplete=\"off\"\n                            id=\"secteur\" formControlName=\"secteur\"\n                            name=\"secteur\"\n                            placeholder=\"Saisis le secteur\">\n                  <label for=\"secteur\" class=\"label\">Secteur</label>\n                </div>\n              \n\n              </div>\n                \n              </div>\n            </div>\n            \n\n            <!-- Les information des produit Photo  -->\n            <!-- <div class=\"information_cadre\">\n              <div class=\"info_titre_input\">\n                <h4>Ajouter une image</h4>\n\n                <div class=\"container_file\"> \n                  <div class=\"header_file\"> \n                    <img class=\"roudel\" [src]=\"newPhotoUrl || urllink\" alt=\"Aperçu de l'image\" style=\"max-width:200px;\">\n                  </div> \n                  \n                  <div>\n                    <label for=\"file\" class=\"footer_file\"> \n                      <i class=\"ri-file-3-fill\"></i>\n                      <p>Choisir un fichier</p>\n                    </label> \n                    <input type=\"file\" accept=\"image/*\" id=\"file\" (change)=\"onFileSelected($event)\" hidden>\n                  </div>\n                </div>\n              </div>\n            </div> -->\n\n            <!-- Boutons Ajouter et Sauvegarder -->\n            <div class=\"information_cadre information_cadre_save\" *ngIf=\"isEditing\">\n\n              <!-- Message d'erreur global -->\n              <div class=\"container_error_message\">\n                <!-- Messages API -->\n                <!-- <div *ngIf=\"errorMessage\" class=\"error-messageApi2\">{{ errorMessage }}</div>\n                <div *ngIf=\"successMessage\" class=\"success-messageApi2\">{{ successMessage }}</div> -->\n            </div>\n\n              <div class=\"info_titre_input info_titre_input_btn\">\n                <div class=\"btn_annuler\">\n                  <button class=\"btn_cancel\" (click)=\"goToClients()\">Annuler</button>\n                </div>\n                <div class=\"btn_ajouter\">\n                  <button class=\"btn_save\" (click)=\"onSubmit()\"\n                        [disabled]=\"entrepriseClientForm.invalid\"\n                        [style.backgroundColor]=\"entrepriseClientForm.valid ? '#0672E4' : '#0671e434'\"\n                        [style.color]=\"entrepriseClientForm.valid ? '#ffffff' : '#00000073'\"\n                        [style.cursor]=\"entrepriseClientForm.valid ? 'pointer' : 'no-drop'\">\n                    <!-- Modifier le bouton de soumission\n                    <button class=\"btn_save\" type=\"submit\" [disabled]=\"entrepriseClientForm.invalid\">\n                      Modifier\n                    </button> -->\n                    Modifier\n                  </button>\n                </div>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n\n  <div class=\"information_cadre cadre_affilie\">\n    <!-- <div class=\"header_affilie\">\n      <h4>Clients affiliés à cette <br>entreprise <strong></strong> </h4>\n      <div class=\"count\">{{ clientsAffilies.length }}</div>\n    </div> -->\n\n    <div class=\"header_affilie\">\n      <h4 style=\"font-weight: 400;\">\n        Clients affiliés à l'entreprise<br>\n        <strong style=\"color: #0672E4; letter-spacing: 0.60px;\">{{ client.entrepriseClient.nom || 'cette entreprise' }}</strong>\n      </h4>\n      <div class=\"count\">{{ clientsAffilies.length }}</div>\n    </div>\n\n    <div class=\"content_affilie\" *ngIf=\"clientsAffilies.length > 0; else noAffilie\">\n      <div class=\"client_card\" *ngFor=\"let client of clientsAffilies\" (click)=\"openClientDetail(client.id)\" [class.selected]=\"client.id === currentClientId\">\n        <div class=\"avatar\">\n          <img src=\"assets/img/profil.png\" alt=\"Photo client\">\n        </div>\n        <div class=\"info\">\n          <div class=\"name\">{{ client.nomComplet || 'Nom non disponible' }}</div>\n          <div class=\"contact\">\n            <span *ngIf=\"client.email\">\n              <i class=\"ri-mail-line\"></i> {{ client.email | truncateEmail }}\n            </span>\n            <span *ngIf=\"client.telephone\">\n              <i class=\"ri-phone-line\"></i> {{ client.telephone }}\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <ng-template #noAffilie>\n      <div class=\"no-affiliation\">\n        <i class=\"ri-group-line\"></i>\n        <p>Aucun client affilié à cette entreprise</p>\n      </div>\n    </ng-template>\n  </div>\n</div>\n"],"names":["FormControl","FormsModule","ReactiveFormsModule","Validators","switchMap","throwError","CommonModule","TruncateEmailPipe","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r1","errorMessage","successMessage","ɵɵelement","ɵɵlistener","DetailEditEntrepriseClientComponent_div_12_i_8_Template_i_click_0_listener","ɵɵrestoreView","_r4","ɵɵnextContext","ɵɵresetView","toggleEditing","DetailEditEntrepriseClientComponent_div_12_i_9_Template_i_click_0_listener","_r5","ɵɵtemplate","DetailEditEntrepriseClientComponent_div_12_div_15_small_1_Template","DetailEditEntrepriseClientComponent_div_12_div_15_small_2_Template","ɵɵproperty","tmp_3_0","entrepriseClientForm","get","errors","tmp_4_0","DetailEditEntrepriseClientComponent_div_12_div_20_small_1_Template","ɵɵtextInterpolate2","value","paysIndicatifs","exemple","DetailEditEntrepriseClientComponent_div_12_div_38_small_1_Template","DetailEditEntrepriseClientComponent_div_12_div_48_Template_button_click_4_listener","_r6","goToClients","DetailEditEntrepriseClientComponent_div_12_div_48_Template_button_click_7_listener","onSubmit","ɵɵstyleProp","valid","invalid","DetailEditEntrepriseClientComponent_div_12_i_8_Template","DetailEditEntrepriseClientComponent_div_12_i_9_Template","DetailEditEntrepriseClientComponent_div_12_div_15_Template","DetailEditEntrepriseClientComponent_div_12_div_20_Template","DetailEditEntrepriseClientComponent_div_12_Template_select_change_23_listener","$event","_r3","onPaysChange","DetailEditEntrepriseClientComponent_div_12_Template_input_input_35_listener","formatPhoneNumber","DetailEditEntrepriseClientComponent_div_12_div_38_Template","DetailEditEntrepriseClientComponent_div_12_div_48_Template","isEditing","touched","tmp_5_0","tmp_6_0","ɵɵpipeBind1","client_r8","email","telephone","DetailEditEntrepriseClientComponent_div_22_div_1_Template_div_click_0_listener","_r7","$implicit","openClientDetail","id","DetailEditEntrepriseClientComponent_div_22_div_1_span_7_Template","DetailEditEntrepriseClientComponent_div_22_div_1_span_8_Template","ɵɵclassProp","currentClientId","ɵɵtextInterpolate","nomComplet","DetailEditEntrepriseClientComponent_div_22_div_1_Template","clientsAffilies","DetailEditEntrepriseClientComponent","constructor","clientService","router","route","fb","entrepriseClientService","usersService","errorMessageApi","isListView","showDropdown","showPopup","clients","sortField","sortDirection","noClientsAvailable","messageNoClient","client","entrepriseClient","indicatif","maxPhoneLength","isLoading","myControl","longueur","ngOnInit","savedView","localStorage","getItem","getListClients","snapshot","params","getClient","getFormEntreprise","disable","event","paysSelectionne","target","paysInfo","updatePhoneValidator","telephoneControl","startsWith","setValue","valeur","chiffres","replace","slice","length","regex","RegExp","setValidators","pattern","updateValueAndValidity","group","nom","required","minLength","adresse","pays","siege","secteur","getClientById","subscribe","next","initializeForm","getClientsAffilies","error","err","console","entrepriseId","getClientsByEntreprise","toggleView","viewType","setItem","patchValue","getValidAccessToken","pipe","token","Error","data","log","map","sort","a","b","clientId","navigate","openEntrepriseClientDetail","stopPropagation","openPopup","closePopup","setTimeout","updatedEntreprise","getFormData","updateEntrepriseClient","message","logo","nif","nina","banque","rccm","siteWeb","signataire","signataireNom","prefixe","suffixe","tauxTva","signaturNum","cachetNum","navigateBack","enable","ɵɵdirectiveInject","i1","ClientService","i2","Router","ActivatedRoute","i3","FormBuilder","i4","EntrepriseClientService","i5","UsersService","selectors","decls","vars","consts","template","DetailEditEntrepriseClientComponent_Template","rf","ctx","DetailEditEntrepriseClientComponent_div_1_Template","DetailEditEntrepriseClientComponent_div_2_Template","DetailEditEntrepriseClientComponent_div_4_Template","DetailEditEntrepriseClientComponent_Template_p_click_8_listener","_r1","DetailEditEntrepriseClientComponent_div_12_Template","DetailEditEntrepriseClientComponent_div_22_Template","DetailEditEntrepriseClientComponent_ng_template_23_Template","ɵɵtemplateRefExtractor","noAffilie_r9","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","SelectControlValueAccessor","NgControlStatus","NgControlStatusGroup","i6","NgForOf","NgIf","FormGroupDirective","FormControlName","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}
{"version":3,"file":"src_app_admin-page_clients_clients_component_ts.js","mappings":"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","sources":["./src/app/admin-page/SERVICES/entreprise-service.ts","./src/app/admin-page/clients/clients.component.ts","./src/app/admin-page/clients/clients.component.html"],"sourcesContent":["import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, catchError, Observable, switchMap, tap, throwError } from \"rxjs\";\nimport { Entreprise } from \"../MODELS/entreprise-model\";\nimport { EntrepriseClient } from \"../MODELS/entreprise-clients-model\";\nimport { environment } from \"src/environments/environment\";\nimport { UsersService } from \"./users.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EntrepriseService {\n    private apiUrl = environment.apiBaseUrl;\n  \n\n  private entrepriseSubject = new BehaviorSubject<Entreprise[]>([]);\n  public entreprise$ = this.entrepriseSubject.asObservable(); \n  constructor(private http: HttpClient, private usersService: UsersService) { }\n\n  // Dans client.service.ts\n// Dans entreprise.service.ts\n getListEntreprises(): Observable<EntrepriseClient[]> {\n  return this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      });\n      return this.http.get<EntrepriseClient[]>(`${this.apiUrl}/entreprises`, { headers });\n    }),\n    catchError(error => {\n      let errorMsg = 'Erreur inconnue';\n      if (error.error instanceof ErrorEvent) {\n        errorMsg = `Erreur: ${error.error.message}`;\n      } else if (error.status === 404) {\n        errorMsg = 'Aucune entreprise trouvée';\n      }\n      return throwError(() => new Error(errorMsg));\n    })\n  );\n}\n\n\n  // Ajouter une entreprise\n addEntreprise(entreprise: Entreprise): Observable<Entreprise> {\n  return this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      });\n\n      return this.http.post<Entreprise>(`${this.apiUrl}/entreprise-clients`, entreprise, { headers });\n    }),\n    tap((newEntreprise) => {\n      const currentEntreprise = this.entrepriseSubject.value;\n      this.entrepriseSubject.next([...currentEntreprise, newEntreprise]);\n    }),\n    catchError(error => {\n      let errorMsg = 'Erreur inconnue';\n      if (error.error instanceof ErrorEvent) {\n        errorMsg = `Erreur: ${error.error.message}`;\n      } else if (error.status === 400) {\n        errorMsg = error.error || 'Données invalides';\n      }\n      return throwError(() => new Error(errorMsg));\n    })\n  );\n}\n\n\n  // List de tout les entreprises\n getListEntreprise(): Observable<Entreprise[]> {\n  return this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      if (!token) {\n        console.error('Token vide ou non défini ! Vérifiez que l\\'utilisateur est bien connecté.');\n        return throwError(() => new Error('Token manquant'));\n      }\n      const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n      console.log(\"En-têtes envoyés : \", headers);\n\n      return this.http.get<Entreprise[]>(`${this.apiUrl}/entreprises`, { headers });\n    }),\n    tap(data => {\n      this.entrepriseSubject.next(data);\n    }),\n    catchError(error => {\n      console.error('Erreur lors de la récupération des entreprises:', error);\n      return throwError(() => error);\n    })\n  );\n}\n\n\n\n  // Recuperer information d'une entreprise de la user connecter\n getEntrepriseById(id: number): Observable<Entreprise> {\n  return this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      if (!token) {\n        console.error('Token manquant');\n        return throwError(() => new Error('Token manquant'));\n      }\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      });\n      return this.http.get<Entreprise>(`${this.apiUrl}/entreprises/${id}`, { headers });\n    }),\n    catchError(error => {\n      let errorMsg = 'Erreur inconnue';\n      if (error.error instanceof ErrorEvent) {\n        errorMsg = `Erreur: ${error.error.message}`;\n      } else if (error.status === 404) {\n        errorMsg = 'Entreprise non trouvée';\n      }\n      return throwError(() => new Error(errorMsg));\n    })\n  );\n}\n\n\n  updateEntreprise(id: number, formData: FormData): Observable<string> {\n  return this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      if (!token) {\n        return throwError(() => new Error('Token manquant'));\n      }\n\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${token}`\n      });\n\n      return this.http.patch(`${this.apiUrl}/updateEntreprise/${id}`, formData, {\n        headers,\n        responseType: 'text' // réponse en texte brut\n      });\n    }),\n    catchError(error => {\n      let errorMsg = 'Erreur inconnue';\n      if (error.error instanceof ErrorEvent) {\n        errorMsg = `Erreur: ${error.error.message}`;\n      } else if (error.status === 400) {\n        errorMsg = error.error || 'Données invalides';\n      }\n      return throwError(() => new Error(errorMsg));\n    })\n  );\n}\n\n\n  // updateEntreprise(id: number, formData: FormData): Observable<any> {\n  //   const token = localStorage.getItem('accessToken') || '';\n  //   const headers = new HttpHeaders({\n  //     'Authorization': `Bearer ${token}`\n  //   });\n\n  //   return this.http.patch(`${this.apiUrl}/updateEntreprise/${id}`, formData, { headers }).pipe(\n  //     catchError(error => {\n  //       let errorMsg = 'Erreur inconnue';\n  //       if (error.error instanceof ErrorEvent) {\n  //         errorMsg = `Erreur: ${error.error.message}`;\n  //       } else if (error.status === 400) {\n  //         errorMsg = error.error || 'Données invalides';\n  //       }\n  //       return throwError(() => new Error(errorMsg));\n  //     })\n  //   );\n  // }\n\n  // Get entreprise d'un user\n  getEntrepriseInfo(): Observable<Entreprise> {\n  return this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      if (!token) {\n        return throwError(() => new Error('Aucun token trouvé'));\n      }\n\n      const headers = new HttpHeaders({\n        Authorization: `Bearer ${token}`\n      });\n\n      return this.http.get<Entreprise>(`${this.apiUrl}/myEntreprise`, { headers }).pipe(\n        tap(entreprise => {\n          localStorage.setItem('entreprise', JSON.stringify(entreprise));\n        })\n      );\n    }),\n    catchError(error => {\n      console.error('Erreur récupération info entreprise:', error);\n      return throwError(() => error);\n    })\n  );\n}\n\n\n  // Simpl dcodage JWT pour vérifier si le token est expiré\n  decodeJwt(token: string): any {\n    return JSON.parse(atob(token.split('.')[1]));\n  }\n  \n  // Vérifier si le token est expiré\n  isTokenExpired(decodedToken: any): boolean {\n    const expirationDate = new Date(decodedToken.exp * 1000);\n    return expirationDate < new Date();\n  }\n    \n  // Rafraîchir le token avec un refresh token (si applicable)\n  getNewTokenFromApi(): Observable<{ token: string }> {\n    const refreshToken = localStorage.getItem('refreshToken');\n    return this.http.post<{ token: string }>(`${this.apiUrl}/refresh-token`, { refreshToken });\n  }\n\n \n}","import { CommonModule } from \"@angular/common\";\nimport { Component, EventEmitter, OnInit, Output, ViewChild } from \"@angular/core\";\nimport { FormGroup, FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { MatPaginator, MatPaginatorModule, PageEvent } from \"@angular/material/paginator\";\nimport { MatTableDataSource } from \"@angular/material/table\";\nimport { Router, RouterLink } from \"@angular/router\";\nimport { ClientService } from \"../SERVICES/client-service\";\nimport { Clients } from \"../MODELS/clients-model\";\nimport { TruncateEmailPipe } from \"../MODELS/truncate-email.pipe\";\nimport { EntrepriseClient } from \"../MODELS/entreprise-clients-model\";\nimport { EntrepriseService } from \"../SERVICES/entreprise-service\";\nimport { ClickOutsideDirective } from \"../MODELS/click-outside.directive\";\nimport { environment } from \"src/environments/environment\";\nimport { DomSanitizer, SafeHtml } from \"@angular/platform-browser\";\nimport { UsersService } from \"../SERVICES/users.service\";\nimport { switchMap, throwError } from \"rxjs\";\n\n\n@Component({\n  selector: 'app-clients',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatPaginatorModule,\n    RouterLink,\n    TruncateEmailPipe,\n    ClickOutsideDirective\n  ],\n  templateUrl: './clients.component.html',\n  styleUrls: ['./clients.component.scss'],\n  \n})\nexport class ClientsComponent implements OnInit  {\n  // API URL de limage est http://31.207.34.194:8080\n  private apiUrl = environment.imgUrl;\n  isListView = true;\n  showDropdown = false;\n  showPopup = false;\n\n  // Pagination et tableau de données\n  // Client \n  dataSource = new MatTableDataSource<Clients>();\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  pageSize = 6;\n  currentPage = 0;\n  currentPageClients = 0;\n  currentPageEntreprises = 0;\n  totalClients = 0;\n  totalEntrepriseClients = 0;\n  clients: Clients[] = [];\n  entrepriseClient: EntrepriseClient[] = [];\n  sortField = 'nomComplet';\n  sortDirection: 'asc' | 'desc' = 'asc';\n  noClientsAvailable = false;\n  messageNoClient = 'Aucun client disponible.';\n  // showTypeDropdown = false;\n  currentListType: 'clients' | 'entreprises' = 'clients';\n  entreprises: EntrepriseClient[] = [];\n  messageNoEntreprise = 'Aucune entreprise disponible.';\n  clientsLoaded = false;\n  entreprisesLoaded = false;\n  searchText = '';\n\n  constructor(\n    private clientService: ClientService,\n    private router: Router,\n    private entrepriseService: EntrepriseService,\n    private sanitizer: DomSanitizer,\n    private usersService: UsersService,\n  ) {}\n\n  ngOnInit() {\n    const savedView = localStorage.getItem('viewPreference');\n    this.isListView = savedView !== 'grid'; \n    \n    const savedListType = localStorage.getItem('listTypePreference');\n    if (savedListType === 'clients' || savedListType === 'entreprises') {\n      this.currentListType = savedListType;\n    }\n\n    // if (this.currentListType === 'clients') {\n    //   this.getListClients();\n    // } else {\n    //   this.getListEntreprises();\n    // }\n    this.getListClients();\n    this.getListEntreprises();\n  }\n\n  highlightMatch(text: string | null | undefined): SafeHtml {\n    if (!text) return '';\n    if (!this.searchText.trim()) return text;\n    \n    const escapedSearch = this.searchText.trim().replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n    const regex = new RegExp(`(${escapedSearch})`, 'gi');\n    \n    return this.sanitizer.bypassSecurityTrustHtml(\n      text.replace(regex, '<mark>$1</mark>')\n    );\n  }\n\n  // Gestionnaires de filtrage\n  get filteredClients(): Clients[] {\n    if (!this.searchText.trim()) return this.clients;\n    \n    const searchLower = this.searchText.toLowerCase().trim();\n    return this.clients.filter(client => \n      (client.nomComplet?.toLowerCase().includes(searchLower)) ||\n      (client.email?.toLowerCase().includes(searchLower)) ||\n      (client.adresse?.toLowerCase().includes(searchLower)) ||\n      (client.telephone?.includes(searchLower))\n    );\n  }\n\n  get filteredEntreprises(): EntrepriseClient[] {\n    if (!this.searchText.trim()) return this.entreprises;\n    \n    const searchLower = this.searchText.toLowerCase().trim();\n    return this.entreprises.filter(entreprise => \n      (entreprise.nom?.toLowerCase().includes(searchLower)) ||\n      (entreprise.email?.toLowerCase().includes(searchLower)) ||\n      (entreprise.adresse?.toLowerCase().includes(searchLower)) ||\n      (entreprise.telephone?.includes(searchLower)) ||\n      (entreprise.pays?.toLowerCase().includes(searchLower)) ||\n      (entreprise.siege?.toLowerCase().includes(searchLower)) ||\n      (entreprise.secteur?.toLowerCase().includes(searchLower))\n    );\n  }\n\n  onPageChange(event: PageEvent): void {\n    if (this.currentListType === 'clients') {\n      this.currentPageClients = event.pageIndex;\n    } else {\n      this.currentPageEntreprises = event.pageIndex;\n    }\n    \n    this.currentPage = event.pageIndex;\n    this.pageSize = event.pageSize;\n    \n    // Forcez la détection des changements\n    setTimeout(() => {\n      this.clientsLoaded = true;\n      this.entreprisesLoaded = true;\n    }, 0);\n  }\n\n  toggleView(viewType: 'list' | 'grid') {\n    this.isListView = viewType === 'list';\n    this.showDropdown = true;\n    \n    // Stocker la préférence dans le localStorage\n    localStorage.setItem('viewPreference', viewType);\n  }\n\n  setListType(type: 'clients' | 'entreprises') {\n    // Réinitialisez la page courante selon le type\n    this.currentPage = type === 'clients' ? this.currentPageClients : this.currentPageEntreprises;\n    \n    this.currentListType = type;\n    // this.showTypeDropdown = false;\n    localStorage.setItem('listTypePreference', type);\n\n    this.clientsLoaded = false;\n    this.entreprisesLoaded = false;\n    \n    // if (type === 'entreprises' && this.entreprises.length === 0) {\n    //   this.getListEntreprises();\n    // } else if (type === 'clients' && this.clients.length === 0) {\n    //   this.getListClients();\n    // }\n\n    if (type === 'entreprises') {\n      this.getListEntreprises();\n    } else {\n      this.getListClients();\n    }\n  }\n\n getListEntreprises() {\n  this.entreprisesLoaded = false;\n\n  this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      if (!token) {\n        console.error('Aucun token valide trouvé !');\n        return throwError(() => new Error('Aucun token trouvé'));\n      }\n      return this.entrepriseService.getListEntreprises();\n    })\n  ).subscribe({\n    next: (data: EntrepriseClient[]) => {\n      console.log('Entreprises récupérées:', data);\n      this.entreprises = data.sort((a, b) => (b.id ?? 0) - (a.id ?? 0));\n      this.entreprisesLoaded = true;\n    },\n    error: (err) => {\n      console.error('Erreur lors de la récupération des entreprises :', err);\n      this.entreprisesLoaded = true;\n    }\n  });\n}\n\n\n  // Modifie la fonction sort\n  sort(field: string) {\n    // Déterminer si le champ existe dans le type actuel\n    const isValidField = \n      (this.currentListType === 'clients' && this.clients.length > 0 && field in this.clients[0]) ||\n      (this.currentListType === 'entreprises' && this.entreprises.length > 0 && field in this.entreprises[0]);\n\n    if (!isValidField) return;\n\n    if (this.sortField === field) {\n      this.sortDirection = this.sortDirection === 'asc' ? 'desc' : 'asc';\n    } else {\n      this.sortField = field;\n      this.sortDirection = 'asc';\n    }\n\n    if (this.currentListType === 'clients') {\n      this.clients.sort((a: any, b: any) => {\n        const modifier = this.sortDirection === 'asc' ? 1 : -1;\n        const valueA = a[field]?.toString().toLowerCase() ?? '';\n        const valueB = b[field]?.toString().toLowerCase() ?? '';\n        return valueA.localeCompare(valueB) * modifier;\n      });\n    } else {\n      this.entreprises.sort((a: any, b: any) => {\n        const modifier = this.sortDirection === 'asc' ? 1 : -1;\n        const valueA = a[field]?.toString().toLowerCase() ?? '';\n        const valueB = b[field]?.toString().toLowerCase() ?? '';\n        return valueA.localeCompare(valueB) * modifier;\n      });\n    }\n  }\n\n  // list clients \n  getListClients() {\n  this.clientsLoaded = false;\n\n  this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      if (!token) {\n        console.error('🔐 Aucun token valide trouvé !');\n        return throwError(() => new Error('Aucun token trouvé'));\n      }\n      return this.clientService.getListClients();\n    })\n  ).subscribe({\n    next: (data) => {\n      console.log('📥 Données brutes:', data);\n\n      this.clients = data.map(client => {\n        return {\n          ...client,\n          photo: client.photo \n            ? `${this.apiUrl}${client.photo}` \n            : `/assets/img/profil.png`,\n          entrepriseClient: client.entrepriseClient \n            ? { id: client.entrepriseClient.id } \n            : null\n        };\n      });\n\n      console.log('🖼️ URLs des photos clients :', this.clients.map(c => c.photo));\n\n      this.clients = this.clients.sort((a, b) => (b.id ?? 0) - (a.id ?? 0));\n      this.totalClients = this.clients.length;\n      this.noClientsAvailable = this.clients.length === 0;\n\n      this.dataSource.data = this.clients;\n      this.dataSource.paginator = this.paginator;\n\n      if (this.clients.length > 0) {\n        console.log('👤 Exemple client :', this.clients[0]);\n      }\n\n      this.clientsLoaded = true;\n    },\n    error: (err) => {\n      console.error('❌ Erreur récupération clients :', err);\n      this.clientsLoaded = true;\n    }\n  });\n}\n\n\n  // Mettre à jour les getters paginés pour utiliser les listes filtrées\n  get paginatedClients(): Clients[] {\n    const startIndex = this.currentPageClients * this.pageSize;\n    return this.filteredClients.slice(startIndex, startIndex + this.pageSize);\n  }\n\n  get paginatedEntreprises(): EntrepriseClient[] {\n    const startIndex = this.currentPageEntreprises * this.pageSize;\n    return this.filteredEntreprises.slice(startIndex, startIndex + this.pageSize);\n  }\n\n  // client id routing\n  openClientDetail(clientId: number): void {\n    this.router.navigate(['/detail-client', clientId]);\n  }\n  \n  // entreprise client id routing\n  openEntrepriseClientDetail(clientId: number, event: MouseEvent): void {\n    event.stopPropagation(); \n    this.router.navigate(['/detail-entreprise-client', clientId]);\n  }\n\n  // Ajoutez cette méthode pour ouvrir les détails d'une entreprise\n  openEntrepriseDetail(entrepriseId: number | undefined): void {\n    if (entrepriseId === undefined) {\n      console.error(\"ID d'entreprise non défini\");\n      return;\n    }\n    this.router.navigate(['/detail-entreprise', entrepriseId]);\n  }\n\n  // Ouvre/ferme le popup choix d'ajoute client\n  openPopup() { this.showPopup = true; }\n  closePopup() { this.showPopup = false; }\n\n\n}\n","<div class=\"containerTable\">\n    <!-- En-tête : titre, actions et barre de recherche -->\n    <div class=\"tasks-header\">\n      <h1 class=\"title\">\n        {{ currentListType === 'clients' ? 'Client individuel' : 'Client entreprise' }}\n      </h1>\n      <div class=\"actions\">\n        <button class=\"add-task\" (click)=\"openPopup()\">Ajouter un client</button>\n  \n        <div class=\"barre\"></div>\n  \n        <!-- Icone avec événement de clic -->\n        <div class=\"contentIcon\" (click)=\"showDropdown = !showDropdown\" clickOutside (clickOutside)=\"showDropdown = false\">\n          <i [class]=\"isListView ? 'ri-list-check' : 'ri-apps-fill'\"></i>\n          <!-- Dropdown -->\n          <div class=\"view-dropdown\" *ngIf=\"showDropdown\">\n            <div class=\"dropdown-item\" (click)=\"toggleView('list')\">\n                Liste {{ isListView ? '✓' : '' }}\n            </div>\n            <div class=\"dropdown-item\" (click)=\"toggleView('grid')\">\n                Cadre {{ !isListView ? '✓' : '' }}\n            </div>\n          </div>\n        </div>\n  \n        <div class=\"barre\"></div>\n\n        <!-- <div class=\"contentIcon\" (click)=\"showTypeDropdown = !showTypeDropdown\" clickOutside (clickOutside)=\"showTypeDropdown = false\">\n          <i class=\"ri-folder-user-line\"></i>\n          <div class=\"view-dropdown\" *ngIf=\"showTypeDropdown\">\n            <div class=\"dropdown-item\" (click)=\"setListType('clients')\">\n                Clients {{ currentListType === 'clients' ? '✓' : '' }}\n            </div>\n            <div class=\"dropdown-item\" (click)=\"setListType('entreprises')\">\n                Entreprises {{ currentListType === 'entreprises' ? '✓' : '' }}\n            </div>\n          </div>\n        </div>\n\n        <div class=\"barre\"></div>\n\n        <div class=\"contentIcon\">\n          <i class=\"ri-building-line\"></i>\n        </div> -->\n\n        <!-- Pour les clients -->\n        <div class=\"contentIcon\" \n            [class.active]=\"currentListType === 'clients'\"\n            (click)=\"setListType('clients')\">\n          <i class=\"ri-folder-user-line\"></i>\n          <div class=\"nombreCount\">\n            <span>{{ clients.length }}</span>\n          </div>\n        </div>\n\n        <div class=\"barre\"></div>\n\n        <!-- Pour les entreprises -->\n        <div class=\"contentIcon\" \n            [class.active]=\"currentListType === 'entreprises'\"\n            (click)=\"setListType('entreprises')\">\n          <i class=\"ri-building-line\"></i>\n          <div class=\"nombreCount\">\n            <span>{{ entreprises.length }}</span>\n          </div>\n        </div>\n  \n        <div class=\"barre\"></div>\n        \n        <div class=\"inputSearch\">\n          <i class=\"ri-search-2-line\"></i>\n          <input \n            type=\"text\"\n            placeholder=\"Recherche....\" \n            [(ngModel)]=\"searchText\"\n          />\n        </div>\n\n      </div>\n    </div>\n    \n    <!-- Tableau (visible par défaut) -->\n    <table *ngIf=\"isListView && currentListType === 'clients'\">\n      \n      <thead>\n        <th>Photo</th>\n        <th (click)=\"sort('nomComplet')\">\n          Nom & prénom \n          <i [class]=\"sortField === 'nomComplet' ? (sortDirection === 'asc' ? 'ri-arrow-up-s-line' : 'ri-arrow-down-s-line') : 'ri-arrow-up-down-line'\"></i>\n        </th>\n        <th> Email </th>\n        <th> Adresse </th>\n        <th> Téléphone </th>\n        <th> Entreprise </th>\n        <th> Date de Creation </th>\n      </thead>\n\n      <tbody>\n          <tr *ngFor=\"let client of paginatedClients\" (click)=\"openClientDetail(client.id)\">\n              <td>\n                <div class=\"imgClient\">\n                  <!-- <img [src]=\"product.photo\"> -->\n                  <img [src]=\"client.photo\" alt=\"Photo client\">\n                  <!-- <img [src]=\"(!product.photo || product.photo === 'null' || product.photo.trim() === '') ? 'assets/img/image_product.png' : product.photo\"> -->\n                </div>\n              </td>\n              <td>\n                <span *ngIf=\"client.nomComplet; else noNomComplet\" \n                      [innerHTML]=\"highlightMatch(client.nomComplet)\"></span>\n                <ng-template #noNomComplet>\n                  <span class=\"no-phone-text\">Nom est vide</span>\n                </ng-template>\n              </td>\n              <td>\n                <span *ngIf=\"client.email; else noEmail\" [innerHTML]=\"highlightMatch(client.email)\">{{ client.email }}</span>\n                <ng-template #noEmail>\n                  <span class=\"no-phone-text\">Non email</span>\n                </ng-template>\n              </td>\n              <td>\n                <span *ngIf=\"client.adresse; else noAdresse\">{{ client.adresse }}</span>\n                <ng-template #noAdresse>\n                  <span class=\"no-phone-text\">Non adresse</span>\n                </ng-template>\n              </td>\n              <td>\n                <span *ngIf=\"client.telephone; else noPhone\">{{ client.telephone }}</span>\n                <ng-template #noPhone>\n                  <span class=\"no-phone-text\">Non numéro de téléphone</span>\n                </ng-template>\n              </td>\n              <td>\n                <div *ngIf=\"client.entrepriseClient; else noEntreprise\" class=\"iconEntrepriseList\" (click)=\"openEntrepriseClientDetail(client.id, $event)\">\n                  <i class=\"ri-git-branch-fill\" title=\"Affiliation d'Entreprise\"></i>\n                </div>\n                <ng-template #noEntreprise>\n                  <!--  <span class=\"no-phone-text\">Non entreprise</span> -->\n                </ng-template>\n              </td>\n              <td>\n                <span *ngIf=\"client.createdAt; else noDate\">{{ client.createdAt | date: 'dd/MM/yyyy' }}</span>\n                <ng-template #noDate>\n                  <span class=\"no-phone-text\">Non date</span>\n                </ng-template>\n              \n          </tr>\n      </tbody>\n    </table>\n    \n    <!-- Vue cadre (quand on active) -->\n    <div class=\"container_cadre\" *ngIf=\"!isListView && currentListType === 'clients'\">\n      <div class=\"grid-view\">\n        <div class=\"client-card\" *ngFor=\"let client of paginatedClients\" (click)=\"openClientDetail(client.id)\">\n          <div class=\"name_icon\">\n            <div class=\"tete\">\n              <span *ngIf=\"client.entrepriseClient; else noEntrepriseCard\" \n                    (click)=\"openEntrepriseClientDetail(client.id, $event)\">\n                <i class=\"ri-community-line\" title=\"Affiliation d'Entreprise\"></i>\n              </span>\n              <ng-template #noEntrepriseCard>\n                <div class=\"imgClient2\">\n                 <img [src]=\"client.photo\" alt=\"Photo client\">\n                  \n                </div>\n              </ng-template>\n\n              <h3>\n                <span *ngIf=\"client.nomComplet; else noNomComplet\"\n                      [innerHTML]=\"highlightMatch(client.nomComplet)\">{{ client.nomComplet }}</span>\n                <ng-template #noNomComplet>\n                  <span class=\"no-phone-text\">Nom est vide</span>\n                </ng-template>\n              </h3>\n            </div>\n            <span *ngIf=\"client.createdAt\" class=\"dateCreat\">{{ client.createdAt | date: 'dd/MM/yyyy' }}</span>\n          </div>\n          <div class=\"content_cadre_double\">\n            <!-- // Les information sur les cadre  -->\n            <div class=\"info_cadre\">\n              <p>\n                <i class=\"ri-mail-line\"></i>\n                <span *ngIf=\"client.email; else noEmail\" [innerHTML]=\"highlightMatch(client.email)\">{{ client.email | truncateEmail }}</span>\n                <ng-template #noEmail>\n                  <span class=\"no-phone-text\">Non email</span>\n                </ng-template>\n              </p>\n              <p>\n                <i class=\"ri-map-pin-line\"></i>\n                <span *ngIf=\"client.adresse; else noAdresse\">{{ client.adresse }}</span>\n                <ng-template #noAdresse>\n                  <span class=\"no-phone-text\">Non adresse</span>\n                </ng-template>\n              </p>\n              <p>\n                <i class=\"ri-phone-line\"></i>\n                <span *ngIf=\"client.telephone; else noPhone\">{{ client.telephone }}</span>\n                <ng-template #noPhone>\n                  <span class=\"no-phone-text\">Non numéro de téléphone</span>\n                </ng-template>\n              </p>\n            </div>\n            <!-- <div class=\"imgClient_grid\">\n              <img src=\"assets/img/office_building.png\" alt=\"Photo clients\">\n            </div> -->\n            <!-- // Image de client  -->\n            <div class=\"imgClient_grid\">\n              <!-- <img [src]=\"product.photo\"> -->\n              <!-- <img src=\"assets/img/office_building.png\" alt=\"Photo clients\"> -->\n              <!-- <img [src]=\"(!product.photo || product.photo === 'null' || product.photo.trim() === '') ? 'assets/img/image_product.png' : product.photo\"> -->\n\n              <img [src]=\"client.photo\" alt=\"Photo client\">\n              <!-- <img [src]=\"client.entrepriseClient ? 'assets/img/office_building.png' : 'assets/img/profil.png'\" alt=\"Photo clients\"> -->\n            </div>\n            <!-- <div class=\"imgClient2\">\n                <img [src]=\"client.entrepriseClient ? 'assets/img/office_building.png' : 'assets/img/profil.png'\" \n                  alt=\"Photo clients\">\n              </div> -->\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- ////////////////////////////////////////// ENTREPRISE ////////////////////////////////////////// -->\n\n    <!-- Ajoutez ce code pour l'affichage des entreprises -->\n    <!-- Vue tableau pour les entreprises -->\n    <table *ngIf=\"isListView && currentListType === 'entreprises'\">\n      <thead>\n        <th>Logo</th>\n        <th (click)=\"sort('nom')\">\n          Nom \n          <i [class]=\"sortField === 'nom' ? (sortDirection === 'asc' ? 'ri-arrow-up-s-line' : 'ri-arrow-down-s-line') : 'ri-arrow-up-down-line'\"></i>\n        </th>\n        <th> Email </th>\n        <th> Adresse </th>\n        <th> Téléphone </th>\n        <th> Pays </th>\n        <th> Siège </th>\n        <th> Secteur </th>\n        <th> Date de Creation </th>\n      </thead>\n\n      <tbody>\n          <tr *ngFor=\"let entreprise of paginatedEntreprises\" (click)=\"openEntrepriseDetail(entreprise.id)\">\n              <td>\n                <div class=\"imgClient\">\n                  <img src=\"assets/img/office_building.png\" alt=\"Logo entreprise\">\n                </div>\n              </td>\n              <td>\n                <span *ngIf=\"entreprise.nom; else noNom\" [innerHTML]=\"highlightMatch(entreprise.nom)\">{{ entreprise.nom }}</span>\n                <ng-template #noNom>\n                  <span class=\"no-phone-text\">Nom vide</span>\n                </ng-template>\n              </td>\n              <td>\n                <span *ngIf=\"entreprise.email; else noEmail\" [innerHTML]=\"highlightMatch(entreprise.email)\">{{ entreprise.email }}</span>\n                <ng-template #noEmail>\n                  <span class=\"no-phone-text\">Non email</span>\n                </ng-template>\n              </td>\n              <td>\n                <span *ngIf=\"entreprise.adresse; else noAdresse\">{{ entreprise.adresse }}</span>\n                <ng-template #noAdresse>\n                  <span class=\"no-phone-text\">Non adresse</span>\n                </ng-template>\n              </td>\n              <td>\n                <span *ngIf=\"entreprise.telephone; else noPhone\">{{ entreprise.telephone }}</span>\n                <ng-template #noPhone>\n                  <span class=\"no-phone-text\">Non téléphone</span>\n                </ng-template>\n              </td>\n              <td>{{ entreprise.pays || '--' }}</td>\n              <td>{{ entreprise.siege || '--' }}</td>\n              <td>{{ entreprise.secteur || '--' }}</td>\n              <td>\n                <span *ngIf=\"entreprise.createdAt; else noDate\">{{ entreprise.createdAt | date: 'dd/MM/yyyy' }}</span>\n                <ng-template #noDate>\n                  <span class=\"no-phone-text\">Non date</span>\n                </ng-template>\n              </td>\n          </tr>\n      </tbody>\n    </table>\n\n    <!-- Vue cadre pour les entreprises -->\n    <div class=\"container_cadre\" *ngIf=\"!isListView && currentListType === 'entreprises'\">\n      <div class=\"grid-view\">\n        <div class=\"client-card\" *ngFor=\"let entreprise of paginatedEntreprises\" (click)=\"openEntrepriseDetail(entreprise.id)\">\n          <div class=\"name_icon\">\n            <div class=\"tete\">\n              <h3>\n                <span *ngIf=\"entreprise.nom; else noNom\" [innerHTML]=\"highlightMatch(entreprise.nom)\">{{ entreprise.nom }}</span>\n                <ng-template #noNom>\n                  <span class=\"no-phone-text\">Nom est vide</span>\n                </ng-template>\n              </h3>\n            </div>\n            <span *ngIf=\"entreprise.createdAt\" class=\"dateCreat\">{{ entreprise.createdAt | date: 'dd/MM/yyyy' }}</span>\n          </div>\n          <div class=\"content_cadre_double\">\n            <div class=\"info_cadre\">\n              <p>\n                <i class=\"ri-mail-line\"></i>\n                <span *ngIf=\"entreprise.email; else noEmail\" [innerHTML]=\"highlightMatch(entreprise.email)\">{{ entreprise.email | truncateEmail }}</span>\n                <ng-template #noEmail>\n                  <span class=\"no-phone-text\">Non email</span>\n                </ng-template>\n              </p>\n              <p>\n                <i class=\"ri-map-pin-line\"></i>\n                <span *ngIf=\"entreprise.adresse; else noAdresse\">{{ entreprise.adresse }}</span>\n                <ng-template #noAdresse>\n                  <span class=\"no-phone-text\">Non adresse</span>\n                </ng-template>\n              </p>\n              <p>\n                <i class=\"ri-phone-line\"></i>\n                <span *ngIf=\"entreprise.telephone; else noPhone\">{{ entreprise.telephone }}</span>\n                <ng-template #noPhone>\n                  <span class=\"no-phone-text\">Non téléphone</span>\n                </ng-template>\n              </p>\n              <!-- <p>\n                <i class=\"ri-flag-line\"></i>\n                {{ entreprise.pays || '--' }}\n              </p>\n              <p>\n                <i class=\"ri-building-line\"></i>\n                {{ entreprise.siege || '--' }}\n              </p>\n              <p>\n                <i class=\"ri-briefcase-line\"></i>\n                {{ entreprise.secteur || '--' }}\n              </p> -->\n            </div>\n            <div class=\"imgClient_grid\">\n              <img src=\"assets/img/office_building.png\" alt=\"Logo entreprise\">\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Message quand il n'y a pas d'entreprise -->\n    <div *ngIf=\"entreprisesLoaded && entreprises.length === 0 && currentListType === 'entreprises'\" class=\"no-client-message\">\n      {{ messageNoEntreprise }}\n    </div>\n\n    <!-- Pagination pour les entreprises -->\n    <div class=\"pagination\" *ngIf=\"currentListType === 'clients'\">\n      <mat-paginator *ngIf=\"clients.length > 6\"\n        [length]=\"clients.length\"\n        [pageIndex]=\"currentPageClients\"\n        [pageSize]=\"pageSize\"\n        [pageSizeOptions]=\"[6, 10, 25, 100]\"\n        (page)=\"onPageChange($event)\">\n      </mat-paginator>\n    </div>\n\n    <!-- Message quand il n'y a pas de client -->\n    <div *ngIf=\"clientsLoaded && clients.length === 0 && currentListType === 'clients'\" class=\"no-client-message\">\n      {{ messageNoClient }}\n    </div>\n\n    <!-- Pagination -->\n    <div class=\"pagination\" *ngIf=\"currentListType === 'entreprises'\">\n      <mat-paginator *ngIf=\"entreprises.length > 6\"\n        [length]=\"entreprises.length\"\n        [pageIndex]=\"currentPageEntreprises\"\n        [pageSize]=\"pageSize\"\n        [pageSizeOptions]=\"[6, 10, 25, 100]\"\n        (page)=\"onPageChange($event)\">\n      </mat-paginator>\n    </div>\n    \n  </div>\n   \n  \n<!-- Popup overlay -->\n<div class=\"popup-overlay\" *ngIf=\"showPopup\">\n  <div class=\"popup-content\">\n      <div class=\"popup-header\">\n          <h3>Ajouter une entreprise</h3>\n          <button class=\"close-btn\" (click)=\"closePopup()\">&times;</button>\n      </div>\n\n      <div class=\"contentCadreChoix\">\n        <div class=\"cadreChoix\" routerLink=\"/ajouter-client\">\n          Client individuel\n        </div>\n\n        <div class=\"sizeBox\"></div>\n\n        <div class=\"cadreChoix\" routerLink=\"/ajouter-entreprise-client\">\n          Client entreprise\n        </div>\n      </div>\n      \n  </div>\n</div>"],"names":["HttpHeaders","BehaviorSubject","catchError","switchMap","tap","throwError","environment","EntrepriseService","constructor","http","usersService","apiUrl","apiBaseUrl","entrepriseSubject","entreprise$","asObservable","getListEntreprises","getValidAccessToken","pipe","token","headers","get","error","errorMsg","ErrorEvent","message","status","Error","addEntreprise","entreprise","post","newEntreprise","currentEntreprise","value","next","getListEntreprise","console","set","log","data","getEntrepriseById","id","updateEntreprise","formData","patch","responseType","getEntrepriseInfo","Authorization","localStorage","setItem","JSON","stringify","decodeJwt","parse","atob","split","isTokenExpired","decodedToken","expirationDate","Date","exp","getNewTokenFromApi","refreshToken","getItem","i0","ɵɵinject","i1","HttpClient","i2","UsersService","factory","ɵfac","providedIn","CommonModule","FormsModule","MatPaginator","MatPaginatorModule","MatTableDataSource","RouterLink","TruncateEmailPipe","ClickOutsideDirective","ɵɵelementStart","ɵɵlistener","ClientsComponent_div_10_Template_div_click_1_listener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","toggleView","ɵɵtext","ɵɵelementEnd","ClientsComponent_div_10_Template_div_click_3_listener","ɵɵadvance","ɵɵtextInterpolate1","isListView","ɵɵelement","ɵɵproperty","highlightMatch","client_r5","nomComplet","ɵɵsanitizeHtml","email","ɵɵtextInterpolate","adresse","telephone","ClientsComponent_table_27_tr_18_div_21_Template_div_click_0_listener","$event","_r6","$implicit","openEntrepriseClientDetail","ɵɵpipeBind2","createdAt","ClientsComponent_table_27_tr_18_Template_tr_click_0_listener","_r4","openClientDetail","ɵɵtemplate","ClientsComponent_table_27_tr_18_span_5_Template","ClientsComponent_table_27_tr_18_ng_template_6_Template","ɵɵtemplateRefExtractor","ClientsComponent_table_27_tr_18_span_9_Template","ClientsComponent_table_27_tr_18_ng_template_10_Template","ClientsComponent_table_27_tr_18_span_13_Template","ClientsComponent_table_27_tr_18_ng_template_14_Template","ClientsComponent_table_27_tr_18_span_17_Template","ClientsComponent_table_27_tr_18_ng_template_18_Template","ClientsComponent_table_27_tr_18_div_21_Template","ClientsComponent_table_27_tr_18_ng_template_22_Template","ClientsComponent_table_27_tr_18_span_25_Template","ClientsComponent_table_27_tr_18_ng_template_26_Template","photo","ɵɵsanitizeUrl","noNomComplet_r7","noEmail_r8","noAdresse_r9","noPhone_r10","entrepriseClient","noEntreprise_r11","noDate_r12","ClientsComponent_table_27_Template_th_click_4_listener","_r3","sort","ClientsComponent_table_27_tr_18_Template","ɵɵclassMap","sortField","sortDirection","paginatedClients","ClientsComponent_div_28_div_2_span_3_Template_span_click_0_listener","_r15","client_r14","ɵɵpipeBind1","ClientsComponent_div_28_div_2_Template_div_click_0_listener","_r13","ClientsComponent_div_28_div_2_span_3_Template","ClientsComponent_div_28_div_2_ng_template_4_Template","ClientsComponent_div_28_div_2_span_7_Template","ClientsComponent_div_28_div_2_ng_template_8_Template","ClientsComponent_div_28_div_2_span_10_Template","ClientsComponent_div_28_div_2_span_15_Template","ClientsComponent_div_28_div_2_ng_template_16_Template","ClientsComponent_div_28_div_2_span_20_Template","ClientsComponent_div_28_div_2_ng_template_21_Template","ClientsComponent_div_28_div_2_span_25_Template","ClientsComponent_div_28_div_2_ng_template_26_Template","noEntrepriseCard_r16","noNomComplet_r17","noEmail_r18","noAdresse_r19","noPhone_r20","ClientsComponent_div_28_div_2_Template","entreprise_r23","nom","ClientsComponent_table_29_tr_22_Template_tr_click_0_listener","_r22","openEntrepriseDetail","ClientsComponent_table_29_tr_22_span_5_Template","ClientsComponent_table_29_tr_22_ng_template_6_Template","ClientsComponent_table_29_tr_22_span_9_Template","ClientsComponent_table_29_tr_22_ng_template_10_Template","ClientsComponent_table_29_tr_22_span_13_Template","ClientsComponent_table_29_tr_22_ng_template_14_Template","ClientsComponent_table_29_tr_22_span_17_Template","ClientsComponent_table_29_tr_22_ng_template_18_Template","ClientsComponent_table_29_tr_22_span_27_Template","ClientsComponent_table_29_tr_22_ng_template_28_Template","noNom_r24","noEmail_r25","noAdresse_r26","noPhone_r27","pays","siege","secteur","noDate_r28","ClientsComponent_table_29_Template_th_click_4_listener","_r21","ClientsComponent_table_29_tr_22_Template","paginatedEntreprises","entreprise_r30","ClientsComponent_div_30_div_2_Template_div_click_0_listener","_r29","ClientsComponent_div_30_div_2_span_4_Template","ClientsComponent_div_30_div_2_ng_template_5_Template","ClientsComponent_div_30_div_2_span_7_Template","ClientsComponent_div_30_div_2_span_12_Template","ClientsComponent_div_30_div_2_ng_template_13_Template","ClientsComponent_div_30_div_2_span_17_Template","ClientsComponent_div_30_div_2_ng_template_18_Template","ClientsComponent_div_30_div_2_span_22_Template","ClientsComponent_div_30_div_2_ng_template_23_Template","noNom_r31","noEmail_r32","noAdresse_r33","noPhone_r34","ClientsComponent_div_30_div_2_Template","messageNoEntreprise","ClientsComponent_div_32_mat_paginator_1_Template_mat_paginator_page_0_listener","_r35","onPageChange","clients","length","currentPageClients","pageSize","ɵɵpureFunction0","_c0","ClientsComponent_div_32_mat_paginator_1_Template","messageNoClient","ClientsComponent_div_34_mat_paginator_1_Template_mat_paginator_page_0_listener","_r36","entreprises","currentPageEntreprises","ClientsComponent_div_34_mat_paginator_1_Template","ClientsComponent_div_35_Template_button_click_5_listener","_r37","closePopup","ClientsComponent","clientService","router","entrepriseService","sanitizer","imgUrl","showDropdown","showPopup","dataSource","currentPage","totalClients","totalEntrepriseClients","noClientsAvailable","currentListType","clientsLoaded","entreprisesLoaded","searchText","ngOnInit","savedView","savedListType","getListClients","text","trim","escapedSearch","replace","regex","RegExp","bypassSecurityTrustHtml","filteredClients","searchLower","toLowerCase","filter","client","includes","filteredEntreprises","event","pageIndex","setTimeout","viewType","setListType","type","subscribe","a","b","err","field","isValidField","modifier","valueA","toString","valueB","localeCompare","map","c","paginator","startIndex","slice","clientId","navigate","stopPropagation","entrepriseId","undefined","openPopup","ɵɵdirectiveInject","ClientService","Router","i3","i4","DomSanitizer","i5","selectors","viewQuery","ClientsComponent_Query","rf","ctx","ClientsComponent_Template_button_click_5_listener","ClientsComponent_Template_div_click_8_listener","ClientsComponent_Template_div_clickOutside_8_listener","ClientsComponent_div_10_Template","ClientsComponent_Template_div_click_12_listener","ClientsComponent_Template_div_click_18_listener","ɵɵtwoWayListener","ClientsComponent_Template_input_ngModelChange_26_listener","ɵɵtwoWayBindingSet","ClientsComponent_table_27_Template","ClientsComponent_div_28_Template","ClientsComponent_table_29_Template","ClientsComponent_div_30_Template","ClientsComponent_div_31_Template","ClientsComponent_div_32_Template","ClientsComponent_div_33_Template","ClientsComponent_div_34_Template","ClientsComponent_div_35_Template","ɵɵclassProp","ɵɵtwoWayProperty","i6","NgForOf","NgIf","DatePipe","i7","DefaultValueAccessor","NgControlStatus","NgModel","i8","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}
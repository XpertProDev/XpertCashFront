{"version":3,"file":"default-node_modules_angular_cdk_fesm2022_a11y_mjs.js","mappings":"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","sources":["./node_modules/@angular/cdk/fesm2022/a11y.mjs","./node_modules/@angular/cdk/fesm2022/activedescendant-key-manager-DC3-fwQI.mjs","./node_modules/@angular/cdk/fesm2022/coercion/private.mjs","./node_modules/@angular/cdk/fesm2022/tree-key-manager-KnCoIkIC.mjs"],"sourcesContent":["export { C as CdkMonitorFocus, d as FOCUS_MONITOR_DEFAULT_OPTIONS, F as FocusMonitor, c as FocusMonitorDetectionMode, a as INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS, b as INPUT_MODALITY_DETECTOR_OPTIONS, I as InputModalityDetector } from './focus-monitor-e2l_RpN3.mjs';\nimport { a as FocusTrap, I as InteractivityChecker } from './a11y-module-BYox5gpI.mjs';\nexport { A as A11yModule, d as CdkAriaLive, C as CdkTrapFocus, F as FocusTrapFactory, b as HighContrastMode, H as HighContrastModeDetector, c as IsFocusableConfig, g as LIVE_ANNOUNCER_DEFAULT_OPTIONS, e as LIVE_ANNOUNCER_ELEMENT_TOKEN, f as LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY, L as LiveAnnouncer } from './a11y-module-BYox5gpI.mjs';\nexport { _ as _IdGenerator } from './id-generator-Dw_9dSDu.mjs';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, APP_ID, Injectable, InjectionToken, NgZone, Injector } from '@angular/core';\nimport { P as Platform } from './platform-DmdVEw_C.mjs';\nimport { _ as _CdkPrivateStyleLoader } from './style-loader-Cu9AvjH9.mjs';\nimport { _VisuallyHiddenLoader } from './private.mjs';\nexport { A as ActiveDescendantKeyManager } from './activedescendant-key-manager-DC3-fwQI.mjs';\nexport { F as FocusKeyManager } from './focus-key-manager-C1rAQJ5z.mjs';\nexport { L as ListKeyManager } from './list-key-manager-CyOIXo8P.mjs';\nimport { Subject } from 'rxjs';\nimport { T as TREE_KEY_MANAGER } from './tree-key-manager-KnCoIkIC.mjs';\nexport { b as TREE_KEY_MANAGER_FACTORY, c as TREE_KEY_MANAGER_FACTORY_PROVIDER, a as TreeKeyManager } from './tree-key-manager-KnCoIkIC.mjs';\nexport { i as isFakeMousedownFromScreenReader, a as isFakeTouchstartFromScreenReader } from './fake-event-detection-DWOdFTFz.mjs';\nimport 'rxjs/operators';\nimport './keycodes-CpHkExLC.mjs';\nimport './shadow-dom-B0oHn41l.mjs';\nimport './backwards-compatibility-DHR38MsD.mjs';\nimport './passive-listeners-esHZRgIN.mjs';\nimport './element-x4z00URv.mjs';\nimport './breakpoints-observer-CljOfYGy.mjs';\nimport './array-I1yfCXUO.mjs';\nimport './observers.mjs';\nimport './typeahead-9ZW4Dtsf.mjs';\nimport './keycodes.mjs';\nimport './coercion/private.mjs';\n\n/** IDs are delimited by an empty space, as per the spec. */\nconst ID_DELIMITER = ' ';\n/**\n * Adds the given ID to the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction addAriaReferencedId(el, attr, id) {\n    const ids = getAriaReferenceIds(el, attr);\n    id = id.trim();\n    if (ids.some(existingId => existingId.trim() === id)) {\n        return;\n    }\n    ids.push(id);\n    el.setAttribute(attr, ids.join(ID_DELIMITER));\n}\n/**\n * Removes the given ID from the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction removeAriaReferencedId(el, attr, id) {\n    const ids = getAriaReferenceIds(el, attr);\n    id = id.trim();\n    const filteredIds = ids.filter(val => val !== id);\n    if (filteredIds.length) {\n        el.setAttribute(attr, filteredIds.join(ID_DELIMITER));\n    }\n    else {\n        el.removeAttribute(attr);\n    }\n}\n/**\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction getAriaReferenceIds(el, attr) {\n    // Get string array of all individual ids (whitespace delimited) in the attribute value\n    const attrValue = el.getAttribute(attr);\n    return attrValue?.match(/\\S+/g) ?? [];\n}\n\n/**\n * ID used for the body container where all messages are appended.\n * @deprecated No longer being used. To be removed.\n * @breaking-change 14.0.0\n */\nconst MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';\n/**\n * ID prefix used for each created message element.\n * @deprecated To be turned into a private variable.\n * @breaking-change 14.0.0\n */\nconst CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';\n/**\n * Attribute given to each host element that is described by a message element.\n * @deprecated To be turned into a private variable.\n * @breaking-change 14.0.0\n */\nconst CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';\n/** Global incremental identifier for each registered message element. */\nlet nextId = 0;\n/**\n * Utility that creates visually hidden elements with a message content. Useful for elements that\n * want to use aria-describedby to further describe themselves without adding additional visual\n * content.\n */\nclass AriaDescriber {\n    _platform = inject(Platform);\n    _document = inject(DOCUMENT);\n    /** Map of all registered message elements that have been placed into the document. */\n    _messageRegistry = new Map();\n    /** Container for all registered messages. */\n    _messagesContainer = null;\n    /** Unique ID for the service. */\n    _id = `${nextId++}`;\n    constructor() {\n        inject(_CdkPrivateStyleLoader).load(_VisuallyHiddenLoader);\n        this._id = inject(APP_ID) + '-' + nextId++;\n    }\n    describe(hostElement, message, role) {\n        if (!this._canBeDescribed(hostElement, message)) {\n            return;\n        }\n        const key = getKey(message, role);\n        if (typeof message !== 'string') {\n            // We need to ensure that the element has an ID.\n            setMessageId(message, this._id);\n            this._messageRegistry.set(key, { messageElement: message, referenceCount: 0 });\n        }\n        else if (!this._messageRegistry.has(key)) {\n            this._createMessageElement(message, role);\n        }\n        if (!this._isElementDescribedByMessage(hostElement, key)) {\n            this._addMessageReference(hostElement, key);\n        }\n    }\n    removeDescription(hostElement, message, role) {\n        if (!message || !this._isElementNode(hostElement)) {\n            return;\n        }\n        const key = getKey(message, role);\n        if (this._isElementDescribedByMessage(hostElement, key)) {\n            this._removeMessageReference(hostElement, key);\n        }\n        // If the message is a string, it means that it's one that we created for the\n        // consumer so we can remove it safely, otherwise we should leave it in place.\n        if (typeof message === 'string') {\n            const registeredMessage = this._messageRegistry.get(key);\n            if (registeredMessage && registeredMessage.referenceCount === 0) {\n                this._deleteMessageElement(key);\n            }\n        }\n        if (this._messagesContainer?.childNodes.length === 0) {\n            this._messagesContainer.remove();\n            this._messagesContainer = null;\n        }\n    }\n    /** Unregisters all created message elements and removes the message container. */\n    ngOnDestroy() {\n        const describedElements = this._document.querySelectorAll(`[${CDK_DESCRIBEDBY_HOST_ATTRIBUTE}=\"${this._id}\"]`);\n        for (let i = 0; i < describedElements.length; i++) {\n            this._removeCdkDescribedByReferenceIds(describedElements[i]);\n            describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n        }\n        this._messagesContainer?.remove();\n        this._messagesContainer = null;\n        this._messageRegistry.clear();\n    }\n    /**\n     * Creates a new element in the visually hidden message container element with the message\n     * as its content and adds it to the message registry.\n     */\n    _createMessageElement(message, role) {\n        const messageElement = this._document.createElement('div');\n        setMessageId(messageElement, this._id);\n        messageElement.textContent = message;\n        if (role) {\n            messageElement.setAttribute('role', role);\n        }\n        this._createMessagesContainer();\n        this._messagesContainer.appendChild(messageElement);\n        this._messageRegistry.set(getKey(message, role), { messageElement, referenceCount: 0 });\n    }\n    /** Deletes the message element from the global messages container. */\n    _deleteMessageElement(key) {\n        this._messageRegistry.get(key)?.messageElement?.remove();\n        this._messageRegistry.delete(key);\n    }\n    /** Creates the global container for all aria-describedby messages. */\n    _createMessagesContainer() {\n        if (this._messagesContainer) {\n            return;\n        }\n        const containerClassName = 'cdk-describedby-message-container';\n        const serverContainers = this._document.querySelectorAll(`.${containerClassName}[platform=\"server\"]`);\n        for (let i = 0; i < serverContainers.length; i++) {\n            // When going from the server to the client, we may end up in a situation where there's\n            // already a container on the page, but we don't have a reference to it. Clear the\n            // old container so we don't get duplicates. Doing this, instead of emptying the previous\n            // container, should be slightly faster.\n            serverContainers[i].remove();\n        }\n        const messagesContainer = this._document.createElement('div');\n        // We add `visibility: hidden` in order to prevent text in this container from\n        // being searchable by the browser's Ctrl + F functionality.\n        // Screen-readers will still read the description for elements with aria-describedby even\n        // when the description element is not visible.\n        messagesContainer.style.visibility = 'hidden';\n        // Even though we use `visibility: hidden`, we still apply `cdk-visually-hidden` so that\n        // the description element doesn't impact page layout.\n        messagesContainer.classList.add(containerClassName);\n        messagesContainer.classList.add('cdk-visually-hidden');\n        if (!this._platform.isBrowser) {\n            messagesContainer.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(messagesContainer);\n        this._messagesContainer = messagesContainer;\n    }\n    /** Removes all cdk-describedby messages that are hosted through the element. */\n    _removeCdkDescribedByReferenceIds(element) {\n        // Remove all aria-describedby reference IDs that are prefixed by CDK_DESCRIBEDBY_ID_PREFIX\n        const originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby').filter(id => id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0);\n        element.setAttribute('aria-describedby', originalReferenceIds.join(' '));\n    }\n    /**\n     * Adds a message reference to the element using aria-describedby and increments the registered\n     * message's reference count.\n     */\n    _addMessageReference(element, key) {\n        const registeredMessage = this._messageRegistry.get(key);\n        // Add the aria-describedby reference and set the\n        // describedby_host attribute to mark the element.\n        addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, this._id);\n        registeredMessage.referenceCount++;\n    }\n    /**\n     * Removes a message reference from the element using aria-describedby\n     * and decrements the registered message's reference count.\n     */\n    _removeMessageReference(element, key) {\n        const registeredMessage = this._messageRegistry.get(key);\n        registeredMessage.referenceCount--;\n        removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n    }\n    /** Returns true if the element has been described by the provided message ID. */\n    _isElementDescribedByMessage(element, key) {\n        const referenceIds = getAriaReferenceIds(element, 'aria-describedby');\n        const registeredMessage = this._messageRegistry.get(key);\n        const messageId = registeredMessage && registeredMessage.messageElement.id;\n        return !!messageId && referenceIds.indexOf(messageId) != -1;\n    }\n    /** Determines whether a message can be described on a particular element. */\n    _canBeDescribed(element, message) {\n        if (!this._isElementNode(element)) {\n            return false;\n        }\n        if (message && typeof message === 'object') {\n            // We'd have to make some assumptions about the description element's text, if the consumer\n            // passed in an element. Assume that if an element is passed in, the consumer has verified\n            // that it can be used as a description.\n            return true;\n        }\n        const trimmedMessage = message == null ? '' : `${message}`.trim();\n        const ariaLabel = element.getAttribute('aria-label');\n        // We shouldn't set descriptions if they're exactly the same as the `aria-label` of the\n        // element, because screen readers will end up reading out the same text twice in a row.\n        return trimmedMessage ? !ariaLabel || ariaLabel.trim() !== trimmedMessage : false;\n    }\n    /** Checks whether a node is an Element node. */\n    _isElementNode(element) {\n        return element.nodeType === this._document.ELEMENT_NODE;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: AriaDescriber, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: AriaDescriber, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: AriaDescriber, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n/** Gets a key that can be used to look messages up in the registry. */\nfunction getKey(message, role) {\n    return typeof message === 'string' ? `${role || ''}/${message}` : message;\n}\n/** Assigns a unique ID to an element, if it doesn't have one already. */\nfunction setMessageId(element, serviceId) {\n    if (!element.id) {\n        element.id = `${CDK_DESCRIBEDBY_ID_PREFIX}-${serviceId}-${nextId++}`;\n    }\n}\n\n// NoopTreeKeyManager is a \"noop\" implementation of TreeKeyMangerStrategy. Methods are noops. Does\n// not emit to streams.\n//\n// Used for applications built before TreeKeyManager to opt-out of TreeKeyManager and revert to\n// legacy behavior.\n/**\n * @docs-private\n *\n * Opt-out of Tree of key manager behavior.\n *\n * When provided, Tree has same focus management behavior as before TreeKeyManager was introduced.\n *  - Tree does not respond to keyboard interaction\n *  - Tree node allows tabindex to be set by Input binding\n *  - Tree node allows tabindex to be set by attribute binding\n *\n * @deprecated NoopTreeKeyManager deprecated. Use TreeKeyManager or inject a\n * TreeKeyManagerStrategy instead. To be removed in a future version.\n *\n * @breaking-change 21.0.0\n */\nclass NoopTreeKeyManager {\n    _isNoopTreeKeyManager = true;\n    // Provide change as required by TreeKeyManagerStrategy. NoopTreeKeyManager is a \"noop\"\n    // implementation that does not emit to streams.\n    change = new Subject();\n    destroy() {\n        this.change.complete();\n    }\n    onKeydown() {\n        // noop\n    }\n    getActiveItemIndex() {\n        // Always return null. NoopTreeKeyManager is a \"noop\" implementation that does not maintain\n        // the active item.\n        return null;\n    }\n    getActiveItem() {\n        // Always return null. NoopTreeKeyManager is a \"noop\" implementation that does not maintain\n        // the active item.\n        return null;\n    }\n    focusItem() {\n        // noop\n    }\n}\n/**\n * @docs-private\n *\n * Opt-out of Tree of key manager behavior.\n *\n * When provided, Tree has same focus management behavior as before TreeKeyManager was introduced.\n *  - Tree does not respond to keyboard interaction\n *  - Tree node allows tabindex to be set by Input binding\n *  - Tree node allows tabindex to be set by attribute binding\n *\n * @deprecated NoopTreeKeyManager deprecated. Use TreeKeyManager or inject a\n * TreeKeyManagerStrategy instead. To be removed in a future version.\n *\n * @breaking-change 21.0.0\n */\nfunction NOOP_TREE_KEY_MANAGER_FACTORY() {\n    return () => new NoopTreeKeyManager();\n}\n/**\n * @docs-private\n *\n * Opt-out of Tree of key manager behavior.\n *\n * When provided, Tree has same focus management behavior as before TreeKeyManager was introduced.\n *  - Tree does not respond to keyboard interaction\n *  - Tree node allows tabindex to be set by Input binding\n *  - Tree node allows tabindex to be set by attribute binding\n *\n * @deprecated NoopTreeKeyManager deprecated. Use TreeKeyManager or inject a\n * TreeKeyManagerStrategy instead. To be removed in a future version.\n *\n * @breaking-change 21.0.0\n */\nconst NOOP_TREE_KEY_MANAGER_FACTORY_PROVIDER = {\n    provide: TREE_KEY_MANAGER,\n    useFactory: NOOP_TREE_KEY_MANAGER_FACTORY,\n};\n\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class uses a strategy pattern that determines how it traps focus.\n * See FocusTrapInertStrategy.\n */\nclass ConfigurableFocusTrap extends FocusTrap {\n    _focusTrapManager;\n    _inertStrategy;\n    /** Whether the FocusTrap is enabled. */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        this._enabled = value;\n        if (this._enabled) {\n            this._focusTrapManager.register(this);\n        }\n        else {\n            this._focusTrapManager.deregister(this);\n        }\n    }\n    constructor(_element, _checker, _ngZone, _document, _focusTrapManager, _inertStrategy, config, injector) {\n        super(_element, _checker, _ngZone, _document, config.defer, injector);\n        this._focusTrapManager = _focusTrapManager;\n        this._inertStrategy = _inertStrategy;\n        this._focusTrapManager.register(this);\n    }\n    /** Notifies the FocusTrapManager that this FocusTrap will be destroyed. */\n    destroy() {\n        this._focusTrapManager.deregister(this);\n        super.destroy();\n    }\n    /** @docs-private Implemented as part of ManagedFocusTrap. */\n    _enable() {\n        this._inertStrategy.preventFocus(this);\n        this.toggleAnchors(true);\n    }\n    /** @docs-private Implemented as part of ManagedFocusTrap. */\n    _disable() {\n        this._inertStrategy.allowFocus(this);\n        this.toggleAnchors(false);\n    }\n}\n\n/**\n * Lightweight FocusTrapInertStrategy that adds a document focus event\n * listener to redirect focus back inside the FocusTrap.\n */\nclass EventListenerFocusTrapInertStrategy {\n    /** Focus event handler. */\n    _listener = null;\n    /** Adds a document event listener that keeps focus inside the FocusTrap. */\n    preventFocus(focusTrap) {\n        // Ensure there's only one listener per document\n        if (this._listener) {\n            focusTrap._document.removeEventListener('focus', this._listener, true);\n        }\n        this._listener = (e) => this._trapFocus(focusTrap, e);\n        focusTrap._ngZone.runOutsideAngular(() => {\n            focusTrap._document.addEventListener('focus', this._listener, true);\n        });\n    }\n    /** Removes the event listener added in preventFocus. */\n    allowFocus(focusTrap) {\n        if (!this._listener) {\n            return;\n        }\n        focusTrap._document.removeEventListener('focus', this._listener, true);\n        this._listener = null;\n    }\n    /**\n     * Refocuses the first element in the FocusTrap if the focus event target was outside\n     * the FocusTrap.\n     *\n     * This is an event listener callback. The event listener is added in runOutsideAngular,\n     * so all this code runs outside Angular as well.\n     */\n    _trapFocus(focusTrap, event) {\n        const target = event.target;\n        const focusTrapRoot = focusTrap._element;\n        // Don't refocus if target was in an overlay, because the overlay might be associated\n        // with an element inside the FocusTrap, ex. mat-select.\n        if (target && !focusTrapRoot.contains(target) && !target.closest?.('div.cdk-overlay-pane')) {\n            // Some legacy FocusTrap usages have logic that focuses some element on the page\n            // just before FocusTrap is destroyed. For backwards compatibility, wait\n            // to be sure FocusTrap is still enabled before refocusing.\n            setTimeout(() => {\n                // Check whether focus wasn't put back into the focus trap while the timeout was pending.\n                if (focusTrap.enabled && !focusTrapRoot.contains(focusTrap._document.activeElement)) {\n                    focusTrap.focusFirstTabbableElement();\n                }\n            });\n        }\n    }\n}\n\n/** The injection token used to specify the inert strategy. */\nconst FOCUS_TRAP_INERT_STRATEGY = new InjectionToken('FOCUS_TRAP_INERT_STRATEGY');\n\n/** Injectable that ensures only the most recently enabled FocusTrap is active. */\nclass FocusTrapManager {\n    // A stack of the FocusTraps on the page. Only the FocusTrap at the\n    // top of the stack is active.\n    _focusTrapStack = [];\n    /**\n     * Disables the FocusTrap at the top of the stack, and then pushes\n     * the new FocusTrap onto the stack.\n     */\n    register(focusTrap) {\n        // Dedupe focusTraps that register multiple times.\n        this._focusTrapStack = this._focusTrapStack.filter(ft => ft !== focusTrap);\n        let stack = this._focusTrapStack;\n        if (stack.length) {\n            stack[stack.length - 1]._disable();\n        }\n        stack.push(focusTrap);\n        focusTrap._enable();\n    }\n    /**\n     * Removes the FocusTrap from the stack, and activates the\n     * FocusTrap that is the new top of the stack.\n     */\n    deregister(focusTrap) {\n        focusTrap._disable();\n        const stack = this._focusTrapStack;\n        const i = stack.indexOf(focusTrap);\n        if (i !== -1) {\n            stack.splice(i, 1);\n            if (stack.length) {\n                stack[stack.length - 1]._enable();\n            }\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: FocusTrapManager, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: FocusTrapManager, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: FocusTrapManager, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/** Factory that allows easy instantiation of configurable focus traps. */\nclass ConfigurableFocusTrapFactory {\n    _checker = inject(InteractivityChecker);\n    _ngZone = inject(NgZone);\n    _focusTrapManager = inject(FocusTrapManager);\n    _document = inject(DOCUMENT);\n    _inertStrategy;\n    _injector = inject(Injector);\n    constructor() {\n        const inertStrategy = inject(FOCUS_TRAP_INERT_STRATEGY, { optional: true });\n        // TODO split up the strategies into different modules, similar to DateAdapter.\n        this._inertStrategy = inertStrategy || new EventListenerFocusTrapInertStrategy();\n    }\n    create(element, config = { defer: false }) {\n        let configObject;\n        if (typeof config === 'boolean') {\n            configObject = { defer: config };\n        }\n        else {\n            configObject = config;\n        }\n        return new ConfigurableFocusTrap(element, this._checker, this._ngZone, this._document, this._focusTrapManager, this._inertStrategy, configObject, this._injector);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: ConfigurableFocusTrapFactory, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: ConfigurableFocusTrapFactory, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"19.2.6\", ngImport: i0, type: ConfigurableFocusTrapFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [] });\n\nexport { AriaDescriber, CDK_DESCRIBEDBY_HOST_ATTRIBUTE, CDK_DESCRIBEDBY_ID_PREFIX, ConfigurableFocusTrap, ConfigurableFocusTrapFactory, EventListenerFocusTrapInertStrategy, FOCUS_TRAP_INERT_STRATEGY, FocusTrap, InteractivityChecker, MESSAGES_CONTAINER_ID, NOOP_TREE_KEY_MANAGER_FACTORY, NOOP_TREE_KEY_MANAGER_FACTORY_PROVIDER, NoopTreeKeyManager, TREE_KEY_MANAGER, addAriaReferencedId, getAriaReferenceIds, removeAriaReferencedId };\n","import { L as ListKeyManager } from './list-key-manager-CyOIXo8P.mjs';\n\nclass ActiveDescendantKeyManager extends ListKeyManager {\n    setActiveItem(index) {\n        if (this.activeItem) {\n            this.activeItem.setInactiveStyles();\n        }\n        super.setActiveItem(index);\n        if (this.activeItem) {\n            this.activeItem.setActiveStyles();\n        }\n    }\n}\n\nexport { ActiveDescendantKeyManager as A };\n","import { isObservable, of } from 'rxjs';\n\n/**\n * Given either an Observable or non-Observable value, returns either the original\n * Observable, or wraps it in an Observable that emits the non-Observable value.\n */\nfunction coerceObservable(data) {\n    if (!isObservable(data)) {\n        return of(data);\n    }\n    return data;\n}\n\nexport { coerceObservable };\n","import { QueryList, InjectionToken } from '@angular/core';\nimport { Subscription, isObservable, Subject, of } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { T as Typeahead } from './typeahead-9ZW4Dtsf.mjs';\nimport { coerceObservable } from './coercion/private.mjs';\n\n/**\n * This class manages keyboard events for trees. If you pass it a QueryList or other list of tree\n * items, it will set the active item, focus, handle expansion and typeahead correctly when\n * keyboard events occur.\n */\nclass TreeKeyManager {\n    /** The index of the currently active (focused) item. */\n    _activeItemIndex = -1;\n    /** The currently active (focused) item. */\n    _activeItem = null;\n    /** Whether or not we activate the item when it's focused. */\n    _shouldActivationFollowFocus = false;\n    /**\n     * The orientation that the tree is laid out in. In `rtl` mode, the behavior of Left and\n     * Right arrow are switched.\n     */\n    _horizontalOrientation = 'ltr';\n    /**\n     * Predicate function that can be used to check whether an item should be skipped\n     * by the key manager.\n     *\n     * The default value for this doesn't skip any elements in order to keep tree items focusable\n     * when disabled. This aligns with ARIA guidelines:\n     * https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/#focusabilityofdisabledcontrols.\n     */\n    _skipPredicateFn = (_item) => false;\n    /** Function to determine equivalent items. */\n    _trackByFn = (item) => item;\n    /** Synchronous cache of the items to manage. */\n    _items = [];\n    _typeahead;\n    _typeaheadSubscription = Subscription.EMPTY;\n    _hasInitialFocused = false;\n    _initializeFocus() {\n        if (this._hasInitialFocused || this._items.length === 0) {\n            return;\n        }\n        let activeIndex = 0;\n        for (let i = 0; i < this._items.length; i++) {\n            if (!this._skipPredicateFn(this._items[i]) && !this._isItemDisabled(this._items[i])) {\n                activeIndex = i;\n                break;\n            }\n        }\n        const activeItem = this._items[activeIndex];\n        // Use `makeFocusable` here, because we want the item to just be focusable, not actually\n        // capture the focus since the user isn't interacting with it. See #29628.\n        if (activeItem.makeFocusable) {\n            this._activeItem?.unfocus();\n            this._activeItemIndex = activeIndex;\n            this._activeItem = activeItem;\n            this._typeahead?.setCurrentSelectedItemIndex(activeIndex);\n            activeItem.makeFocusable();\n        }\n        else {\n            // Backwards compatibility for items that don't implement `makeFocusable`.\n            this.focusItem(activeIndex);\n        }\n        this._hasInitialFocused = true;\n    }\n    /**\n     *\n     * @param items List of TreeKeyManager options. Can be synchronous or asynchronous.\n     * @param config Optional configuration options. By default, use 'ltr' horizontal orientation. By\n     * default, do not skip any nodes. By default, key manager only calls `focus` method when items\n     * are focused and does not call `activate`. If `typeaheadDefaultInterval` is `true`, use a\n     * default interval of 200ms.\n     */\n    constructor(items, config) {\n        // We allow for the items to be an array or Observable because, in some cases, the consumer may\n        // not have access to a QueryList of the items they want to manage (e.g. when the\n        // items aren't being collected via `ViewChildren` or `ContentChildren`).\n        if (items instanceof QueryList) {\n            this._items = items.toArray();\n            items.changes.subscribe((newItems) => {\n                this._items = newItems.toArray();\n                this._typeahead?.setItems(this._items);\n                this._updateActiveItemIndex(this._items);\n                this._initializeFocus();\n            });\n        }\n        else if (isObservable(items)) {\n            items.subscribe(newItems => {\n                this._items = newItems;\n                this._typeahead?.setItems(newItems);\n                this._updateActiveItemIndex(newItems);\n                this._initializeFocus();\n            });\n        }\n        else {\n            this._items = items;\n            this._initializeFocus();\n        }\n        if (typeof config.shouldActivationFollowFocus === 'boolean') {\n            this._shouldActivationFollowFocus = config.shouldActivationFollowFocus;\n        }\n        if (config.horizontalOrientation) {\n            this._horizontalOrientation = config.horizontalOrientation;\n        }\n        if (config.skipPredicate) {\n            this._skipPredicateFn = config.skipPredicate;\n        }\n        if (config.trackBy) {\n            this._trackByFn = config.trackBy;\n        }\n        if (typeof config.typeAheadDebounceInterval !== 'undefined') {\n            this._setTypeAhead(config.typeAheadDebounceInterval);\n        }\n    }\n    /** Stream that emits any time the focused item changes. */\n    change = new Subject();\n    /** Cleans up the key manager. */\n    destroy() {\n        this._typeaheadSubscription.unsubscribe();\n        this._typeahead?.destroy();\n        this.change.complete();\n    }\n    /**\n     * Handles a keyboard event on the tree.\n     * @param event Keyboard event that represents the user interaction with the tree.\n     */\n    onKeydown(event) {\n        const key = event.key;\n        switch (key) {\n            case 'Tab':\n                // Return early here, in order to allow Tab to actually tab out of the tree\n                return;\n            case 'ArrowDown':\n                this._focusNextItem();\n                break;\n            case 'ArrowUp':\n                this._focusPreviousItem();\n                break;\n            case 'ArrowRight':\n                this._horizontalOrientation === 'rtl'\n                    ? this._collapseCurrentItem()\n                    : this._expandCurrentItem();\n                break;\n            case 'ArrowLeft':\n                this._horizontalOrientation === 'rtl'\n                    ? this._expandCurrentItem()\n                    : this._collapseCurrentItem();\n                break;\n            case 'Home':\n                this._focusFirstItem();\n                break;\n            case 'End':\n                this._focusLastItem();\n                break;\n            case 'Enter':\n            case ' ':\n                this._activateCurrentItem();\n                break;\n            default:\n                if (event.key === '*') {\n                    this._expandAllItemsAtCurrentItemLevel();\n                    break;\n                }\n                this._typeahead?.handleKey(event);\n                // Return here, in order to avoid preventing the default action of non-navigational\n                // keys or resetting the buffer of pressed letters.\n                return;\n        }\n        // Reset the typeahead since the user has used a navigational key.\n        this._typeahead?.reset();\n        event.preventDefault();\n    }\n    /** Index of the currently active item. */\n    getActiveItemIndex() {\n        return this._activeItemIndex;\n    }\n    /** The currently active item. */\n    getActiveItem() {\n        return this._activeItem;\n    }\n    /** Focus the first available item. */\n    _focusFirstItem() {\n        this.focusItem(this._findNextAvailableItemIndex(-1));\n    }\n    /** Focus the last available item. */\n    _focusLastItem() {\n        this.focusItem(this._findPreviousAvailableItemIndex(this._items.length));\n    }\n    /** Focus the next available item. */\n    _focusNextItem() {\n        this.focusItem(this._findNextAvailableItemIndex(this._activeItemIndex));\n    }\n    /** Focus the previous available item. */\n    _focusPreviousItem() {\n        this.focusItem(this._findPreviousAvailableItemIndex(this._activeItemIndex));\n    }\n    focusItem(itemOrIndex, options = {}) {\n        // Set default options\n        options.emitChangeEvent ??= true;\n        let index = typeof itemOrIndex === 'number'\n            ? itemOrIndex\n            : this._items.findIndex(item => this._trackByFn(item) === this._trackByFn(itemOrIndex));\n        if (index < 0 || index >= this._items.length) {\n            return;\n        }\n        const activeItem = this._items[index];\n        // If we're just setting the same item, don't re-call activate or focus\n        if (this._activeItem !== null &&\n            this._trackByFn(activeItem) === this._trackByFn(this._activeItem)) {\n            return;\n        }\n        const previousActiveItem = this._activeItem;\n        this._activeItem = activeItem ?? null;\n        this._activeItemIndex = index;\n        this._typeahead?.setCurrentSelectedItemIndex(index);\n        this._activeItem?.focus();\n        previousActiveItem?.unfocus();\n        if (options.emitChangeEvent) {\n            this.change.next(this._activeItem);\n        }\n        if (this._shouldActivationFollowFocus) {\n            this._activateCurrentItem();\n        }\n    }\n    _updateActiveItemIndex(newItems) {\n        const activeItem = this._activeItem;\n        if (!activeItem) {\n            return;\n        }\n        const newIndex = newItems.findIndex(item => this._trackByFn(item) === this._trackByFn(activeItem));\n        if (newIndex > -1 && newIndex !== this._activeItemIndex) {\n            this._activeItemIndex = newIndex;\n            this._typeahead?.setCurrentSelectedItemIndex(newIndex);\n        }\n    }\n    _setTypeAhead(debounceInterval) {\n        this._typeahead = new Typeahead(this._items, {\n            debounceInterval: typeof debounceInterval === 'number' ? debounceInterval : undefined,\n            skipPredicate: item => this._skipPredicateFn(item),\n        });\n        this._typeaheadSubscription = this._typeahead.selectedItem.subscribe(item => {\n            this.focusItem(item);\n        });\n    }\n    _findNextAvailableItemIndex(startingIndex) {\n        for (let i = startingIndex + 1; i < this._items.length; i++) {\n            if (!this._skipPredicateFn(this._items[i])) {\n                return i;\n            }\n        }\n        return startingIndex;\n    }\n    _findPreviousAvailableItemIndex(startingIndex) {\n        for (let i = startingIndex - 1; i >= 0; i--) {\n            if (!this._skipPredicateFn(this._items[i])) {\n                return i;\n            }\n        }\n        return startingIndex;\n    }\n    /**\n     * If the item is already expanded, we collapse the item. Otherwise, we will focus the parent.\n     */\n    _collapseCurrentItem() {\n        if (!this._activeItem) {\n            return;\n        }\n        if (this._isCurrentItemExpanded()) {\n            this._activeItem.collapse();\n        }\n        else {\n            const parent = this._activeItem.getParent();\n            if (!parent || this._skipPredicateFn(parent)) {\n                return;\n            }\n            this.focusItem(parent);\n        }\n    }\n    /**\n     * If the item is already collapsed, we expand the item. Otherwise, we will focus the first child.\n     */\n    _expandCurrentItem() {\n        if (!this._activeItem) {\n            return;\n        }\n        if (!this._isCurrentItemExpanded()) {\n            this._activeItem.expand();\n        }\n        else {\n            coerceObservable(this._activeItem.getChildren())\n                .pipe(take(1))\n                .subscribe(children => {\n                const firstChild = children.find(child => !this._skipPredicateFn(child));\n                if (!firstChild) {\n                    return;\n                }\n                this.focusItem(firstChild);\n            });\n        }\n    }\n    _isCurrentItemExpanded() {\n        if (!this._activeItem) {\n            return false;\n        }\n        return typeof this._activeItem.isExpanded === 'boolean'\n            ? this._activeItem.isExpanded\n            : this._activeItem.isExpanded();\n    }\n    _isItemDisabled(item) {\n        return typeof item.isDisabled === 'boolean' ? item.isDisabled : item.isDisabled?.();\n    }\n    /** For all items that are the same level as the current item, we expand those items. */\n    _expandAllItemsAtCurrentItemLevel() {\n        if (!this._activeItem) {\n            return;\n        }\n        const parent = this._activeItem.getParent();\n        let itemsToExpand;\n        if (!parent) {\n            itemsToExpand = of(this._items.filter(item => item.getParent() === null));\n        }\n        else {\n            itemsToExpand = coerceObservable(parent.getChildren());\n        }\n        itemsToExpand.pipe(take(1)).subscribe(items => {\n            for (const item of items) {\n                item.expand();\n            }\n        });\n    }\n    _activateCurrentItem() {\n        this._activeItem?.activate();\n    }\n}\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction TREE_KEY_MANAGER_FACTORY() {\n    return (items, options) => new TreeKeyManager(items, options);\n}\n/** Injection token that determines the key manager to use. */\nconst TREE_KEY_MANAGER = new InjectionToken('tree-key-manager', {\n    providedIn: 'root',\n    factory: TREE_KEY_MANAGER_FACTORY,\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nconst TREE_KEY_MANAGER_FACTORY_PROVIDER = {\n    provide: TREE_KEY_MANAGER,\n    useFactory: TREE_KEY_MANAGER_FACTORY,\n};\n\nexport { TREE_KEY_MANAGER as T, TreeKeyManager as a, TREE_KEY_MANAGER_FACTORY as b, TREE_KEY_MANAGER_FACTORY_PROVIDER as c };\n"],"names":["C","CdkMonitorFocus","d","FOCUS_MONITOR_DEFAULT_OPTIONS","F","FocusMonitor","c","FocusMonitorDetectionMode","a","INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS","b","INPUT_MODALITY_DETECTOR_OPTIONS","I","InputModalityDetector","FocusTrap","InteractivityChecker","A","A11yModule","CdkAriaLive","CdkTrapFocus","FocusTrapFactory","HighContrastMode","H","HighContrastModeDetector","IsFocusableConfig","g","LIVE_ANNOUNCER_DEFAULT_OPTIONS","e","LIVE_ANNOUNCER_ELEMENT_TOKEN","f","LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY","L","LiveAnnouncer","_","_IdGenerator","DOCUMENT","i0","inject","APP_ID","Injectable","InjectionToken","NgZone","Injector","P","Platform","_CdkPrivateStyleLoader","_VisuallyHiddenLoader","ActiveDescendantKeyManager","FocusKeyManager","ListKeyManager","Subject","T","TREE_KEY_MANAGER","TREE_KEY_MANAGER_FACTORY","TREE_KEY_MANAGER_FACTORY_PROVIDER","TreeKeyManager","i","isFakeMousedownFromScreenReader","isFakeTouchstartFromScreenReader","ID_DELIMITER","addAriaReferencedId","el","attr","id","ids","getAriaReferenceIds","trim","some","existingId","push","setAttribute","join","removeAriaReferencedId","filteredIds","filter","val","length","removeAttribute","attrValue","getAttribute","match","MESSAGES_CONTAINER_ID","CDK_DESCRIBEDBY_ID_PREFIX","CDK_DESCRIBEDBY_HOST_ATTRIBUTE","nextId","AriaDescriber","_platform","_document","_messageRegistry","Map","_messagesContainer","_id","constructor","load","describe","hostElement","message","role","_canBeDescribed","key","getKey","setMessageId","set","messageElement","referenceCount","has","_createMessageElement","_isElementDescribedByMessage","_addMessageReference","removeDescription","_isElementNode","_removeMessageReference","registeredMessage","get","_deleteMessageElement","childNodes","remove","ngOnDestroy","describedElements","querySelectorAll","_removeCdkDescribedByReferenceIds","clear","createElement","textContent","_createMessagesContainer","appendChild","delete","containerClassName","serverContainers","messagesContainer","style","visibility","classList","add","isBrowser","body","element","originalReferenceIds","indexOf","referenceIds","messageId","trimmedMessage","ariaLabel","nodeType","ELEMENT_NODE","ɵfac","AriaDescriber_Factory","__ngFactoryType__","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","type","args","serviceId","NoopTreeKeyManager","_isNoopTreeKeyManager","change","destroy","complete","onKeydown","getActiveItemIndex","getActiveItem","focusItem","NOOP_TREE_KEY_MANAGER_FACTORY","NOOP_TREE_KEY_MANAGER_FACTORY_PROVIDER","provide","useFactory","ConfigurableFocusTrap","_focusTrapManager","_inertStrategy","enabled","_enabled","value","register","deregister","_element","_checker","_ngZone","config","injector","defer","_enable","preventFocus","toggleAnchors","_disable","allowFocus","EventListenerFocusTrapInertStrategy","_listener","focusTrap","removeEventListener","_trapFocus","runOutsideAngular","addEventListener","event","target","focusTrapRoot","contains","closest","setTimeout","activeElement","focusFirstTabbableElement","FOCUS_TRAP_INERT_STRATEGY","FocusTrapManager","_focusTrapStack","ft","stack","splice","FocusTrapManager_Factory","ConfigurableFocusTrapFactory","_injector","inertStrategy","optional","create","configObject","ConfigurableFocusTrapFactory_Factory","setActiveItem","index","activeItem","setInactiveStyles","setActiveStyles","isObservable","of","coerceObservable","data","QueryList","Subscription","take","Typeahead","_activeItemIndex","_activeItem","_shouldActivationFollowFocus","_horizontalOrientation","_skipPredicateFn","_item","_trackByFn","item","_items","_typeahead","_typeaheadSubscription","EMPTY","_hasInitialFocused","_initializeFocus","activeIndex","_isItemDisabled","makeFocusable","unfocus","setCurrentSelectedItemIndex","items","toArray","changes","subscribe","newItems","setItems","_updateActiveItemIndex","shouldActivationFollowFocus","horizontalOrientation","skipPredicate","trackBy","typeAheadDebounceInterval","_setTypeAhead","unsubscribe","_focusNextItem","_focusPreviousItem","_collapseCurrentItem","_expandCurrentItem","_focusFirstItem","_focusLastItem","_activateCurrentItem","_expandAllItemsAtCurrentItemLevel","handleKey","reset","preventDefault","_findNextAvailableItemIndex","_findPreviousAvailableItemIndex","itemOrIndex","options","emitChangeEvent","findIndex","previousActiveItem","focus","next","newIndex","debounceInterval","undefined","selectedItem","startingIndex","_isCurrentItemExpanded","collapse","parent","getParent","expand","getChildren","pipe","children","firstChild","find","child","isExpanded","isDisabled","itemsToExpand","activate"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3]}
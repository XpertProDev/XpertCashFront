{"version":3,"file":"src_app_demo_pages_authentication_login_inscription_inscription_component_ts.js","mappings":"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","sources":["./src/app/demo/pages/authentication/login/inscription/inscription.component.ts","./src/app/demo/pages/authentication/login/inscription/inscription.component.html"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, AbstractControl, ReactiveFormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { HeaderNavComponent } from 'src/app/admin-page/Navigation/header-nav/header-nav.component';\n// import { SharedDataService } from 'src/app/admin-page/SERVICES/shared-data.service';\nimport { UsersService } from 'src/app/admin-page/SERVICES/users.service';\n\n@Component({\n  selector: 'app-inscription',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, HeaderNavComponent],\n  templateUrl: './inscription.component.html',\n  styleUrls: ['./inscription.component.scss']\n})\nexport class InscriptionComponent implements OnInit {\n  registerForm!: FormGroup;\n  entrepriseName: string = '';\n  errorMessage: string = '';\n\n  // Propriétés pour la popup\n  showPopup: boolean = false;\n  popupTitle: string = '';\n  popupMessage: string = '';\n  popupImage: string = '';\n  popupType: 'success' | 'error' = 'success';\n\n  isLoading: boolean = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private usersService: UsersService,\n    private router: Router,\n    // private sharedDataService: SharedDataService\n  ) { }\n\n  ngOnInit(): void {\n    this.registerForm = this.fb.group({\n      nomComplet: ['', Validators.required],\n      nomEntreprise: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      pays: ['', Validators.required],\n      phone: ['', [Validators.required, Validators.minLength(8)]], \n      password: ['', [Validators.required, Validators.minLength(8)]],\n      confirmPassword: ['', Validators.required],\n      nomBoutique: ['']\n    }, { validator: this.passwordMatchValidator });\n  }\n\n  // Validation personnalisée pour vérifier que \"password\" et \"confirmPassword\" correspondent\n  passwordMatchValidator(form: AbstractControl) {\n    const password = form.get('password')?.value;\n    const confirmPassword = form.get('confirmPassword')?.value;\n    if (password !== confirmPassword) {\n      form.get('confirmPassword')?.setErrors({ mismatch: true });\n    } else {\n      form.get('confirmPassword')?.setErrors(null);\n    }\n    return null;\n  }\n\n  // Mise à jour dynamique du nom d'entreprise\n  updateEntrepriseName(event: Event): void {\n    this.entrepriseName = (event.target as HTMLInputElement).value.toLowerCase();\n    this.registerForm.get('nomEntreprise')?.setValue(this.entrepriseName);\n  }\n\n  // Ouvre la popup avec titre, message et type (success ou error)\n  openPopup(title: string, message: string, type: 'success' | 'error'): void {\n    this.popupTitle = title;\n    this.popupMessage = message;\n    this.popupType = type;\n    // Choix de l'image en fonction du type\n    if (type === 'success') {\n      this.popupImage = 'assets/img/succcccc.png'; // Remplacez par le chemin de votre image de succès\n    } else {\n      this.popupImage = 'assets/img/error.png'; // Remplacez par le chemin de votre image d'erreur\n    }\n    this.showPopup = true;\n  }\n\n  // Ferme la popup et redirige si l'inscription a réussi\n  closePopup(): void {\n    this.showPopup = false;\n    if (this.popupType === 'success') {\n      this.router.navigate(['/connexion']);\n    }\n  }\n\n  submitForm(): void {\n    if (this.registerForm.invalid) {\n      this.errorMessage = \"Veuillez vérifier les informations saisies.\";\n      return;\n    }\n  \n    this.isLoading = true;\n    // Exclure 'confirmPassword' des données envoyées\n    const { confirmPassword, ...userData } = this.registerForm.value;\n  \n    // On suppose que l'interface Users correspond aux champs attendus par le back-end\n    const user = userData;\n  \n    setTimeout(() => { // Simuler un délai de 2 secondes\n      this.usersService.registerUser(user).subscribe({\n        next: (response: any) => {\n          console.log(\"Réponse API :\", response); \n          this.isLoading = false;\n  \n          if (response && response.message) {\n            // Mettre à jour le service partagé avec le nom de la boutique reçu (response.nomBoutique)\n            // if(response.nomBoutique) {\n            //   console.log(\"Boutique dans la réponse :\", response.nomBoutique);\n            //   this.sharedDataService.setBoutiqueName(response.nomBoutique);\n            // } else {\n            //   console.error(\"La réponse ne contient pas 'nomBoutique'.\");\n            // }\n            this.openPopup(\"Inscription réussie !\", response.message, 'success');\n          } else {\n            this.errorMessage = response.error || \"Erreur d'inscription, veuillez vérifier les champs.\";\n            this.openPopup(\"Erreur d'inscription\", this.errorMessage, 'error');\n          }\n        },\n        error: (error) => {\n          this.isLoading = false;\n          console.error(\"Erreur complète :\", error);\n          let message = \"Une erreur est survenue lors de l'inscription.\";\n  \n          if (error.status === 400 || error.status === 500) {\n            if (typeof error.error === \"string\") {\n              const match = error.error.match(/interpolatedMessage='([^']+)'/);\n              message = match ? match[1] : error.error;\n            } else if (error.error?.error) {\n              message = error.error.error;\n            }\n          }\n  \n          this.openPopup(\"❌ Oups, une erreur !\", message, \"error\");\n        }\n      });\n    }, 1000);\n  }\n\n  get f() { return this.registerForm.controls; }\n}\n","<!--=========================== NAVIGATION ===========================-->\n<app-header-nav></app-header-nav>\n\n<div class=\"container_global\">\n    <div class=\"container_global_content\">\n      <div *ngIf=\"isLoading\" class=\"loading-overlay\">\n        <div class=\"loading-content\">\n          <div class=\"spinner\"></div>\n          <p>Inscription en cours...</p>\n        </div>\n      </div>\n\n        <!-- Page -->\n        <div class=\"content_page\">\n            <section class=\"welcome\">\n                <h2>Bienvenue chez <span>Tchakeda</span></h2>\n                <p>Saisis vos information pour être de la famille</p>\n            </section>\n\n            <section class=\"formulaire_img\">\n                <div class=\"info_form_left\">\n                    <form [formGroup]=\"registerForm\" (ngSubmit)=\"submitForm()\">\n                        <div class=\"title_form\">\n                          <h2>Inscription</h2>\n                        </div>\n                      \n                        <div class=\"formulaire\">\n                          <!-- Nom complet -->\n                          <div class=\"champ_input\">\n                            <input type=\"text\" formControlName=\"nomComplet\" class=\"input_focus\" placeholder=\"Saisis votre nom\">\n                            <label class=\"label\">Nom complet</label>\n                            <div *ngIf=\"f['nomComplet'].touched && f['nomComplet'].invalid\" class=\"error-message\">\n                              Le nom complet est vide.\n                            </div>\n                          </div>\n                      \n                          <!-- Nom entreprise et email -->\n                          <div class=\"double_input\">\n                            <div class=\"afficheEntreprise\">\n                              <div class=\"champ_input\">\n                                <input type=\"text\" formControlName=\"nomEntreprise\" class=\"input_focus\" style=\"text-transform: capitalize;\" placeholder=\"Votre nom entreprise\" (input)=\"updateEntrepriseName($event)\">\n                                <label class=\"label\">Nom entreprise</label>\n                                <div *ngIf=\"f['nomEntreprise'].touched && f['nomEntreprise'].invalid\" class=\"error-message\">\n                                    Le nom entreprise est vide.\n                                  </div>\n                              </div>\n                              <p class=\"entreprseDomaine\">\n                                {{ entrepriseName }}<span class=\"entreprseDomaineSite\">.tchakeda.com</span>\n                              </p>\n                            </div>\n                      \n                            <div class=\"champ_input champ_input_margin\">\n                                <input type=\"email\" formControlName=\"email\" class=\"input_focus\" placeholder=\"Saisis votre email\">\n                                <label class=\"label\">Votre email</label>\n                                <div *ngIf=\"f['email'].touched && f['email'].invalid\" class=\"error-message\">\n                                  <span *ngIf=\"f['email'].errors?.['required']\">Email est vide.</span>\n                                  <span *ngIf=\"f['email'].errors?.['email']\">Email n'est pas valide.</span>\n                                </div>\n                            </div>\n                          </div>\n                      \n                          <!-- Pays et téléphone -->\n                          <div class=\"double_input\" style=\"margin-top: 30px;\">\n                            <div class=\"champ_input\">\n                              <select formControlName=\"pays\" class=\"input_focus\" required>\n                                <option value=\"\" disabled selected>Pays</option>\n                                <option value=\"Mali\">Mali</option>\n                                <option value=\"Senegal\">Sénégal</option>\n                                <option value=\"Côte d'Ivoire\">Côte d'Ivoire</option>\n                              </select>\n                              <div *ngIf=\"f['pays'].touched && f['pays'].invalid\" class=\"error-message\">\n                                Le pays est vide.\n                              </div>\n                            </div>\n                      \n                            <!-- Téléphone -->\n                            <div class=\"champ_input champ_input_margin\">\n                                <input type=\"text\" formControlName=\"phone\" class=\"input_focus\" placeholder=\"00 00 00 00\">\n                                <label class=\"label\">Numero téléphone</label>\n                                <div *ngIf=\"f['phone'].touched && f['phone'].invalid\" class=\"error-message\">\n                                    <span *ngIf=\"f['phone'].errors?.['required']\">Le numéro de téléphone est vide.</span>\n                                    <span *ngIf=\"f['phone'].errors?.['minlength']\">Au moins 8 caractères.</span>\n                                </div>\n                            </div>\n                          </div>\n                      \n                          <!-- Mot de passe et confirmation -->\n                          <div class=\"double_input\">\n                            <div class=\"champ_input\">\n                                <input type=\"password\" formControlName=\"password\" class=\"input_focus\" placeholder=\"****************\">\n                                <label class=\"label\">Mot de passe</label>\n                                <div *ngIf=\"f['password'].touched && f['password'].invalid\" class=\"error-message\">\n                                    <span *ngIf=\"f['password'].errors?.['required']\">Mot de passe est vide.</span>\n                                    <span *ngIf=\"f['password'].errors?.['minlength']\">Au moins 8 caractères.</span>\n                                </div>\n                                </div>\n                        \n                                <div class=\"champ_input champ_input_margin\">\n                                <input type=\"password\" formControlName=\"confirmPassword\" class=\"input_focus\" placeholder=\"****************\">\n                                <label class=\"label\">Confirmation</label>\n                                <div *ngIf=\"f['confirmPassword'].touched && f['confirmPassword'].invalid\" class=\"error-message\">\n                                    <span *ngIf=\"f['confirmPassword'].errors?.['required']\">Confirmation est vide.</span>\n                                    <span *ngIf=\"f['confirmPassword'].errors?.['mismatch']\">Les mots de passe ne correspondent pas.</span>\n                                </div>\n                            </div>\n                          </div>\n                      \n                          <!-- Message d'erreur global -->\n                          <div *ngIf=\"errorMessage\" class=\"error-message\">\n                            {{ errorMessage }}\n                          </div>\n                      \n                          <!-- Bouton de soumission -->\n                          <div class=\"btn_contact\">\n                            <button type=\"submit\" (click)=\"submitForm()\" [disabled]=\"isLoading\">Continuer</button>\n                          </div>\n                        </div>\n\n                        <!-- Popup de confirmation / d'erreur -->\n                        <div class=\"modal-overlay\" *ngIf=\"showPopup\">\n                            <div class=\"modal-content\" [ngClass]=\"{'error': popupType === 'error'}\">\n                              <div class=\"popup-header\">\n                                <div class=\"popup-img\">\n                                    <img [src]=\"popupImage\" alt=\"Icone\" class=\"popup-icon\">\n                                </div>\n                                <h2>{{ popupTitle }}</h2>\n                              </div>\n                              <p>{{ popupMessage }}</p>\n                              <button (click)=\"closePopup()\">OK</button>\n                            </div>\n                        </div>\n                        \n  \n                      </form>                \n                </div>\n\n                <div class=\"info_form_right\">\n                    <div class=\"image_header\">\n                        <img src=\"assets/img/logout_img.png\" alt=\"\">\n                    </div>\n                </div>\n            </section>\n        </div>\n    </div>\n\n</div>\n\n<!-- Les diffrenet temoignage -->\n<div class=\"container_temoignage\">\n\n  <div class=\"content_temoignage\">\n    <!-- temoignage left image -->\n    <div class=\"temoignage_left\">\n      <div class=\"image_temoignage\">\n        <img src=\"assets/img/temoignage1.png\" alt=\"Image de temoignage\">\n      </div>\n    </div>\n    <!-- temoignage right contenue -->\n    <div class=\"temoignage_right\">\n      <h2 class=\"title\">Une Expérience Exceptionnelle !</h2>\n      <div class=\"contenue\">\n        J’ai été impressionné par la qualité du service et l’attention portée aux détails. Dès le premier contact, j’ai ressenti un réel professionnalisme et une écoute attentive.\n        <ul>\n          <li>\n            Le processus a été fluide, rapide et parfaitement adapté à mes besoins.\n          </li>\n          <li>\n            Je recommande vivement à toute personne cherchant une expérience fiable et de grande qualité. Merci encore pour cette belle prestation !\n          </li>\n        </ul>\n      </div>\n      \n    </div>\n  </div>\n\n </div>\n\n\n <!-- Page footer -->\n\n <footer class=\"mes_footer\">\n  <p class=\"copyRight\">\n    © Copyright Groupe XpertPro\n  </p>\n </footer>"],"names":["CommonModule","Validators","ReactiveFormsModule","HeaderNavComponent","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","InscriptionComponent_div_39_span_1_Template","InscriptionComponent_div_39_span_2_Template","ɵɵadvance","ɵɵproperty","ctx_r0","f","errors","InscriptionComponent_div_56_span_1_Template","InscriptionComponent_div_56_span_2_Template","InscriptionComponent_div_62_span_1_Template","InscriptionComponent_div_62_span_2_Template","InscriptionComponent_div_67_span_1_Template","InscriptionComponent_div_67_span_2_Template","ɵɵtextInterpolate1","errorMessage","ɵɵlistener","InscriptionComponent_div_72_Template_button_click_9_listener","ɵɵrestoreView","_r2","ɵɵnextContext","ɵɵresetView","closePopup","ɵɵpureFunction1","_c0","popupType","popupImage","ɵɵsanitizeUrl","ɵɵtextInterpolate","popupTitle","popupMessage","InscriptionComponent","constructor","fb","usersService","router","entrepriseName","showPopup","isLoading","ngOnInit","registerForm","group","nomComplet","required","nomEntreprise","email","pays","phone","minLength","password","confirmPassword","nomBoutique","validator","passwordMatchValidator","form","get","value","setErrors","mismatch","updateEntrepriseName","event","target","toLowerCase","setValue","openPopup","title","message","type","navigate","submitForm","invalid","userData","user","setTimeout","registerUser","subscribe","next","response","console","log","error","status","match","controls","ɵɵdirectiveInject","i1","FormBuilder","i2","UsersService","i3","Router","selectors","decls","vars","consts","template","InscriptionComponent_Template","rf","ctx","InscriptionComponent_div_3_Template","InscriptionComponent_Template_form_ngSubmit_14_listener","InscriptionComponent_div_23_Template","InscriptionComponent_Template_input_input_27_listener","$event","InscriptionComponent_div_30_Template","InscriptionComponent_div_39_Template","InscriptionComponent_div_51_Template","InscriptionComponent_div_56_Template","InscriptionComponent_div_62_Template","InscriptionComponent_div_67_Template","InscriptionComponent_div_68_Template","InscriptionComponent_Template_button_click_70_listener","InscriptionComponent_div_72_Template","touched","i4","NgClass","NgIf","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","SelectControlValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","FormGroupDirective","FormControlName","styles"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}
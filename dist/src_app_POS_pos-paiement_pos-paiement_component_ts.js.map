{"version":3,"file":"src_app_POS_pos-paiement_pos-paiement_component_ts.js","mappings":"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","sources":["./src/app/POS/pos-paiement/pos-paiement.component.ts","./src/app/POS/pos-paiement/pos-paiement.component.html","./src/app/admin-page/SERVICES/entreprise-service.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { Component, ElementRef, ViewChild } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { VenteResponse } from 'src/app/admin-page/MODELS/VenteModel/vente-model';\nimport { EntrepriseService } from 'src/app/admin-page/SERVICES/entreprise-service';\nimport { VenteService } from 'src/app/admin-page/SERVICES/VenteService/vente-service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-pos-paiement',\n  imports: [FormsModule, CommonModule, ReactiveFormsModule],\n  templateUrl: './pos-paiement.component.html',\n  styleUrl: './pos-paiement.component.scss'\n})\nexport class PosPaiementComponent {\n  private imgUrl = environment.imgUrl;\n  logo?: string | null = null;\n  fallbackLogo = 'assets/img/TCHAKEDA.png';\n  vente?: VenteResponse | null = null;\n  paymentAmount: number = 0;\n  changeDue: number = 0;\n  paymentMethod: string = 'Espèces';\n  loading = false;\n  errorMessage: string | null = null;\n\n  @ViewChild('receipt', { static: false }) receiptEl?: ElementRef;\n\n  showModifyModal = false;\n  tempPaymentAmount: number = 0;\n  tempPaymentMethod: string = 'Espèces';\n\n  constructor(\n    private router: Router,\n    private venteService: VenteService,\n    private entrepriseService: EntrepriseService\n  ) {}\n\n  ngOnInit(): void {\n    // 1) Lecture rapide depuis localStorage si tu as déjà stocké l'entreprise\n    const stored = localStorage.getItem('entreprise');\n    if (stored) {\n      try {\n        const ent = JSON.parse(stored);\n        // si ent.logo contient le path relatif côté backend, on le préfixe par imgUrl\n        this.logo = ent.logo ? this.ensureAbsoluteLogoUrl(ent.logo) : null;\n      } catch (e) {\n        this.logo = null;\n      }\n    }\n\n    // 2) Option robuste : demander l'info à l'API si non trouvée localement\n    if (!this.logo) {\n      this.entrepriseService.getEntrepriseInfo().subscribe({\n        next: ent => {\n          this.logo = ent.logo ? this.ensureAbsoluteLogoUrl(ent.logo) : null;\n          // optional: sauvegarder pour réutiliser plus tard\n          try { localStorage.setItem('entreprise', JSON.stringify(ent)); } catch {}\n        },\n        error: err => {\n          console.warn('Impossible de charger info entreprise pour logo', err);\n          this.logo = null;\n        }\n      });\n    }\n\n    // ton code existant: récupérer state vente, etc.\n    const state = (history && history.state) ? history.state : {};\n    if (state && state.vente) {\n      this.vente = state.vente as VenteResponse;\n      this.paymentAmount = state.paymentAmount ?? (this.vente?.montantPaye ?? 0);\n      this.changeDue = state.changeDue ?? (this.paymentAmount - (this.vente?.montantTotal ?? 0));\n      this.paymentMethod = state.paymentMethod ?? (this.vente?.modePaiement ?? this.paymentMethod);\n      return;\n    }\n    if (state && state.venteId) {\n      this.loadVenteById(state.venteId);\n      return;\n    }\n  }\n\n  // transforme un path relatif en url absolue si nécessaire\n  private ensureAbsoluteLogoUrl(path: string): string {\n    if (!path) return this.fallbackLogo;\n    if (path.startsWith('http') || path.startsWith('data:') || path.startsWith('blob:')) {\n      return path;\n    }\n    // si path contient déjà la base, évite la double concaténation\n    if (this.imgUrl && path.startsWith(this.imgUrl)) return path;\n    // s'assurer qu'il y a bien un slash\n    const prefix = this.imgUrl.endsWith('/') ? this.imgUrl.slice(0, -1) : this.imgUrl;\n    const suffix = path.startsWith('/') ? path : `/${path}`;\n    return prefix + suffix;\n  }\n\n  // handler pour fallback si image ne se charge pas\n  onLogoError() {\n    this.logo = this.fallbackLogo;\n  }\n\n  private loadVenteById(id: number) {\n    this.loading = true;\n    this.venteService.getVenteById(id).subscribe({\n      //console log des info dune vente\n      \n      next: (res) => {\n        console.log('Réponse API:', res);\n        this.vente = res;\n        this.paymentAmount = res.montantPaye ?? res.montantTotal ?? 0;\n        this.changeDue = this.paymentAmount - (res.montantTotal ?? 0);\n        this.paymentMethod = res.modePaiement ?? this.paymentMethod;\n        this.loading = false;\n        console.log('Vente chargée:', res);\n      },\n      error: (err: any) => {\n        console.error('Erreur chargement vente', err);\n        this.errorMessage = err?.error?.message || err?.message || 'Erreur chargement vente';\n        this.loading = false;\n      }\n    });\n  }\n\n  // Impression : cloner le contenu et ouvrir une nouvelle fenêtre propre\n  impressionReceipt() {\n    if (!this.receiptEl) return;\n\n    // Récupérer la base URL pour les chemins absolus\n    const baseUrl = window.location.origin;\n    let printContent = this.receiptEl.nativeElement.innerHTML;\n    \n    // Corriger les chemins relatifs des assets\n    printContent = printContent.replace(/src=\"assets\\//g, `src=\"${baseUrl}/assets/`);\n\n    const printWindow = window.open('', '_blank', 'left=0,top=0,width=380,height=500,toolbar=0,scrollbars=0,status=0');\n    \n    printWindow?.document.write(`\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <title>Reçu de paiement</title>\n        <style>\n          * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n            font-family: Arial, sans-serif;\n            -webkit-print-color-adjust: exact !important;\n            print-color-adjust: exact !important;\n          }\n          body { \n            padding: 10px; \n            background: white;\n          }\n          .paiement_right {\n            width: 100%\n            display: flex !important;\n            align-items: center !important;\n            justify-content: center;\n          }\n          .receipt {\n            width: 100% !important;\n            min-width: 350px !important; /* Largeur augmentée */\n            min-height: 0 !important;\n            margin: 0 auto;\n            padding: 15px !important;\n            box-shadow: none !important;\n          }\n          .no-print { display: none !important; }\n          .paleft { padding-left: 5px !important; }\n          /* Centrage du header */\n          .receipt-header {\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            text-align: center;\n            margin-bottom: 15px !important;\n          }\n          .receipt-header .logo {\n            max-width: 100px !important; /* Taille originale */\n            margin-bottom: 10px !important;\n          }\n          .ticket-info div {\n            font-size: 10px !important;\n            line-height: 1.4 !important; \n            margin-top: 4px !important; /* Espacement réduit */\n          }\n          \n          .items-list { \n            margin-bottom: 10px !important; \n            width: 100%;\n          }\n          .item .qty {\n              width: 8px !important;\n            }\n          .item {\n            display: flex !important;\n            align-items: flex-start !important;\n            margin-bottom: 8px !important;\n          }\n          .divider {\n            border-top: 1px dotted #000 !important;\n            margin: 8px 0 !important;\n          }\n          .line span {\n            font-size: 11px !important; /* Taille de police augmentée */\n          }\n          \n          /* Centrage du footer */\n          .receipt-footer { \n            position: relative !important; \n            bottom: 0 !important;\n            margin-top: 20px !important;\n            font-size: 10px !important;\n            text-align: center !important;\n            width: 100%;\n          }\n          \n          .qty, .name, .total {\n            font-size: 10px !important; /* Taille de police augmentée */\n          }\n          .unit-price {\n            font-size: 10px !important; /* Taille de police augmentée */\n          }\n          \n          @page { \n            size: auto; \n            margin: 0; \n          }\n          @media print {\n            body { padding: 0 !important; }\n          }\n        </style>\n      </head>\n      <body>\n        ${printContent}\n        <div class=\"no-print\" style=\"text-align:center;margin-top:20px;\">\n          <button onclick=\"window.print()\" style=\"padding:8px 16px;background:#1976D2;color:white;border:none;border-radius:4px;cursor:pointer;\">\n            Imprimer\n          </button>\n          <button onclick=\"window.close()\" style=\"padding:8px 16px;margin-left:10px;background:#f44336;color:white;border:none;border-radius:4px;cursor:pointer;\">\n            Fermer\n          </button>\n        </div>\n        <script>\n          window.onload = function() {\n            window.print();\n            setTimeout(function() {\n              window.close();\n            }, 1000);\n          };\n        </script>\n      </body>\n      </html>\n    `);\n    printWindow?.document.close();\n  }\n\n  // Retourner à l'accueil POS / nouvelle commande\n  newOrder() {\n    // Navigate back to the POS page (ajuste la route si nécessaire)\n    this.router.navigate(['/pos-accueil']);\n  }\n\n  // Utility pour afficher une ligne produit (sécurité si vente undefined)\n  getLignes() {\n    return this.vente?.lignes ?? [];\n  }\n\n  modifyPaymentRecu() {\n    this.tempPaymentAmount = this.paymentAmount;\n    this.tempPaymentMethod = this.paymentMethod;\n    this.showModifyModal = true;\n  }\n\n  updatePayment() {\n    this.paymentAmount = this.tempPaymentAmount;\n    this.paymentMethod = this.tempPaymentMethod;\n    \n    // Calculer le changement ou le reste à payer\n    const total = this.vente?.montantTotal ?? 0;\n    this.changeDue = this.paymentAmount - total;\n\n    //numeroFacture\n    \n    this.showModifyModal = false;\n    \n    // Réimprimer automatiquement\n    setTimeout(() => {\n      this.impressionReceipt();\n    }, 100);\n  }\n\n  cancelModify() {\n    this.showModifyModal = false;\n  }\n\n  calculateChange() {\n    // Cette méthode est appelée automatiquement lors de la saisie\n    const total = this.vente?.montantTotal ?? 0;\n    this.changeDue = this.tempPaymentAmount - total;\n  }\n\n  // getPaymentStatus(): string {\n  //   if (!this.vente) return '';\n  //   return this.paymentAmount >= this.vente.montantTotal ? 'Monnaie' : 'Reste à payer';\n  // }\n  // \n  //\n}\n","<div class=\"container_paiement\">\n  <div class=\"content_paiement\">\n    <!-- // paiement left  -->\n    <div class=\"paiement_left\">\n      <div class=\"content_paiement_left\">\n        <div class=\"card status-card\" *ngIf=\"vente; else loadingTpl\">\n            <div class=\"status-icon\">✔︎</div>\n            <div class=\"status-text\">Paiement réussi</div>\n        </div>\n\n        <div class=\"card amount-card\" *ngIf=\"vente\">\n            <div class=\"amount\">{{ vente.montantTotal | currency:'CFA ':'symbol':'1.0-0' }}</div>\n            <div class=\"method\">/ {{ paymentMethod }}</div>\n        </div>\n\n        <button class=\"btn btn-secondary\" (click)=\"modifyPaymentRecu()\">Modifier le reçu</button>\n        <button class=\"btn btn-secondary\" (click)=\"impressionReceipt()\">Imprimer le reçu</button>\n\n        <div class=\"email-send\">\n            <input type=\"email\" placeholder=\"example@gmail.com\" />\n            <button class=\"btn-send\"><i class=\"ri-send-plane-fill\"></i></button>\n        </div>\n\n        <button class=\"btn btn-primary btn-new-order\" (click)=\"newOrder()\">Nouvelle commande</button>\n      </div>\n    </div>\n\n    <!-- // paiement right -->\n    <div class=\"paiement_right\">\n      <div class=\"receipt\" #receipt>\n        <div class=\"receipt-header\">\n          <img [src]=\"logo || 'assets/logo/reçu.png'\"\n            (error)=\"onLogoError()\"\n            alt=\"Logo XpertPro\"\n            class=\"logo\" />\n          <div class=\"ticket-info\">\n            <div>Ticket : {{ vente?.numeroFacture ?? '—' }}</div>\n            <div>{{ vente?.dateVente | date:'dd/MM/yyyy HH:mm' }}</div>\n            <div>Servi par : {{ vente?.nomVendeur ?? '—' }}</div>\n            <div>Boutique : {{ vente?.nomBoutique ?? '—' }}</div>\n          </div>\n        </div>\n\n        <ul class=\"items-list\">\n          <li class=\"item\" *ngFor=\"let item of getLignes()\">\n            <span class=\"qty\">{{ item.quantite }}</span>\n            <div class=\"desc\">\n              <div class=\"name\">{{ item.nomProduit }}</div>\n              <div class=\"unit-price\">{{ item.prixUnitaire | currency:'CFA ':'symbol':'1.0-0' }} / Unité(s)</div>\n            </div>\n            <span class=\"total\">{{ item.montantLigne | currency:'CFA ':'symbol':'1.0-0' }}</span>\n          </li>\n          <li *ngIf=\"(getLignes()).length === 0\" class=\"no-items\">Aucun produit trouvé</li>\n        </ul>\n\n        <div class=\"divider\"></div>\n\n        <div class=\"totals\">\n          <div class=\"line\">\n            <span>Sous-total</span><span class=\"paleft\">{{ vente?.montantTotal | currency:'CFA ':'symbol':'1.0-0' }}</span>\n          </div>\n          <div class=\"line total-line\">\n            <span>Total</span><span class=\"paleft\">{{ vente?.montantTotal | currency:'CFA ':'symbol':'1.0-0' }}</span>\n          </div>\n        </div>\n\n        <div class=\"divider\"></div>\n\n        <div class=\"payments-breakdown\">\n          <div class=\"line\">\n            <span>{{ paymentMethod }}</span><span class=\"paleft\">{{ paymentAmount | currency:'CFA ':'symbol':'1.0-0' }}</span>\n          </div>\n          <div class=\"line\" *ngIf=\"paymentAmount >= (vente?.montantTotal ?? 0)\">\n            <span>Monnaie</span><span class=\"paleft\">{{ changeDue | currency:'CFA ':'symbol':'1.0-0' }}</span>\n          </div>\n\n          <div class=\"line\" *ngIf=\"paymentAmount < (vente?.montantTotal ?? 0)\">\n            <span>Reste à payer</span><span class=\"paleft\">{{ changeDue | currency:'CFA ':'symbol':'1.0-0' }}</span>\n          </div>\n        </div>\n\n\n        <div class=\"receipt-footer\">\n          Généré par Tchakeda \n        </div>\n\n        \n        \n        \n      </div>\n\n      <ng-template #loadingTpl>\n        <div class=\"loading\">Chargement du reçu...</div>\n      </ng-template>\n    </div>\n  </div>\n</div>\n\n<!-- Modal de modification -->\n<div class=\"modal-overlay\" *ngIf=\"showModifyModal\">\n  <div class=\"modal-content\">\n    <h5>Modifier le reçu</h5>\n    \n    <div class=\"form-group\">\n      <label>Montant total: {{ vente?.montantTotal | currency:'CFA ':'symbol':'1.0-0' }}</label>\n    </div>\n\n    <div class=\"form-group\">\n      <label>Montant payé</label>\n      <input \n        type=\"number\" \n        [(ngModel)]=\"tempPaymentAmount\" \n        (input)=\"calculateChange()\"\n        min=\"0\"\n        step=\"100\"\n      >\n    </div>\n\n    <div class=\"form-group\">\n      <label>Mode de paiement</label>\n      <select [(ngModel)]=\"tempPaymentMethod\">\n        <option value=\"Espèces\">Espèces</option>\n        <option value=\"Carte\">Carte</option>\n        <option value=\"Virement\">Virement</option>\n        <option value=\"Mobile Money\">Mobile Money</option>\n      </select>\n    </div>\n\n    <div class=\"form-group\" *ngIf=\"tempPaymentAmount >= (vente?.montantTotal ?? 0)\">\n      <label>Monnaie à rendre: {{ (tempPaymentAmount - (vente?.montantTotal ?? 0)) | currency:'CFA ':'symbol':'1.0-0' }}</label>\n    </div>\n\n    <div class=\"form-group\" *ngIf=\"tempPaymentAmount < (vente?.montantTotal ?? 0)\">\n      <label>Reste à payer: {{ ((vente?.montantTotal ?? 0) - tempPaymentAmount) | currency:'CFA ':'symbol':'1.0-0' }}</label>\n    </div>\n\n    <div class=\"modal-actions\">\n      <button class=\"btn btn-secondary\" (click)=\"cancelModify()\">Annuler</button>\n      <button class=\"btn btn-primary btn-new-order\" (click)=\"updatePayment()\">Valider et Imprimer</button>\n    </div>\n  </div>\n</div>","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, catchError, Observable, switchMap, tap, throwError } from \"rxjs\";\nimport { Entreprise } from \"../MODELS/entreprise-model\";\nimport { EntrepriseClient } from \"../MODELS/entreprise-clients-model\";\nimport { environment } from \"src/environments/environment\";\nimport { UsersService } from \"./users.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EntrepriseService {\n    private apiUrl = environment.apiBaseUrl;\n  \n\n  private entrepriseSubject = new BehaviorSubject<Entreprise[]>([]);\n  public entreprise$ = this.entrepriseSubject.asObservable(); \n  constructor(private http: HttpClient, private usersService: UsersService) { }\n\n  // Dans client.service.ts\n// Dans entreprise.service.ts\n getListEntreprises(): Observable<EntrepriseClient[]> {\n  return this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      });\n      return this.http.get<EntrepriseClient[]>(`${this.apiUrl}/entreprises`, { headers });\n    }),\n    catchError(error => {\n      let errorMsg = 'Erreur inconnue';\n      if (error.error instanceof ErrorEvent) {\n        errorMsg = `Erreur: ${error.error.message}`;\n      } else if (error.status === 404) {\n        errorMsg = 'Aucune entreprise trouvée';\n      }\n      return throwError(() => new Error(errorMsg));\n    })\n  );\n}\n\n\n  // Ajouter une entreprise\n addEntreprise(entreprise: Entreprise): Observable<Entreprise> {\n  return this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      });\n\n      return this.http.post<Entreprise>(`${this.apiUrl}/entreprise-clients`, entreprise, { headers });\n    }),\n    tap((newEntreprise) => {\n      const currentEntreprise = this.entrepriseSubject.value;\n      this.entrepriseSubject.next([...currentEntreprise, newEntreprise]);\n    }),\n    catchError(error => {\n      let errorMsg = 'Erreur inconnue';\n      if (error.error instanceof ErrorEvent) {\n        errorMsg = `Erreur: ${error.error.message}`;\n      } else if (error.status === 400) {\n        errorMsg = error.error || 'Données invalides';\n      }\n      return throwError(() => new Error(errorMsg));\n    })\n  );\n}\n\n\n  // List de tout les entreprises\n getListEntreprise(): Observable<Entreprise[]> {\n  return this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      if (!token) {\n        console.error('Token vide ou non défini ! Vérifiez que l\\'utilisateur est bien connecté.');\n        return throwError(() => new Error('Token manquant'));\n      }\n      const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n      console.log(\"En-têtes envoyés : \", headers);\n\n      return this.http.get<Entreprise[]>(`${this.apiUrl}/entreprises`, { headers });\n    }),\n    tap(data => {\n      this.entrepriseSubject.next(data);\n    }),\n    catchError(error => {\n      console.error('Erreur lors de la récupération des entreprises:', error);\n      return throwError(() => error);\n    })\n  );\n}\n\n\n\n  // Recuperer information d'une entreprise de la user connecter\n getEntrepriseById(id: number): Observable<Entreprise> {\n  return this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      if (!token) {\n        console.error('Token manquant');\n        return throwError(() => new Error('Token manquant'));\n      }\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      });\n      return this.http.get<Entreprise>(`${this.apiUrl}/entreprises/${id}`, { headers });\n    }),\n    catchError(error => {\n      let errorMsg = 'Erreur inconnue';\n      if (error.error instanceof ErrorEvent) {\n        errorMsg = `Erreur: ${error.error.message}`;\n      } else if (error.status === 404) {\n        errorMsg = 'Entreprise non trouvée';\n      }\n      return throwError(() => new Error(errorMsg));\n    })\n  );\n}\n\n\n  updateEntreprise(id: number, formData: FormData): Observable<string> {\n  return this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      if (!token) {\n        return throwError(() => new Error('Token manquant'));\n      }\n\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${token}`\n      });\n\n      return this.http.patch(`${this.apiUrl}/updateEntreprise/${id}`, formData, {\n        headers,\n        responseType: 'text' // réponse en texte brut\n      });\n    }),\n    catchError(error => {\n      let errorMsg = 'Erreur inconnue';\n      if (error.error instanceof ErrorEvent) {\n        errorMsg = `Erreur: ${error.error.message}`;\n      } else if (error.status === 400) {\n        errorMsg = error.error || 'Données invalides';\n      }\n      return throwError(() => new Error(errorMsg));\n    })\n  );\n}\n\n\n  // updateEntreprise(id: number, formData: FormData): Observable<any> {\n  //   const token = localStorage.getItem('accessToken') || '';\n  //   const headers = new HttpHeaders({\n  //     'Authorization': `Bearer ${token}`\n  //   });\n\n  //   return this.http.patch(`${this.apiUrl}/updateEntreprise/${id}`, formData, { headers }).pipe(\n  //     catchError(error => {\n  //       let errorMsg = 'Erreur inconnue';\n  //       if (error.error instanceof ErrorEvent) {\n  //         errorMsg = `Erreur: ${error.error.message}`;\n  //       } else if (error.status === 400) {\n  //         errorMsg = error.error || 'Données invalides';\n  //       }\n  //       return throwError(() => new Error(errorMsg));\n  //     })\n  //   );\n  // }\n\n  // Get entreprise d'un user\n  getEntrepriseInfo(): Observable<Entreprise> {\n  return this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      if (!token) {\n        return throwError(() => new Error('Aucun token trouvé'));\n      }\n\n      const headers = new HttpHeaders({\n        Authorization: `Bearer ${token}`\n      });\n\n      return this.http.get<Entreprise>(`${this.apiUrl}/myEntreprise`, { headers }).pipe(\n        tap(entreprise => {\n          localStorage.setItem('entreprise', JSON.stringify(entreprise));\n        })\n      );\n    }),\n    catchError(error => {\n      console.error('Erreur récupération info entreprise:', error);\n      return throwError(() => error);\n    })\n  );\n}\n\n\n  // Simpl dcodage JWT pour vérifier si le token est expiré\n  decodeJwt(token: string): any {\n    return JSON.parse(atob(token.split('.')[1]));\n  }\n  \n  // Vérifier si le token est expiré\n  isTokenExpired(decodedToken: any): boolean {\n    const expirationDate = new Date(decodedToken.exp * 1000);\n    return expirationDate < new Date();\n  }\n    \n  // Rafraîchir le token avec un refresh token (si applicable)\n  getNewTokenFromApi(): Observable<{ token: string }> {\n    const refreshToken = localStorage.getItem('refreshToken');\n    return this.http.post<{ token: string }>(`${this.apiUrl}/refresh-token`, { refreshToken });\n  }\n\n \n}"],"names":["CommonModule","FormsModule","ReactiveFormsModule","environment","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind4","ctx_r1","vente","montantTotal","ɵɵtextInterpolate1","paymentMethod","item_r3","quantite","nomProduit","prixUnitaire","montantLigne","changeDue","tempPaymentAmount","tmp_4_0","undefined","ɵɵtwoWayListener","PosPaiementComponent_div_62_Template_input_ngModelChange_11_listener","$event","ɵɵrestoreView","_r4","ɵɵnextContext","ɵɵtwoWayBindingSet","ɵɵresetView","ɵɵlistener","PosPaiementComponent_div_62_Template_input_input_11_listener","calculateChange","PosPaiementComponent_div_62_Template_select_ngModelChange_15_listener","tempPaymentMethod","ɵɵtemplate","PosPaiementComponent_div_62_div_24_Template","PosPaiementComponent_div_62_div_25_Template","PosPaiementComponent_div_62_Template_button_click_27_listener","cancelModify","PosPaiementComponent_div_62_Template_button_click_29_listener","updatePayment","ɵɵtwoWayProperty","ɵɵproperty","tmp_6_0","tmp_7_0","PosPaiementComponent","constructor","router","venteService","entrepriseService","imgUrl","logo","fallbackLogo","paymentAmount","loading","errorMessage","showModifyModal","ngOnInit","stored","localStorage","getItem","ent","JSON","parse","ensureAbsoluteLogoUrl","e","getEntrepriseInfo","subscribe","next","setItem","stringify","error","err","console","warn","state","history","montantPaye","modePaiement","venteId","loadVenteById","path","startsWith","prefix","endsWith","slice","suffix","onLogoError","id","getVenteById","res","log","message","impressionReceipt","receiptEl","baseUrl","window","location","origin","printContent","nativeElement","innerHTML","replace","printWindow","open","document","write","close","newOrder","navigate","getLignes","lignes","modifyPaymentRecu","total","setTimeout","ɵɵdirectiveInject","i1","Router","i2","VenteService","i3","EntrepriseService","selectors","viewQuery","PosPaiementComponent_Query","rf","ctx","PosPaiementComponent_div_4_Template","PosPaiementComponent_div_5_Template","PosPaiementComponent_Template_button_click_6_listener","_r1","PosPaiementComponent_Template_button_click_8_listener","ɵɵelement","PosPaiementComponent_Template_button_click_14_listener","PosPaiementComponent_Template_img_error_20_listener","PosPaiementComponent_li_32_Template","PosPaiementComponent_li_33_Template","PosPaiementComponent_div_56_Template","PosPaiementComponent_div_57_Template","PosPaiementComponent_ng_template_60_Template","ɵɵtemplateRefExtractor","PosPaiementComponent_div_62_Template","loadingTpl_r5","ɵɵsanitizeUrl","numeroFacture","ɵɵpipeBind2","dateVente","tmp_8_0","nomVendeur","tmp_9_0","nomBoutique","length","tmp_16_0","tmp_17_0","i4","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","NumberValueAccessor","SelectControlValueAccessor","NgControlStatus","MinValidator","NgModel","i5","NgForOf","NgIf","CurrencyPipe","DatePipe","styles","HttpHeaders","BehaviorSubject","catchError","switchMap","tap","throwError","http","usersService","apiUrl","apiBaseUrl","entrepriseSubject","entreprise$","asObservable","getListEntreprises","getValidAccessToken","pipe","token","headers","get","errorMsg","ErrorEvent","status","Error","addEntreprise","entreprise","post","newEntreprise","currentEntreprise","value","getListEntreprise","set","data","getEntrepriseById","updateEntreprise","formData","patch","responseType","Authorization","decodeJwt","atob","split","isTokenExpired","decodedToken","expirationDate","Date","exp","getNewTokenFromApi","refreshToken","ɵɵinject","HttpClient","UsersService","factory","ɵfac","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}
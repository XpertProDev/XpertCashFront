{"version":3,"file":"src_app_POS_pos-vente_pos-vente_component_ts.js","mappings":"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","sources":["./src/app/POS/pos-vente/pos-vente.component.ts","./src/app/POS/pos-vente/pos-vente.component.html","./src/app/admin-page/MODELS/produit-category.model.ts","./src/app/admin-page/SERVICES/entreprise-service.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { Component, HostListener, ChangeDetectorRef } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\nimport { ViewStateService } from '../pos-accueil/view-state.service';\nimport { Categorie } from 'src/app/admin-page/MODELS/categorie.model';\nimport { CategorieService } from 'src/app/admin-page/SERVICES/categorie.service';\nimport { ProduitDetailsResponseDTO } from 'src/app/admin-page/MODELS/produit-category.model';\nimport { CommandeStateService } from 'src/app/admin-page/SERVICES/commande-state.service';\nimport { Clients } from 'src/app/admin-page/MODELS/clients-model';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { ClientService } from 'src/app/admin-page/SERVICES/client-service';\nimport { UsersService } from 'src/app/admin-page/SERVICES/users.service';\nimport { BehaviorSubject, combineLatest, finalize, map, Observable, of, startWith, Subscription, switchMap, take, throwError } from 'rxjs';\nimport { Entreprise } from 'src/app/admin-page/MODELS/entreprise-model';\nimport { EntrepriseService } from 'src/app/admin-page/SERVICES/entreprise-service';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { EntrepriseClient } from 'src/app/admin-page/MODELS/entreprise-clients-model';\nimport { ProduitService } from 'src/app/admin-page/SERVICES/produit.service';\nimport { Produit } from 'src/app/admin-page/MODELS/produit.model';\nimport { NgxBarcode6Module } from 'ngx-barcode6';\nimport { VenteService } from 'src/app/admin-page/SERVICES/VenteService/vente-service';\nimport { BoutiqueStateService } from 'src/app/admin-page/SERVICES/CaisseService/boutique-state.service';\nimport { VenteRequest, VenteResponse } from 'src/app/admin-page/MODELS/VenteModel/vente-model';\nimport { CfaCurrencyPipe } from 'src/app/admin-page/MODELS/cfa-currency.pipe';\nimport { ScannerService } from 'src/app/admin-page/SERVICES/VenteService/scanner.service';\nimport { SearchService } from 'src/app/admin-page/SERVICES/SearchService';\nimport { CalculatorService } from 'src/app/admin-page/SERVICES/VenteService/calculator.service';\n\ninterface DiscountMode {\n  active: boolean;\n  type: 'CFA' | '%';\n  value: number;\n  productId?: number; // Produit en cours de modification\n}\n\n@Component({\n  selector: 'app-pos-vente',\n  imports: [FormsModule, CommonModule, ReactiveFormsModule, MatAutocompleteModule, NgxBarcode6Module, CfaCurrencyPipe],\n  templateUrl: './pos-vente.component.html',\n  styleUrl: './pos-vente.component.scss'\n})\nexport class PosVenteComponent {\n  private barcodeIndex: Map<string, ProduitDetailsResponseDTO> = new Map();\n  isListView = true;\n  showDropdown = false;\n  showPaymentPopup = false;\n  categories: Categorie[] = [];\n  selectedCategoryId: number | null = null;\n  displayedProducts: ProduitDetailsResponseDTO[] = [];\n  \n  // Cache pour les compteurs de catégories\n  private categoryCountCache: Map<number, number> = new Map();\n  private lastBoutiqueId: number | null = null;\n\n  currentPage: number = 0;\n  pageSize: number = 20;\n  totalPages: number = 0;\n  isLoadingMore: boolean = false;\n\n  scanInProgress = false;\n\n  searchTerm: string = '';\n  private searchSub!: Subscription;\n  private calcActiveSub!: Subscription;\n  private isCalculatorActive = true;\n  \n  // Déclaration des nouvelles propriétés\n  currentQuantityInput: string = '';\n  selectedProduct: ProduitDetailsResponseDTO | null = null;\n  quantityMode: boolean = true;\n  // selectedQuantities: Map<number, number> = new Map(); // Ajout de cette ligne\n  showStockWarning = false;\n  cart: Map<number, number> = new Map();\n\n  totalAmount: number = 0;\n\n  selectedPaymentMethod: string = 'Espèces'; // 'cash', 'card', 'account'\n  enteredAmount: string = '';\n  paymentAmount: number = 0;\n  changeDue: number = 0;\n  isAmountEntered: boolean = false;\n\n  longPressTimer: any = null;\n  selectedProductForDetail: ProduitDetailsResponseDTO | null = null;\n  showDetailPopup: boolean = false;\n  showClientPopup: boolean = false;\n  lastTap: number = 0;\n  tapDelay: number = 300;\n\n  allProducts: ProduitDetailsResponseDTO[] = [];\n\n  clientType: 'individuel' | 'entreprise' = 'individuel';\n  entrepriseForm!: FormGroup;\n  entrepriseIndicatif: string = '';\n  entrepriseMaxPhoneLength: number = 0;\n\n  // Propriétés ajoutées\n  clients: Clients[] = [];\n  searchText = '';\n  sortField = 'nomComplet';\n  sortDirection: 'asc' | 'desc' = 'asc';\n\n  currentListTypePopup: 'clients' | 'entreprises' = 'clients';\n  entreprisesPopup: EntrepriseClient[] = [];\n  // filteredEntreprisesPopup: EntrepriseClient[] = [];\n\n  showScanError = false;\n  scanErrorMessage = '';\n\n  clientForm!: FormGroup;\n  isEntrepriseSelected = false;\n  showAddClientPopup = false;\n  paysIndicatifs: { [key: string]: { indicatif: string, longueur: number } } = {\n    'Mali': { indicatif: '+223', longueur: 8 },\n    'Sénégal': { indicatif: '+221', longueur: 9 },\n    'Côte d\\'Ivoire': { indicatif: '+225', longueur: 10 },\n    'Burkina Faso': { indicatif: '+226', longueur: 8 },\n    'Niger': { indicatif: '+227', longueur: 8 },\n    'France': { indicatif: '+33', longueur: 9 },\n    'Belgique': { indicatif: '+32', longueur: 9 },\n    'Suisse': { indicatif: '+41', longueur: 9 },\n    'Canada': { indicatif: '+1', longueur: 10 },\n    'États-Unis': { indicatif: '+1', longueur: 10 },\n    'Maroc': { indicatif: '+212', longueur: 9 },\n    'Algérie': { indicatif: '+213', longueur: 9 },\n    'Tunisie': { indicatif: '+216', longueur: 8 },\n    'Togo': { indicatif: '+228', longueur: 8 },\n    'Bénin': { indicatif: '+229', longueur: 8 },\n    'Guinée': { indicatif: '+224', longueur: 9 },\n    'Tchad': { indicatif: '+235', longueur: 8 },\n    'Cameroun': { indicatif: '+237', longueur: 9 },\n    'RDC': { indicatif: '+243', longueur: 9 },\n    'Gabon': { indicatif: '+241', longueur: 9 },\n    'Afrique du Sud': { indicatif: '+27', longueur: 9 },\n    'Rwanda': { indicatif: '+250', longueur: 9 },\n    'Kenya': { indicatif: '+254', longueur: 9 },\n    'Nigéria': { indicatif: '+234', longueur: 10 },\n    'Ghana': { indicatif: '+233', longueur: 9 },\n    'Éthiopie': { indicatif: '+251', longueur: 9 },\n    'Égypte': { indicatif: '+20', longueur: 10 },\n    'Inde': { indicatif: '+91', longueur: 10 },\n    'Chine': { indicatif: '+86', longueur: 11 },\n    'Mexique': { indicatif: '+52', longueur: 10 },\n    'Allemagne': { indicatif: '+49', longueur: 10 },\n    'Espagne': { indicatif: '+34', longueur: 9 },\n    'Italie': { indicatif: '+39', longueur: 10 },\n    'Royaume-Uni': { indicatif: '+44', longueur: 10 },\n    'Pays-Bas': { indicatif: '+31', longueur: 9 },\n    'Portugal': { indicatif: '+351', longueur: 9 }\n  };\n  paysKeys: string[] = Object.keys(this.paysIndicatifs);\n  indicatif: string = '';\n  maxPhoneLength: number = 0;\n\n  control = new FormControl();\n  filteredOptions: Observable<Entreprise[]> = of([]);\n  optionsEntreprise$ = new BehaviorSubject<Entreprise[]>([]);\n\n  currentListType: 'clients' | 'entreprises' = 'clients';\n\n  selectedBoutiqueId: number | null = null;\n  isSubmittingVente = false;\n  venteErrorMessage: string | null = null;\n\n  selectedClient: Clients | null = null;\n  selectedEntreprise: EntrepriseClient | null = null;\n  isComposingNewQuantity: boolean = false;\n\n  isDragging = false;\n  startX = 0;\n  startY = 0;\n  initialX = 0;\n  initialY = 0;\n  popupOffset = { x: 0, y: 0 };\n\n  showDiscountInput = false;\n  discountValue: number = 0;\n  discountType: 'CFA' | '%' = 'CFA';\n  discountButtonText = 'Remise';\n  selectedProductForDiscount: ProduitDetailsResponseDTO | null = null;\n\n  discountMode: DiscountMode = {\n    active: false,\n    type: 'CFA',\n    value: 0\n  };\n\n  globalDiscount = {\n    active: false,\n    type: 'CFA' as 'CFA' | '%',\n    value: 0\n  };\n\n  // Liste des remises par produit\n  productDiscounts: Map<number, number> = new Map();\n  lastSelectedForDiscount: number | null = null;\n\n  inputMode: 'quantity' | 'discount' = 'quantity'; // Nouveau flag\n\n  // Méthode pour basculer entre les modes\n  setInputMode(mode: 'quantity' | 'discount') {\n    this.inputMode = mode;\n  }\n\n  currentDiscountInput: string = '';\n  disablePhysicalKeyboard = false;\n  userRole: string | null = null;\n  canAddClient = false;\n\n  // Propriétés pour la validation des scans\n  private lastScannedCode: string | null = null;\n  private lastScanTime: number = 0;\n\n  constructor(\n    private router: Router,\n    private viewState: ViewStateService,\n    private categorieService: CategorieService,\n    private commandeState: CommandeStateService,\n    private clientService: ClientService,\n    private usersService: UsersService,\n    private sanitizer: DomSanitizer,\n    private fb: FormBuilder,\n    private entrepriseService: EntrepriseService,\n    private produitService: ProduitService,\n    private venteService: VenteService, \n    private boutiqueState: BoutiqueStateService,\n    private scannerService: ScannerService,\n    private searchService: SearchService,\n    private calculator: CalculatorService,\n    private cdr: ChangeDetectorRef\n  ) {\n    this.commandeState.activeCommandeId$.subscribe(() => {\n      this.loadActiveCart();\n    });\n\n    this.initClientForm();\n    this.initForms();\n  }\n\n  private initForms() {\n    this.initClientForm();\n    this.initEntrepriseForm();\n  }\n\n  // Initialiser le formulaire client\n  initClientForm() {\n    this.clientForm = this.fb.group({\n      nomComplet: ['', [Validators.required, Validators.minLength(2)]],\n      email: ['', [Validators.email]],\n      telephone: ['', Validators.required],\n      adresse: [''],\n      poste: [''],\n      pays: [''],\n      ville: ['']\n    });\n  }\n\n  initEntrepriseForm() {\n    this.entrepriseForm = this.fb.group({\n        nom: ['', [Validators.required, Validators.minLength(2)]],\n        adresse: [''],\n        email: ['', [Validators.email]],\n        telephone: ['', Validators.required],\n        pays: [''],\n        siege: [''],\n        secteur: ['']\n    });\n  }\n\n  // Gestion du clic/tape sur un produit\n  ngOnInit() {\n    this.loadUserRole();\n       // Charger toutes les catégories\n    this.categorieService.getCategories().subscribe({\n      next: (categories) => {\n        this.categories = categories;\n        console.log('Catégories chargées :', this.categories);\n        \n        // Charger seulement la première page de chaque catégorie\n        this.categories.forEach(categorie => {\n          this.loadProduitsByCategorie(categorie.id!, 0, this.pageSize);\n        });\n      },\n      error: (err) => {\n        console.error('Erreur lors du chargement des catégories', err);\n      }\n    });\n\n \n\n    // this.calcActiveSub = this.calculatorService.isActive$.subscribe(active => {\n    //   this.isCalculatorActive = active;\n    // });\n\n    this.searchSub = this.searchService.search$.subscribe(term => {\n      this.searchTerm = term;\n    });\n     \n    const savedView = localStorage.getItem('viewPreference');\n    this.isListView = savedView ? savedView === 'list' : true;\n\n    this.loadActiveCart();\n    \n    this.viewState.isListView$.subscribe(view => {\n      this.isListView = view;\n    });\n\n    if (!this.categories.length) {\n        this.loadCategories();\n    }\n\n    this.boutiqueState.selectedBoutique$.pipe(take(1)).subscribe(id => {\n      // take(1) prend la valeur initiale ; si tu veux updates continues, retire take(1)\n      this.selectedBoutiqueId = id;\n    });\n\n    // Si tu veux suivre à tout moment :\n    // this.boutiqueState.selectedBoutique$.subscribe(id => this.selectedBoutiqueId = id);\n    this.boutiqueState.selectedBoutique$.subscribe(id => {\n      console.log('🏪 Boutique sélectionnée:', id);\n      this.selectedBoutiqueId = id;\n      \n      // Vider le cache car la boutique a changé\n      this.clearCategoryCountCache();\n      this.lastBoutiqueId = id;\n      \n      // recalculer les compteurs visible pour l'UI\n      this.recomputeCategoryCountsForBoutique();\n      // Forcer la détection de changement pour mettre à jour l'affichage\n      this.cdr.detectChanges();\n    });\n\n    // Abonnement aux scans (déjà présent) -> aussi suivre l'indicateur de scan\n    this.scannerService.getScanObservable().subscribe(barcode => {\n      this.handleBarcodeScan(barcode);\n    });\n\n    // Nouveau : pour bloquer le HostListener pendant un scan\n    this.scannerService.getScanningObservable().subscribe(scanning => {\n      this.scanInProgress = scanning;\n    });\n\n    // Désactiver le scanner quand on est en mode saisie\n    this.scannerService.setUserTyping(true);\n\n     // S'abonner à l'état de la calculatrice\n    this.calculator.isActive$.subscribe(active => {\n      if (active) {\n        this.scannerService.disableScanner();\n      } else {\n        this.scannerService.enableScanner();\n      }\n    });\n\n  }\n\n  private loadUserRole(): void {\n    this.usersService.getUserInfo().subscribe({\n      next: (user) => {\n        if (user && user.roleType) {\n          this.userRole = user.roleType;\n          this.canAddClient = ['ADMIN', 'MANAGER'].includes(this.userRole);\n        }\n      },\n      error: () => {\n        const localUser = this.usersService.getCurrentUser();\n        if (localUser && localUser.roleType) {\n          this.userRole = localUser.roleType;\n          this.canAddClient = ['ADMIN', 'MANAGER'].includes(this.userRole);\n        }\n      }\n    });\n  }\n\n   ngOnDestroy() {\n    if (this.searchSub) this.searchSub.unsubscribe();\n    if (this.calcActiveSub) this.calcActiveSub.unsubscribe();\n    // this.scannerService.enableScanner();\n  }\n\n  private loadCategories(): void {\n    this.categorieService.getCategories().subscribe({\n      next: (categories) => {\n        this.categories = categories;\n      },\n      error: (error) => {\n        console.error('Erreur lors du chargement des catégories:', error);\n      }\n    });\n  }\n\n  private indexProductsByBarcode(): void {\n    this.barcodeIndex.clear();\n    this.allProducts.forEach(product => {\n      if (product.codeBare) {\n        this.barcodeIndex.set(product.codeBare.toString().toLowerCase(), product);\n      }\n    });\n  }\n\n  private handleBarcodeScan(barcode: string): void {\n    console.log('=== SCAN DEBUG ===');\n    console.log('Code scanné:', barcode);\n    \n    // Vérifier que ce n'est pas un scan en double\n    if (!this.isValidScan(barcode)) {\n      console.log('Scan ignoré - possible doublon ou invalide');\n      return;\n    }\n    \n    console.log('Nombre total de produits:', this.allProducts.length);\n    console.log('Produits avec code-barres:', this.allProducts.filter(p => p.codeBare).length);\n    \n    const normalizedBarcode = barcode.toLowerCase();\n    console.log('Code normalisé:', normalizedBarcode);\n    \n    // Recherche plus flexible du produit\n    const product = this.allProducts.find(p => {\n      if (!p.codeBare) return false;\n      \n      const productCode = p.codeBare.toString().toLowerCase();\n      const scannedCode = normalizedBarcode;\n      \n      console.log(`Comparaison: \"${productCode}\" vs \"${scannedCode}\"`);\n      \n      // Correspondance exacte\n      if (productCode === scannedCode) return true;\n      \n      // Correspondance partielle (au cas où il y a des espaces ou caractères spéciaux)\n      if (productCode.includes(scannedCode) || scannedCode.includes(productCode)) return true;\n      \n      return false;\n    });\n\n    if (product) {\n      console.log('Produit trouvé:', product);\n      console.log('Ajout au panier...');\n      this.addToCart(product);\n      // this.showScanSuccess(product.nom); \n    } else {\n      console.log('Aucun produit trouvé');\n      console.log('Codes-barres disponibles:', this.allProducts.map(p => p.codeBare).filter(Boolean));\n      this.showScanError = true;\n      this.scanErrorMessage = `Aucun produit trouvé avec le code: ${barcode}`;\n      \n      setTimeout(() => {\n        this.showScanError = false;\n      }, 1000);\n    }\n  }\n\n  // Méthode pour valider un scan et éviter les doublons\n  // private isValidScan(barcode: string): boolean {\n  //   // Vérifier que le code n'est pas vide\n  //   if (!barcode || barcode.trim().length < 3) {\n  //     return false;\n  //   }\n\n  //   // Vérifier que ce n'est pas le même code que le dernier scan\n  //   const currentTime = Date.now();\n  //   if (this.lastScannedCode === barcode && (currentTime - this.lastScanTime) < 1000) {\n  //     console.log('Scan ignoré - même code scanné trop rapidement');\n  //     return false;\n  //   }\n\n  //   // Mettre à jour le dernier scan\n  //   this.lastScannedCode = barcode;\n  //   this.lastScanTime = currentTime;\n\n  //   return true;\n  // }\n\n\n  private isValidScan(barcode: string): boolean {\n    // Vérifier que le code n'est pas vide\n    if (!barcode || barcode.trim().length < 3) {\n      return false;\n    }\n\n    // Vérifier que ce n'est pas exactement le même code que le dernier scan\n    // mais avec un délai beaucoup plus court pour permettre les scans rapides\n    const currentTime = Date.now();\n    if (this.lastScannedCode === barcode && (currentTime - this.lastScanTime) < 50) {\n      console.log('Scan ignoré - même code scanné trop rapidement');\n      return false;\n    }\n\n    // Mettre à jour le dernier scan\n    this.lastScannedCode = barcode;\n    this.lastScanTime = currentTime;\n\n    return true;\n  }\n\n  // Nouvelle méthode pour afficher le succès du scan\n  // private showScanSuccess(productName: string): void {\n  //   // Optionnel: afficher un toast de succès\n  //   console.log(`Produit \"${productName}\" ajouté au panier via scan`);\n    \n  //   // Feedback visuel temporaire\n  //   this.showScanError = false;\n  //   this.scanErrorMessage = '';\n    \n  //   // Afficher un message de succès\n  //   setTimeout(() => {\n  //     this.showScanError = true;\n  //     this.scanErrorMessage = `Produit \"${productName}\" ajouté au panier !`;\n  //     setTimeout(() => {\n  //       this.showScanError = false;\n  //     }, 2000);\n  //   }, 100);\n  // }\n\n  // Méthode de test pour simuler un scan (utile pour debug)\n  // testScan(code: string): void {\n  //   console.log('Test de scan avec le code:', code);\n  //   this.handleBarcodeScan(code);\n  // }\n\n  // Méthode pour tester le scanner avec différents codes\n  // testScannerWithCodes(): void {\n  //   console.log('=== TEST SCANNER AVEC DIFFÉRENTS CODES ===');\n    \n  //   // Test avec des codes courts\n  //   this.testScan('123');\n  //   this.testScan('456');\n    \n  //   // Test avec le code que vous avez dans votre bouton\n  //   this.testScan('6920484370182');\n    \n  //   // Test avec des codes aléatoires\n  //   this.testScan('987654321');\n  //   this.testScan('ABCDEF123');\n  // }\n\n  // Méthode pour vérifier l'état du scanner\n  // checkScannerStatus(): void {\n  //   console.log('=== ÉTAT DU SCANNER ===');\n  //   console.log('ScannerService disponible:', !!this.scannerService);\n  //   console.log('scanInProgress:', this.scanInProgress);\n  //   console.log('Produits chargés:', this.allProducts.length);\n  //   console.log('Produits avec code-barres:', this.allProducts.filter(p => p.codeBare).length);\n    \n  //   // Afficher quelques codes-barres disponibles\n  //   const codesWithProducts = this.allProducts\n  //     .filter(p => p.codeBare)\n  //     .slice(0, 5)\n  //     .map(p => ({ id: p.id, nom: p.nom, code: p.codeBare }));\n    \n  //   console.log('Exemples de codes-barres:', codesWithProducts);\n  // }\n\n  private loadActiveCart() {\n    this.cart = new Map(this.commandeState.getActiveCart());\n  }\n\n  private saveActiveCart() {\n    this.commandeState.updateActiveCart(this.cart);\n  }\n\nloadProduitsByCategorie(categorieId: number, page: number = 0, size: number = 20) {\n  if (page > 0) {\n    this.isLoadingMore = true;\n  }\n  \n  this.categorieService.getProduitsByCategorie(categorieId, page, size).subscribe({\n    next: (res) => {\n      console.log(`Page ${page + 1}/${res.totalPages} pour catégorie ${categorieId}`);\n\n      // Mapper les produits\n      const mappedProducts = res.produits.map(produit => new ProduitDetailsResponseDTO({\n        id: produit.id,\n        nom: produit.nom,\n        prixVente: produit.prixVente,\n        prixAchat: produit.prixAchat,\n        quantite: produit.quantite,\n        seuilAlert: produit.seuilAlert,\n        categorieId: produit.categorieId || 0,\n        uniteId: produit.uniteId,\n        codeBare: produit.codeBare,\n        photo: produit.photo,\n        enStock: produit.enStock,\n        nomCategorie: produit.nomCategorie || '',\n        nomUnite: produit.nomUnite || '',\n        typeProduit: produit.typeProduit || '',\n        createdAt: produit.createdAt || '',\n        lastUpdated: produit.lastUpdated || '',\n        datePreemption: produit.datePreemption,\n        boutiqueId: produit.boutiqueId,\n        nomBoutique: produit.nomBoutique || '',\n        description: produit.description || '',\n        codeGenerique: produit.codeGenerique || '',\n        boutiques: produit.boutiques || []\n      }));\n\n      // Si c'est la première page ET qu'une catégorie spécifique est sélectionnée\n      if (page === 0 && this.selectedCategoryId !== null) {\n        // Remplacer les produits affichés pour cette catégorie\n        this.displayedProducts = mappedProducts;\n        \n        // MAIS garder tous les produits dans allProducts et juste mettre à jour cette catégorie\n        this.allProducts = this.allProducts.filter(p => p.categorieId !== this.selectedCategoryId);\n        this.allProducts.push(...mappedProducts);\n      } else {\n        // Sinon, ajouter à la suite (pour \"Toutes les catégories\" ou pages suivantes)\n        this.displayedProducts.push(...mappedProducts);\n        this.allProducts.push(...mappedProducts);\n      }\n\n      // Mettre à jour les informations de pagination\n      this.totalPages = res.totalPages;\n      this.currentPage = page;\n      \n      // Vider le cache car les produits ont changé\n      this.clearCategoryCountCache();\n      \n      // Indexer les produits pour le scanner\n      this.indexProductsByBarcode();\n      \n      // Recalculer les compteurs\n      this.recomputeCategoryCountsForBoutique();\n      \n      // Forcer la mise à jour de l'affichage pour les compteurs\n      this.cdr.detectChanges();\n      \n      // Désactiver l'indicateur de chargement\n      this.isLoadingMore = false;\n    },\n    error: (err) => {\n      this.isLoadingMore = false;\n      console.error(`Erreur lors du chargement de la page ${page} pour la catégorie ${categorieId}`, err);\n    }\n  });\n}\n\n\n\n  // Méthode pour recharger et vérifier les produits\n  // reloadProductsForScan(): void {\n  //   console.log('=== RECHARGEMENT PRODUITS POUR SCAN ===');\n  //   this.loadCategories();\n  // }\n\nshowAllProducts() {\n  this.selectedCategoryId = null;\n  this.currentPage = 0;\n  this.totalPages = 0;\n  \n  // Vider les produits affichés et tous les produits\n  this.displayedProducts = [];\n  this.allProducts = [];\n  \n  console.log('Chargement de la première page de chaque catégorie...');\n  \n  // Charger la première page de chaque catégorie\n  this.categories.forEach(categorie => {\n    this.loadProduitsByCategorie(categorie.id!, 0, this.pageSize);\n  });\n}\n\n// Méthode pour charger plus de produits de toutes les catégories\nprivate loadMoreProductsFromAllCategories() {\n  if (this.isLoadingMore) return; // Éviter les appels multiples\n  \n  this.isLoadingMore = true;\n  console.log('Chargement de plus de produits de toutes les catégories...');\n  \n  // Charger la page suivante de chaque catégorie qui a encore des pages\n  let hasMoreData = false;\n  \n  this.categories.forEach(categorie => {\n    // Calculer combien de pages ont déjà été chargées pour cette catégorie\n    const productsInCategory = this.allProducts.filter(p => p.categorieId === categorie.id).length;\n    const pagesLoaded = Math.ceil(productsInCategory / this.pageSize);\n    \n    // Si il y a encore des pages à charger pour cette catégorie\n    if (productsInCategory > 0 && pagesLoaded * this.pageSize < (categorie.produitCount || 0)) {\n      hasMoreData = true;\n      this.loadProduitsByCategorie(categorie.id!, pagesLoaded, this.pageSize);\n    }\n  });\n  \n  if (!hasMoreData) {\n    console.log('Toutes les données ont été chargées');\n  }\n  \n  this.isLoadingMore = false;\n}\n\n\n\n\nselectCategory(categoryId: number | undefined) {\n  if (categoryId === undefined) return;\n\n  this.selectedCategoryId = categoryId;\n  this.currentPage = 0; // Réinitialiser à la première page\n  \n  // Vider le cache AVANT de charger les nouveaux produits\n  // pour éviter d'afficher des compteurs incorrects\n  this.clearCategoryCountCache();\n  \n  // S'assurer que tous les produits de toutes les catégories sont chargés\n  this.ensureAllCategoriesLoaded();\n  \n  // Filtrer l'affichage pour la catégorie sélectionnée\n  const categoryProducts = this.allProducts.filter(p => p.categorieId === categoryId);\n  this.displayedProducts = categoryProducts;\n  \n  // Forcer la mise à jour de l'affichage\n  this.cdr.detectChanges();\n}\n\n\n\nonScroll() {\n  // Si aucune catégorie n'est sélectionnée (mode \"Toutes les catégories\")\n  if (this.selectedCategoryId === null) {\n    // Charger plus de produits de toutes les catégories\n    this.loadMoreProductsFromAllCategories();\n    return;\n  }\n  \n  // Si une catégorie spécifique est sélectionnée\n  if (this.currentPage + 1 < this.totalPages) {\n    console.log(`Chargement de la page ${this.currentPage + 1} pour la catégorie ${this.selectedCategoryId}`);\n    this.loadProduitsByCategorie(this.selectedCategoryId, this.currentPage + 1, this.pageSize);\n  }\n}\n\n  getProductImage(photoPath: string): string {\n    if (!photoPath || photoPath === '') {\n      return 'assets/img/default-product.png';\n    }\n    \n    if (photoPath.startsWith('http')) {\n      return photoPath;\n    }\n    \n    if (photoPath.startsWith('/uploads')) {\n      return environment.imgUrl.replace('/api', '') + photoPath;\n    }\n    \n    return photoPath;\n  }\n\n  onDiscountInputChange(event: any) {\n  this.currentDiscountInput = event.target.value;\n  // Utilisez parseFloat pour gérer les grands nombres\n  this.discountMode.value = parseFloat(this.currentDiscountInput) || 0;\n  this.updateCommandeTotals();\n}\n\n  // Méthode pour gérer les touches du keypad en mode remise\n  handleDiscountKeyPress(key: string) {\n    switch (key) {\n      case 'backspace':\n        this.currentDiscountInput = this.currentDiscountInput.slice(0, -1);\n        break;\n      case ',':\n        break;\n      default:\n        // Augmentez la limite de 5 à 10\n        if (this.currentDiscountInput.length < 10) {\n          this.currentDiscountInput += key;\n        }\n    }\n    this.discountMode.value = parseInt(this.currentDiscountInput, 10) || 0;\n    this.updateCommandeTotals();\n  }\n\n  openPaymentPopup() {\n    this.showPaymentPopup = true;\n    this.totalAmount = this.getTotalCart(); // S'assurer que totalAmount est défini\n    this.enteredAmount = '';\n    this.paymentAmount = 0;\n    this.changeDue = 0;\n    this.isAmountEntered = false;\n    this.selectedPaymentMethod = 'Espèces';\n  }\n\n  handlePaymentKeyPress(key: string): void {\n    switch (key) {\n      case 'backspace':\n        this.enteredAmount = this.enteredAmount.slice(0, -1);\n        break;\n      case ',':\n        if (!this.enteredAmount.includes(',')) {\n          this.enteredAmount += ',';\n        }\n        break;\n      case '+/-':\n        // Optionnel: inverser le signe si nécessaire\n        break;\n      default:\n        if (this.enteredAmount.length < 10) {\n          this.enteredAmount += key;\n        }\n    }\n    \n    this.calculatePayment();\n  }\n\n  /** Retourne la liste visible en appliquant boutique + catégorie + autres filtres */\n getVisibleProducts(): ProduitDetailsResponseDTO[] {\n    let products = [...this.allProducts];\n\n    // filtrer par boutique si nécessaire\n    if (this.selectedBoutiqueId) {\n      products = products.filter(p => p.boutiqueId === this.selectedBoutiqueId);\n    }\n\n    // filtrer par catégorie si sélectionnée\n    if (this.selectedCategoryId !== null && this.selectedCategoryId !== undefined) {\n      products = products.filter(p => p.categorieId === this.selectedCategoryId);\n    }\n\n    // filtrer par terme de recherche si présent\n    if (this.searchTerm && this.searchTerm.trim() !== '') {\n      const termLower = this.searchTerm.toLowerCase();\n      products = products.filter(p => p.nom.toLowerCase().includes(termLower));\n    }\n\n    // filtrer les produits en stock si besoin\n    products = products.filter(p => p.enStock);\n\n    return products;\n}\n\n\n  /** Retourne le nombre de produits de la catégorie pour la boutique sélectionnée */\n  getCategoryProductCount(category: any): number {\n    if (!category || !category.produits || !category.produits.length) return 0;\n\n    // si aucune boutique sélectionnée, renvoyer le total de la catégorie\n    if (!this.selectedBoutiqueId) {\n      return category.produits.length;\n    }\n\n    // filtrer les produits de la catégorie par boutique\n    return category.produits.filter((p: ProduitDetailsResponseDTO) =>\n      // attention: certains produits peuvent avoir boutiqueId null, on gère ça\n      p.boutiqueId !== null && p.boutiqueId === this.selectedBoutiqueId\n    ).length;\n  }\n\n  /** Retourne le nombre de produits de la catégorie pour la boutique sélectionnée (pour l'affichage) */\n  getCategoryProductCountForDisplay(category: any): number {\n    if (!category) return 0;\n    \n    // Vérifier si le cache est valide\n    if (this.lastBoutiqueId === this.selectedBoutiqueId && this.categoryCountCache.has(category.id)) {\n      return this.categoryCountCache.get(category.id)!;\n    }\n    \n    // Si aucune boutique sélectionnée, afficher le total\n    if (!this.selectedBoutiqueId) {\n      return category.produitCount || 0;\n    }\n    \n    // Si les produits ne sont pas encore chargés, retourner 0 temporairement\n    if (this.allProducts.length === 0) {\n      console.log(`⏳ Produits pas encore chargés pour catégorie ${category.nom}`);\n      return 0;\n    }\n    \n    // Debug: afficher le nombre de produits par catégorie\n    const productsByCategory = this.allProducts.reduce((acc, p) => {\n      acc[p.categorieId] = (acc[p.categorieId] || 0) + 1;\n      return acc;\n    }, {} as { [key: number]: number });\n    \n    console.log(`📊 Produits par catégorie:`, productsByCategory);\n    \n    // Sinon, calculer en temps réel depuis allProducts\n    const filteredProducts = this.allProducts.filter((p: ProduitDetailsResponseDTO) => {\n      const matchesCategory = p.categorieId === category.id;\n      \n      // Vérifier si le produit appartient à la boutique sélectionnée\n      // Utiliser d'abord boutiqueId, puis fallback sur boutiques\n      let matchesBoutique = false;\n      \n      if (p.boutiqueId === this.selectedBoutiqueId) {\n        matchesBoutique = true;\n      } else if (p.boutiques && p.boutiques.length > 0) {\n        matchesBoutique = p.boutiques.some(b => b.id === this.selectedBoutiqueId);\n      }\n      \n      return matchesCategory && matchesBoutique;\n    });\n    \n    const count = filteredProducts.length;\n    \n    // Mettre en cache le résultat\n    this.categoryCountCache.set(category.id, count);\n    \n    console.log(`📊 Catégorie ${category.nom}: ${count} produits trouvés pour boutique ${this.selectedBoutiqueId}`);\n    \n    return count;\n  }\n\n  /** Retourne le tooltip pour expliquer le compteur affiché */\n  getCategoryProductCountTooltip(category: any): string {\n    if (!category) return '';\n    \n    const count = this.getCategoryProductCountForDisplay(category);\n    \n    if (!this.selectedBoutiqueId) {\n      return `${count} produits au total dans cette catégorie`;\n    }\n    \n    // Trouver le nom de la boutique sélectionnée\n    const boutiqueName = this.getBoutiqueName(this.selectedBoutiqueId);\n    return `${count} produits dans ${boutiqueName}`;\n  }\n\n  /** Retourne le nom de la boutique à partir de son ID */\n  getBoutiqueName(boutiqueId: number): string {\n    // Pour l'instant, retourner un nom simple\n    // TODO: Implémenter la récupération du nom depuis le service\n    return `Boutique ${boutiqueId}`;\n  }\n\n  /** Vider le cache des compteurs de catégories */\n  private clearCategoryCountCache(): void {\n    this.categoryCountCache.clear();\n    console.log('🗑️ Cache des compteurs de catégories vidé');\n  }\n\n  /** Vérifier que tous les produits sont chargés pour toutes les catégories */\n  private ensureAllCategoriesLoaded(): void {\n    this.categories.forEach(categorie => {\n      const categoryProducts = this.allProducts.filter(p => p.categorieId === categorie.id);\n      if (categoryProducts.length === 0) {\n        console.log(`📦 Chargement des produits pour catégorie ${categorie.nom}`);\n        this.loadProduitsByCategorie(categorie.id!, 0, this.pageSize);\n      }\n    });\n  }\n\n  /** Recalculer les compteurs produits par catégorie pour la boutique sélectionnée */\n  private recomputeCategoryCountsForBoutique() {\n    const boutiqueId = this.selectedBoutiqueId;\n    \n    // Vider le cache car les données ont changé\n    this.clearCategoryCountCache();\n    \n    (this.categories || []).forEach(cat => {\n      const total = Array.isArray(cat.produits)\n        ? cat.produits.filter((p: ProduitDetailsResponseDTO) =>\n            !boutiqueId ? true : (p.boutiqueId !== null && p.boutiqueId === boutiqueId)\n          ).length\n        : 0;\n\n      // écrire sur l'objet existant (type-safe après modification du modèle)\n      cat.produitCountBoutique = total;\n    });\n  }\n\n  calculatePayment(): void {\n    // recalculer le total courant (au cas où remises ont changé)\n    this.totalAmount = this.getTotalCart();\n\n    const enteredValue = parseFloat(this.enteredAmount.replace(',', '.')) || 0;\n    this.paymentAmount = enteredValue;\n    this.isAmountEntered = enteredValue > 0;\n\n    // différence signée : positive = monnaie à rendre, négative = restant à payer\n    this.changeDue = +(this.paymentAmount - this.totalAmount);\n\n    // si tu préfères toujours conserver valeur positive pour l'affichage, \n    // fais Math.abs ici, mais laisse aussi un flag pour savoir si c'est \"monnaie\" ou \"restant\"\n  }\n\n\n  selectPaymentMethod(method: string): void {\n    this.selectedPaymentMethod = method;\n  }\n\n  completePayment(): void {\n    // protection double-click / UI feedback\n    if (this.isSubmittingVente) return;\n\n    this.isSubmittingVente = true;\n    // Lance l'enregistrement : submitVente() gère la navigation et la réinitialisation au next/error\n    this.submitVente();\n  }\n\n  closePaymentPopup() {\n    this.showPaymentPopup = false;\n  }\n\n  // Mettre à jour addToCart pour gérer la remise\naddToCart(produit: ProduitDetailsResponseDTO): void {\n  if (this.getAvailableStock(produit) <= 0) return;\n\n  // Désactiver la calculatrice pour éviter les conflits d'input\n  this.calculator.setActive(false);\n  \n  // Gestion de la remise\n  if (this.discountMode.active) {\n    this.applyDiscount(produit);\n    return;\n  }\n\n  // Ajout normal au panier\n  const currentQty = this.cart.get(produit.id) || 0;\n  this.cart.set(produit.id, currentQty + 1);\n  this.saveActiveCart();\n  this.selectedProduct = produit;\n  this.isComposingNewQuantity = false;\n\n  // this.quantityMode = true;\n  // this.currentQuantityInput = (this.cart.get(produit.id) || 0).toString();\n}\n\n// --- mettre à jour calculateItemTotal pour tenir compte de la remise live ---\ncalculateItemTotal(item: { product: ProduitDetailsResponseDTO, quantity: number }): number {\n  const basePrice = item.product.prixVente * item.quantity;\n  const discount = this.productDiscounts.get(item.product.id) || 0;\n  return basePrice - discount;\n}\n\n// Obtenir le sous-total (sans remise)\ngetSubtotal(): number {\n  let total = 0;\n  this.cart.forEach((quantity, productId) => {\n    const product = this.allProducts.find(p => p.id === productId);\n    if (product) {\n      total += quantity * product.prixVente;\n    }\n  });\n  return total;\n}\n\n// --- getTotalDiscount : somme des remises par ligne (inclut remise temporaire) ---\ngetTotalDiscount(): number {\n  let total = 0;\n  this.cart.forEach((quantity, productId) => {\n    const product = this.allProducts.find(p => p.id === productId);\n    if (product && quantity > 0) {\n      total += this.computeDiscountForItem(product, quantity);\n    }\n  });\n  return total;\n}\n\n  // Mettre à jour le total général\n  getTotalCart(): number {\n    const subtotal = this.getSubtotal();               // total sans remises\n    const productDiscount = this.getTotalDiscount();   // somme des remises de lignes\n    const baseAfterProductDiscounts = subtotal - productDiscount;\n\n    let total = baseAfterProductDiscounts;\n\n    if (this.globalDiscount.active && this.globalDiscount.value > 0) {\n      if (this.globalDiscount.type === 'CFA') {\n        total -= this.globalDiscount.value;\n      } else {\n        // appliquer le pourcentage SUR la base après remises produits\n        total -= baseAfterProductDiscounts * (this.globalDiscount.value / 100);\n      }\n    }\n\n    return Math.max(0, total);\n  }\n\n\n  // Supprimer aussi la remise quand on retire un produit\n  removeProduct(productId: number) {\n    this.cart.delete(productId);\n    this.productDiscounts.delete(productId);\n    this.saveActiveCart();\n    this.updateCommandeTotals();\n  }\n\n  // Méthode pour diminuer la quantité\n  decreaseQuantity(produit: ProduitDetailsResponseDTO) {\n    const currentQty = this.cart.get(produit.id) || 0;\n    if (currentQty > 0) {\n      const newQty = currentQty - 1;\n      this.cart.set(produit.id, newQty);\n      \n      // Mise à jour du champ de saisie si produit sélectionné\n      if (this.selectedProduct?.id === produit.id) {\n        this.currentQuantityInput = newQty > 0 ? newQty.toString() : '';\n      }\n    }\n    this.saveActiveCart();\n    this.updateCommandeTotals();\n  }\n\n  // Méthode pour obtenir la quantité sélectionnée\n  getSelectedQuantity(produitId: number): number {\n    return this.cart.get(produitId) || 0;\n  }\n\n  updateCommandeTotals() {\n    const totalItems = this.getTotalItems();\n    const totalAmount = this.getTotalCart();\n    \n    // Correction: Utiliser la nouvelle méthode getActiveCommandeId()\n    const activeId = this.commandeState.getActiveCommandeId();\n    \n    this.commandeState.updateCommandeTotals(\n      activeId,\n      totalItems,\n      totalAmount\n    );\n  }\n\n  getTotalItems(): number {\n    let total = 0;\n    this.cart.forEach(quantity => total += quantity);\n    return total;\n  }\n\n  // Méthode pour obtenir les éléments du panier\n  getCartItems() {\n    const items: { product: ProduitDetailsResponseDTO, quantity: number }[] = [];\n    for (const [productId, quantity] of this.cart.entries()) {\n      if (quantity > 0) {\n        const product = this.allProducts.find(p => p.id === productId);\n        if (product) {\n          items.push({ product, quantity });\n        }\n      }\n    }\n    return items;\n  }\n\n  // Remplacer l'ancienne méthode par :\n  getAvailableStock(produit: ProduitDetailsResponseDTO): number {\n    const selectedQty = this.getSelectedQuantity(produit.id);\n    return produit.quantite - selectedQty;\n  }\n  \n  handleKeyPress(key: string): void {\n    // Désactiver la calculatrice dès qu'on utilise le clavier de vente\n    this.calculator.setActive(false);\n\n    if (this.inputMode === 'discount') {\n      this.handleDiscountKeyPress(key); // Gestion remise\n    } else {\n      if (!this.selectedProduct) return; // Vérifiez si un produit est sélectionné\n\n    // Réinitialiser le champ si c'est le premier chiffre d'une nouvelle saisie\n    if (!this.isComposingNewQuantity) {\n      this.currentQuantityInput = '';\n      this.isComposingNewQuantity = true;\n    }\n\n    switch (key) {\n      case 'backspace':\n        this.currentQuantityInput = this.currentQuantityInput.slice(0, -1);\n        break;\n      case '+/-':\n        // Inversion du signe\n        break;\n      default:\n        if (this.currentQuantityInput.length < 5) {\n          this.currentQuantityInput += key;\n        }\n    }\n\n    this.applyQuantityToProduct();\n    }\n  }\n\n  calculateDiscountedPrice(item: { product: ProduitDetailsResponseDTO, quantity: number }): number {\n    const basePrice = item.product.prixVente * item.quantity;\n    const discount = item.product.remise || 0;\n    return basePrice - discount;\n  }\n\n  applyQuantityToProduct(): void {\n    if (!this.selectedProduct || this.currentQuantityInput === '') return;\n\n    const quantity = parseInt(this.currentQuantityInput, 10);\n    if (isNaN(quantity)) return;\n\n    // Vérifier le stock disponible\n    const availableStock = this.selectedProduct.quantite;\n    \n    if (quantity > 0 && quantity <= availableStock) {\n      this.cart.set(this.selectedProduct.id, quantity);\n    } else {\n      this.cart.set(this.selectedProduct.id, availableStock);\n      this.currentQuantityInput = availableStock.toString();\n      \n      this.showStockWarning = true;\n      setTimeout(() => this.showStockWarning = false, 3000);\n    }\n    this.saveActiveCart(); // Sauvegarder après modification\n  }\n\n  // Début de l'appui\nstartPress(event: Event, produit: ProduitDetailsResponseDTO): void {\n  if (this.getAvailableStock(produit) <= 0) return;\n\n  this.longPressTimer = setTimeout(() => {\n    // Appel au service pour récupérer les données à jour\n    this.produitService.getProduitById(produit.id).subscribe({\n      next: (result: Produit) => {\n        // Mapping Produit => ProduitDetailsResponseDTO\n        const mappedProduct = new ProduitDetailsResponseDTO({\n          ...result,\n          categorieId: result.categorieId ?? 0,\n          seuilAlert: result.seuilAlert ?? 0,\n          nomCategorie: result.nomCategorie ?? '',\n          nomUnite: result.nomUnite ?? '',\n          typeProduit: result.typeProduit ?? '',\n          createdAt: result.createdAt ?? '',\n          lastUpdated: result.lastUpdated ?? '',\n          datePreemption: result.datePreemption ?? null,\n          boutiqueId: result.boutiqueId ?? null,\n          description: result.description ?? '',\n          codeBare: result.codeBare ?? '',\n          codeGenerique: result.codeGenerique ?? '',\n        });\n\n        this.selectedProductForDetail = mappedProduct;\n        this.showDetailPopup = true;\n      },\n      error: (err) => {\n        console.error('Erreur lors de la récupération du produit :', err);\n      }\n    });\n\n    this.longPressTimer = null;\n  }, 500);\n}\n\ngetNomBoutiqueCourante(produit: ProduitDetailsResponseDTO): string {\n  const boutique = produit.boutiques?.find(b => b.id === produit.boutiqueId);\n  return boutique?.nom || 'Boutique inconnue';\n}\n\nisQuantiteCritique(produit: ProduitDetailsResponseDTO): boolean {\n  const quantite = this.getQuantiteDansBoutiqueCourante(produit);\n\n  if (produit.seuilAlert == null || produit.seuilAlert === 0) {\n    return quantite <= 10;\n  }\n  return quantite <= produit.seuilAlert;\n}\n\n  getQuantiteClass(produit: ProduitDetailsResponseDTO): string {\n    return this.isQuantiteCritique(produit) ? 'alert-low-stock' : 'safe-stock';\n  }\n\n  getQuantiteDansBoutiqueCourante(produit: ProduitDetailsResponseDTO): number {\n    const boutique = produit.boutiques?.find(b => b.id === produit.boutiqueId);\n    return boutique?.quantite ?? 0;\n  }\n\n  activateQuantityMode() {\n    if (this.selectedProduct) {\n      this.quantityMode = true;\n      this.currentQuantityInput = (this.cart.get(this.selectedProduct.id) || 0).toString();\n    }\n  }\n\n  endPress(): void {\n    if (this.longPressTimer) {\n      clearTimeout(this.longPressTimer);\n      this.longPressTimer = null;\n    }\n  }\n\n  goTopaiement() {\n    this.router.navigate(['/pos-accueil/paiement'])\n  }\n\n  // Fermer le popup\n  closeDetailPopup(): void {\n    this.showDetailPopup = false;\n    this.selectedProductForDetail = null;\n  }\n\n  loadClients() {\n    this.usersService.getValidAccessToken().pipe(\n      switchMap(token => {\n        if (!token) return throwError(() => new Error('Aucun token trouvé'));\n        return this.clientService.getListClients();\n      })\n    ).subscribe({\n      next: (data) => {\n        this.clients = data.map(client => ({\n          ...client,\n          photo: client.photo \n            ? `${environment.imgUrl}${client.photo}` \n            : `assets/img/profil.png`,\n          entrepriseClient: client.entrepriseClient \n            ? { id: client.entrepriseClient.id } \n            : null\n        })).sort((a, b) => {\n          const dateA = a.createdAt ? new Date(a.createdAt).getTime() : 0;\n          const dateB = b.createdAt ? new Date(b.createdAt).getTime() : 0;\n          return dateB - dateA;\n        });\n      },\n      error: (err) => {\n        console.error('Erreur récupération clients :', err);\n      }\n    });\n  }\n\n  // Fermer le popup client list\n  closeListClientPopup(): void {\n    this.showClientPopup = false;\n  }\n\n  highlightMatch(text: string | null | undefined): SafeHtml {\n    if (!text) return '';\n    if (!this.searchText.trim()) return text;\n    \n    const escapedSearch = this.searchText.trim().replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n    const regex = new RegExp(`(${escapedSearch})`, 'gi');\n    \n    return this.sanitizer.bypassSecurityTrustHtml(\n      text.replace(regex, '<mark>$1</mark>')\n    );\n  }\n\n  get filteredClients(): Clients[] {\n    let clients = this.clients;\n    \n    if (this.searchText.trim()) {\n      const searchLower = this.searchText.toLowerCase().trim();\n      clients = clients.filter(client => \n        (client.nomComplet?.toLowerCase().includes(searchLower)) ||\n        (client.email?.toLowerCase().includes(searchLower)) ||\n        (client.adresse?.toLowerCase().includes(searchLower)) ||\n        (client.telephone?.includes(searchLower))\n      );\n    }\n    \n    return clients.sort((a, b) => {\n      const dateA = a.createdAt ? new Date(a.createdAt).getTime() : 0;\n      const dateB = b.createdAt ? new Date(b.createdAt).getTime() : 0;\n      return dateB - dateA; // Tri décroissant\n    });\n  }\n\n  sort(field: string) {\n    if (this.sortField === field) {\n      this.sortDirection = this.sortDirection === 'asc' ? 'desc' : 'asc';\n    } else {\n      this.sortField = field;\n      this.sortDirection = 'asc';\n    }\n\n    this.clients.sort((a: any, b: any) => {\n      const modifier = this.sortDirection === 'asc' ? 1 : -1;\n      const valueA = a[field]?.toString().toLowerCase() ?? '';\n      const valueB = b[field]?.toString().toLowerCase() ?? '';\n      return valueA.localeCompare(valueB) * modifier;\n    });\n  }\n\n// Sélection client particulier\nselectClient(client: Clients) {\n  this.selectedClient = client;\n  this.selectedEntreprise = null; // annule toute entreprise sélectionnée\n  console.log('Client sélectionné:', client);\n  this.closeListClientPopup();\n}\n\n// Sélection entreprise cliente\nselectEntreprise(entreprise: EntrepriseClient) {\n  this.selectedEntreprise = entreprise;\n  this.selectedClient = null; // annule tout client particulier\n  console.log('Entreprise sélectionnée:', entreprise);\n  this.closeListClientPopup();\n}\n\n  // Gestion du changement de pays\n  onPaysChange(event: any): void {\n    const paysSelectionne = event.target.value;\n    const paysInfo = this.paysIndicatifs[paysSelectionne];\n    \n    if (!paysInfo) return;\n    \n    this.indicatif = paysInfo.indicatif;\n    this.maxPhoneLength = paysInfo.longueur;\n    \n    const ctrl = this.clientForm.get('telephone');\n    let currentValue = ctrl?.value ?? '';\n    \n    const prefix = this.indicatif.replace(/\\D/g, '');\n    const valueNumerique = currentValue.replace(/\\D/g, '');\n    \n    if (!valueNumerique.startsWith(prefix)) {\n      ctrl?.setValue(this.indicatif);\n    } else {\n      const reste = valueNumerique.slice(prefix.length, prefix.length + this.maxPhoneLength);\n      ctrl?.setValue(this.indicatif + reste);\n    }\n    \n    this.updatePhoneValidator(paysInfo.longueur);\n  }\n\n  private updatePhoneValidator(longueur: number): void {\n    const ctrl = this.clientForm.get('telephone');\n    const regex = new RegExp(`^\\\\${this.indicatif}\\\\s?\\\\d{${longueur}}$`);\n    ctrl?.setValidators([Validators.required, Validators.pattern(regex)]);\n    ctrl?.updateValueAndValidity();\n  }\n\n  // Formatage du numéro de téléphone\n  formatPhoneNumber(): void {\n    let valeur = this.clientForm.get('telephone')?.value;\n    \n    if (!valeur.startsWith(this.indicatif)) {\n      this.clientForm.get('telephone')?.setValue(this.indicatif);\n      return;\n    }\n    \n    const chiffres = valeur.replace(this.indicatif, '').replace(/\\D/g, '');\n    const numeroFormate = this.indicatif + chiffres;\n    this.clientForm.get('telephone')?.setValue(numeroFormate.slice(0, this.indicatif.length + this.maxPhoneLength));\n  }\n\n  // Charger les entreprises pour l'autocomplete\n  loadEntreprises() {\n    this.usersService.getValidAccessToken().pipe(\n      switchMap(token => {\n        if (!token) {\n          console.error('Aucun token valide trouvé !');\n          return throwError(() => new Error('Aucun token trouvé'));\n        }\n        return this.entrepriseService.getListEntreprise();\n      })\n    ).subscribe({\n      next: (entreprises) => {\n        this.optionsEntreprise$.next(entreprises);\n        this.setupAutocomplete();\n      },\n      error: (error) => {\n        console.error('Erreur lors de la récupération des entreprises :', error);\n      }\n    });\n  }\n\n  // Configurer l'autocomplete\n  private setupAutocomplete() {\n    this.filteredOptions = combineLatest([\n      this.control.valueChanges.pipe(\n        startWith(''),\n        map(value => typeof value === 'string' ? value : value?.nom)\n      ),\n      this.optionsEntreprise$\n    ]).pipe(\n      map(([name, entreprises]) => \n        name ? this._filter(name, entreprises) : entreprises\n      )\n    );\n  }\n\n  private _filter(name: string, entreprises: Entreprise[]): Entreprise[] {\n    const filterValue = name.toLowerCase();\n    return entreprises.filter(e =>\n        e.nom.toLowerCase().includes(filterValue)\n    );\n  }\n\n  // Affichage du nom de l'entreprise dans l'autocomplete\n  displayFnEntreprise(e?: Entreprise): string {\n    return e ? e.nom : '';\n  }\n\n  // Sélection d'une entreprise dans l'autocomplete\n  onEntrepriseSelected(event: any): void {\n    // Logique pour gérer la sélection\n  }\n\n  // Ouvrir/fermer le popup d'ajout de client\n  openAddClient() {\n    this.showAddClientPopup = true;\n    this.loadEntreprises();\n  }\n\n  closeAddClientPopup() {\n    this.showAddClientPopup = false;\n    this.clientForm.reset();\n  }\n\n  // Ajouter un nouveau client\n  ajouterClientDansPopup() {\n    if (this.clientForm.invalid) return;\n\n    const client: Clients = this.clientForm.value;\n    \n    if (this.isEntrepriseSelected) {\n      const selected = this.control.value as Entreprise;\n      if (selected && selected.id) {\n        client.entrepriseClient = { id: selected.id } as Entreprise;\n      }\n    }\n    \n    this.clientService.addClient(client).subscribe({\n      next: (res: any) => {\n        const newClient: Clients = {\n          ...client,\n          id: res.id,\n          createdAt: new Date() // Utilisez un objet Date directement\n        };\n        \n        this.closeAddClientPopup();\n        this.clients = [newClient, ...this.clients];\n        this.currentListTypePopup = 'clients';\n        this.searchText = '';\n      },\n      error: err => {\n        console.error('Erreur lors de l\\'ajout du client:', err);\n      }\n    });\n  }\n\n  setClientType(type: 'individuel' | 'entreprise') {\n    this.clientType = type;\n  }\n\n  onEntreprisePaysChange(event: any): void {\n    const paysSelectionne = event.target.value;\n    const paysInfo = this.paysIndicatifs[paysSelectionne];\n    \n    if (!paysInfo) return;\n    \n    this.entrepriseIndicatif = paysInfo.indicatif;\n    this.entrepriseMaxPhoneLength = paysInfo.longueur;\n    \n    const ctrl = this.entrepriseForm.get('telephone');\n    let currentValue = ctrl?.value ?? '';\n    \n    const prefix = this.entrepriseIndicatif.replace(/\\D/g, '');\n    const valueNumerique = currentValue.replace(/\\D/g, '');\n    \n    if (!valueNumerique.startsWith(prefix)) {\n        ctrl?.setValue(this.entrepriseIndicatif);\n    } else {\n        const reste = valueNumerique.slice(prefix.length, prefix.length + this.entrepriseMaxPhoneLength);\n        ctrl?.setValue(this.entrepriseIndicatif + reste);\n    }\n    \n    this.updateEntreprisePhoneValidator(paysInfo.longueur);\n  }\n\n  private updateEntreprisePhoneValidator(longueur: number): void {\n    const ctrl = this.entrepriseForm.get('telephone');\n    const regex = new RegExp(`^\\\\${this.entrepriseIndicatif}\\\\s?\\\\d{${longueur}}$`);\n    ctrl?.setValidators([Validators.required, Validators.pattern(regex)]);\n    ctrl?.updateValueAndValidity();\n  }\n\n  // Formatage du numéro pour les entreprises\n  formatEntreprisePhoneNumber(): void {\n    let valeur = this.entrepriseForm.get('telephone')?.value;\n    \n    if (!valeur.startsWith(this.entrepriseIndicatif)) {\n        this.entrepriseForm.get('telephone')?.setValue(this.entrepriseIndicatif);\n        return;\n    }\n    \n    const chiffres = valeur.replace(this.entrepriseIndicatif, '').replace(/\\D/g, '');\n    const numeroFormate = this.entrepriseIndicatif + chiffres;\n    this.entrepriseForm.get('telephone')?.setValue(numeroFormate.slice(0, this.entrepriseIndicatif.length + this.entrepriseMaxPhoneLength));\n  }\n\n  ajouterEntrepriseDansPopup() {\n    if (this.entrepriseForm.invalid) {\n      return;\n    }\n\n    const entreprise = this.entrepriseForm.value;\n    \n    this.entrepriseService.addEntreprise(entreprise).subscribe({\n      next: (res: EntrepriseClient) => {\n        // Fermer le popup d'ajout\n        this.closeAddClientPopup();\n        \n        // Ajouter la nouvelle entreprise à la liste\n        this.entreprisesPopup = [res, ...this.entreprisesPopup];\n        \n        // Basculer sur l'onglet des entreprises\n        this.currentListTypePopup = 'entreprises';\n        \n        // Réinitialiser le champ de recherche\n        this.searchText = '';\n      },\n      error: (err) => {\n        console.error('Erreur lors de l\\'ajout de l\\'entreprise:', err);\n      }\n    });\n  }\n\n  loadEntreprisesForPopup() {\n    this.usersService.getValidAccessToken().pipe(\n      switchMap(token => {\n        if (!token) {\n          console.error('Aucun token valide trouvé !');\n          return throwError(() => new Error('Aucun token trouvé'));\n        }\n        return this.entrepriseService.getListEntreprises();\n      })\n    ).subscribe({\n      next: (data: EntrepriseClient[]) => {\n        // Trier par date de création descendante\n        this.entreprisesPopup = data.sort((a, b) => {\n          const dateA = a.createdAt ? new Date(a.createdAt).getTime() : 0;\n          const dateB = b.createdAt ? new Date(b.createdAt).getTime() : 0;\n          return dateB - dateA;\n        });\n      },\n      error: (err) => {\n        console.error('Erreur récupération entreprises :', err);\n      }\n    });\n  }\n\n  // Basculer entre clients/entreprises dans le popup\n  setListTypePopup(type: 'clients' | 'entreprises') {\n    this.currentListTypePopup = type;\n    this.searchText = ''; // Réinitialiser la recherche\n  }\n\n  // Filtrer les entreprises\n  get filteredEntreprisesPopup(): EntrepriseClient[] {\n    let entreprises = this.entreprisesPopup;\n    \n    if (this.searchText.trim()) {\n      const searchLower = this.searchText.toLowerCase().trim();\n      entreprises = entreprises.filter(entreprise => \n        (entreprise.nom?.toLowerCase().includes(searchLower)) ||\n        (entreprise.email?.toLowerCase().includes(searchLower)) ||\n        (entreprise.adresse?.toLowerCase().includes(searchLower)) ||\n        (entreprise.telephone?.includes(searchLower))\n      );\n    }\n    \n    // Trier par date de création descendante (le plus récent en premier)\n    return entreprises.sort((a, b) => {\n      const dateA = a.createdAt ? new Date(a.createdAt).getTime() : 0;\n      const dateB = b.createdAt ? new Date(b.createdAt).getTime() : 0;\n      return dateB - dateA;\n    });\n  }\n\n \n\n  getSelectedCustomerName(): string {\n    if (this.selectedClient) {\n      return this.selectedClient.nomComplet || 'Client sans nom';\n    }\n    if (this.selectedEntreprise) {\n      return this.selectedEntreprise.nom || 'Entreprise sans nom';\n    }\n    return 'Client';\n  }\n\n  @HostListener('document:keydown', ['$event'])\n  handleKeyboardEvent(event: KeyboardEvent) {\n    // Si la calculatrice est active, on ne fait rien ici.\n    // L'événement sera capturé par le listener de PosAccueilComponent.\n    if (this.isCalculatorActive) {\n      return;\n    }\n\n      // IMPORTANT: Vérifier si un scan est en cours AVANT de traiter les touches\n    if (this.scanInProgress) {\n      return; // Ignorer complètement si un scan est en cours\n    }\n\n    if (this.showPaymentPopup) {\n      this.handlePaymentKeyPressPhysical(event);\n    } else {\n      this.handleKeyPressPhysical(event);\n    }\n  }\n\n  handleKeyPressPhysical(event: KeyboardEvent) {\n\n    // Indiquer au scanner qu'on est en train d'utiliser le clavier normalement\n    this.scannerService.setUserTyping(true);\n\n    // Réactiver le scanner après un court délai\n    setTimeout(() => {\n      this.scannerService.setUserTyping(false);\n    }, 1000); // 1 seconde de délai\n    \n    // Ignorer si un scan matériel est en cours\n    if (this.scanInProgress) return;\n\n    // Ignorer si le focus est dans un input / textarea (user tape)\n    const ae = document.activeElement as HTMLElement | null;\n    if (ae && (ae.tagName === 'INPUT' || ae.tagName === 'TEXTAREA' || ae.isContentEditable)) {\n      return;\n    }\n\n    if (this.disablePhysicalKeyboard || this.discountMode.active) return;\n    // condition pour ignorer si le champ de remise est actif\n    if (this.discountMode.active) return;\n    // Ignorer si un popup est ouvert ou si on est dans un champ de saisie\n    if (this.showDetailPopup || this.showClientPopup || this.showAddClientPopup) return;\n    \n    const key = event.key;\n    switch (key) {\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n        this.handleKeyPress(key);\n        break;\n      case ',':\n      case '.':\n        this.handleKeyPress(',');\n        break;\n      case 'Backspace':\n        this.handleKeyPress('backspace');\n        break;\n      case '-':\n      case '+':\n        this.handleKeyPress('+/-');\n        break;\n    }\n  }\n\n  handlePaymentKeyPressPhysical(event: KeyboardEvent) {\n    this.scannerService.setUserTyping(true);\n    setTimeout(() => {\n      this.scannerService.setUserTyping(false);\n    }, 1000);\n    \n    const key = event.key;\n    switch (key) {\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n        this.handlePaymentKeyPress(key);\n        break;\n      case ',':\n      case '.':\n        this.handlePaymentKeyPress(',');\n        break;\n      case 'Backspace':\n        this.handlePaymentKeyPress('backspace');\n        break;\n      case '-':\n      case '+':\n        this.handlePaymentKeyPress('+/-');\n        break;\n      case 'Enter':\n        if (this.isAmountEntered) {\n          this.completePayment();\n        }\n        break;\n    }\n  }\n\n  private buildVenteRequestFromCart(): VenteRequest | null {\n  if (!this.selectedBoutiqueId) {\n    this.venteErrorMessage = 'Aucune boutique sélectionnée.';\n    return null;\n  }\n\n  const produitsQuantites: { [k: string]: number } = {};\n  this.cart.forEach((qty, productId) => {\n    if (qty > 0) produitsQuantites[String(productId)] = qty;\n  });\n\n  if (Object.keys(produitsQuantites).length === 0) {\n    this.venteErrorMessage = 'Le panier est vide.';\n    return null;\n  }\n\n  const modePaiementEnum = this.mapPaymentMethodToEnum(this.selectedPaymentMethod);\n\n  // Récupérer les informations du client/entreprise\n  let clientNom: string | undefined = undefined;\n  let clientNumero: string | undefined = undefined;\n  let clientId: number | null = null;\n  let entrepriseClientId: number | null = null;\n\n  if (this.selectedClient) {\n    clientNom = this.selectedClient.nomComplet || undefined;\n    clientNumero = this.selectedClient.telephone || undefined;\n    clientId = this.selectedClient.id;\n  } else if (this.selectedEntreprise) {\n    clientNom = this.selectedEntreprise.nom || undefined;\n    clientNumero = this.selectedEntreprise.telephone || undefined;\n    entrepriseClientId = this.selectedEntreprise.id ?? null;\n  }\n  // si aucun client sélectionné, clientId et entrepriseClientId restent null → client passant\n\n  const request: VenteRequest = {\n    boutiqueId: this.selectedBoutiqueId,\n    produitsQuantites,\n    description: 'Vente POS',\n    clientNom: clientNom,\n    clientNumero: clientNumero,\n    clientId: clientId,\n    entrepriseClientId: entrepriseClientId,\n    modePaiement: modePaiementEnum ?? undefined,\n  };\n\n  // Ajouter les remises par produit\n  const remises: { [id: string]: number } = {};\n  this.getCartItems().forEach(item => {\n    let discountAmount = this.productDiscounts.get(item.product.id) || 0;\n\n    if ((!discountAmount || discountAmount === 0)\n        && this.discountMode.active\n        && this.discountMode.productId === item.product.id) {\n\n      if (this.discountMode.type === 'CFA') {\n        discountAmount = Math.max(0, this.discountMode.value || 0);\n      } else {\n        const pct = Math.max(0, this.discountMode.value || 0) / 100;\n        discountAmount = Math.round(item.product.prixVente * item.quantity * pct);\n      }\n    }\n\n    if (discountAmount > 0) {\n      const totalSansRemise = item.product.prixVente * item.quantity;\n      remises[item.product.id] = (discountAmount / totalSansRemise) * 100;\n    }\n  });\n  if (Object.keys(remises).length > 0) {\n    request.remises = remises;\n  }\n\n  // Ajouter la remise globale\n  if (this.globalDiscount.active && this.globalDiscount.value > 0) {\n    if (this.globalDiscount.type === 'CFA') {\n      const subtotal = this.getSubtotal();\n      if (subtotal > 0) {\n        request.remiseGlobale = (this.globalDiscount.value / subtotal) * 100;\n      }\n    } else {\n      request.remiseGlobale = this.globalDiscount.value;\n    }\n  }\n\n  return request;\n}\n\n\n  submitVente() {\n    this.venteErrorMessage = null;\n\n    const request = this.buildVenteRequestFromCart();\n    if (!request) return;\n\n    // Affiche clairement la requête qui sera envoyée\n    console.log('→ Envoi de la requête vente:', request);\n    // Also show boutique id and cart for extra confidence\n    console.log('selectedBoutiqueId=', this.selectedBoutiqueId, 'cart=', Array.from(this.cart.entries()));\n\n    this.isSubmittingVente = true;\n\n    this.venteService.enregistrerVente(request).pipe(\n      finalize(() => this.isSubmittingVente = false)\n    ).subscribe({\n      next: (res: VenteResponse) => {\n        console.log('Vente enregistrée', res);\n        // UX : succès\n        // alert('Vente enregistrée avec succès (ID: ' + res.venteId + ')');\n\n        // Réinitialiser l'UI : vider cart, sauvegarder état\n        this.cart.clear();\n        this.saveActiveCart();\n        this.updateCommandeTotals();\n\n        // Naviguer / afficher reçu (optionnel)\n        this.router.navigate(['/pos-accueil/paiement'], {\n          state: {\n            vente: res,\n            paymentAmount: this.paymentAmount,\n            changeDue: this.changeDue,\n            paymentMethod: this.selectedPaymentMethod\n          }\n        });\n\n        // fermer popup de paiement si ouvert\n        this.showPaymentPopup = false;\n      },\n      error: (err: any) => {\n        // Affiche tout pour debug\n        console.error('Erreur enregistrement vente (subscribe) :', err);\n\n        // Si err est un HttpErrorResponse (erreur réseau / serveur), extraire message du serveur\n        const original = err?.original ?? err;\n        let serverMsg = null;\n\n        // Cas : on reçoit HttpErrorResponse avec original.error = { exception, error: \"...\" }\n        if (original?.error) {\n          // Many backends return either { error: \"...\"} or { message: \"...\"} or {exception:.., error:..}\n          serverMsg = original.error.error || original.error.message || original.message;\n        }\n\n        // Sinon on prend err.message\n        this.venteErrorMessage = serverMsg || err?.message || 'Erreur inconnue lors de l\\'enregistrement de la vente';\n\n        // Affiche à l'utilisateur\n        alert('Erreur : ' + this.venteErrorMessage);\n\n        // NE PAS vider le panier : laisser l'utilisateur réessayer\n      }\n    });\n  }\n\n  private mapPaymentMethodToEnum(uiMethod: string | null | undefined): string | null {\n    if (!uiMethod) return null;\n\n    const m = uiMethod.trim().toLowerCase();\n\n    if (m === 'espèces' || m === 'espèces ' || m === 'especes' || m === 'especes' || m === 'espèces') {\n      return 'ESPECES';\n    }\n    if (m === 'carte' || m === 'card') {\n      return 'CARTE';\n    }\n    if (m === 'mobile money' || m === 'mobile_money' || m.includes('mobile')) {\n      return 'MOBILE_MONEY';\n    }\n    if (m === 'chèque' || m === 'cheque' || m === 'cheque') {\n      return 'CHEQUE';\n    }\n    // 'Compte client' / 'Compte' -> on n'a pas d'enum spécifique -> AUTRE\n    if (m.includes('compte') || m.includes('client') || m.includes('compte client')) {\n      return 'AUTRE';\n    }\n\n    // fallback conservative\n    return 'AUTRE';\n  }\n\n // Réinitialiser la sélection\n  clearCustomerSelection(event: Event) {\n  event.stopPropagation(); // éviter que le popup se réouvre\n  this.selectedClient = null;\n  this.selectedEntreprise = null;\n}\n\n  // Méthodes pour le déplacement\n  startDrag(event: MouseEvent): void {\n    event.preventDefault();\n    this.isDragging = true;\n    this.startX = event.clientX;\n    this.startY = event.clientY;\n    this.initialX = this.popupOffset.x;\n    this.initialY = this.popupOffset.y;\n\n    document.addEventListener('mousemove', this.onMouseMove);\n    document.addEventListener('mouseup', this.onMouseUp);\n  }\n\n  onMouseMove = (event: MouseEvent): void => {\n    if (!this.isDragging) return;\n    \n    requestAnimationFrame(() => {\n      const deltaX = event.clientX - this.startX;\n      const deltaY = event.clientY - this.startY;\n      this.popupOffset.x = this.initialX + deltaX;\n      this.popupOffset.y = this.initialY + deltaY;\n    });\n  }\n\n  onMouseUp = (): void => {\n    this.isDragging = false;\n    document.removeEventListener('mousemove', this.onMouseMove);\n    document.removeEventListener('mouseup', this.onMouseUp);\n  }\n\n  // Basculer l'affichage du champ remise\n  toggleDiscountInput() {\n    this.showDiscountInput = !this.showDiscountInput;\n    \n    if (this.showDiscountInput) {\n      this.discountButtonText = 'Annuler';\n    } else {\n      this.resetDiscount();\n    }\n  }\n\n  // Réinitialiser l'état de remise\n  resetDiscount() {\n    this.showDiscountInput = false;\n    this.discountValue = 0;\n    this.discountType = 'CFA';\n    this.discountButtonText = 'Remise';\n    this.selectedProductForDiscount = null;\n  }\n\n  // Basculer le mode remise\n  toggleDiscountMode() {\n    this.discountMode.active = !this.discountMode.active;\n    \n    if (this.discountMode.active) {\n      // Si aucun produit ciblé : essayer d'auto-sélectionner un produit logique\n      if (!this.discountMode.productId) {\n        // priorise le dernier produit ciblé si existant\n        if (this.lastSelectedForDiscount) {\n          this.discountMode.productId = this.lastSelectedForDiscount;\n        } else {\n          const items = this.getCartItems();\n          // si il n'y a qu'une seule ligne dans le panier, l'utiliser\n          if (items.length === 1) {\n            this.discountMode.productId = items[0].product.id;\n          }\n        }\n      }\n    } else {\n      this.resetDiscountMode();\n    }\n\n    // forcer recalcul affichage\n    this.updateCommandeTotals();\n  }\n\n  // Changer le type de remise (CFA ou %)\n  setDiscountType(type: 'CFA' | '%') {\n    this.discountMode.type = type;\n    this.updateCommandeTotals();\n  }\n\n  selectProductForDiscount(product: ProduitDetailsResponseDTO) {\n    this.lastSelectedForDiscount = product.id;\n    this.discountMode.productId = product.id;\n    this.discountMode.active = true;\n\n    const existing = this.productDiscounts.get(product.id) || 0;\n    if (existing > 0) {\n      const pct = Math.round((existing / product.prixVente) * 100);\n      if (pct > 0 && pct <= 100) {\n        this.discountMode.type = '%';\n        this.discountMode.value = pct;\n      } else {\n        this.discountMode.type = 'CFA';\n        this.discountMode.value = existing;\n      }\n    } else {\n      this.discountMode.value = 0;\n    }\n\n    this.updateCommandeTotals();\n  }\n\n  // --- apply discount : corriger pour stocker la remise en CFA *totale par ligne* (et pas seulement par unité) ---\n  applyDiscount(produit: ProduitDetailsResponseDTO) {\n    // Autoriser la valeur 0 pour supprimer la remise\n    if (this.discountMode.value < 0) return;\n\n    const qty = this.getSelectedQuantity(produit.id) || 0;\n    if (qty <= 0) return;\n\n    let discountAmount = 0;\n\n    if (this.discountMode.value > 0) {\n      if (this.discountMode.type === '%') {\n        // Calculer le montant de remise en pourcentage\n        discountAmount = produit.prixVente * qty * (this.discountMode.value / 100);\n      } else {\n        // CFA : montant fixe\n        discountAmount = this.discountMode.value;\n      }\n    }\n\n    // Limiter la remise au montant maximum possible\n    const maxDiscount = produit.prixVente * qty;\n    if (discountAmount > maxDiscount) discountAmount = maxDiscount;\n\n    // Stocker la remise (0 effacera la remise existante)\n    if (discountAmount > 0) {\n      this.productDiscounts.set(produit.id, discountAmount);\n    } else {\n      this.productDiscounts.delete(produit.id);\n    }\n\n    this.resetDiscountMode();\n    this.updateCommandeTotals();\n  }\n\n  resetDiscountMode() {\n    this.discountMode = {\n      active: false,\n      type: 'CFA',\n      value: 0\n    };\n  }\n\n  // Modifier une remise existante\n  editDiscount(produit: ProduitDetailsResponseDTO) {\n    const currentDiscount = this.productDiscounts.get(produit.id) || 0;\n    \n    // Convertir en pourcentage si nécessaire pour l'affichage\n    let displayValue = currentDiscount;\n    let type: 'CFA' | '%' = 'CFA';\n    \n    if (currentDiscount > 0) {\n      const percentage = Math.round((currentDiscount / produit.prixVente) * 100);\n      if (percentage > 0 && percentage <= 100) {\n        displayValue = percentage;\n        type = '%';\n      }\n    }\n    \n    this.discountMode = {\n      active: true,\n      type: type,\n      value: displayValue,\n      productId: produit.id\n    };\n\n    // mémoriser pour usages futurs (auto-select)\n    this.lastSelectedForDiscount = produit.id;\n\n    // mise à jour immédiate de l'UI\n    this.updateCommandeTotals();\n  }\n\n\n  // --- getProductDiscount : retourner la remise actuelle affichée (live si en cours d'édition) ---\n  getProductDiscount(productId: number): number {\n    // si edition live pour ce product\n    if (this.discountMode.active && this.discountMode.productId === productId) {\n      const product = this.allProducts.find(p => p.id === productId);\n      const qty = this.cart.get(productId) || 0;\n      return this.computeDiscountForItem(product, qty);\n    }\n    return this.productDiscounts.get(productId) || 0;\n  }\n\n  // --- utilitaire : calcule la remise effective (temporaire ou persistée) pour un produit donné et une quantité ---\n  private computeDiscountForItem(product: ProduitDetailsResponseDTO | undefined, quantity: number): number {\n    if (!product || quantity <= 0) return 0;\n\n    // Si on est en mode édition (live) pour ce produit, calculer la remise temporaire\n    if (this.discountMode.active && this.discountMode.productId === product.id) {\n      if (this.discountMode.type === 'CFA') {\n        // valeur CFA interprétée comme montant total de remise pour la ligne\n        const val = Math.max(0, this.discountMode.value || 0);\n        return Math.min(val, product.prixVente * quantity);\n      } else {\n        // pourcentage appliqué au total de la ligne\n        const pct = Math.max(0, this.discountMode.value || 0) / 100;\n        const discount = Math.round(product.prixVente * quantity * pct);\n        return Math.min(discount, product.prixVente * quantity);\n      }\n    }\n\n    // sinon, prendre la remise persistée (productDiscounts contient montant en CFA pour la ligne)\n    return this.productDiscounts.get(product.id) || 0;\n  }\n\n  // Méthodes pour la remise globale\n  toggleGlobalDiscount() {\n    this.globalDiscount.active = !this.globalDiscount.active;\n    if (this.globalDiscount.active) {\n      // Désactiver les remises par produit\n      this.discountMode.active = false;\n      this.productDiscounts.clear();\n    }\n    this.updateCommandeTotals();\n  }\n\n  setGlobalDiscountType(type: 'CFA' | '%') {\n    this.globalDiscount.type = type;\n    this.updateCommandeTotals();\n  }\n\n  onGlobalDiscountInputChange() {\n    if (this.globalDiscount.value < 0) this.globalDiscount.value = 0;\n    this.updateCommandeTotals();\n    // si le popup de paiement est ouvert, recalculer la monnaie / restant\n    if (this.showPaymentPopup) {\n      this.calculatePayment();\n    }\n  }\n\n\n  getGlobalDiscountAmount(): number {\n    if (!this.globalDiscount.active || this.globalDiscount.value <= 0) {\n      return 0;\n    }\n\n    if (this.globalDiscount.type === 'CFA') {\n      return this.globalDiscount.value;\n    } else {\n      return this.getSubtotal() * (this.globalDiscount.value / 100);\n    }\n  }\n\n\n  // Ouvrir le popup\n  openListClientPopup(): void {\n    this.showClientPopup = true;\n    this.loadClients();\n    this.loadEntreprisesForPopup(); // Charger les entreprises\n  }\n\n  isEditingDiscount(productId: number): boolean {\n    return this.discountMode.active && this.discountMode.productId === productId;\n  }\n\n  saveDiscount(produit: ProduitDetailsResponseDTO) {\n    this.applyDiscount(produit);\n    this.updateCommandeTotals();\n    \n    // Réinitialiser le champ de remise\n    this.currentDiscountInput = '';\n    this.discountMode.value = 0;\n  }\n\n  formatDate(dateStr: string | null): string {\n    if (!dateStr) return '';\n    const date = new Date(dateStr);\n    return date.toLocaleDateString('fr-FR');\n  }\n\n  isNearExpiry(dateStr: string | null): boolean {\n    if (!dateStr) return false;\n    const date = new Date(dateStr);\n    const now = new Date();\n    const oneMonthLater = new Date();\n    oneMonthLater.setMonth(now.getMonth() + 1);\n    return date <= oneMonthLater;\n  }\n\n  //Récupérer les produits filtrés selon la boutique sélectionnée\n  getFilteredProductsByBoutique(): ProduitDetailsResponseDTO[] {\n    if (!this.selectedBoutiqueId) return [];\n\n    let products = this.allProducts.filter(p => p.boutiqueId === this.selectedBoutiqueId);\n\n    if (this.selectedCategoryId !== null && this.selectedCategoryId !== undefined) {\n      products = products.filter(p => p.categorieId === this.selectedCategoryId);\n    }\n\n    return products;\n  }\n\n  // Mettre à jour les gestionnaires d'événements de focus\n  onInputFocus() {\n    this.scannerService.setUserTyping(true);\n  }\n\n  onInputBlur() {\n    // Si on était en mode édition de remise pour un produit spécifique\n    if (this.inputMode === 'discount' && this.isEditingDiscount(this.discountMode.productId!)) {\n      const productToDiscount = this.allProducts.find(p => p.id === this.discountMode.productId);\n      if (productToDiscount) {\n        // Appliquer la remise directement\n        this.applyDiscount(productToDiscount);\n        \n        // Réinitialiser le champ de saisie et la valeur temporaire\n        this.currentDiscountInput = '';\n        this.discountMode.value = 0;\n        \n        // Mettre à jour les totaux\n        this.updateCommandeTotals();\n      }\n    }\n\n    // Attendre un peu avant de réactiver le scanner\n    setTimeout(() => {\n      this.scannerService.setUserTyping(false);\n    }, 500);\n  }\n\n  // Dans PosVenteComponent\n  notifyUserTyping() {\n    this.scannerService.setUserTyping(true);\n    \n    // Réactiver le scanner après un court délai\n    setTimeout(() => {\n      this.scannerService.setUserTyping(false);\n    }, 1000);\n  }\n\n\n}","<div class=\"section_contenu_container\">\n  <!-- // section contenu left -->\n  <div class=\"section_contenu_left\">\n    <!-- // section favory produit -->\n    <div class=\"section_favory_produit\">\n      <!-- // section favory -->\n      <div class=\"section_favory\">\n        <!-- // ul pour le favory  -->\n        <!-- <ul class=\"ul_section_favory\">\n          <li class=\"li_section_favory\" style=\"display: flex; align-items: center; justify-content: space-between;\">\n            <div class=\"double\">\n              <div class=\"icon_favory\">\n                <i class=\"ri-heart-fill\"></i>\n              </div>\n              <p class=\"title_favory\">Favorie</p>\n            </div>\n\n            <div class=\"nombre_favory\">\n              03\n            </div>\n          </li>\n        </ul> -->\n        <!-- // categorie -->\n        <div class=\"titre_categorie\" [class.selected]=\"selectedCategoryId === null\" >\n          <div class=\"category-header\">\n            <p (click)=\"showAllProducts()\" class=\"allCate\">\n             Toutes les catégories</p>\n            <!-- <div class=\"scan-controls\">\n              <button class=\"scan-test-btn\" (click)=\"testScan('6920484370182')\" title=\"Test scan avec code 6920484370182\">\n                <i class=\"ri-barcode-line\"></i> Test Scan\n              </button>\n              <button class=\"scan-reload-btn\" (click)=\"reloadProductsForScan()\" title=\"Recharger les produits\">\n                <i class=\"ri-refresh-line\"></i> Reload\n              </button>\n              <button class=\"scan-status-btn\" (click)=\"checkScannerStatus()\" title=\"Vérifier l'état du scanner\">\n                <i class=\"ri-information-line\"></i> Status\n              </button>\n              <button class=\"scan-test-multi-btn\" (click)=\"testScannerWithCodes()\" title=\"Test avec plusieurs codes\">\n                <i class=\"ri-test-tube-line\"></i> Test Multi\n              </button>\n              <span class=\"scan-status\" [class.active]=\"!scanInProgress\">\n                <i class=\"ri-wifi-line\"></i> Scanner {{ scanInProgress ? 'Actif' : 'Prêt' }}\n              </span>\n            </div> -->\n          </div>\n        </div>\n        <ul class=\"ul_name_categorie\" *ngIf=\"categories.length\" style=\"overflow-y: auto; height: 600px;\">\n          <!-- Boucle sur les catégories -->\n          <li *ngFor=\"let categorie of categories\" \n              class=\"ul_li_name_categorie\"\n              [class.selected]=\"selectedCategoryId === categorie.id\"\n              (click)=\"selectCategory(categorie.id)\" >\n            <div class=\"name_categorie\">\n              <span>{{ categorie.nom }}</span>\n            </div>\n            <!-- <div class=\"nombre\">\n                {{ categorie.produitCount || 0 }}\n            </div> -->\n            <div class=\"nombre\" [title]=\"getCategoryProductCountTooltip(categorie)\">\n              {{ getCategoryProductCountForDisplay(categorie) }}\n            </div>\n          </li>\n        </ul>\n      </div>\n      <!-- // section produit -->\n      <div class=\"section_produit\">\n        <!-- on transforme cadre_produit en container de grille -->\n        <div class=\"cadre_produit product-grid\" *ngIf=\"isListView\" (scroll)=\"onScroll()\" style=\"overflow-y: auto; max-height: 85vh;\">\n          \n          <div class=\"product-card\"\n               *ngFor=\"let produit of getVisibleProducts()\"\n                  [class.disabled]=\"getAvailableStock(produit) <= 0\"\n                  (click)=\"addToCart(produit)\"\n                  (pointerdown)=\"startPress($event, produit)\"\n                  (pointerup)=\"endPress()\"\n                  (pointerleave)=\"endPress()\">\n            <!-- pastille de stock en haut à gauche -->\n            <span class=\"stock-badge\" *ngIf=\"getSelectedQuantity(produit.id) > 0\">\n              {{ getSelectedQuantity(produit.id) }}\n            </span>\n\n            <!-- image produit -->\n            <img [src]=\"getProductImage(produit.photo)\" alt=\"\" class=\"product-img\">\n\n            <!-- cœur favori -->\n            <!-- <i class=\"ri-heart-line favorite-icon\"></i> -->\n\n            <!-- zone texte -->\n            <div class=\"card-body\">\n              <p class=\"product-name\">{{ produit.nom }}</p>\n              <p class=\"product-stock\">Stocks : {{ getAvailableStock(produit) }}</p>\n            </div>\n\n            <div class=\"bottom_price_sub\">\n              <div class=\"product-price\">\n                <p>{{ produit.prixVente | cfaCurrency }}</p>\n              </div>\n              <button class=\"btn-decrement\" (click)=\"decreaseQuantity(produit); $event.stopPropagation()\">\n                <i class=\"ri-subtract-line\"></i>\n              </button>\n            </div>\n          </div>\n\n          <!-- Indicateur de chargement initial -->\n          <div *ngIf=\"!categories.length\" class=\"loading-indicator\">\n            <i class=\"ri-loader-4-line\"></i> Chargement des produits...\n          </div>\n          \n          <!-- Indicateur de chargement de plus de produits -->\n          <div *ngIf=\"isLoadingMore && selectedCategoryId === null\" class=\"loading-more-indicator\">\n            <i class=\"ri-loader-4-line\"></i> Chargement de plus de produits...\n          </div>\n          \n       \n\n        </div>\n\n        <!-- Mode Liste -->\n        <div class=\"cadre_produit_list product-list\" *ngIf=\"!isListView\" (scroll)=\"onScroll()\" style=\"overflow-y: auto; max-height: 70vh;\">\n          <ul class=\"ul_list\">\n            <li class=\"li_list\" \n                 *ngFor=\"let produit of getVisibleProducts()\"\n                  [class.disabled]=\"getAvailableStock(produit) <= 0\"\n                  (click)=\"addToCart(produit)\"\n                  (pointerdown)=\"startPress($event, produit)\"\n                  (pointerup)=\"endPress()\"\n                  (pointerleave)=\"endPress()\">\n              <div class=\"list_left\">\n                <div class=\"double\">\n                  <div class=\"img_product_list\">\n                    <img [src]=\"getProductImage(produit.photo)\" alt=\"\">\n                  </div>\n                  <div class=\"name_stock_list\">\n                    <p class=\"product-name-list\">{{ produit.nom }}</p>\n                    <p class=\"product-stock-list\">Stocks : {{ getAvailableStock(produit) }}</p>\n                  </div>\n                </div>\n              </div>\n              \n              <div class=\"list_right\">\n                <div class=\"double\" style=\"gap: 10px;\">\n                  <div class=\"product-price\">\n                    <p>{{ produit.prixVente | cfaCurrency }}</p>\n                  </div>\n                  <div class=\"btn_badge\">\n                    <span class=\"stock-badge-list\" *ngIf=\"getSelectedQuantity(produit.id) > 0\">\n                      {{ getSelectedQuantity(produit.id) }}\n                    </span>\n                  </div>\n                  <button class=\"btn-decrement\" (click)=\"decreaseQuantity(produit); $event.stopPropagation()\">\n                    <i class=\"ri-subtract-line\"></i>\n                  </button>\n                  <!-- <div class=\"btn_fovory\">\n                    <i class=\"ri-heart-line favorite-icon-list\"></i>\n                  </div> -->\n                </div>\n              </div>\n            </li>\n          </ul>\n          <!-- Indicateur de chargement de plus de produits (mode liste) -->\n          <div *ngIf=\"isLoadingMore && selectedCategoryId === null\" class=\"loading-more-indicator\">\n            <i class=\"ri-loader-4-line\"></i> Chargement de plus de produits...\n          </div>\n          \n       \n          <div *ngIf=\"displayedProducts.length === 0 && categories.length\" class=\"empty-category\">\n            Aucun produit dans cette catégorie\n          </div>\n        </div>\n      </div>\n\n    </div>\n  </div>\n  <!-- // section contenu right -->\n  <div class=\"section_contenu_right\" style=\"background-color: #ffffff; height: 100vh; box-shadow: rgba(0, 0, 0, 0.04) 0px 3px 5px;\">\n    <div class=\"list_produit_select\">\n      <!-- // Tout les liste de produc select  -->\n      <ul class=\"ul_list_produit_select\">\n        <li class=\"li_list_produit_select\" (click)=\"selectProductForDiscount(item.product)\"\n            *ngFor=\"let item of getCartItems()\">\n          <div class=\"double\" style=\"gap: 5px;\">\n            <div class=\"nombre_select\">\n              {{ item.quantity }}\n            </div>\n            <div class=\"name_produit_select\">\n              <p style=\"margin: 0;\">\n                {{ item.product.nom }}\n                <span>({{ item.product.prixVente | cfaCurrency }})</span>\n                <!-- Indicateur de remise -->\n                <span *ngIf=\"getProductDiscount(item.product.id) > 0\" class=\"discount-badge\">\n                  {{ getProductDiscount(item.product.id) | cfaCurrency }}\n                </span>\n              </p>\n            </div>\n          </div>\n          <div class=\"double\" style=\"gap: 5px;\">\n            <div class=\"price_produit\">\n              {{ calculateItemTotal(item) | cfaCurrency }}\n            </div>\n            <div class=\"icon_close_select\" \n              *ngIf=\"inputMode !== 'discount' && !isEditingDiscount(item.product.id)\" \n              (click)=\"removeProduct(item.product.id)\">\n            <i class=\"ri-close-circle-fill\"></i>\n          </div>\n            <!-- Bouton pour modifier la remise -->\n           <div class=\"edit-discount\" \n                *ngIf=\"inputMode === 'discount'\"\n                (click)=\"isEditingDiscount(item.product.id) ? saveDiscount(item.product) : editDiscount(item.product)\">\n              <i [class]=\"isEditingDiscount(item.product.id) ? 'ri-check-fill' : 'ri-edit-2-line'\"></i>\n            </div>\n          </div>\n        </li>\n      </ul>\n\n      <!-- <div class=\"double_row\">\n        <span>Sous-total</span>\n        <span>{{ getSubtotal() | cfaCurrency }}</span>\n      </div>\n      <div class=\"double_row\">\n        <span>Remise totale</span>\n        <span>-{{ getTotalDiscount() | cfaCurrency }}</span>\n      </div>\n      <div class=\"double_row total\">\n        <strong>Total</strong>\n        <strong>{{ getTotalCart() | cfaCurrency }}</strong>\n      </div> -->\n    </div>\n    \n    <!-- 2. Récapitulatif : Remise / Taxes / Total -->\n    <div class=\"summary_panel\">\n      <!-- <div class=\"double_row\">\n        <span>Remise</span>\n        <span>00 CFA</span>\n      </div> -->\n      <div class=\"double_row\">\n        <span>Taxes</span>\n        <span>00 CFA</span>\n      </div>\n      <div class=\"double_row total\">\n        <strong>Total</strong>\n        <strong>{{ getTotalCart() | cfaCurrency }}</strong>\n      </div>\n\n      <!-- Dans la section remise -->\n      <div class=\"discount-input\" *ngIf=\"discountMode.active\">\n        <button class=\"btn-currency\" \n                [class.active]=\"discountMode.type === 'CFA'\"\n                (click)=\"setDiscountType('CFA')\">\n          CFA\n        </button>\n        \n        <!-- Modifier ici : utiliser currentDiscountInput -->\n        <!-- <input \n          type=\"number\" \n          placeholder=\"0\" \n          class=\"input-discount\"\n          [value]=\"currentDiscountInput\"\n          (input)=\"onDiscountInputChange($event)\"\n          (focus)=\"disablePhysicalKeyboard = true\"\n          (blur)=\"disablePhysicalKeyboard = false\"\n          min=\"0\"> -->\n          <input \n            type=\"number\" \n            placeholder=\"0\" \n            class=\"input-discount\"\n            [value]=\"currentDiscountInput\"\n            (input)=\"onDiscountInputChange($event)\"\n            (focus)=\"onInputFocus()\"\n            (blur)=\"onInputBlur()\"\n            min=\"0\">\n        \n        <button class=\"btn-percent\" \n                [class.active]=\"discountMode.type === '%'\"\n                (click)=\"setDiscountType('%')\">\n          %\n        </button>\n      </div>\n\n    </div>\n\n    <!-- <div class=\"quantity-input-display\" *ngIf=\"selectedProduct\">\n      Produit: {{ selectedProduct.nom }} - Qté: {{ currentQuantityInput || '0' }}\n    </div> -->\n\n    <!-- Client et facture -->\n    <div class=\"client_facture\" style=\"padding-top: 5px;\">\n  <div class=\"double_client_facture\">\n    <div class=\"paiement_btn btn_client\" (click)=\"openListClientPopup()\">\n      \n      <!-- Cas : aucun client sélectionné -->\n      <p *ngIf=\"!selectedClient && !selectedEntreprise\">\n        <img src=\"assets/img/profil.png\" alt=\"client\" width=\"16\" height=\"16\" style=\"vertical-align: middle; margin-right: 5px;\">\n        Client\n      </p>\n      \n      <!-- Cas : client particulier sélectionné -->\n      <div *ngIf=\"selectedClient\" class=\"selected-client-info\">\n        <span>{{ selectedClient.nomComplet || 'Client' }}</span>\n      </div>\n      \n      <!-- Cas : entreprise cliente sélectionnée -->\n      <div *ngIf=\"selectedEntreprise\" class=\"selected-client-info\">\n        <span>{{ selectedEntreprise.nom || 'Entreprise' }}</span>\n      </div>\n\n      <!-- Bouton pour effacer la sélection -->\n      <span *ngIf=\"selectedClient || selectedEntreprise\" \n            class=\"clear-customer\"\n            (click)=\"clearCustomerSelection($event)\">\n        <i class=\"ri-close-line\"></i>\n      </span>\n    </div>\n\n    <div class=\"paiement_btn btn_facture\">\n      <p>Facture</p>\n      <input type=\"checkbox\">\n    </div>\n  </div>\n</div>\n\n\n    <!-- 3. Clavier numérique + actions -->\n    <div class=\"keypad\">\n      <button tabindex=\"-1\" (click)=\"handleKeyPress('1'); notifyUserTyping()\">1</button>\n      <button tabindex=\"-1\" (click)=\"handleKeyPress('2'); notifyUserTyping()\">2</button>\n      <button tabindex=\"-1\" (click)=\"handleKeyPress('3'); notifyUserTyping()\">3</button>\n      <!-- <button tabindex=\"-1\" class=\"btn_keypad_action btn_keypad_active\">Qté</button> -->\n      <!-- <button tabindex=\"-1\" class=\"btn_keypad_action btn_keypad_active\" (click)=\"activateQuantityMode()\">Qté</button> -->\n      <button [class.btn_keypad_active]=\"inputMode === 'quantity'\" \n          (click)=\"setInputMode('quantity')\">\n    Qté\n  </button>\n      \n      <button tabindex=\"-1\" (click)=\"handleKeyPress('4'); notifyUserTyping()\">4</button>\n      <button tabindex=\"-1\" (click)=\"handleKeyPress('5'); notifyUserTyping()\">5</button>\n      <button tabindex=\"-1\" (click)=\"handleKeyPress('6'); notifyUserTyping()\">6</button>\n      <button [class.btn_keypad_active]=\"inputMode === 'discount'\" \n          (click)=\"setInputMode('discount')\">\n    Remise\n  </button>\n      \n      <button tabindex=\"-1\" (click)=\"handleKeyPress('7'); notifyUserTyping()\">7</button>\n      <button tabindex=\"-1\" (click)=\"handleKeyPress('8'); notifyUserTyping()\">8</button>\n      <button tabindex=\"-1\" (click)=\"handleKeyPress('9'); notifyUserTyping()\">9</button>\n      <button tabindex=\"-1\" class=\"btn_keypad_action\">Prix</button>\n      \n      <button tabindex=\"-1\" (click)=\"handleKeyPress('+/-'); notifyUserTyping()\">+/-</button>\n      <button tabindex=\"-1\" (click)=\"handleKeyPress('0'); notifyUserTyping()\">0</button>\n      <button tabindex=\"-1\" (click)=\"handleKeyPress(','); notifyUserTyping()\">,</button>\n      <button tabindex=\"-1\" class=\"backspace\" (click)=\"handleKeyPress('backspace')\">\n        <i class=\"ri-delete-back-2-line\"></i>\n      </button>\n    </div>\n\n    <!-- 4. Bouton de paiement -->\n    <div class=\"btn_content\">\n      <button class=\"btn-payment\" (click)=\"openPaymentPopup()\">Paiement</button>\n    </div>\n  </div>\n</div>\n\n<!-- Popup de paiement -->\n<div *ngIf=\"showPaymentPopup\" class=\"payment-popup-overlay\">\n  <div class=\"payment-popup\" [ngStyle]=\"{ 'transform': 'translate3d(' + popupOffset.x + 'px, ' + popupOffset.y + 'px, 0)' }\" (click)=\"$event.stopPropagation()\">\n    <div class=\"popup-header\" (mousedown)=\"startDrag($event)\">\n      <button (click)=\"closePaymentPopup()\" class=\"close-btn\">\n        <i class=\"ri-close-line\"></i>\n      </button>\n    </div>\n\n    <div class=\"section_popup_paiement\">\n      <div class=\"cadre_section_contenu_left_prise\">\n        <div class=\"section_contenu_left_prise\">\n\n          <!-- 1. Montant du paiement -->\n          <div class=\"montant_paiement\">\n            <h1>{{ getTotalCart() | cfaCurrency }}</h1>\n            <span>CFA</span>\n            \n            <!-- Afficher le montant original si remise -->\n            <div *ngIf=\"getTotalDiscount() > 0 || globalDiscount.active\" \n                class=\"original-price\">\n              {{ getSubtotal() | cfaCurrency }}\n            </div>\n          </div>\n\n          <!-- 2. Moyens de paiement -->\n          <div class=\"moyen_paiement_price\">\n            <div class=\"moyen_paiement\">\n              <p>{{ selectedPaymentMethod }}</p>\n            </div>\n            <div class=\"moyen_prise_du\">\n              <div class=\"price_du\">\n                <p>{{ paymentAmount | cfaCurrency }}</p>\n                <i class=\"ri-close-line clear-icon\" (click)=\"enteredAmount = ''; calculatePayment()\"></i>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"paiement_restant\">\n            <div class=\"moyen_paiement_restant\">\n              <p [style.color]=\"paymentAmount >= totalAmount ? '#008000' : '#ff0000'\">\n                {{ paymentAmount >= totalAmount ? 'Monnaie' : 'Restant' }}\n              </p>\n            </div>\n            <div class=\"moyen_prise_du\">\n              <div class=\"price_du\">\n                <p [style.color]=\"paymentAmount >= totalAmount ? '#008000' : '#ff0000'\">\n                  {{ changeDue | cfaCurrency }}\n                </p>\n              </div>\n            </div>\n          </div>\n\n          <!-- 3. Remise par produit -->\n          <div class=\"summary_panel\">\n            <div class=\"double_row\" *ngIf=\"getTotalDiscount() > 0\">\n              <span>Remise(s) produit</span>\n              <span>-{{ getTotalDiscount() | cfaCurrency }}</span>\n            </div>\n            \n            <!-- Nouveau: Champ remise globale -->\n            <!-- <div class=\"discount-input\">\n              <div class=\"double_row\">\n                <span>Remise globale</span>\n                <div class=\"discount-input\">\n                  <button class=\"btn-currency\" \n                          [class.active]=\"globalDiscount.type === 'CFA'\"\n                          (click)=\"setGlobalDiscountType('CFA')\">\n                    CFA\n                  </button>\n                  <input type=\"number\" placeholder=\"0\" \n                        class=\"input-discount\"\n                        [(ngModel)]=\"globalDiscount.value\"\n                        (input)=\"onGlobalDiscountInputChange()\"\n                        min=\"0\">\n                  <button class=\"btn-percent\" \n                          [class.active]=\"globalDiscount.type === '%'\"\n                          (click)=\"setGlobalDiscountType('%')\">\n                    %\n                  </button>\n                </div>\n              </div>\n            </div> -->\n\n              <div>\n                <div class=\"discount-input\" *ngIf=\"globalDiscount.active\">\n                  <button class=\"btn-currency\" \n                          [class.active]=\"globalDiscount.type === 'CFA'\"\n                          (click)=\"setGlobalDiscountType('CFA')\">\n                    CFA\n                  </button>\n                  <input type=\"number\" placeholder=\"0\" \n                        class=\"input-discount\"\n                        [(ngModel)]=\"globalDiscount.value\"\n                        (input)=\"onGlobalDiscountInputChange()\"\n                        min=\"0\">\n                  <button class=\"btn-percent\" \n                          [class.active]=\"globalDiscount.type === '%'\"\n                          (click)=\"setGlobalDiscountType('%')\">\n                    %\n                  </button>\n              </div>\n                <!-- <p style=\"padding: 10px 10px 5px; text-align: center;\">Remise globale</p> -->\n            </div>\n\n            <div class=\"double_row total\">\n              <strong>Total</strong>\n              <strong>{{ getTotalCart() | cfaCurrency }}</strong>\n            </div>\n          </div>\n\n          <div class=\"discount-label\">\n            <p>Remise sur produit</p>\n          </div>\n\n        </div>\n      </div>\n\n      <div class=\"section_contenu_right\" style=\"background-color: #ffffff; height: 80vh; box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\">\n        <div class=\"list_produit_select\">\n          <!-- Moyens de paiement avec sélection -->\n          <div class=\"methode_paiement\">\n            <div class=\"cadre_paiement\" \n                [class.selected_mode_pay]=\"selectedPaymentMethod === 'Espèces'\"\n                (click)=\"selectPaymentMethod('Espèces')\">\n              <div class=\"img_paiement\">\n                <img src=\"assets/img/payer.png\" alt=\"\">\n              </div>\n              <div class=\"title_paiement\">\n                <p>Espèces</p>\n              </div>\n            </div>\n            \n            <div class=\"cadre_paiement\" \n                [class.selected_mode_pay]=\"selectedPaymentMethod === 'mobile'\"\n                (click)=\"selectPaymentMethod('Mobile money')\">\n              <div class=\"img_paiement img_paiement_mobile\">\n                <img src=\"assets/img/money.png\" alt=\"\">\n              </div>\n              <div class=\"title_paiement\">\n                <p>Mobile money</p>\n              </div>\n            </div>\n            \n            <div class=\"cadre_paiement\" \n                [class.selected_mode_pay]=\"selectedPaymentMethod === 'card'\"\n                (click)=\"selectPaymentMethod('Carte')\">\n              <div class=\"img_paiement img_paiement_carte\">\n                <img src=\"assets/img/carte-de-credit.png\" alt=\"\">\n              </div>\n              <div class=\"title_paiement\">\n                <p>Carte</p>\n              </div>\n            </div>\n            \n            <div class=\"cadre_paiement\" \n                [class.selected_mode_pay]=\"selectedPaymentMethod === 'account'\"\n                (click)=\"selectPaymentMethod('Compte client')\">\n              <div class=\"img_paiement img_paiement_compte\">\n                <img src=\"assets/img/compte-rendu.png\" alt=\"\">\n              </div>\n              <div class=\"title_paiement\">\n                <p>Compte client</p>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <!-- 2. Récapitulatif : Client et facture -->\n        <div class=\"client_facture\">\n          <div class=\"double_client_facture\">\n            <div class=\"paiement_btn btn_client\" (click)=\"openListClientPopup()\">\n              <p *ngIf=\"!selectedClient && !selectedEntreprise\">Client</p>\n              \n              <div *ngIf=\"selectedClient\" class=\"selected-client-info\">\n                <span>{{ selectedClient.nomComplet || 'Client' }}</span>\n              </div>\n              \n              <div *ngIf=\"selectedEntreprise\" class=\"selected-client-info\">\n                <span>{{ selectedEntreprise.nom || 'Entreprise' }}</span>\n              </div>\n\n              <span *ngIf=\"selectedClient || selectedEntreprise\" \n                    class=\"clear-customer\"\n                    (click)=\"clearCustomerSelection($event)\">\n                <i class=\"ri-close-line\"></i>\n              </span>\n            </div>\n\n            <!-- <div class=\"double_remise_facture container_facture\"> -->\n              <button style=\"border: none;\" [class.global-active]=\"globalDiscount.active\"\n                    class=\"paiement_btn remise_produit\"\n                    (click)=\"toggleGlobalDiscount()\">\n                {{ globalDiscount.active ? 'Annuler Globale' : 'Remise Globale' }}\n              </button>\n              <!-- <div class=\"paiement_btn btn_facture\">\n                <p>Facture</p>\n                <input type=\"checkbox\">\n              </div>\n            </div> -->\n            \n          </div>\n        </div>\n\n        <!-- Clavier numérique -->\n        <div class=\"keypad\" style=\"padding-top: 5px;\">\n          <button tabindex=\"-1\" (click)=\"handlePaymentKeyPress('1'); notifyUserTyping()\">1</button>\n          <button tabindex=\"-1\" (click)=\"handlePaymentKeyPress('2'); notifyUserTyping()\">2</button>\n          <button tabindex=\"-1\" (click)=\"handlePaymentKeyPress('3'); notifyUserTyping()\">3</button>\n          <button>Qté</button>\n          \n          <button tabindex=\"-1\" (click)=\"handlePaymentKeyPress('4'); notifyUserTyping()\">4</button>\n          <button tabindex=\"-1\" (click)=\"handlePaymentKeyPress('5'); notifyUserTyping()\">5</button>\n          <button tabindex=\"-1\" (click)=\"handlePaymentKeyPress('6'); notifyUserTyping()\">6</button>\n          <button>%</button>\n          \n          <button tabindex=\"-1\" (click)=\"handlePaymentKeyPress('7'); notifyUserTyping()\">7</button>\n          <button tabindex=\"-1\" (click)=\"handlePaymentKeyPress('8'); notifyUserTyping()\">8</button>\n          <button tabindex=\"-1\" (click)=\"handlePaymentKeyPress('9'); notifyUserTyping()\">9</button>\n          <button>Prix</button>\n          \n          <button tabindex=\"-1\" (click)=\"handlePaymentKeyPress('+/-'); notifyUserTyping()\">+/-</button>\n          <button tabindex=\"-1\" (click)=\"handlePaymentKeyPress('0'); notifyUserTyping()\">0</button>\n          <button tabindex=\"-1\" (click)=\"handlePaymentKeyPress(','); notifyUserTyping()\">,</button>\n          <button tabindex=\"-1\" class=\"backspace\" (click)=\"handlePaymentKeyPress('backspace')\">\n            <i class=\"ri-delete-back-2-line\"></i>\n          </button>\n        </div>\n\n        <!-- 4. Bouton de paiement -->\n        <div class=\"btn_content\">\n          <button class=\"btn-payment-pop\"\n                  [disabled]=\"!isAmountEntered || isSubmittingVente\"\n                  (click)=\"completePayment()\">\n            <span *ngIf=\"!isSubmittingVente\">Valider Paiement</span>\n            <span *ngIf=\"isSubmittingVente\">En cours…</span>\n          </button>\n\n        </div>\n      </div>\n    </div>\n    \n  </div>\n</div>\n\n<!-- Popup de détail produit -->\n<div *ngIf=\"showDetailPopup\" class=\"detail-popup-overlay\">\n  <div class=\"detail-popup\" [ngStyle]=\"{ 'transform': 'translate3d(' + popupOffset.x + 'px, ' + popupOffset.y + 'px, 0)' }\" (click)=\"$event.stopPropagation()\">\n    <!-- En-tête -->\n    <div class=\"popup-header\" *ngIf=\"showDetailPopup && selectedProductForDetail\" (mousedown)=\"startDrag($event)\">\n      <h3>Information [{{ selectedProductForDetail.codeGenerique }}]</h3>\n      <button (click)=\"closeDetailPopup()\" class=\"close-btn\">\n        <i class=\"ri-close-line\"></i>\n      </button>\n    </div>\n\n    <!-- Corps principal -->\n    <div class=\"popup-body\" *ngIf=\"showDetailPopup && selectedProductForDetail\">\n      <!-- Titre de la boutique -->\n      <!-- <h4 class=\"shop-name\">Ma Boutique Orix</h4> -->\n\n\n        <!-- Colonne gauche : image -->\n        <div class=\"detail-image\">\n          <img\n            [src]=\"selectedProductForDetail ? getProductImage(selectedProductForDetail.photo) : ''\"\n            alt=\"Image produit\"\n          />\n        </div>\n\n      <!-- Colonne droite : infos produit -->\n          <div class=\"detail-info\">\n            <div class=\"detail_info_left\">\n              <div class=\"info-row\">\n              <span class=\"label\">Nom produit</span>\n              <span class=\"value\">{{ selectedProductForDetail.nom }}</span>\n            </div>\n            <div class=\"info-row\">\n              <span class=\"label\">Prix de vente</span>\n              <span class=\"value\">{{ selectedProductForDetail.prixVente | number }} CFA</span>\n            </div>\n            <div class=\"info-row\">\n              <span class=\"label\">Catégorie</span>\n               <span class=\"value\">{{ selectedProductForDetail.nomCategorie }}</span>\n            </div>\n            <div class=\"info-row\">\n              <span class=\"label\">Unité de mesure</span>\n              <span class=\"value\">{{ selectedProductForDetail.nomUnite }}</span>\n            </div>\n\n            <div class=\"info-row\" *ngIf=\"selectedProductForDetail.datePreemption\">\n            <span class=\"label\">Date d'expiration</span>\n            <span \n              class=\"value\" \n              [ngClass]=\"{'date-red': isNearExpiry(selectedProductForDetail.datePreemption)}\">\n              {{ formatDate(selectedProductForDetail.datePreemption || '') }}\n            </span>\n          </div>\n\n          </div>\n          <div class=\"detail_info_right\">\n\n           <div class=\"info-row\">\n              <span class=\"label\">Stocks actuel</span>\n              <span class=\"value\" [ngClass]=\"getQuantiteClass(selectedProductForDetail)\">\n                {{ getQuantiteDansBoutiqueCourante(selectedProductForDetail) }}\n                <ng-container *ngIf=\"isQuantiteCritique(selectedProductForDetail)\">⚠️</ng-container>\n              </span>\n           </div>\n\n            <div class=\"info-row\">\n              <span class=\"label\">Boutique</span>\n              <span class=\"value\">{{ getNomBoutiqueCourante(selectedProductForDetail) }}</span>\n            </div>\n            <div class=\"info-row\">\n              <span class=\"label\">Code</span>\n              <span class=\"value\">{{ selectedProductForDetail.codeGenerique }}</span>\n            </div>\n\n            <div class=\"info-row\" *ngIf=\"selectedProductForDetail.codeBare\">\n              <span class=\"label\">Code barre</span>\n              <span class=\"value\">\n                <ngx-barcode6\n                  class=\"barcode-shifted\"\n                  [bc-value]=\"selectedProductForDetail.codeBare\"\n                  bc-format=\"CODE128\"\n                  [bc-line-color]=\"'#000000'\"\n                  [bc-width]=\"1\"\n                  [bc-height]=\"30\"\n                  [bc-font-size]=\"10\"\n                  [bc-display-value]=\"true\">\n                </ngx-barcode6>\n              </span>\n            </div>\n\n          </div>\n        </div>\n\n      <!-- Description en bas -->\n      <div class=\"detail-description\">\n        <span class=\"label\">Description:</span> <br>\n        {{ selectedProductForDetail.description || 'Pas de description' }}\n      </div>\n    </div>\n\n    <!-- Pied de popup -->\n    <div class=\"popup-actions\">\n      <button class=\"btn-add\" (click)=\"addToCart(selectedProductForDetail!); closeDetailPopup();\">\n        Ajouter au panier\n      </button>\n    </div>\n  </div>\n</div>\n\n<!-- Popup de client -->\n<div *ngIf=\"showClientPopup\" class=\"list-client-popup-overlay\">\n  <div class=\"list-client-popup\" [ngStyle]=\"{ 'transform': 'translate3d(' + popupOffset.x + 'px, ' + popupOffset.y + 'px, 0)' }\" (click)=\"$event.stopPropagation()\">\n    <div class=\"popup-header\" (mousedown)=\"startDrag($event)\">\n\n    <h6 class=\"title\" style=\"margin-bottom: 0; font-size: 16px; letter-spacing: 0.65px;\">\n      {{ currentListTypePopup === 'clients' ? 'Client individuel' : 'Client entreprise' }}\n    </h6>\n\n      <!-- Barre de recherche -->\n      <div class=\"double\" style=\"gap: 10px;\">\n\n        <div class=\"btnAddClient\" *ngIf=\"canAddClient\">\n          <button (click)=\"openAddClient()\">\n            Ajouter Client\n          </button>\n        </div>\n\n        <div class=\"barre\" *ngIf=\"canAddClient\"></div>\n\n        <!-- Compteur Clients Individuels -->\n        <div class=\"contentIcon\" \n            [class.active]=\"currentListTypePopup === 'clients'\"\n            (click)=\"setListTypePopup('clients')\">\n          <i class=\"ri-folder-user-line\"></i>\n          <div class=\"nombreCount\">\n            <span>{{ clients.length }}</span>\n          </div>\n        </div>\n\n        <div class=\"barre\"></div>\n\n        <!-- Compteur Entreprises -->\n        <div class=\"contentIcon\" \n            [class.active]=\"currentListTypePopup === 'entreprises'\"\n            (click)=\"setListTypePopup('entreprises')\">\n          <i class=\"ri-building-line\"></i>\n          <div class=\"nombreCount\">\n            <span>{{ entreprisesPopup.length }}</span>\n          </div>\n        </div>\n\n        <div class=\"barre\"></div>\n\n        <div class=\"inputSearch\">\n          <i class=\"ri-search-2-line\"></i>\n          <input type=\"text\" placeholder=\"Recherche un client\" [(ngModel)]=\"searchText\"/>\n        </div>\n\n        <button (click)=\"closeListClientPopup()\" class=\"close-btn\">\n          <i class=\"ri-close-line\"></i>\n        </button>\n      </div>\n    </div>\n\n    <!-- Tableau -->\n    <table *ngIf=\"currentListTypePopup === 'clients'\">\n      <thead>\n        <!-- <th>Photo</th>\n        <th (click)=\"sort('nomComplet')\">\n          Nom & prénom \n          <i [class]=\"sortField === 'nomComplet' ? (sortDirection === 'asc' ? 'ri-arrow-up-s-line' : 'ri-arrow-down-s-line') : 'ri-arrow-up-down-line'\"></i>\n        </th>\n        <th> Email </th>\n        <th> Adresse </th>\n        <th> Téléphone </th>\n        <th> Entreprise </th>\n        <th> Date de Creation </th>\n      </thead> -->\n      <tbody>\n          <tr *ngFor=\"let client of filteredClients\" (click)=\"selectClient(client)\">\n              <td>\n                <div class=\"imgClient\">\n                  <img [src]=\"client.photo\" alt=\"Photo client\">\n                </div>\n              </td>\n              <td>\n                <span *ngIf=\"client.nomComplet; else noNomComplet\" \n                      [innerHTML]=\"highlightMatch(client.nomComplet)\"></span>\n                <ng-template #noNomComplet>\n                  <span class=\"no-phone-text\">Nom est vide</span>\n                </ng-template>\n              </td>\n              <td>\n                <span *ngIf=\"client.email; else noEmail\" [innerHTML]=\"highlightMatch(client.email)\">{{ client.email }}</span>\n                <ng-template #noEmail>\n                  <span class=\"no-phone-text\">Non email</span>\n                </ng-template>\n              </td>\n              <td>\n                <span *ngIf=\"client.adresse; else noAdresse\">{{ client.adresse }}</span>\n                <ng-template #noAdresse>\n                  <span class=\"no-phone-text\">Non adresse</span>\n                </ng-template>\n              </td>\n              <td>\n                <span *ngIf=\"client.telephone; else noPhone\">{{ client.telephone }}</span>\n                <ng-template #noPhone>\n                  <span class=\"no-phone-text\">Non numéro de téléphone</span>\n                </ng-template>\n              </td>\n              <td>\n                <div *ngIf=\"client.entrepriseClient; else noEntreprise\" class=\"iconEntrepriseList\">\n                  <i class=\"ri-git-branch-fill\" title=\"Affiliation d'Entreprise\"></i>\n                </div>\n                <ng-template #noEntreprise>\n                  <!-- Vide si pas d'entreprise -->\n                </ng-template>\n              </td>\n              <td>\n                <span *ngIf=\"client.createdAt; else noDate\">{{ client.createdAt | date: 'dd/MM/yyyy' }}</span>\n                <ng-template #noDate>\n                  <span class=\"no-phone-text\">Non date</span>\n                </ng-template>\n          </tr>\n          <tr *ngIf=\"filteredClients.length === 0\">\n            <td colspan=\"7\" class=\"no-client-message\">Aucun client trouvé</td>\n          </tr>\n      </tbody>\n    </table>\n\n    <!-- Tableau pour Entreprises -->\n    <table *ngIf=\"currentListTypePopup === 'entreprises'\">\n      <tbody>\n        <tr *ngFor=\"let entreprise of filteredEntreprisesPopup\" (click)=\"selectEntreprise(entreprise)\">\n         <td>\n          <div class=\"imgClient\">\n            <img src=\"assets/img/office_building.png\" alt=\"Logo entreprise\">\n          </div>\n        </td>\n        <td>\n          <span *ngIf=\"entreprise.nom; else noNom\" [innerHTML]=\"highlightMatch(entreprise.nom)\">{{ entreprise.nom }}</span>\n          <ng-template #noNom>\n            <span class=\"no-phone-text\">Nom vide</span>\n          </ng-template>\n        </td>\n        <td>\n          <span *ngIf=\"entreprise.email; else noEmail\" [innerHTML]=\"highlightMatch(entreprise.email)\">{{ entreprise.email }}</span>\n          <ng-template #noEmail>\n            <span class=\"no-phone-text\">Non email</span>\n          </ng-template>\n        </td>\n        <td>\n          <span *ngIf=\"entreprise.adresse; else noAdresse\">{{ entreprise.adresse }}</span>\n          <ng-template #noAdresse>\n            <span class=\"no-phone-text\">Non adresse</span>\n          </ng-template>\n        </td>\n        <td>\n          <span *ngIf=\"entreprise.telephone; else noPhone\">{{ entreprise.telephone }}</span>\n          <ng-template #noPhone>\n            <span class=\"no-phone-text\">Non téléphone</span>\n          </ng-template>\n        </td>\n        <td>{{ entreprise.pays || '--' }}</td>\n        <td>{{ entreprise.siege || '--' }}</td>\n        <td>{{ entreprise.secteur || '--' }}</td>\n        <td>\n          <span *ngIf=\"entreprise.createdAt; else noDate\">{{ entreprise.createdAt | date: 'dd/MM/yyyy' }}</span>\n          <ng-template #noDate>\n            <span class=\"no-phone-text\">Non date</span>\n          </ng-template>\n        </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n\n<!-- Popup d'ajout de client -->\n<div *ngIf=\"showAddClientPopup\" class=\"add-client-popup-overlay\">\n  <div class=\"add-client-popup\" [ngStyle]=\"{ 'transform': 'translate3d(' + popupOffset.x + 'px, ' + popupOffset.y + 'px, 0)' }\" (click)=\"$event.stopPropagation()\">\n    <div class=\"popup-header\" (mousedown)=\"startDrag($event)\">\n      <h3>Ajouter un nouveau client</h3>\n      <button (click)=\"closeAddClientPopup()\" class=\"close-btn\">\n        <i class=\"ri-close-line\"></i>\n      </button>\n    </div>\n\n    <div class=\"popup-body\">\n      <div class=\"add-client-form\">\n        <div class=\"form-group\">\n          <label>Type de client</label>\n          <div class=\"client-type-selector\">\n            <button type=\"button\" \n                    class=\"client-type-btn\" \n                    [class.active]=\"clientType === 'individuel'\"\n                    (click)=\"setClientType('individuel')\">\n              Individuel\n            </button>\n            <button type=\"button\" \n                    class=\"client-type-btn\" \n                    [class.active]=\"clientType === 'entreprise'\"\n                    (click)=\"setClientType('entreprise')\">\n              Entreprise\n            </button>\n          </div>\n        </div>\n\n        <!-- Formulaire client individuel -->\n        <form *ngIf=\"clientType === 'individuel'\" [formGroup]=\"clientForm\" class=\"add-client-form\">\n          <div class=\"double_input\">\n            <!-- Nom et prenom -->\n            <div class=\"champ_input\">\n              <input type=\"text\" class=\"input_focus\"\n                        id=\"nomComplet\" formControlName=\"nomComplet\"\n                        name=\"nomComplet\"\n                        placeholder=\"Saisis le nom et prénom\">\n              <label for=\"nomComplet\" class=\"label\">Nom et prénom</label>\n              <div *ngIf=\"clientForm.get('nomComplet')?.touched && clientForm.get('nomComplet')?.invalid\" class=\"error\">\n                <small *ngIf=\"clientForm.get('nomComplet')?.errors?.['required']\">Champ requis.</small>\n                <small *ngIf=\"clientForm.get('nomComplet')?.errors?.['minlength']\">Au moins 2 caractères.</small>\n              </div>\n            </div>\n            <!-- Email -->\n            <div class=\"champ_input\">\n              <input type=\"email\" class=\"input_focus\"\n                        id=\"email\" formControlName=\"email\"\n                        name=\"email\"\n                        placeholder=\"Saisis l'email\">\n              <label for=\"email\" class=\"label\">Email</label>\n              <div *ngIf=\"clientForm.get('email')?.touched && clientForm.get('email')?.invalid\" class=\"error\">\n                <small *ngIf=\"clientForm.get('email')?.errors?.['email']\">Format invalide.</small>\n              </div>\n            </div>\n\n          </div>\n          <div class=\"double_input\">\n            <!-- Adresse -->\n            <div class=\"champ_input\">\n              <input class=\"input_focus\"\n                        id=\"adresse\" formControlName=\"adresse\"\n                        name=\"adresse\"\n                        placeholder=\"Saisis l'adresse\">\n              <label for=\"adresse\" class=\"label\">Adresse</label>\n            </div>\n\n            <!-- Poste -->\n            <div class=\"champ_input\">\n              <input class=\"input_focus\"\n                        id=\"poste\" formControlName=\"poste\"\n                        name=\"poste\"\n                        placeholder=\"Saisissez votre poste \">\n              <label for=\"poste\" class=\"label\">Poste</label>\n            </div>\n\n          </div>\n\n          <!-- Modifiez le sélecteur de pays et le champ téléphone -->\n          <div class=\"grid_colonne\">\n            <!-- Pays -->\n                <div class=\"champ_input div1\">\n          <select class=\"input_focus\" formControlName=\"pays\" (change)=\"onPaysChange($event)\">\n            <option value=\"\" disabled selected>Pays</option>\n            <option *ngFor=\"let nomPays of paysKeys\" [value]=\"nomPays\">\n              {{ nomPays }} ({{ paysIndicatifs[nomPays].indicatif }})\n            </option>\n          </select>\n          <label for=\"pays\" class=\"label\">Pays</label>\n          <div *ngIf=\"clientForm.get('pays')?.invalid && clientForm.get('pays')?.touched\" class=\"error\">\n            <small>Ce champ est requis</small>\n          </div>\n        </div>\n\n            <!-- Téléphone -->\n            <div class=\"champ_input div2\">\n              <input type=\"tel\" class=\"input_focus\"\n                      id=\"telephone\" formControlName=\"telephone\"\n                      name=\"telephone\"\n                      placeholder=\"Saisis le numéro de téléphone\"\n                      (input)=\"formatPhoneNumber()\">\n              <label for=\"telephone\" class=\"label\">Téléphone</label>\n            \n              <!-- Message d'erreur si pattern invalide -->\n              <div *ngIf=\"\n                    clientForm.get('telephone')?.touched &&\n                    clientForm.get('telephone')?.errors?.['pattern'] &&\n                    clientForm.get('pays')?.value as pays\n                  \" class=\"error\">\n                <small>\n                  Le numéro doit contenir\n                  {{ paysIndicatifs[pays].longueur }}\n                  chiffres après l’indicatif {{ paysIndicatifs[pays].indicatif.trim() }}.\n                </small>\n              </div>\n            \n              <!-- Éventuellement, message pour champ requis -->\n              <div *ngIf=\"\n                    clientForm.get('telephone')?.touched &&\n                    clientForm.get('telephone')?.errors?.['required']\n                  \" class=\"error\">\n                <small>Le téléphone est requis.</small>\n              </div>\n            </div>                    \n\n            <!-- Ville -->\n            <div class=\"champ_input div3\">\n              <input class=\"input_focus\"\n                        id=\"ville\" formControlName=\"ville\"\n                        name=\"ville\"\n                        placeholder=\"Saisis la ville\">\n              <label for=\"ville\" class=\"label\">Ville</label>\n            </div>\n          </div>\n\n          <div class=\"info_titre_input\" style=\"margin-top: 20px;\">\n            <h5>Entreprise</h5>\n        \n            <!-- Input de produits inventaire -->\n            <div class=\"champ_input_inventaire\">\n              <p>J'appartient à une entreprise</p>\n        \n              <label class=\"switch\">\n                <input type=\"checkbox\" [(ngModel)]=\"isEntrepriseSelected\" [ngModelOptions]=\"{standalone: true}\"/>\n                <span class=\"slider round\"></span>\n              </label>\n            </div>\n          </div>\n          \n          <!-- Autocomplete pour les entreprises -->\n          <div *ngIf=\"isEntrepriseSelected\" class=\"champ_input\">\n            <input type=\"text\"\n                  placeholder=\"Selectionner une entreprise\"\n                  [formControl]=\"control\"\n                  [matAutocomplete]=\"auto\"\n                  class=\"input_focus input_cursor\">\n            <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"onEntrepriseSelected($event)\" [displayWith]=\"displayFnEntreprise\">\n              <!-- <mat-option class=\"select-option\" (click)=\"openAddEntreprisePopup()\">\n                <div style=\"display: flex; align-items: center; color: #0672E4;\">\n                  <i class=\"ri-community-line\"></i>\n                  <span style=\"margin-left: 8px;\">Créer une entreprise</span>\n                </div>\n              </mat-option> -->\n              <mat-option *ngFor=\"let ent of filteredOptions | async\" [value]=\"ent\">\n                <div class=\"option-content\">\n                  {{ ent.nom }}\n                </div>\n              </mat-option>\n            </mat-autocomplete>\n          </div>\n        </form>\n\n        <!-- Formulaire client entreprise -->\n        <form *ngIf=\"clientType === 'entreprise'\" [formGroup]=\"entrepriseForm\" class=\"add-client-form\">\n          <div class=\"double_input\">\n            <div class=\"champ_input\">\n              <input type=\"text\" class=\"input_focus\"\n                    id=\"nom\" formControlName=\"nom\"\n                    name=\"nom\"\n                    placeholder=\"Saisis le nom d'entreprise\">\n              <label for=\"nom\" class=\"label\">Nom d'entreprise</label>\n              <div *ngIf=\"entrepriseForm.get('nom')?.touched && entrepriseForm.get('nom')?.invalid\" class=\"error\">\n                <small *ngIf=\"entrepriseForm.get('nom')?.errors?.['required']\">Champ requis.</small>\n                <small *ngIf=\"entrepriseForm.get('nom')?.errors?.['minlength']\">Au moins 2 caractères.</small>\n              </div>\n            </div>\n            <div class=\"champ_input\">\n              <input type=\"email\" class=\"input_focus\"\n                    id=\"email\" formControlName=\"email\"\n                    name=\"email\"\n                    placeholder=\"Saisis l'email\">\n              <label for=\"email\" class=\"label\">Email</label>\n              <div *ngIf=\"entrepriseForm.get('email')?.touched && entrepriseForm.get('email')?.invalid\" class=\"error\">\n                <small *ngIf=\"entrepriseForm.get('email')?.errors?.['email']\">Format invalide.</small>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"double_input\">\n            <div class=\"champ_input\">\n              <input class=\"input_focus\"\n                    id=\"adresse\" formControlName=\"adresse\"\n                    name=\"adresse\"\n                    placeholder=\"Saisis l'adresse\">\n              <label for=\"adresse\" class=\"label\">Adresse</label>\n            </div>\n            <div class=\"champ_input\">\n              <input class=\"input_focus\"\n                    id=\"siege\" formControlName=\"siege\"\n                    name=\"siege\"\n                    placeholder=\"Saisis le siège\">\n              <label for=\"siege\" class=\"label\">Siège</label>\n            </div>\n          </div>\n\n          <div class=\"grid_colonne\">\n            <div class=\"champ_input div1\">\n              <select class=\"input_focus\" formControlName=\"pays\" (change)=\"onEntreprisePaysChange($event)\">\n                <option value=\"\" disabled selected>Pays</option>\n                <option *ngFor=\"let nomPays of paysKeys\" [value]=\"nomPays\">\n                  {{ nomPays }} ({{ paysIndicatifs[nomPays].indicatif }})\n                </option>\n              </select>\n              <label for=\"pays\" class=\"label\">Pays</label>\n            </div>\n\n            <div class=\"champ_input div2\">\n              <input type=\"tel\" class=\"input_focus\"\n                    id=\"telephone\" formControlName=\"telephone\"\n                    name=\"telephone\"\n                    placeholder=\"Saisis le numéro de téléphone\"\n                    (input)=\"formatEntreprisePhoneNumber()\">\n              <label for=\"telephone\" class=\"label\">Téléphone</label>\n            \n              <div *ngIf=\"\n                    entrepriseForm.get('telephone')?.touched &&\n                    entrepriseForm.get('telephone')?.errors?.['pattern'] &&\n                    entrepriseForm.get('pays')?.value as pays\n                  \" class=\"error\">\n                <small>\n                  Le numéro doit contenir\n                  {{ paysIndicatifs[pays].longueur }}\n                  chiffres après l'indicatif {{ paysIndicatifs[pays].indicatif.trim() }}.\n                </small>\n              </div>\n            \n              <div *ngIf=\"\n                    entrepriseForm.get('telephone')?.touched &&\n                    entrepriseForm.get('telephone')?.errors?.['required']\n                  \" class=\"error\">\n                <small>Le téléphone est requis.</small>\n              </div>\n            </div>\n\n            <div class=\"champ_input div3\">\n              <input class=\"input_focus\"\n                    id=\"secteur\" formControlName=\"secteur\"\n                    name=\"secteur\"\n                    placeholder=\"Saisis le secteur\">\n              <label for=\"secteur\" class=\"label\">Secteur</label>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n\n    <div class=\"popup-actions\">\n      <button class=\"btn-cancel\" (click)=\"closeAddClientPopup()\">Annuler</button>\n      <button class=\"btn-save\" \n              (click)=\"clientType === 'individuel' ? ajouterClientDansPopup() : ajouterEntrepriseDansPopup()\"\n              [disabled]=\"clientType === 'individuel' ? clientForm.invalid : entrepriseForm.invalid\"\n              [style.backgroundColor]=\"(clientType === 'individuel' ? clientForm.valid : entrepriseForm.valid) ? '#0672E4' : '#0671e434'\"\n              [style.color]=\"(clientType === 'individuel' ? clientForm.valid : entrepriseForm.valid) ? '#ffffff' : '#00000073'\"\n              [style.cursor]=\"(clientType === 'individuel' ? clientForm.valid : entrepriseForm.valid) ? 'pointer' : 'no-drop'\">\n        Enregistrer\n      </button>\n    </div>\n  </div>\n</div>\n\n<div class=\"scan-error-toast\" *ngIf=\"showScanError\">\n  <i class=\"ri-error-warning-line\"></i>\n  <span>{{ scanErrorMessage }}</span>\n</div>","export class ProduitDetailsResponseDTO {\n    id!: number;\n    nom!: string;\n    prixVente!: number;\n    prixAchat!: number | null;\n    quantite!: number;\n    seuilAlert!: number;\n    categorieId!: number;\n    uniteId!: number | null;\n    codeBare!: string;\n    photo!: string;\n    enStock!: boolean;\n    nomCategorie!: string;\n    nomUnite!: string;\n    typeProduit!: string;\n    createdAt!: string; // Ou Date si vous convertissez\n    lastUpdated!: string; // Ou Date\n    datePreemption!: string | null; // Ou Date\n    boutiqueId!: number | null;\n    nomBoutique!: string | null;\n    description!: string;\n    codeGenerique!: string;\n    remise?: number;\n    discount?: number;\n\n    boutiques!: {\n    id: number;\n    nom: string;\n    quantite: number;\n    }[];\n    constructor(data: Partial<ProduitDetailsResponseDTO> = {}) {\n        Object.assign(this, data);\n    }\n}","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, catchError, Observable, switchMap, tap, throwError } from \"rxjs\";\nimport { Entreprise } from \"../MODELS/entreprise-model\";\nimport { EntrepriseClient } from \"../MODELS/entreprise-clients-model\";\nimport { environment } from \"src/environments/environment\";\nimport { UsersService } from \"./users.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EntrepriseService {\n    private apiUrl = environment.apiBaseUrl;\n  \n\n  private entrepriseSubject = new BehaviorSubject<Entreprise[]>([]);\n  public entreprise$ = this.entrepriseSubject.asObservable(); \n  constructor(private http: HttpClient, private usersService: UsersService) { }\n\n  // Dans client.service.ts\n// Dans entreprise.service.ts\n getListEntreprises(): Observable<EntrepriseClient[]> {\n  return this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      });\n      return this.http.get<EntrepriseClient[]>(`${this.apiUrl}/entreprises`, { headers });\n    }),\n    catchError(error => {\n      let errorMsg = 'Erreur inconnue';\n      if (error.error instanceof ErrorEvent) {\n        errorMsg = `Erreur: ${error.error.message}`;\n      } else if (error.status === 404) {\n        errorMsg = 'Aucune entreprise trouvée';\n      }\n      return throwError(() => new Error(errorMsg));\n    })\n  );\n}\n\n\n  // Ajouter une entreprise\n addEntreprise(entreprise: Entreprise): Observable<Entreprise> {\n  return this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      });\n\n      return this.http.post<Entreprise>(`${this.apiUrl}/entreprise-clients`, entreprise, { headers });\n    }),\n    tap((newEntreprise) => {\n      const currentEntreprise = this.entrepriseSubject.value;\n      this.entrepriseSubject.next([...currentEntreprise, newEntreprise]);\n    }),\n    catchError(error => {\n      let errorMsg = 'Erreur inconnue';\n      if (error.error instanceof ErrorEvent) {\n        errorMsg = `Erreur: ${error.error.message}`;\n      } else if (error.status === 400) {\n        errorMsg = error.error || 'Données invalides';\n      }\n      return throwError(() => new Error(errorMsg));\n    })\n  );\n}\n\n\n  // List de tout les entreprises\n getListEntreprise(): Observable<Entreprise[]> {\n  return this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      if (!token) {\n        console.error('Token vide ou non défini ! Vérifiez que l\\'utilisateur est bien connecté.');\n        return throwError(() => new Error('Token manquant'));\n      }\n      const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n      console.log(\"En-têtes envoyés : \", headers);\n\n      return this.http.get<Entreprise[]>(`${this.apiUrl}/entreprises`, { headers });\n    }),\n    tap(data => {\n      this.entrepriseSubject.next(data);\n    }),\n    catchError(error => {\n      console.error('Erreur lors de la récupération des entreprises:', error);\n      return throwError(() => error);\n    })\n  );\n}\n\n\n\n  // Recuperer information d'une entreprise de la user connecter\n getEntrepriseById(id: number): Observable<Entreprise> {\n  return this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      if (!token) {\n        console.error('Token manquant');\n        return throwError(() => new Error('Token manquant'));\n      }\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      });\n      return this.http.get<Entreprise>(`${this.apiUrl}/entreprises/${id}`, { headers });\n    }),\n    catchError(error => {\n      let errorMsg = 'Erreur inconnue';\n      if (error.error instanceof ErrorEvent) {\n        errorMsg = `Erreur: ${error.error.message}`;\n      } else if (error.status === 404) {\n        errorMsg = 'Entreprise non trouvée';\n      }\n      return throwError(() => new Error(errorMsg));\n    })\n  );\n}\n\n\n  updateEntreprise(id: number, formData: FormData): Observable<string> {\n  return this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      if (!token) {\n        return throwError(() => new Error('Token manquant'));\n      }\n\n      const headers = new HttpHeaders({\n        'Authorization': `Bearer ${token}`\n      });\n\n      return this.http.patch(`${this.apiUrl}/updateEntreprise/${id}`, formData, {\n        headers,\n        responseType: 'text' // réponse en texte brut\n      });\n    }),\n    catchError(error => {\n      let errorMsg = 'Erreur inconnue';\n      if (error.error instanceof ErrorEvent) {\n        errorMsg = `Erreur: ${error.error.message}`;\n      } else if (error.status === 400) {\n        errorMsg = error.error || 'Données invalides';\n      }\n      return throwError(() => new Error(errorMsg));\n    })\n  );\n}\n\n\n  // updateEntreprise(id: number, formData: FormData): Observable<any> {\n  //   const token = localStorage.getItem('accessToken') || '';\n  //   const headers = new HttpHeaders({\n  //     'Authorization': `Bearer ${token}`\n  //   });\n\n  //   return this.http.patch(`${this.apiUrl}/updateEntreprise/${id}`, formData, { headers }).pipe(\n  //     catchError(error => {\n  //       let errorMsg = 'Erreur inconnue';\n  //       if (error.error instanceof ErrorEvent) {\n  //         errorMsg = `Erreur: ${error.error.message}`;\n  //       } else if (error.status === 400) {\n  //         errorMsg = error.error || 'Données invalides';\n  //       }\n  //       return throwError(() => new Error(errorMsg));\n  //     })\n  //   );\n  // }\n\n  // Get entreprise d'un user\n  getEntrepriseInfo(): Observable<Entreprise> {\n  return this.usersService.getValidAccessToken().pipe(\n    switchMap(token => {\n      if (!token) {\n        return throwError(() => new Error('Aucun token trouvé'));\n      }\n\n      const headers = new HttpHeaders({\n        Authorization: `Bearer ${token}`\n      });\n\n      return this.http.get<Entreprise>(`${this.apiUrl}/myEntreprise`, { headers }).pipe(\n        tap(entreprise => {\n          localStorage.setItem('entreprise', JSON.stringify(entreprise));\n        })\n      );\n    }),\n    catchError(error => {\n      console.error('Erreur récupération info entreprise:', error);\n      return throwError(() => error);\n    })\n  );\n}\n\n\n  // Simpl dcodage JWT pour vérifier si le token est expiré\n  decodeJwt(token: string): any {\n    return JSON.parse(atob(token.split('.')[1]));\n  }\n  \n  // Vérifier si le token est expiré\n  isTokenExpired(decodedToken: any): boolean {\n    const expirationDate = new Date(decodedToken.exp * 1000);\n    return expirationDate < new Date();\n  }\n    \n  // Rafraîchir le token avec un refresh token (si applicable)\n  getNewTokenFromApi(): Observable<{ token: string }> {\n    const refreshToken = localStorage.getItem('refreshToken');\n    return this.http.post<{ token: string }>(`${this.apiUrl}/refresh-token`, { refreshToken });\n  }\n\n \n}"],"names":["CommonModule","FormControl","FormsModule","ReactiveFormsModule","Validators","environment","ProduitDetailsResponseDTO","BehaviorSubject","combineLatest","finalize","map","of","startWith","switchMap","take","throwError","MatAutocompleteModule","NgxBarcode6Module","CfaCurrencyPipe","i0","ɵɵelementStart","ɵɵlistener","PosVenteComponent_ul_8_li_1_Template_li_click_0_listener","categorie_r2","ɵɵrestoreView","_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","selectCategory","id","ɵɵtext","ɵɵelementEnd","ɵɵclassProp","selectedCategoryId","ɵɵadvance","ɵɵtextInterpolate","nom","ɵɵproperty","getCategoryProductCountTooltip","ɵɵtextInterpolate1","getCategoryProductCountForDisplay","ɵɵtemplate","PosVenteComponent_ul_8_li_1_Template","categories","getSelectedQuantity","produit_r6","PosVenteComponent_div_10_div_1_Template_div_click_0_listener","_r5","addToCart","PosVenteComponent_div_10_div_1_Template_div_pointerdown_0_listener","$event","startPress","PosVenteComponent_div_10_div_1_Template_div_pointerup_0_listener","endPress","PosVenteComponent_div_10_div_1_Template_div_pointerleave_0_listener","PosVenteComponent_div_10_div_1_span_1_Template","ɵɵelement","PosVenteComponent_div_10_div_1_Template_button_click_13_listener","decreaseQuantity","stopPropagation","getAvailableStock","getProductImage","photo","ɵɵsanitizeUrl","ɵɵpipeBind1","prixVente","PosVenteComponent_div_10_Template_div_scroll_0_listener","_r4","onScroll","PosVenteComponent_div_10_div_1_Template","PosVenteComponent_div_10_div_2_Template","PosVenteComponent_div_10_div_3_Template","getVisibleProducts","length","isLoadingMore","produit_r9","PosVenteComponent_div_11_li_2_Template_li_click_0_listener","_r8","PosVenteComponent_div_11_li_2_Template_li_pointerdown_0_listener","PosVenteComponent_div_11_li_2_Template_li_pointerup_0_listener","PosVenteComponent_div_11_li_2_Template_li_pointerleave_0_listener","PosVenteComponent_div_11_li_2_span_17_Template","PosVenteComponent_div_11_li_2_Template_button_click_18_listener","PosVenteComponent_div_11_Template_div_scroll_0_listener","_r7","PosVenteComponent_div_11_li_2_Template","PosVenteComponent_div_11_div_3_Template","PosVenteComponent_div_11_div_4_Template","displayedProducts","getProductDiscount","item_r11","product","PosVenteComponent_li_15_div_15_Template_div_click_0_listener","_r12","removeProduct","PosVenteComponent_li_15_div_16_Template_div_click_0_listener","_r13","isEditingDiscount","saveDiscount","editDiscount","ɵɵclassMap","PosVenteComponent_li_15_Template_li_click_0_listener","_r10","selectProductForDiscount","PosVenteComponent_li_15_span_10_Template","PosVenteComponent_li_15_div_15_Template","PosVenteComponent_li_15_div_16_Template","quantity","calculateItemTotal","inputMode","PosVenteComponent_div_28_Template_button_click_1_listener","_r14","setDiscountType","PosVenteComponent_div_28_Template_input_input_3_listener","onDiscountInputChange","PosVenteComponent_div_28_Template_input_focus_3_listener","onInputFocus","PosVenteComponent_div_28_Template_input_blur_3_listener","onInputBlur","PosVenteComponent_div_28_Template_button_click_4_listener","discountMode","type","currentDiscountInput","selectedClient","nomComplet","selectedEntreprise","PosVenteComponent_span_35_Template_span_click_0_listener","_r15","clearCustomerSelection","getSubtotal","getTotalDiscount","PosVenteComponent_div_76_div_37_Template_button_click_1_listener","_r17","setGlobalDiscountType","ɵɵtwoWayListener","PosVenteComponent_div_76_div_37_Template_input_ngModelChange_3_listener","ɵɵtwoWayBindingSet","globalDiscount","value","PosVenteComponent_div_76_div_37_Template_input_input_3_listener","onGlobalDiscountInputChange","PosVenteComponent_div_76_div_37_Template_button_click_4_listener","ɵɵtwoWayProperty","PosVenteComponent_div_76_span_80_Template_span_click_0_listener","_r18","PosVenteComponent_div_76_Template_div_click_1_listener","_r16","PosVenteComponent_div_76_Template_div_mousedown_2_listener","startDrag","PosVenteComponent_div_76_Template_button_click_3_listener","closePaymentPopup","PosVenteComponent_div_76_div_14_Template","PosVenteComponent_div_76_Template_i_click_24_listener","enteredAmount","calculatePayment","PosVenteComponent_div_76_div_35_Template","PosVenteComponent_div_76_div_37_Template","PosVenteComponent_div_76_Template_div_click_50_listener","selectPaymentMethod","PosVenteComponent_div_76_Template_div_click_56_listener","PosVenteComponent_div_76_Template_div_click_62_listener","PosVenteComponent_div_76_Template_div_click_68_listener","PosVenteComponent_div_76_Template_div_click_76_listener","openListClientPopup","PosVenteComponent_div_76_p_77_Template","PosVenteComponent_div_76_div_78_Template","PosVenteComponent_div_76_div_79_Template","PosVenteComponent_div_76_span_80_Template","PosVenteComponent_div_76_Template_button_click_81_listener","toggleGlobalDiscount","PosVenteComponent_div_76_Template_button_click_84_listener","handlePaymentKeyPress","notifyUserTyping","PosVenteComponent_div_76_Template_button_click_86_listener","PosVenteComponent_div_76_Template_button_click_88_listener","PosVenteComponent_div_76_Template_button_click_92_listener","PosVenteComponent_div_76_Template_button_click_94_listener","PosVenteComponent_div_76_Template_button_click_96_listener","PosVenteComponent_div_76_Template_button_click_100_listener","PosVenteComponent_div_76_Template_button_click_102_listener","PosVenteComponent_div_76_Template_button_click_104_listener","PosVenteComponent_div_76_Template_button_click_108_listener","PosVenteComponent_div_76_Template_button_click_110_listener","PosVenteComponent_div_76_Template_button_click_112_listener","PosVenteComponent_div_76_Template_button_click_114_listener","PosVenteComponent_div_76_Template_button_click_117_listener","completePayment","PosVenteComponent_div_76_span_118_Template","PosVenteComponent_div_76_span_119_Template","ɵɵpureFunction1","_c0","popupOffset","x","y","getTotalCart","active","selectedPaymentMethod","paymentAmount","ɵɵstyleProp","totalAmount","changeDue","isAmountEntered","isSubmittingVente","PosVenteComponent_div_77_div_2_Template_div_mousedown_0_listener","_r20","PosVenteComponent_div_77_div_2_Template_button_click_3_listener","closeDetailPopup","selectedProductForDetail","codeGenerique","_c1","isNearExpiry","datePreemption","formatDate","ɵɵelementContainerStart","codeBare","PosVenteComponent_div_77_div_3_div_26_Template","PosVenteComponent_div_77_div_3_ng_container_33_Template","PosVenteComponent_div_77_div_3_div_44_Template","nomCategorie","nomUnite","getQuantiteClass","getQuantiteDansBoutiqueCourante","isQuantiteCritique","getNomBoutiqueCourante","description","PosVenteComponent_div_77_Template_div_click_1_listener","_r19","PosVenteComponent_div_77_div_2_Template","PosVenteComponent_div_77_div_3_Template","PosVenteComponent_div_77_Template_button_click_5_listener","showDetailPopup","PosVenteComponent_div_78_div_6_Template_button_click_1_listener","_r22","openAddClient","highlightMatch","client_r24","ɵɵsanitizeHtml","email","adresse","telephone","ɵɵpipeBind2","createdAt","PosVenteComponent_div_78_table_25_tr_3_Template_tr_click_0_listener","_r23","selectClient","PosVenteComponent_div_78_table_25_tr_3_span_5_Template","PosVenteComponent_div_78_table_25_tr_3_ng_template_6_Template","ɵɵtemplateRefExtractor","PosVenteComponent_div_78_table_25_tr_3_span_9_Template","PosVenteComponent_div_78_table_25_tr_3_ng_template_10_Template","PosVenteComponent_div_78_table_25_tr_3_span_13_Template","PosVenteComponent_div_78_table_25_tr_3_ng_template_14_Template","PosVenteComponent_div_78_table_25_tr_3_span_17_Template","PosVenteComponent_div_78_table_25_tr_3_ng_template_18_Template","PosVenteComponent_div_78_table_25_tr_3_div_21_Template","PosVenteComponent_div_78_table_25_tr_3_ng_template_22_Template","PosVenteComponent_div_78_table_25_tr_3_span_25_Template","PosVenteComponent_div_78_table_25_tr_3_ng_template_26_Template","noNomComplet_r25","noEmail_r26","noAdresse_r27","noPhone_r28","entrepriseClient","noEntreprise_r29","noDate_r30","PosVenteComponent_div_78_table_25_tr_3_Template","PosVenteComponent_div_78_table_25_tr_4_Template","filteredClients","entreprise_r32","PosVenteComponent_div_78_table_26_tr_2_Template_tr_click_0_listener","_r31","selectEntreprise","PosVenteComponent_div_78_table_26_tr_2_span_5_Template","PosVenteComponent_div_78_table_26_tr_2_ng_template_6_Template","PosVenteComponent_div_78_table_26_tr_2_span_9_Template","PosVenteComponent_div_78_table_26_tr_2_ng_template_10_Template","PosVenteComponent_div_78_table_26_tr_2_span_13_Template","PosVenteComponent_div_78_table_26_tr_2_ng_template_14_Template","PosVenteComponent_div_78_table_26_tr_2_span_17_Template","PosVenteComponent_div_78_table_26_tr_2_ng_template_18_Template","PosVenteComponent_div_78_table_26_tr_2_span_27_Template","PosVenteComponent_div_78_table_26_tr_2_ng_template_28_Template","noNom_r33","noEmail_r34","noAdresse_r35","noPhone_r36","pays","siege","secteur","noDate_r37","PosVenteComponent_div_78_table_26_tr_2_Template","filteredEntreprisesPopup","PosVenteComponent_div_78_Template_div_click_1_listener","_r21","PosVenteComponent_div_78_Template_div_mousedown_2_listener","PosVenteComponent_div_78_div_6_Template","PosVenteComponent_div_78_div_7_Template","PosVenteComponent_div_78_Template_div_click_8_listener","setListTypePopup","PosVenteComponent_div_78_Template_div_click_14_listener","PosVenteComponent_div_78_Template_input_ngModelChange_22_listener","searchText","PosVenteComponent_div_78_Template_button_click_23_listener","closeListClientPopup","PosVenteComponent_div_78_table_25_Template","PosVenteComponent_div_78_table_26_Template","currentListTypePopup","canAddClient","clients","entreprisesPopup","PosVenteComponent_div_79_form_17_div_6_small_1_Template","PosVenteComponent_div_79_form_17_div_6_small_2_Template","tmp_3_0","clientForm","get","errors","tmp_4_0","PosVenteComponent_div_79_form_17_div_11_small_1_Template","nomPays_r40","ɵɵtextInterpolate2","paysIndicatifs","indicatif","pays_r41","longueur","trim","ent_r43","PosVenteComponent_div_79_form_17_div_49_Template_mat_autocomplete_optionSelected_2_listener","_r42","onEntrepriseSelected","PosVenteComponent_div_79_form_17_div_49_mat_option_4_Template","control","auto_r44","displayFnEntreprise","filteredOptions","PosVenteComponent_div_79_form_17_div_6_Template","PosVenteComponent_div_79_form_17_div_11_Template","PosVenteComponent_div_79_form_17_Template_select_change_23_listener","_r39","onPaysChange","PosVenteComponent_div_79_form_17_option_26_Template","PosVenteComponent_div_79_form_17_div_29_Template","PosVenteComponent_div_79_form_17_Template_input_input_31_listener","formatPhoneNumber","PosVenteComponent_div_79_form_17_div_34_Template","PosVenteComponent_div_79_form_17_div_35_Template","PosVenteComponent_div_79_form_17_Template_input_ngModelChange_47_listener","isEntrepriseSelected","PosVenteComponent_div_79_form_17_div_49_Template","touched","invalid","paysKeys","tmp_6_0","tmp_7_0","tmp_8_0","ɵɵpureFunction0","_c2","PosVenteComponent_div_79_form_18_div_6_small_1_Template","PosVenteComponent_div_79_form_18_div_6_small_2_Template","entrepriseForm","PosVenteComponent_div_79_form_18_div_11_small_1_Template","nomPays_r46","pays_r47","PosVenteComponent_div_79_form_18_div_6_Template","PosVenteComponent_div_79_form_18_div_11_Template","PosVenteComponent_div_79_form_18_Template_select_change_23_listener","_r45","onEntreprisePaysChange","PosVenteComponent_div_79_form_18_option_26_Template","PosVenteComponent_div_79_form_18_Template_input_input_30_listener","formatEntreprisePhoneNumber","PosVenteComponent_div_79_form_18_div_33_Template","PosVenteComponent_div_79_form_18_div_34_Template","PosVenteComponent_div_79_Template_div_click_1_listener","_r38","PosVenteComponent_div_79_Template_div_mousedown_2_listener","PosVenteComponent_div_79_Template_button_click_5_listener","closeAddClientPopup","PosVenteComponent_div_79_Template_button_click_13_listener","setClientType","PosVenteComponent_div_79_Template_button_click_15_listener","PosVenteComponent_div_79_form_17_Template","PosVenteComponent_div_79_form_18_Template","PosVenteComponent_div_79_Template_button_click_20_listener","PosVenteComponent_div_79_Template_button_click_22_listener","clientType","ajouterClientDansPopup","ajouterEntrepriseDansPopup","valid","scanErrorMessage","PosVenteComponent","setInputMode","mode","constructor","router","viewState","categorieService","commandeState","clientService","usersService","sanitizer","fb","entrepriseService","produitService","venteService","boutiqueState","scannerService","searchService","calculator","cdr","barcodeIndex","Map","isListView","showDropdown","showPaymentPopup","categoryCountCache","lastBoutiqueId","currentPage","pageSize","totalPages","scanInProgress","searchTerm","isCalculatorActive","currentQuantityInput","selectedProduct","quantityMode","showStockWarning","cart","longPressTimer","showClientPopup","lastTap","tapDelay","allProducts","entrepriseIndicatif","entrepriseMaxPhoneLength","sortField","sortDirection","showScanError","showAddClientPopup","Object","keys","maxPhoneLength","optionsEntreprise$","currentListType","selectedBoutiqueId","venteErrorMessage","isComposingNewQuantity","isDragging","startX","startY","initialX","initialY","showDiscountInput","discountValue","discountType","discountButtonText","selectedProductForDiscount","productDiscounts","lastSelectedForDiscount","disablePhysicalKeyboard","userRole","lastScannedCode","lastScanTime","onMouseMove","event","requestAnimationFrame","deltaX","clientX","deltaY","clientY","onMouseUp","document","removeEventListener","activeCommandeId$","subscribe","loadActiveCart","initClientForm","initForms","initEntrepriseForm","group","required","minLength","poste","ville","ngOnInit","loadUserRole","getCategories","next","console","log","forEach","categorie","loadProduitsByCategorie","error","err","searchSub","search$","term","savedView","localStorage","getItem","isListView$","view","loadCategories","selectedBoutique$","pipe","clearCategoryCountCache","recomputeCategoryCountsForBoutique","detectChanges","getScanObservable","barcode","handleBarcodeScan","getScanningObservable","scanning","setUserTyping","isActive$","disableScanner","enableScanner","getUserInfo","user","roleType","includes","localUser","getCurrentUser","ngOnDestroy","unsubscribe","calcActiveSub","indexProductsByBarcode","clear","set","toString","toLowerCase","isValidScan","filter","p","normalizedBarcode","find","productCode","scannedCode","Boolean","setTimeout","currentTime","Date","now","getActiveCart","saveActiveCart","updateActiveCart","categorieId","page","size","getProduitsByCategorie","res","mappedProducts","produits","produit","prixAchat","quantite","seuilAlert","uniteId","enStock","typeProduit","lastUpdated","boutiqueId","nomBoutique","boutiques","push","showAllProducts","loadMoreProductsFromAllCategories","hasMoreData","productsInCategory","pagesLoaded","Math","ceil","produitCount","categoryId","undefined","ensureAllCategoriesLoaded","categoryProducts","photoPath","startsWith","imgUrl","replace","target","parseFloat","updateCommandeTotals","handleDiscountKeyPress","key","slice","parseInt","openPaymentPopup","products","termLower","getCategoryProductCount","category","has","productsByCategory","reduce","acc","filteredProducts","matchesCategory","matchesBoutique","some","b","count","boutiqueName","getBoutiqueName","cat","total","Array","isArray","produitCountBoutique","enteredValue","method","submitVente","setActive","applyDiscount","currentQty","item","basePrice","discount","productId","computeDiscountForItem","subtotal","productDiscount","baseAfterProductDiscounts","max","delete","newQty","produitId","totalItems","getTotalItems","activeId","getActiveCommandeId","getCartItems","items","entries","selectedQty","handleKeyPress","applyQuantityToProduct","calculateDiscountedPrice","remise","isNaN","availableStock","getProduitById","result","mappedProduct","boutique","activateQuantityMode","clearTimeout","goTopaiement","navigate","loadClients","getValidAccessToken","token","Error","getListClients","data","client","sort","a","dateA","getTime","dateB","text","escapedSearch","regex","RegExp","bypassSecurityTrustHtml","searchLower","field","modifier","valueA","valueB","localeCompare","entreprise","paysSelectionne","paysInfo","ctrl","currentValue","prefix","valueNumerique","setValue","reste","updatePhoneValidator","setValidators","pattern","updateValueAndValidity","valeur","chiffres","numeroFormate","loadEntreprises","getListEntreprise","entreprises","setupAutocomplete","valueChanges","name","_filter","filterValue","e","reset","selected","addClient","newClient","updateEntreprisePhoneValidator","addEntreprise","loadEntreprisesForPopup","getListEntreprises","getSelectedCustomerName","handleKeyboardEvent","handlePaymentKeyPressPhysical","handleKeyPressPhysical","ae","activeElement","tagName","isContentEditable","buildVenteRequestFromCart","produitsQuantites","qty","String","modePaiementEnum","mapPaymentMethodToEnum","clientNom","clientNumero","clientId","entrepriseClientId","request","modePaiement","remises","discountAmount","pct","round","totalSansRemise","remiseGlobale","from","enregistrerVente","state","vente","paymentMethod","original","serverMsg","message","alert","uiMethod","m","preventDefault","addEventListener","toggleDiscountInput","resetDiscount","toggleDiscountMode","resetDiscountMode","existing","maxDiscount","currentDiscount","displayValue","percentage","val","min","getGlobalDiscountAmount","dateStr","date","toLocaleDateString","oneMonthLater","setMonth","getMonth","getFilteredProductsByBoutique","productToDiscount","ɵɵdirectiveInject","i1","Router","i2","ViewStateService","i3","CategorieService","i4","CommandeStateService","i5","ClientService","i6","UsersService","i7","DomSanitizer","i8","FormBuilder","i9","EntrepriseService","i10","ProduitService","i11","VenteService","i12","BoutiqueStateService","i13","ScannerService","i14","SearchService","i15","CalculatorService","ChangeDetectorRef","selectors","hostBindings","PosVenteComponent_HostBindings","rf","ctx","PosVenteComponent_keydown_HostBindingHandler","ɵɵresolveDocument","PosVenteComponent_Template_p_click_6_listener","PosVenteComponent_ul_8_Template","PosVenteComponent_div_10_Template","PosVenteComponent_div_11_Template","PosVenteComponent_li_15_Template","PosVenteComponent_div_28_Template","PosVenteComponent_Template_div_click_31_listener","PosVenteComponent_p_32_Template","PosVenteComponent_div_33_Template","PosVenteComponent_div_34_Template","PosVenteComponent_span_35_Template","PosVenteComponent_Template_button_click_41_listener","PosVenteComponent_Template_button_click_43_listener","PosVenteComponent_Template_button_click_45_listener","PosVenteComponent_Template_button_click_47_listener","PosVenteComponent_Template_button_click_49_listener","PosVenteComponent_Template_button_click_51_listener","PosVenteComponent_Template_button_click_53_listener","PosVenteComponent_Template_button_click_55_listener","PosVenteComponent_Template_button_click_57_listener","PosVenteComponent_Template_button_click_59_listener","PosVenteComponent_Template_button_click_61_listener","PosVenteComponent_Template_button_click_65_listener","PosVenteComponent_Template_button_click_67_listener","PosVenteComponent_Template_button_click_69_listener","PosVenteComponent_Template_button_click_71_listener","PosVenteComponent_Template_button_click_74_listener","PosVenteComponent_div_76_Template","PosVenteComponent_div_77_Template","PosVenteComponent_div_78_Template","PosVenteComponent_div_79_Template","PosVenteComponent_div_80_Template","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","NumberValueAccessor","CheckboxControlValueAccessor","SelectControlValueAccessor","NgControlStatus","NgControlStatusGroup","MinValidator","NgModel","i16","NgClass","NgForOf","NgIf","NgStyle","AsyncPipe","DecimalPipe","DatePipe","FormControlDirective","FormGroupDirective","FormControlName","i17","MatAutocomplete","MatOption","MatAutocompleteTrigger","i18","NgxBarcode6Component","styles","assign","HttpHeaders","catchError","tap","http","apiUrl","apiBaseUrl","entrepriseSubject","entreprise$","asObservable","headers","errorMsg","ErrorEvent","status","post","newEntreprise","currentEntreprise","getEntrepriseById","updateEntreprise","formData","patch","responseType","getEntrepriseInfo","Authorization","setItem","JSON","stringify","decodeJwt","parse","atob","split","isTokenExpired","decodedToken","expirationDate","exp","getNewTokenFromApi","refreshToken","ɵɵinject","HttpClient","factory","ɵfac","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}